#include "ppc_recomp_shared.h"

__attribute__((alias("__imp__sub_82498D28"))) PPC_WEAK_FUNC(sub_82498D28);
PPC_FUNC_IMPL(__imp__sub_82498D28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82498D30;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27776
	ctx.r4.s64 = ctx.r10.s64 + 27776;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82498D6C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,128
	ctx.r11.s64 = 128;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,122
	ctx.r9.s64 = 122;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x82498E4C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82498E60"))) PPC_WEAK_FUNC(sub_82498E60);
PPC_FUNC_IMPL(__imp__sub_82498E60) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82498E68;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82498EA4;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,123
	ctx.r9.s64 = 123;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,129
	ctx.r11.s64 = 129;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x82498F8C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82498FA0"))) PPC_WEAK_FUNC(sub_82498FA0);
PPC_FUNC_IMPL(__imp__sub_82498FA0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x82498FA8;
	__savegprlr_28(ctx, base);
	// stwu r1,-272(r1)
	ea = -272 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,142
	ctx.r9.s64 = 142;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-16240
	ctx.r4.s64 = ctx.r10.s64 + -16240;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82498FE4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,97
	ctx.r10.s64 = 97;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,83
	ctx.r8.s64 = 83;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r7,130
	ctx.r7.s64 = 130;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r29,127
	ctx.r29.s64 = 127;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r3,9
	ctx.r3.s64 = 9;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,15
	ctx.r10.s64 = 15;
	// li r9,126
	ctx.r9.s64 = 126;
	// stb r7,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r7.u8);
	// li r6,7
	ctx.r6.s64 = 7;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// li r10,37
	ctx.r10.s64 = 37;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,59
	ctx.r11.s64 = 59;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r8,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r8.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r29,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r29.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r3,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r3.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// stb r6,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r6.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r5,64
	ctx.r5.s64 = 64;
	// stb r7,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r7.u8);
	// li r10,74
	ctx.r10.s64 = 74;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r7,119
	ctx.r7.s64 = 119;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r28,42
	ctx.r28.s64 = 42;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r4,26
	ctx.r4.s64 = 26;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// stb r5,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r5.u8);
	// li r5,1
	ctx.r5.s64 = 1;
	// stb r10,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r10.u8);
	// li r10,150
	ctx.r10.s64 = 150;
	// stb r7,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r7.u8);
	// li r7,46
	ctx.r7.s64 = 46;
	// stb r28,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r28.u8);
	// li r28,24
	ctx.r28.s64 = 24;
	// stb r4,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r4.u8);
	// stb r5,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r5.u8);
	// stb r5,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r5.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// li r10,44
	ctx.r10.s64 = 44;
	// stb r7,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r7.u8);
	// stb r28,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r28.u8);
	// li r28,25
	ctx.r28.s64 = 25;
	// stb r4,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r4.u8);
	// li r4,6
	ctx.r4.s64 = 6;
	// stb r5,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r5.u8);
	// li r5,255
	ctx.r5.s64 = 255;
	// stb r10,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r10.u8);
	// li r10,5
	ctx.r10.s64 = 5;
	// stb r7,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r7.u8);
	// li r7,4
	ctx.r7.s64 = 4;
	// stb r9,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r9.u8);
	// stb r6,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r6.u8);
	// stb r5,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r5.u8);
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// li r5,251
	ctx.r5.s64 = 251;
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// li r10,22
	ctx.r10.s64 = 22;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// li r5,23
	ctx.r5.s64 = 23;
	// stb r10,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r10.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r11,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r11.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// stb r5,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r5.u8);
	// li r5,39
	ctx.r5.s64 = 39;
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r8,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r8.u8);
	// stb r10,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r10.u8);
	// stb r5,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r5.u8);
	// li r5,165
	ctx.r5.s64 = 165;
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// stb r28,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r28.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r11,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r11.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r8,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r8.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r4,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r4.u8);
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// stb r10,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r10.u8);
	// stb r10,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r10.u8);
	// stb r7,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r7.u8);
	// stb r5,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r5.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r11,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r11.u8);
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r10,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r10.u8);
	// li r10,40
	ctx.r10.s64 = 40;
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// li r5,142
	ctx.r5.s64 = 142;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r11,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r11.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r10,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r11,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r11.u8);
	// li r11,219
	ctx.r11.s64 = 219;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r4,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r3,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r3.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r9,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r9.u8);
	// stb r6,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r6.u8);
	// stb r7,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r7.u8);
	// stb r7,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r7.u8);
	// stb r10,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r10.u8);
	// stb r29,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r29.u8);
	// stb r8,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r8.u8);
	// stb r11,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824992D0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,272
	ctx.r1.s64 = ctx.r1.s64 + 272;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824992E0"))) PPC_WEAK_FUNC(sub_824992E0);
PPC_FUNC_IMPL(__imp__sub_824992E0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824992E8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32229
	ctx.r10.s64 = -2112159744;
	// addi r4,r10,-27392
	ctx.r4.s64 = ctx.r10.s64 + -27392;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499324;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,131
	ctx.r11.s64 = 131;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824993FC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499410"))) PPC_WEAK_FUNC(sub_82499410);
PPC_FUNC_IMPL(__imp__sub_82499410) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499418;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499454;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,126
	ctx.r9.s64 = 126;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,132
	ctx.r11.s64 = 132;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249953C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499550"))) PPC_WEAK_FUNC(sub_82499550);
PPC_FUNC_IMPL(__imp__sub_82499550) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27788
	ctx.r4.s64 = ctx.r10.s64 + 27788;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249959C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,133
	ctx.r11.s64 = 133;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,86
	ctx.r11.s64 = 86;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,129
	ctx.r11.s64 = 129;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,105
	ctx.r11.s64 = 105;
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,173
	ctx.r11.s64 = 173;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,145
	ctx.r11.s64 = 145;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824996F4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_82499718"))) PPC_WEAK_FUNC(sub_82499718);
PPC_FUNC_IMPL(__imp__sub_82499718) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499720;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27804
	ctx.r4.s64 = ctx.r10.s64 + 27804;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249975C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,134
	ctx.r11.s64 = 134;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499838;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499848"))) PPC_WEAK_FUNC(sub_82499848);
PPC_FUNC_IMPL(__imp__sub_82499848) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499850;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,26
	ctx.r9.s64 = 26;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27824
	ctx.r4.s64 = ctx.r10.s64 + 27824;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249988C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,26
	ctx.r5.s64 = 26;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,91
	ctx.r11.s64 = 91;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,93
	ctx.r11.s64 = 93;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,55
	ctx.r11.s64 = 55;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499924;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499938"))) PPC_WEAK_FUNC(sub_82499938);
PPC_FUNC_IMPL(__imp__sub_82499938) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499940;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,26
	ctx.r9.s64 = 26;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27852
	ctx.r4.s64 = ctx.r10.s64 + 27852;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249997C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,26
	ctx.r5.s64 = 26;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,91
	ctx.r11.s64 = 91;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499A18;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499A28"))) PPC_WEAK_FUNC(sub_82499A28);
PPC_FUNC_IMPL(__imp__sub_82499A28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499A30;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,26
	ctx.r9.s64 = 26;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27896
	ctx.r4.s64 = ctx.r10.s64 + 27896;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499A6C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,26
	ctx.r5.s64 = 26;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,137
	ctx.r11.s64 = 137;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,91
	ctx.r11.s64 = 91;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,102
	ctx.r11.s64 = 102;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499B08;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499B18"))) PPC_WEAK_FUNC(sub_82499B18);
PPC_FUNC_IMPL(__imp__sub_82499B18) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499B20;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27932
	ctx.r4.s64 = ctx.r10.s64 + 27932;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499B5C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,138
	ctx.r11.s64 = 138;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,224
	ctx.r11.s64 = 224;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499C50;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499C60"))) PPC_WEAK_FUNC(sub_82499C60);
PPC_FUNC_IMPL(__imp__sub_82499C60) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499C68;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27952
	ctx.r4.s64 = ctx.r10.s64 + 27952;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499CA4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,139
	ctx.r11.s64 = 139;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,133
	ctx.r9.s64 = 133;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,224
	ctx.r11.s64 = 224;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499DA0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499DB0"))) PPC_WEAK_FUNC(sub_82499DB0);
PPC_FUNC_IMPL(__imp__sub_82499DB0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499DB8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27972
	ctx.r4.s64 = ctx.r10.s64 + 27972;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499DF4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,140
	ctx.r11.s64 = 140;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x82499ECC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_82499EE0"))) PPC_WEAK_FUNC(sub_82499EE0);
PPC_FUNC_IMPL(__imp__sub_82499EE0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x82499EE8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27988
	ctx.r4.s64 = ctx.r10.s64 + 27988;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x82499F24;
	sub_822E0818(ctx, base);
	// li r9,135
	ctx.r9.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,141
	ctx.r11.s64 = 141;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,232
	ctx.r8.s64 = 232;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r9.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r8,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r8.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249A004;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249A018"))) PPC_WEAK_FUNC(sub_8249A018);
PPC_FUNC_IMPL(__imp__sub_8249A018) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249A020;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28000
	ctx.r4.s64 = ctx.r10.s64 + 28000;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249A05C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,142
	ctx.r11.s64 = 142;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249A138;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249A148"))) PPC_WEAK_FUNC(sub_8249A148);
PPC_FUNC_IMPL(__imp__sub_8249A148) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249A150;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28016
	ctx.r4.s64 = ctx.r10.s64 + 28016;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249A18C;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,137
	ctx.r9.s64 = 137;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249A270;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249A280"))) PPC_WEAK_FUNC(sub_8249A280);
PPC_FUNC_IMPL(__imp__sub_8249A280) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249A288;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27988
	ctx.r4.s64 = ctx.r10.s64 + 27988;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249A2C4;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,138
	ctx.r9.s64 = 138;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,144
	ctx.r11.s64 = 144;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249A3A8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249A3B8"))) PPC_WEAK_FUNC(sub_8249A3B8);
PPC_FUNC_IMPL(__imp__sub_8249A3B8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249A3C0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249A3FC;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,139
	ctx.r9.s64 = 139;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,145
	ctx.r11.s64 = 145;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249A4E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249A4F8"))) PPC_WEAK_FUNC(sub_8249A4F8);
PPC_FUNC_IMPL(__imp__sub_8249A4F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x8249A500;
	__savegprlr_14(ctx, base);
	// stwu r1,-1040(r1)
	ea = -1040 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r17,r3
	ctx.r17.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r17,4
	ctx.r3.s64 = ctx.r17.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,788
	ctx.r9.s64 = 788;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28028
	ctx.r4.s64 = ctx.r10.s64 + 28028;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r17)
	PPC_STORE_U32(ctx.r17.u32 + 0, ctx.r11.u32);
	// stw r9,16(r17)
	PPC_STORE_U32(ctx.r17.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249A53C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,229
	ctx.r10.s64 = 229;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r27,232
	ctx.r27.s64 = 232;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r30,69
	ctx.r30.s64 = 69;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r3,77
	ctx.r3.s64 = 77;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,146
	ctx.r11.s64 = 146;
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,140
	ctx.r10.s64 = 140;
	// li r14,1
	ctx.r14.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r20,2
	ctx.r20.s64 = 2;
	// stb r30,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r30.u8);
	// li r18,15
	ctx.r18.s64 = 15;
	// stb r3,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r3.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,92
	ctx.r11.s64 = 92;
	// stb r10,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r10.u8);
	// li r10,12
	ctx.r10.s64 = 12;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,195
	ctx.r11.s64 = 195;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,156
	ctx.r10.s64 = 156;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,217
	ctx.r11.s64 = 217;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,137
	ctx.r10.s64 = 137;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r27,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r27.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r14,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r14.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r20,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r20.u8);
	// stb r18,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r18.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r27,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r27.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// li r9,7
	ctx.r9.s64 = 7;
	// stb r14,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r14.u8);
	// li r8,110
	ctx.r8.s64 = 110;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r25,31
	ctx.r25.s64 = 31;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r10,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r10.u8);
	// li r10,60
	ctx.r10.s64 = 60;
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// li r9,124
	ctx.r9.s64 = 124;
	// li r5,114
	ctx.r5.s64 = 114;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r22,87
	ctx.r22.s64 = 87;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r10,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r10.u8);
	// li r10,83
	ctx.r10.s64 = 83;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// li r21,99
	ctx.r21.s64 = 99;
	// li r6,116
	ctx.r6.s64 = 116;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r7,105
	ctx.r7.s64 = 105;
	// stb r22,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r22.u8);
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,128
	ctx.r11.s64 = 128;
	// li r28,103
	ctx.r28.s64 = 103;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r4,115
	ctx.r4.s64 = 115;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// li r29,71
	ctx.r29.s64 = 71;
	// stb r21,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r21.u8);
	// stb r10,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r10.u8);
	// li r10,65
	ctx.r10.s64 = 65;
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// li r9,97
	ctx.r9.s64 = 97;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// li r26,109
	ctx.r26.s64 = 109;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// li r23,46
	ctx.r23.s64 = 46;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r10,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r10.u8);
	// li r10,79
	ctx.r10.s64 = 79;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r11,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r11.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r8,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r8.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// li r10,50
	ctx.r10.s64 = 50;
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r27,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r27.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// li r10,101
	ctx.r10.s64 = 101;
	// stb r25,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r25.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// stb r25,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r25.u8);
	// stb r6,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r6.u8);
	// stb r5,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r5.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r8,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r8.u8);
	// stb r28,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r28.u8);
	// stb r4,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r4.u8);
	// stb r29,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r29.u8);
	// stb r9,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r9.u8);
	// stb r26,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r26.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r23,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r23.u8);
	// stb r30,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r30.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// stb r28,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r28.u8);
	// li r24,76
	ctx.r24.s64 = 76;
	// li r28,78
	ctx.r28.s64 = 78;
	// stb r29,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r29.u8);
	// li r29,68
	ctx.r29.s64 = 68;
	// stb r3,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r3.u8);
	// stb r3,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r3.u8);
	// li r3,80
	ctx.r3.s64 = 80;
	// stb r22,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r22.u8);
	// li r30,111
	ctx.r30.s64 = 111;
	// stb r24,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r24.u8);
	// li r24,102
	ctx.r24.s64 = 102;
	// stb r28,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r28.u8);
	// li r28,119
	ctx.r28.s64 = 119;
	// stb r29,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r29.u8);
	// li r29,95
	ctx.r29.s64 = 95;
	// stb r3,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r3.u8);
	// li r19,28
	ctx.r19.s64 = 28;
	// stb r3,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r3.u8);
	// li r22,201
	ctx.r22.s64 = 201;
	// stb r24,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r24.u8);
	// li r24,62
	ctx.r24.s64 = 62;
	// stb r28,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r28.u8);
	// li r28,107
	ctx.r28.s64 = 107;
	// stb r29,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r29.u8);
	// li r3,108
	ctx.r3.s64 = 108;
	// stb r29,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r29.u8);
	// li r29,121
	ctx.r29.s64 = 121;
	// stb r11,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r24,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r24.u8);
	// li r24,138
	ctx.r24.s64 = 138;
	// stb r28,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r28.u8);
	// li r28,100
	ctx.r28.s64 = 100;
	// stb r5,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r5.u8);
	// stb r30,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r30.u8);
	// stb r5,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r5.u8);
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// stb r4,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r4.u8);
	// stb r4,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r4.u8);
	// stb r9,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r9.u8);
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r4,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r4.u8);
	// stb r23,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r23.u8);
	// stb r10,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r10.u8);
	// stb r6,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r6.u8);
	// stb r30,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r30.u8);
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// stb r9,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r9.u8);
	// stb r26,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r26.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r7,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r7.u8);
	// stb r4,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r4.u8);
	// stb r21,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r21.u8);
	// stb r30,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r30.u8);
	// stb r8,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r8.u8);
	// stb r8,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r8.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r21,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r21.u8);
	// stb r6,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r6.u8);
	// stb r10,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r10.u8);
	// stb r28,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r28.u8);
	// stb r3,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r3.u8);
	// stb r9,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r9.u8);
	// stb r29,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r29.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r5,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r5.u8);
	// stb r10,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r10.u8);
	// stb r6,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r6.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r18,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r18.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r27,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r27.u8);
	// stb r24,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r24.u8);
	// stb r19,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r19.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r22,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r22.u8);
	// stb r11,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// stb r24,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r24.u8);
	// stb r29,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r29.u8);
	// li r24,98
	ctx.r24.s64 = 98;
	// li r29,243
	ctx.r29.s64 = 243;
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// li r22,104
	ctx.r22.s64 = 104;
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// li r19,139
	ctx.r19.s64 = 139;
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r11,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r11.u8);
	// li r11,230
	ctx.r11.s64 = 230;
	// stb r24,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r24.u8);
	// li r15,37
	ctx.r15.s64 = 37;
	// stb r29,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r29.u8);
	// li r16,49
	ctx.r16.s64 = 49;
	// li r24,112
	ctx.r24.s64 = 112;
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// li r29,102
	ctx.r29.s64 = 102;
	// stb r27,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r27.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// li r11,32
	ctx.r11.s64 = 32;
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r25,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r25.u8);
	// stb r10,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r10.u8);
	// stb r4,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r4.u8);
	// stb r8,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r8.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r18,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r18.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r27,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r27.u8);
	// stb r19,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r19.u8);
	// stb r25,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r25.u8);
	// stb r15,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r15.u8);
	// stb r16,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r16.u8);
	// stb r11,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r11.u8);
	// stb r22,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r22.u8);
	// stb r9,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r9.u8);
	// stb r11,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r11.u8);
	// stb r9,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r9.u8);
	// stb r9,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r9.u8);
	// stb r8,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r8.u8);
	// stb r28,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r28.u8);
	// stb r30,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r30.u8);
	// stb r8,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r8.u8);
	// stb r9,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r9.u8);
	// stb r28,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r28.u8);
	// stb r30,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r30.u8);
	// stb r11,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r11.u8);
	// stb r3,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r3.u8);
	// stb r9,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r9.u8);
	// stb r11,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r11.u8);
	// stb r24,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r24.u8);
	// stb r9,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r9.u8);
	// stb r5,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r5.u8);
	// stb r6,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r6.u8);
	// stb r7,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r7.u8);
	// stb r28,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r28.u8);
	// stb r9,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r9.u8);
	// stb r11,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r11.u8);
	// stb r11,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r11.u8);
	// stb r3,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r3.u8);
	// stb r9,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r9.u8);
	// stb r11,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r11.u8);
	// stb r4,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r4.u8);
	// stb r10,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r10.u8);
	// stb r4,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r4.u8);
	// stb r7,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r7.u8);
	// stb r8,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r8.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// stb r22,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r22.u8);
	// stb r9,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r9.u8);
	// stb r11,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r11.u8);
	// stb r29,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r29.u8);
	// stb r7,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r7.u8);
	// stb r8,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r8.u8);
	// stb r9,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r9.u8);
	// stb r3,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r3.u8);
	// stb r7,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r7.u8);
	// li r29,122
	ctx.r29.s64 = 122;
	// stb r9,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r9.u8);
	// stb r28,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r28.u8);
	// stb r30,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r30.u8);
	// stb r23,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r23.u8);
	// stb r11,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r11.u8);
	// stb r29,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r29.u8);
	// li r29,86
	ctx.r29.s64 = 86;
	// stb r30,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r30.u8);
	// stb r3,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r3.u8);
	// stb r10,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r10.u8);
	// stb r5,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r5.u8);
	// stb r29,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r29.u8);
	// li r29,118
	ctx.r29.s64 = 118;
	// stb r4,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r4.u8);
	// stb r11,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r11.u8);
	// stb r9,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r9.u8);
	// stb r3,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r3.u8);
	// stb r29,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r29.u8);
	// li r29,225
	ctx.r29.s64 = 225;
	// stb r11,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r11.u8);
	// stb r26,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r26.u8);
	// stb r10,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r10.u8);
	// stb r8,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r8.u8);
	// stb r29,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r29.u8);
	// li r29,250
	ctx.r29.s64 = 250;
	// stb r11,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r11.u8);
	// stb r24,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r24.u8);
	// stb r5,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r5.u8);
	// stb r7,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r7.u8);
	// stb r29,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r29.u8);
	// li r29,6
	ctx.r29.s64 = 6;
	// stb r8,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r8.u8);
	// stb r21,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r21.u8);
	// stb r7,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r7.u8);
	// stb r24,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r24.u8);
	// stb r29,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r29.u8);
	// li r29,181
	ctx.r29.s64 = 181;
	// stb r9,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r9.u8);
	// stb r3,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r3.u8);
	// stb r23,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r23.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r29,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r29.u8);
	// li r29,10
	ctx.r29.s64 = 10;
	// stb r20,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r20.u8);
	// stb r14,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r14.u8);
	// stb r25,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r25.u8);
	// stb r7,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r7.u8);
	// stb r29,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r29.u8);
	// li r29,87
	ctx.r29.s64 = 87;
	// stb r6,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r6.u8);
	// stb r9,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r9.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r18,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r18.u8);
	// stb r29,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r29.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r27,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r27.u8);
	// stb r19,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r19.u8);
	// stb r25,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r25.u8);
	// stb r15,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r15.u8);
	// stb r16,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r16.u8);
	// stb r11,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r11.u8);
	// stb r22,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r22.u8);
	// stb r9,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r9.u8);
	// stb r11,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r11.u8);
	// stb r3,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r3.u8);
	// stb r9,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r9.u8);
	// stb r4,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r4.u8);
	// stb r21,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r21.u8);
	// stb r7,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r7.u8);
	// stb r9,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r9.u8);
	// stb r6,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r6.u8);
	// stb r30,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r30.u8);
	// stb r11,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r11.u8);
	// stb r3,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r3.u8);
	// stb r9,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r9.u8);
	// stb r11,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r11.u8);
	// stb r24,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r24.u8);
	// stb r9,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r9.u8);
	// li r29,103
	ctx.r29.s64 = 103;
	// std r17,872(r1)
	PPC_STORE_U64(ctx.r1.u32 + 872, ctx.r17.u64);
	// li r17,6
	ctx.r17.s64 = 6;
	// stb r5,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r5.u8);
	// stb r6,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r6.u8);
	// stb r7,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r7.u8);
	// stb r6,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r6.u8);
	// stb r29,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r29.u8);
	// li r29,79
	ctx.r29.s64 = 79;
	// stb r9,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r9.u8);
	// stb r11,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r11.u8);
	// stb r10,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r10.u8);
	// stb r11,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r11.u8);
	// stb r29,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r29.u8);
	// li r29,117
	ctx.r29.s64 = 117;
	// stb r3,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r3.u8);
	// stb r9,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r9.u8);
	// stb r11,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r11.u8);
	// stb r4,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r4.u8);
	// stb r10,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r10.u8);
	// stb r4,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r4.u8);
	// stb r4,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r4.u8);
	// stb r7,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r7.u8);
	// stb r30,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r30.u8);
	// stb r8,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r8.u8);
	// stb r10,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r10.u8);
	// stb r11,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r11.u8);
	// stb r28,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r28.u8);
	// stb r7,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r7.u8);
	// stb r11,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r11.u8);
	// stb r7,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r7.u8);
	// stb r30,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r30.u8);
	// stb r21,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r21.u8);
	// stb r30,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r30.u8);
	// stb r11,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r11.u8);
	// stb r27,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r27.u8);
	// stb r11,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r11.u8);
	// stb r6,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r6.u8);
	// stb r10,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r10.u8);
	// stb r5,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r5.u8);
	// stb r26,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r26.u8);
	// stb r7,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r7.u8);
	// stb r8,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r8.u8);
	// stb r9,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r9.u8);
	// stb r6,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r6.u8);
	// stb r9,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r9.u8);
	// stb r23,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r23.u8);
	// stb r11,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r11.u8);
	// stb r5,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r5.u8);
	// stb r9,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r9.u8);
	// stb r11,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r11.u8);
	// stb r6,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r6.u8);
	// stb r30,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r30.u8);
	// stb r5,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r5.u8);
	// stb r8,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r8.u8);
	// stb r10,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r10.u8);
	// stb r5,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r5.u8);
	// stb r9,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r9.u8);
	// stb r7,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r7.u8);
	// stb r11,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r11.u8);
	// stb r9,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r9.u8);
	// stb r3,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r3.u8);
	// stb r11,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r11.u8);
	// stb r26,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r26.u8);
	// stb r10,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r10.u8);
	// stb r8,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r8.u8);
	// stb r29,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r29.u8);
	// stb r11,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r11.u8);
	// stb r24,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r24.u8);
	// stb r5,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r5.u8);
	// stb r7,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r7.u8);
	// stb r8,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r8.u8);
	// stb r21,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r21.u8);
	// stb r7,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r7.u8);
	// stb r24,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r24.u8);
	// stb r9,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r9.u8);
	// stb r3,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r3.u8);
	// stb r10,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r10.u8);
	// stb r23,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r23.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r17,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r17.u8);
	// li r17,181
	ctx.r17.s64 = 181;
	// stb r14,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r14.u8);
	// li r14,204
	ctx.r14.s64 = 204;
	// stb r20,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r20.u8);
	// stb r25,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r25.u8);
	// stb r28,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r28.u8);
	// stb r10,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r10.u8);
	// stb r17,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r17.u8);
	// li r17,10
	ctx.r17.s64 = 10;
	// stb r14,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r14.u8);
	// li r14,83
	ctx.r14.s64 = 83;
	// stb r29,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r29.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r18,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r18.u8);
	// stb r17,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r17.u8);
	// li r17,118
	ctx.r17.s64 = 118;
	// stb r14,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r14.u8);
	// stb r14,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r14.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r17,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r17.u8);
	// li r17,103
	ctx.r17.s64 = 103;
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r27,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r27.u8);
	// stb r19,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r19.u8);
	// stb r25,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r25.u8);
	// stb r17,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r17.u8);
	// li r17,119
	ctx.r17.s64 = 119;
	// stb r15,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r15.u8);
	// stb r16,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r16.u8);
	// stb r11,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r11.u8);
	// stb r22,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r22.u8);
	// stb r17,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r17.u8);
	// li r17,98
	ctx.r17.s64 = 98;
	// stb r9,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r9.u8);
	// stb r6,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r6.u8);
	// stb r11,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r11.u8);
	// stb r28,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r28.u8);
	// stb r9,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r9.u8);
	// stb r4,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r4.u8);
	// stb r11,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r11.u8);
	// stb r24,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r24.u8);
	// stb r7,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r7.u8);
	// stb r10,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r10.u8);
	// stb r3,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r3.u8);
	// stb r11,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r11.u8);
	// stb r10,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r10.u8);
	// stb r5,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r5.u8);
	// stb r3,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r3.u8);
	// stb r9,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r9.u8);
	// stb r4,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r4.u8);
	// stb r4,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r4.u8);
	// stb r10,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r10.u8);
	// stb r8,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r8.u8);
	// stb r11,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r11.u8);
	// stb r29,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r29.u8);
	// stb r8,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r8.u8);
	// stb r28,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r28.u8);
	// stb r11,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r11.u8);
	// stb r28,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r28.u8);
	// stb r7,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r7.u8);
	// stb r10,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r10.u8);
	// stb r11,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r11.u8);
	// stb r24,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r24.u8);
	// stb r7,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r7.u8);
	// stb r10,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r10.u8);
	// stb r3,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r3.u8);
	// stb r4,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r4.u8);
	// stb r7,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r7.u8);
	// stb r6,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r6.u8);
	// stb r14,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r14.u8);
	// stb r29,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r29.u8);
	// stb r8,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r8.u8);
	// stb r11,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r11.u8);
	// stb r29,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r29.u8);
	// stb r5,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r5.u8);
	// stb r28,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r28.u8);
	// stb r10,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r10.u8);
	// stb r11,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r11.u8);
	// stb r17,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r17.u8);
	// stb r14,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r14.u8);
	// li r17,68
	ctx.r17.s64 = 68;
	// stb r14,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r14.u8);
	// li r14,252
	ctx.r14.s64 = 252;
	// stb r10,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r10.u8);
	// stb r10,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r10.u8);
	// stb r8,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r8.u8);
	// stb r17,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r17.u8);
	// li r17,107
	ctx.r17.s64 = 107;
	// stb r14,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r14.u8);
	// li r14,107
	ctx.r14.s64 = 107;
	// stb r28,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r28.u8);
	// stb r10,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r10.u8);
	// stb r6,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r6.u8);
	// stb r17,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r17.u8);
	// li r17,72
	ctx.r17.s64 = 72;
	// stb r14,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r14.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r23,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r23.u8);
	// stb r11,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r11.u8);
	// stb r29,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r29.u8);
	// stb r17,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r17.u8);
	// li r17,252
	ctx.r17.s64 = 252;
	// stb r14,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r14.u8);
	// li r14,181
	ctx.r14.s64 = 181;
	// stb r11,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r11.u8);
	// stb r10,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r10.u8);
	// stb r22,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r22.u8);
	// stb r5,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r5.u8);
	// stb r14,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r14.u8);
	// li r14,10
	ctx.r14.s64 = 10;
	// stb r4,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r4.u8);
	// stb r6,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r6.u8);
	// stb r11,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r11.u8);
	// stb r8,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r8.u8);
	// stb r14,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r14.u8);
	// li r14,64
	ctx.r14.s64 = 64;
	// stb r29,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r29.u8);
	// stb r8,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r8.u8);
	// stb r11,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r11.u8);
	// stb r29,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r29.u8);
	// stb r14,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r26,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r26.u8);
	// stb r11,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r11.u8);
	// stb r9,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r9.u8);
	// stb r29,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r29.u8);
	// stb r14,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r14.u8);
	// li r14,118
	ctx.r14.s64 = 118;
	// stb r24,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r24.u8);
	// stb r6,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r6.u8);
	// stb r26,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r26.u8);
	// stb r10,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r10.u8);
	// stb r8,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r8.u8);
	// stb r17,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r17.u8);
	// stb r11,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r11.u8);
	// stb r29,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r29.u8);
	// stb r5,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r5.u8);
	// stb r21,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r21.u8);
	// stb r23,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r23.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r20,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r20.u8);
	// stb r20,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r20.u8);
	// stb r25,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r25.u8);
	// stb r5,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r5.u8);
	// stb r9,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r9.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r18,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r18.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r27,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r27.u8);
	// stb r19,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r19.u8);
	// stb r25,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r25.u8);
	// stb r15,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r15.u8);
	// stb r16,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r16.u8);
	// stb r11,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r11.u8);
	// stb r14,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r14.u8);
	// stb r7,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r7.u8);
	// stb r10,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r10.u8);
	// stb r8,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r8.u8);
	// li r14,113
	ctx.r14.s64 = 113;
	// stb r6,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r6.u8);
	// stb r11,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r11.u8);
	// stb r28,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r28.u8);
	// stb r10,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r10.u8);
	// stb r11,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r11.u8);
	// stb r14,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r14.u8);
	// li r14,233
	ctx.r14.s64 = 233;
	// stb r29,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r29.u8);
	// stb r7,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r7.u8);
	// stb r6,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r6.u8);
	// stb r6,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r6.u8);
	// stb r14,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r14.u8);
	// li r14,86
	ctx.r14.s64 = 86;
	// stb r10,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r10.u8);
	// stb r5,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r5.u8);
	// stb r11,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r11.u8);
	// stb r3,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r3.u8);
	// stb r14,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r14.u8);
	// li r14,118
	ctx.r14.s64 = 118;
	// stb r9,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r9.u8);
	// stb r11,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r11.u8);
	// stb r24,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r24.u8);
	// stb r9,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r9.u8);
	// stb r14,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r14.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r5,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r5.u8);
	// stb r6,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r6.u8);
	// stb r7,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r7.u8);
	// stb r10,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r10.u8);
	// stb r11,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r11.u8);
	// stb r10,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r10.u8);
	// stb r6,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r6.u8);
	// stb r11,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r11.u8);
	// stb r3,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r3.u8);
	// stb r9,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r9.u8);
	// stb r11,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r11.u8);
	// stb r4,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r4.u8);
	// stb r10,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r10.u8);
	// stb r4,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r4.u8);
	// stb r4,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r4.u8);
	// stb r7,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r7.u8);
	// stb r30,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r30.u8);
	// stb r8,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r8.u8);
	// stb r11,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r11.u8);
	// stb r10,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r10.u8);
	// stb r4,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r4.u8);
	// stb r6,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r6.u8);
	// stb r11,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r11.u8);
	// stb r6,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r6.u8);
	// stb r10,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r10.u8);
	// stb r5,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r5.u8);
	// stb r26,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r26.u8);
	// stb r7,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r7.u8);
	// stb r8,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r8.u8);
	// stb r10,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r10.u8);
	// stb r23,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r23.u8);
	// stb r11,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r11.u8);
	// stb r30,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r30.u8);
	// stb r29,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r29.u8);
	// stb r4,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r4.u8);
	// stb r11,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r11.u8);
	// stb r28,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r28.u8);
	// stb r10,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r10.u8);
	// stb r10,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r10.u8);
	// stb r14,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r14.u8);
	// stb r11,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r11.u8);
	// stb r5,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r5.u8);
	// stb r10,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r10.u8);
	// stb r6,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r6.u8);
	// stb r30,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r30.u8);
	// stb r29,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r29.u8);
	// stb r5,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r5.u8);
	// stb r8,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r8.u8);
	// stb r10,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r10.u8);
	// stb r5,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r5.u8);
	// stb r11,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r11.u8);
	// stb r9,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r9.u8);
	// stb r29,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r29.u8);
	// stb r11,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r11.u8);
	// stb r26,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r26.u8);
	// stb r24,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r24.u8);
	// li r14,181
	ctx.r14.s64 = 181;
	// stb r24,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r24.u8);
	// li r24,6
	ctx.r24.s64 = 6;
	// li r17,72
	ctx.r17.s64 = 72;
	// stb r10,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r10.u8);
	// stb r8,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r8.u8);
	// stb r29,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r29.u8);
	// stb r11,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r11.u8);
	// stb r24,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r24.u8);
	// li r24,10
	ctx.r24.s64 = 10;
	// stb r5,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r5.u8);
	// stb r7,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r7.u8);
	// stb r8,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r8.u8);
	// stb r21,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r21.u8);
	// stb r24,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r24.u8);
	// stb r24,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r24.u8);
	// li r24,255
	ctx.r24.s64 = 255;
	// stb r7,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r7.u8);
	// stb r9,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r9.u8);
	// stb r3,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r3.u8);
	// stb r23,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r23.u8);
	// stb r24,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r24.u8);
	// stb r24,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r24.u8);
	// li r24,102
	ctx.r24.s64 = 102;
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r20,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r20.u8);
	// stb r14,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r14.u8);
	// stb r20,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r20.u8);
	// stb r24,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r24.u8);
	// li r24,103
	ctx.r24.s64 = 103;
	// stb r17,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r17.u8);
	// stb r25,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r25.u8);
	// stb r7,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r7.u8);
	// stb r8,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r8.u8);
	// stb r6,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r6.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r18,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r18.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r27,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r27.u8);
	// stb r19,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r19.u8);
	// stb r25,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r25.u8);
	// stb r15,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r15.u8);
	// stb r16,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r16.u8);
	// stb r11,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r11.u8);
	// stb r22,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r22.u8);
	// stb r9,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r9.u8);
	// stb r4,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r4.u8);
	// stb r11,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r11.u8);
	// stb r3,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r3.u8);
	// stb r10,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r10.u8);
	// stb r6,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r6.u8);
	// stb r11,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r11.u8);
	// stb r6,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r6.u8);
	// stb r22,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r22.u8);
	// stb r10,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r10.u8);
	// stb r11,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r11.u8);
	// stb r24,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r24.u8);
	// stb r9,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r9.u8);
	// stb r26,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r26.u8);
	// stb r10,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r10.u8);
	// stb r11,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r11.u8);
	// stb r9,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r9.u8);
	// stb r8,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r8.u8);
	// stb r28,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r28.u8);
	// stb r11,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r11.u8);
	// stb r6,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r6.u8);
	// stb r22,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r22.u8);
	// stb r10,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r10.u8);
	// stb r11,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r11.u8);
	// stb r24,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r24.u8);
	// stb r9,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r9.u8);
	// stb r26,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r26.u8);
	// stb r10,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r10.u8);
	// stb r11,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r11.u8);
	// stb r4,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r4.u8);
	// stb r10,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r10.u8);
	// stb r4,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r4.u8);
	// stb r4,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r4.u8);
	// stb r4,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r4.u8);
	// li r4,89
	ctx.r4.s64 = 89;
	// stb r11,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r11.u8);
	// stb r11,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r11.u8);
	// stb r11,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r11.u8);
	// stb r11,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r11.u8);
	// stb r4,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r4.u8);
	// li r4,119
	ctx.r4.s64 = 119;
	// stb r11,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r11.u8);
	// stb r11,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r11.u8);
	// stb r11,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r11.u8);
	// stb r11,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r11.u8);
	// stb r11,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r11.u8);
	// stb r11,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r11.u8);
	// stb r11,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r4,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r4.u8);
	// stb r4,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r4.u8);
	// li r4,98
	ctx.r4.s64 = 98;
	// ld r17,872(r1)
	ctx.r17.u64 = PPC_LOAD_U64(ctx.r1.u32 + 872);
	// stb r5,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r5.u8);
	// stb r11,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r11.u8);
	// li r11,201
	ctx.r11.s64 = 201;
	// stb r5,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r5.u8);
	// addi r24,r17,24
	ctx.r24.s64 = ctx.r17.s64 + 24;
	// stb r4,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r4.u8);
	// li r5,788
	ctx.r5.s64 = 788;
	// stb r7,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r7.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r30,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r30.u8);
	// stb r8,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r8.u8);
	// stb r22,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r22.u8);
	// stb r9,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r9.u8);
	// stb r10,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r10.u8);
	// stb r8,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r8.u8);
	// stb r28,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r28.u8);
	// stb r10,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r10.u8);
	// stb r28,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r28.u8);
	// stb r23,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r23.u8);
	// stb r30,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r30.u8);
	// stb r29,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r29.u8);
	// stb r7,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r7.u8);
	// stb r3,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r3.u8);
	// stb r3,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r3.u8);
	// stb r8,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r8.u8);
	// stb r30,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r30.u8);
	// stb r10,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r10.u8);
	// stb r10,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r10.u8);
	// stb r6,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r6.u8);
	// stb r29,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r29.u8);
	// stb r8,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r8.u8);
	// stb r10,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r10.u8);
	// stb r28,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r28.u8);
	// stb r6,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r6.u8);
	// stb r30,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r30.u8);
	// stb r6,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r6.u8);
	// stb r22,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r22.u8);
	// stb r10,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r10.u8);
	// stb r26,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r26.u8);
	// stb r9,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r9.u8);
	// stb r7,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r7.u8);
	// stb r8,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r8.u8);
	// stb r26,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r26.u8);
	// stb r10,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r10.u8);
	// stb r8,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r8.u8);
	// stb r29,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r29.u8);
	// stb r23,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r23.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r20,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r20.u8);
	// stb r14,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r14.u8);
	// stb r18,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r18.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r31,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r31.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r27,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r27.u8);
	// stb r19,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r19.u8);
	// stb r11,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r11.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r27,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r27.u8);
	// li r11,137
	ctx.r11.s64 = 137;
	// stb r19,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r19.u8);
	// mr r3,r24
	ctx.r3.u64 = ctx.r24.u64;
	// stb r25,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r25.u8);
	// stb r15,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r15.u8);
	// stb r16,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r16.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r11,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r27,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r27.u8);
	// stb r11,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r31,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r31.u8);
	// stb r27,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r27.u8);
	// stb r11,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r19,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r19.u8);
	// stb r31,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r31.u8);
	// stb r31,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r31.u8);
	// stb r27,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r27.u8);
	// stb r11,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r11.u8);
	// stb r11,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r11,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r11.u8);
	// li r11,140
	ctx.r11.s64 = 140;
	// stb r20,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r20.u8);
	// stb r31,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r31.u8);
	// stb r20,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r20.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r11,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r21,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r21.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r11,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r11.u8);
	// li r11,132
	ctx.r11.s64 = 132;
	// stb r31,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r31.u8);
	// stb r31,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r31.u8);
	// stb r11,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249B3B8;
	sub_82B06418(ctx, base);
	// mr r3,r17
	ctx.r3.u64 = ctx.r17.u64;
	// stw r24,20(r17)
	PPC_STORE_U32(ctx.r17.u32 + 20, ctx.r24.u32);
	// addi r1,r1,1040
	ctx.r1.s64 = ctx.r1.s64 + 1040;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249B3C8"))) PPC_WEAK_FUNC(sub_8249B3C8);
PPC_FUNC_IMPL(__imp__sub_8249B3C8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249B3D0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28000
	ctx.r4.s64 = ctx.r10.s64 + 28000;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249B40C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,147
	ctx.r11.s64 = 147;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249B4E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249B4F8"))) PPC_WEAK_FUNC(sub_8249B4F8);
PPC_FUNC_IMPL(__imp__sub_8249B4F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249B500;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28016
	ctx.r4.s64 = ctx.r10.s64 + 28016;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249B53C;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,142
	ctx.r9.s64 = 142;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249B620;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249B630"))) PPC_WEAK_FUNC(sub_8249B630);
PPC_FUNC_IMPL(__imp__sub_8249B630) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249B638;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27988
	ctx.r4.s64 = ctx.r10.s64 + 27988;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249B674;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,143
	ctx.r9.s64 = 143;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,149
	ctx.r11.s64 = 149;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249B758;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249B768"))) PPC_WEAK_FUNC(sub_8249B768);
PPC_FUNC_IMPL(__imp__sub_8249B768) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249B770;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249B7AC;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,144
	ctx.r9.s64 = 144;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,150
	ctx.r11.s64 = 150;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249B898;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249B8A8"))) PPC_WEAK_FUNC(sub_8249B8A8);
PPC_FUNC_IMPL(__imp__sub_8249B8A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x8249B8B0;
	__savegprlr_14(ctx, base);
	// stwu r1,-864(r1)
	ea = -864 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r22,r3
	ctx.r22.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r22,4
	ctx.r3.s64 = ctx.r22.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,614
	ctx.r9.s64 = 614;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28068
	ctx.r4.s64 = ctx.r10.s64 + 28068;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r22)
	PPC_STORE_U32(ctx.r22.u32 + 0, ctx.r11.u32);
	// stw r9,16(r22)
	PPC_STORE_U32(ctx.r22.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249B8EC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,82
	ctx.r10.s64 = 82;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r30,232
	ctx.r30.s64 = 232;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r28,69
	ctx.r28.s64 = 69;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r4,77
	ctx.r4.s64 = 77;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,151
	ctx.r11.s64 = 151;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,43
	ctx.r10.s64 = 43;
	// li r9,97
	ctx.r9.s64 = 97;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r23,2
	ctx.r23.s64 = 2;
	// stb r28,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r28.u8);
	// li r24,15
	ctx.r24.s64 = 15;
	// stb r4,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r4.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,141
	ctx.r11.s64 = 141;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,142
	ctx.r10.s64 = 142;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r8,25
	ctx.r8.s64 = 25;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,145
	ctx.r11.s64 = 145;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r30,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r30.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,195
	ctx.r11.s64 = 195;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r30,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r30.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r23,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r23.u8);
	// stb r24,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r24.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r30,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r30.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// stb r8,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r8.u8);
	// li r7,124
	ctx.r7.s64 = 124;
	// li r8,128
	ctx.r8.s64 = 128;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r5,114
	ctx.r5.s64 = 114;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r10,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r10.u8);
	// li r10,60
	ctx.r10.s64 = 60;
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r7,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r7.u8);
	// li r25,22
	ctx.r25.s64 = 22;
	// stb r8,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r8.u8);
	// li r27,31
	ctx.r27.s64 = 31;
	// li r8,116
	ctx.r8.s64 = 116;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// li r20,87
	ctx.r20.s64 = 87;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// li r15,7
	ctx.r15.s64 = 7;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r26,83
	ctx.r26.s64 = 83;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r10,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r10.u8);
	// li r10,65
	ctx.r10.s64 = 65;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r6,105
	ctx.r6.s64 = 105;
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r20,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r20.u8);
	// li r3,110
	ctx.r3.s64 = 110;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// li r16,103
	ctx.r16.s64 = 103;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r10,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r10.u8);
	// li r10,79
	ctx.r10.s64 = 79;
	// li r7,115
	ctx.r7.s64 = 115;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// li r29,71
	ctx.r29.s64 = 71;
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// li r17,109
	ctx.r17.s64 = 109;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// li r21,46
	ctx.r21.s64 = 46;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// li r10,50
	ctx.r10.s64 = 50;
	// stb r25,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r25.u8);
	// stb r15,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r15.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r8,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r8.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// li r10,101
	ctx.r10.s64 = 101;
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r30,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r30.u8);
	// stb r27,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r27.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r25,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r25.u8);
	// stb r27,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r27.u8);
	// stb r26,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r26.u8);
	// stb r8,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r8.u8);
	// stb r5,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r5.u8);
	// stb r6,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r6.u8);
	// stb r3,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r3.u8);
	// stb r16,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r16.u8);
	// stb r7,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r7.u8);
	// stb r29,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r29.u8);
	// stb r9,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r9.u8);
	// stb r17,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r17.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r21,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r21.u8);
	// stb r28,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r28.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// stb r5,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r5.u8);
	// li r19,78
	ctx.r19.s64 = 78;
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// li r11,95
	ctx.r11.s64 = 95;
	// stb r4,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r4.u8);
	// li r28,111
	ctx.r28.s64 = 111;
	// stb r29,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r29.u8);
	// li r29,68
	ctx.r29.s64 = 68;
	// stb r4,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r4.u8);
	// li r4,80
	ctx.r4.s64 = 80;
	// stb r19,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r19.u8);
	// li r19,119
	ctx.r19.s64 = 119;
	// stb r11,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r11.u8);
	// li r14,121
	ctx.r14.s64 = 121;
	// stb r11,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r11.u8);
	// stb r11,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r11.u8);
	// li r11,62
	ctx.r11.s64 = 62;
	// stb r29,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r29.u8);
	// li r29,100
	ctx.r29.s64 = 100;
	// stb r19,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r19.u8);
	// li r19,107
	ctx.r19.s64 = 107;
	// stb r4,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r4.u8);
	// stb r4,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r4.u8);
	// li r4,108
	ctx.r4.s64 = 108;
	// stb r26,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r26.u8);
	// li r26,104
	ctx.r26.s64 = 104;
	// stb r11,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r19,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r19.u8);
	// li r19,76
	ctx.r19.s64 = 76;
	// stb r28,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r28.u8);
	// stb r5,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r5.u8);
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// stb r7,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r7.u8);
	// stb r19,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r19.u8);
	// li r19,102
	ctx.r19.s64 = 102;
	// stb r7,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r7.u8);
	// stb r9,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r9.u8);
	// stb r16,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r16.u8);
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r19,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r19.u8);
	// li r19,28
	ctx.r19.s64 = 28;
	// stb r7,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r7.u8);
	// stb r21,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r21.u8);
	// stb r10,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r10.u8);
	// stb r8,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r8.u8);
	// stb r28,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r28.u8);
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// stb r9,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r9.u8);
	// stb r17,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r17.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r6,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r6.u8);
	// stb r7,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r7.u8);
	// stb r28,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r28.u8);
	// stb r3,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r3.u8);
	// stb r3,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r3.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r8,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r8.u8);
	// stb r10,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r10.u8);
	// stb r29,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r29.u8);
	// stb r4,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r4.u8);
	// stb r9,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r9.u8);
	// stb r14,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r14.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r5,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r5.u8);
	// stb r10,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r10.u8);
	// stb r8,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r8.u8);
	// stb r26,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r26.u8);
	// stb r28,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r28.u8);
	// stb r5,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r5.u8);
	// stb r8,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r8.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r24,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r24.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r30,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r30.u8);
	// stb r11,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r11.u8);
	// stb r19,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r19.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r20,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r20.u8);
	// li r20,201
	ctx.r20.s64 = 201;
	// stb r25,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r25.u8);
	// li r25,5
	ctx.r25.s64 = 5;
	// stb r11,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// std r22,696(r1)
	PPC_STORE_U64(ctx.r1.u32 + 696, ctx.r22.u64);
	// li r22,98
	ctx.r22.s64 = 98;
	// stb r14,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r14.u8);
	// li r14,243
	ctx.r14.s64 = 243;
	// stb r20,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r20.u8);
	// li r18,10
	ctx.r18.s64 = 10;
	// stb r25,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r25.u8);
	// li r19,37
	ctx.r19.s64 = 37;
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// li r11,32
	ctx.r11.s64 = 32;
	// stb r22,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r22.u8);
	// li r25,144
	ctx.r25.s64 = 144;
	// li r20,49
	ctx.r20.s64 = 49;
	// stb r14,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r14.u8);
	// li r22,112
	ctx.r22.s64 = 112;
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r30,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r30.u8);
	// stb r18,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r18.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r27,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r27.u8);
	// stb r10,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r10.u8);
	// stb r7,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r7.u8);
	// stb r3,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r3.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r24,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r24.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r30,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r30.u8);
	// stb r25,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r25.u8);
	// stb r27,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r27.u8);
	// stb r19,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r19.u8);
	// stb r20,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r20.u8);
	// stb r11,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r11.u8);
	// stb r26,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r26.u8);
	// stb r9,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r9.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r9,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r9.u8);
	// stb r9,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r9.u8);
	// stb r3,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r3.u8);
	// stb r29,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r29.u8);
	// stb r28,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r28.u8);
	// stb r3,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r3.u8);
	// stb r9,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r9.u8);
	// stb r29,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r29.u8);
	// stb r28,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r28.u8);
	// stb r11,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r11.u8);
	// stb r4,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r4.u8);
	// stb r9,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r9.u8);
	// stb r11,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r11.u8);
	// stb r22,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r22.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r5,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r5.u8);
	// stb r8,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r8.u8);
	// stb r6,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r6.u8);
	// stb r29,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r29.u8);
	// stb r9,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r9.u8);
	// stb r11,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r11.u8);
	// stb r11,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r11.u8);
	// stb r4,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r4.u8);
	// stb r9,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r9.u8);
	// stb r11,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r11.u8);
	// stb r7,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r7.u8);
	// stb r10,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r10.u8);
	// stb r7,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r7.u8);
	// stb r6,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r6.u8);
	// stb r3,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r3.u8);
	// stb r11,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r11.u8);
	// stb r26,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r26.u8);
	// stb r9,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r9.u8);
	// stb r11,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r11.u8);
	// stb r14,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r14.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r6,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r6.u8);
	// stb r3,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r3.u8);
	// stb r9,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r9.u8);
	// stb r4,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r4.u8);
	// stb r14,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r14.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r6,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r6.u8);
	// stb r9,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r9.u8);
	// stb r29,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r29.u8);
	// stb r28,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r28.u8);
	// stb r14,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r14.u8);
	// li r14,1
	ctx.r14.s64 = 1;
	// stb r21,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r21.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r23,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r23.u8);
	// stb r15,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r15.u8);
	// stb r14,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r14.u8);
	// li r14,99
	ctx.r14.s64 = 99;
	// stb r18,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r18.u8);
	// stb r11,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r11.u8);
	// stb r27,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r27.u8);
	// stb r6,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r6.u8);
	// stb r8,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r8.u8);
	// stb r9,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r9.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r24,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r24.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r30,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r30.u8);
	// stb r25,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r25.u8);
	// stb r27,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r27.u8);
	// stb r19,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r19.u8);
	// stb r20,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r20.u8);
	// stb r11,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r11.u8);
	// stb r26,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r26.u8);
	// stb r9,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r9.u8);
	// stb r11,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r11.u8);
	// stb r4,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r4.u8);
	// stb r9,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r9.u8);
	// stb r7,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r7.u8);
	// stb r14,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r14.u8);
	// stb r6,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r6.u8);
	// stb r9,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r9.u8);
	// stb r8,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r8.u8);
	// stb r28,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r28.u8);
	// stb r11,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r11.u8);
	// stb r4,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r4.u8);
	// stb r9,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r9.u8);
	// stb r11,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r11.u8);
	// stb r22,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r22.u8);
	// stb r9,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r9.u8);
	// stb r5,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r5.u8);
	// stb r8,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r8.u8);
	// stb r6,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r6.u8);
	// stb r8,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r8.u8);
	// stb r9,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r9.u8);
	// stb r11,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r11.u8);
	// stb r10,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r10.u8);
	// stb r11,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r11.u8);
	// stb r4,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r4.u8);
	// stb r9,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r9.u8);
	// stb r11,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r11.u8);
	// stb r7,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r7.u8);
	// stb r10,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r10.u8);
	// stb r7,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r7.u8);
	// stb r7,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r7.u8);
	// stb r6,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r6.u8);
	// stb r28,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r28.u8);
	// stb r3,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r3.u8);
	// stb r10,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r10.u8);
	// stb r11,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r11.u8);
	// stb r29,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r29.u8);
	// stb r6,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r6.u8);
	// stb r11,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r11.u8);
	// stb r16,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r16.u8);
	// stb r6,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r6.u8);
	// stb r28,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r28.u8);
	// stb r14,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r14.u8);
	// li r22,83
	ctx.r22.s64 = 83;
	// stb r28,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r28.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r11,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r11.u8);
	// stb r30,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r30.u8);
	// stb r11,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r11.u8);
	// stb r8,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r8.u8);
	// stb r22,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r22.u8);
	// li r22,112
	ctx.r22.s64 = 112;
	// stb r14,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r14.u8);
	// li r14,1
	ctx.r14.s64 = 1;
	// stb r10,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r10.u8);
	// stb r5,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r5.u8);
	// stb r17,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r17.u8);
	// stb r22,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r22.u8);
	// li r22,118
	ctx.r22.s64 = 118;
	// stb r14,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r14.u8);
	// li r14,113
	ctx.r14.s64 = 113;
	// stb r6,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r6.u8);
	// stb r3,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r3.u8);
	// stb r9,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r9.u8);
	// stb r22,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r22.u8);
	// li r22,83
	ctx.r22.s64 = 83;
	// stb r14,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r14.u8);
	// li r14,117
	ctx.r14.s64 = 117;
	// stb r8,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r8.u8);
	// stb r9,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r9.u8);
	// stb r21,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r21.u8);
	// stb r22,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r22.u8);
	// li r22,112
	ctx.r22.s64 = 112;
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r23,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r23.u8);
	// stb r15,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r15.u8);
	// stb r18,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r18.u8);
	// stb r27,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r27.u8);
	// stb r29,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r29.u8);
	// stb r10,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r10.u8);
	// stb r14,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r14.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r24,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r24.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r30,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r30.u8);
	// stb r25,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r25.u8);
	// stb r27,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r27.u8);
	// stb r19,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r19.u8);
	// stb r20,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r20.u8);
	// stb r11,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r11.u8);
	// stb r26,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r26.u8);
	// stb r9,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r9.u8);
	// stb r8,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r8.u8);
	// stb r11,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r11.u8);
	// stb r29,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r29.u8);
	// stb r9,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r9.u8);
	// stb r7,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r7.u8);
	// stb r11,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r11.u8);
	// stb r6,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r6.u8);
	// stb r10,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r10.u8);
	// stb r4,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r4.u8);
	// stb r11,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r11.u8);
	// stb r10,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r10.u8);
	// stb r5,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r5.u8);
	// stb r4,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r4.u8);
	// stb r9,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r9.u8);
	// stb r7,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r7.u8);
	// stb r7,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r7.u8);
	// stb r10,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r10.u8);
	// stb r3,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r3.u8);
	// stb r11,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r11.u8);
	// stb r14,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r14.u8);
	// stb r3,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r3.u8);
	// stb r29,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r29.u8);
	// stb r11,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r11.u8);
	// stb r29,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r29.u8);
	// stb r6,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r6.u8);
	// stb r10,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r10.u8);
	// stb r11,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r11.u8);
	// stb r22,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r22.u8);
	// stb r6,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r6.u8);
	// stb r10,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r10.u8);
	// li r22,122
	ctx.r22.s64 = 122;
	// stb r14,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r14.u8);
	// stb r14,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r4,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r4.u8);
	// stb r7,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r7.u8);
	// stb r6,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r6.u8);
	// stb r22,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r22.u8);
	// li r22,119
	ctx.r22.s64 = 119;
	// stb r14,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r14.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r8,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r8.u8);
	// stb r3,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r3.u8);
	// stb r16,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r16.u8);
	// stb r22,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r22.u8);
	// li r22,118
	ctx.r22.s64 = 118;
	// stb r14,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r14.u8);
	// li r14,1
	ctx.r14.s64 = 1;
	// stb r11,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r11.u8);
	// stb r5,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r5.u8);
	// stb r29,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r29.u8);
	// stb r22,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r22.u8);
	// li r22,113
	ctx.r22.s64 = 113;
	// stb r14,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r14.u8);
	// li r14,189
	ctx.r14.s64 = 189;
	// stb r10,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r10.u8);
	// stb r11,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r11.u8);
	// stb r10,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r10.u8);
	// stb r22,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r22.u8);
	// li r22,117
	ctx.r22.s64 = 117;
	// stb r14,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r10,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r10.u8);
	// stb r3,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r3.u8);
	// stb r29,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r29.u8);
	// stb r22,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r22.u8);
	// li r22,112
	ctx.r22.s64 = 112;
	// stb r10,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r10.u8);
	// stb r8,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r8.u8);
	// stb r21,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r21.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r23,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r23.u8);
	// stb r15,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r15.u8);
	// stb r18,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r18.u8);
	// stb r27,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r27.u8);
	// stb r14,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r14.u8);
	// stb r5,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r5.u8);
	// stb r9,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r9.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r24,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r24.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r30,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r30.u8);
	// stb r25,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r25.u8);
	// stb r27,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r27.u8);
	// stb r19,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r19.u8);
	// stb r20,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r20.u8);
	// stb r11,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r11.u8);
	// stb r6,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r6.u8);
	// stb r10,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r10.u8);
	// stb r3,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r3.u8);
	// stb r8,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r8.u8);
	// stb r11,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r11.u8);
	// stb r29,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r29.u8);
	// stb r10,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r10.u8);
	// stb r11,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r11.u8);
	// stb r6,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r6.u8);
	// stb r8,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r8.u8);
	// stb r8,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r8.u8);
	// stb r10,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r10.u8);
	// stb r5,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r5.u8);
	// stb r11,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r11.u8);
	// stb r4,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r4.u8);
	// stb r9,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r9.u8);
	// stb r11,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r11.u8);
	// stb r22,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r22.u8);
	// stb r9,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r9.u8);
	// stb r5,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r5.u8);
	// stb r8,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r8.u8);
	// stb r6,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r6.u8);
	// stb r5,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r5.u8);
	// li r5,233
	ctx.r5.s64 = 233;
	// stb r10,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r10.u8);
	// stb r11,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r11.u8);
	// stb r10,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r10.u8);
	// stb r8,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r8.u8);
	// stb r5,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r5.u8);
	// li r5,6
	ctx.r5.s64 = 6;
	// stb r11,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r11.u8);
	// stb r4,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r4.u8);
	// stb r9,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r9.u8);
	// stb r11,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r11.u8);
	// stb r5,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r5.u8);
	// li r5,1
	ctx.r5.s64 = 1;
	// stb r7,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r7.u8);
	// stb r10,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r10.u8);
	// stb r7,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r7.u8);
	// stb r7,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r7.u8);
	// stb r5,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r5.u8);
	// li r5,197
	ctx.r5.s64 = 197;
	// stb r6,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r6.u8);
	// stb r28,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r28.u8);
	// stb r3,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r3.u8);
	// stb r11,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r11.u8);
	// stb r5,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r5.u8);
	// li r5,255
	ctx.r5.s64 = 255;
	// stb r10,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r10.u8);
	// stb r7,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r7.u8);
	// stb r8,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r8.u8);
	// stb r11,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r11.u8);
	// stb r8,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r8.u8);
	// stb r10,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r10.u8);
	// stb r17,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r17.u8);
	// stb r6,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r6.u8);
	// stb r3,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r3.u8);
	// stb r10,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r10.u8);
	// stb r21,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r21.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r23,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r23.u8);
	// stb r15,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r15.u8);
	// stb r18,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r18.u8);
	// stb r27,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r27.u8);
	// stb r6,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r6.u8);
	// stb r3,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r3.u8);
	// stb r8,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r8.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r18,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r18.u8);
	// stb r5,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r5.u8);
	// stb r5,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r5.u8);
	// stb r24,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r24.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r30,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r30.u8);
	// stb r25,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r25.u8);
	// stb r27,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r27.u8);
	// stb r19,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r19.u8);
	// stb r20,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r20.u8);
	// stb r11,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r11.u8);
	// stb r26,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r26.u8);
	// stb r9,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r9.u8);
	// stb r7,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r7.u8);
	// stb r11,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r11.u8);
	// stb r4,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r4.u8);
	// stb r10,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r10.u8);
	// stb r14,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r14.u8);
	// stb r8,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r8.u8);
	// stb r11,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r11.u8);
	// stb r8,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r8.u8);
	// stb r26,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r26.u8);
	// stb r10,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r10.u8);
	// stb r11,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r11.u8);
	// stb r16,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r16.u8);
	// stb r9,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r9.u8);
	// stb r17,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r17.u8);
	// stb r10,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r10.u8);
	// stb r11,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r11.u8);
	// stb r9,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r9.u8);
	// stb r3,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r3.u8);
	// stb r29,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r29.u8);
	// stb r11,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r11.u8);
	// stb r11,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r11.u8);
	// li r5,614
	ctx.r5.s64 = 614;
	// stb r11,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r11.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r11.u8);
	// stb r11,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// ld r22,696(r1)
	ctx.r22.u64 = PPC_LOAD_U64(ctx.r1.u32 + 696);
	// stb r28,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r28.u8);
	// addi r28,r22,24
	ctx.r28.s64 = ctx.r22.s64 + 24;
	// stb r3,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r3.u8);
	// stb r3,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r3.u8);
	// stb r11,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r11.u8);
	// li r11,201
	ctx.r11.s64 = 201;
	// stb r8,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r8.u8);
	// mr r3,r28
	ctx.r3.u64 = ctx.r28.u64;
	// stb r26,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r26.u8);
	// stb r10,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r10.u8);
	// stb r16,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r16.u8);
	// stb r11,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r11.u8);
	// li r11,142
	ctx.r11.s64 = 142;
	// stb r9,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r9.u8);
	// stb r17,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r17.u8);
	// stb r10,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r10.u8);
	// stb r7,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r7.u8);
	// stb r11,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r10,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r10.u8);
	// stb r7,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r7.u8);
	// stb r7,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r7.u8);
	// stb r6,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r6.u8);
	// stb r11,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r26,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r26.u8);
	// stb r9,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r9.u8);
	// stb r7,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r7.u8);
	// stb r10,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r10.u8);
	// stb r11,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r29,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r29.u8);
	// stb r10,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r10.u8);
	// stb r29,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r29.u8);
	// stb r21,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r21.u8);
	// stb r11,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r11.u8);
	// stb r11,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r23,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r23.u8);
	// stb r15,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r15.u8);
	// stb r24,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r24.u8);
	// stb r11,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r11.u8);
	// li r11,145
	ctx.r11.s64 = 145;
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r30,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r30.u8);
	// stb r11,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r25,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r25.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r31,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r31.u8);
	// stb r30,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r30.u8);
	// stb r25,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r25.u8);
	// stb r27,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r27.u8);
	// stb r19,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r19.u8);
	// stb r20,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r20.u8);
	// stb r31,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r31.u8);
	// stb r31,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r31.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r30,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r30.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r30,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r30.u8);
	// stb r25,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r25.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r31,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r31.u8);
	// stb r30,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r30.u8);
	// stb r11,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r23,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r23.u8);
	// stb r11,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r11.u8);
	// li r11,133
	ctx.r11.s64 = 133;
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r23,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r23.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r31,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r31.u8);
	// stb r11,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r11.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249C460;
	sub_82B06418(ctx, base);
	// mr r3,r22
	ctx.r3.u64 = ctx.r22.u64;
	// stw r28,20(r22)
	PPC_STORE_U32(ctx.r22.u32 + 20, ctx.r28.u32);
	// addi r1,r1,864
	ctx.r1.s64 = ctx.r1.s64 + 864;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249C470"))) PPC_WEAK_FUNC(sub_8249C470);
PPC_FUNC_IMPL(__imp__sub_8249C470) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249C478;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28000
	ctx.r4.s64 = ctx.r10.s64 + 28000;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249C4B4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,152
	ctx.r11.s64 = 152;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249C590;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249C5A0"))) PPC_WEAK_FUNC(sub_8249C5A0);
PPC_FUNC_IMPL(__imp__sub_8249C5A0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249C5A8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28016
	ctx.r4.s64 = ctx.r10.s64 + 28016;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249C5E4;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,147
	ctx.r9.s64 = 147;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,153
	ctx.r11.s64 = 153;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249C6C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249C6D8"))) PPC_WEAK_FUNC(sub_8249C6D8);
PPC_FUNC_IMPL(__imp__sub_8249C6D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249C6E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27988
	ctx.r4.s64 = ctx.r10.s64 + 27988;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249C71C;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,148
	ctx.r9.s64 = 148;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,154
	ctx.r11.s64 = 154;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249C800;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249C810"))) PPC_WEAK_FUNC(sub_8249C810);
PPC_FUNC_IMPL(__imp__sub_8249C810) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249C818;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249C854;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,149
	ctx.r9.s64 = 149;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249C940;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249C950"))) PPC_WEAK_FUNC(sub_8249C950);
PPC_FUNC_IMPL(__imp__sub_8249C950) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x8249C958;
	__savegprlr_14(ctx, base);
	// stwu r1,-1216(r1)
	ea = -1216 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r18,r3
	ctx.r18.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r18,4
	ctx.r3.s64 = ctx.r18.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,964
	ctx.r9.s64 = 964;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28116
	ctx.r4.s64 = ctx.r10.s64 + 28116;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r18)
	PPC_STORE_U32(ctx.r18.u32 + 0, ctx.r11.u32);
	// stw r9,16(r18)
	PPC_STORE_U32(ctx.r18.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249C994;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r25,232
	ctx.r25.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,69
	ctx.r5.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r30,77
	ctx.r30.s64 = 77;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r17,1
	ctx.r17.s64 = 1;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,156
	ctx.r11.s64 = 156;
	// li r10,101
	ctx.r10.s64 = 101;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r19,15
	ctx.r19.s64 = 15;
	// stb r5,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r5.u8);
	// li r9,147
	ctx.r9.s64 = 147;
	// stb r30,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r30.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,146
	ctx.r11.s64 = 146;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,150
	ctx.r11.s64 = 150;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r25,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r25.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,234
	ctx.r11.s64 = 234;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r25,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r25.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,42
	ctx.r11.s64 = 42;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r17,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r17.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r11,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r11.u8);
	// li r11,137
	ctx.r11.s64 = 137;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r19,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r19.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r25,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r25.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// stb r9,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r9.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r17,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r17.u8);
	// li r22,31
	ctx.r22.s64 = 31;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r4,114
	ctx.r4.s64 = 114;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r9,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r9.u8);
	// li r9,60
	ctx.r9.s64 = 60;
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r8,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r8.u8);
	// li r8,124
	ctx.r8.s64 = 124;
	// li r26,87
	ctx.r26.s64 = 87;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r28,99
	ctx.r28.s64 = 99;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r9,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r9.u8);
	// li r9,83
	ctx.r9.s64 = 83;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r8,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r8.u8);
	// li r29,107
	ctx.r29.s64 = 107;
	// li r8,116
	ctx.r8.s64 = 116;
	// stb r26,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r26.u8);
	// li r7,105
	ctx.r7.s64 = 105;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r9.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,128
	ctx.r11.s64 = 128;
	// li r6,110
	ctx.r6.s64 = 110;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r21,103
	ctx.r21.s64 = 103;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// li r3,115
	ctx.r3.s64 = 115;
	// stb r28,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r28.u8);
	// stb r9,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r9.u8);
	// li r9,65
	ctx.r9.s64 = 65;
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// li r27,71
	ctx.r27.s64 = 71;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// li r24,109
	ctx.r24.s64 = 109;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// li r16,46
	ctx.r16.s64 = 46;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r9,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r9.u8);
	// li r9,79
	ctx.r9.s64 = 79;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r11,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r11.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r29,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r29.u8);
	// stb r9,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r9.u8);
	// li r9,50
	ctx.r9.s64 = 50;
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r25,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r25.u8);
	// stb r9,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r9.u8);
	// li r9,97
	ctx.r9.s64 = 97;
	// stb r22,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r22.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// stb r22,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r22.u8);
	// stb r8,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r8.u8);
	// stb r4,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r4.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r6,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r6.u8);
	// stb r21,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r21.u8);
	// stb r3,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r3.u8);
	// stb r27,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r27.u8);
	// stb r9,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r9.u8);
	// stb r24,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r24.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r16,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r16.u8);
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// stb r4,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r4.u8);
	// stb r30,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r30.u8);
	// li r30,78
	ctx.r30.s64 = 78;
	// stb r29,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r29.u8);
	// li r23,76
	ctx.r23.s64 = 76;
	// li r29,95
	ctx.r29.s64 = 95;
	// stb r27,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r27.u8);
	// stb r26,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r26.u8);
	// li r5,111
	ctx.r5.s64 = 111;
	// stb r11,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r11.u8);
	// li r27,121
	ctx.r27.s64 = 121;
	// stb r30,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r30.u8);
	// li r30,119
	ctx.r30.s64 = 119;
	// stb r23,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r23.u8);
	// li r23,62
	ctx.r23.s64 = 62;
	// stb r29,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r29.u8);
	// li r29,80
	ctx.r29.s64 = 80;
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r4,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r4.u8);
	// li r20,28
	ctx.r20.s64 = 28;
	// stb r5,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r5.u8);
	// stb r30,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r30.u8);
	// li r30,68
	ctx.r30.s64 = 68;
	// stb r23,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r23.u8);
	// li r26,201
	ctx.r26.s64 = 201;
	// stb r29,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r29.u8);
	// li r23,148
	ctx.r23.s64 = 148;
	// li r29,108
	ctx.r29.s64 = 108;
	// stb r4,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r4.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// stb r30,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r30.u8);
	// li r30,100
	ctx.r30.s64 = 100;
	// stb r3,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r3.u8);
	// stb r3,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r3.u8);
	// stb r9,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r9.u8);
	// stb r21,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r21.u8);
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r3,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r3.u8);
	// stb r16,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r16.u8);
	// stb r10,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r10.u8);
	// stb r8,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r8.u8);
	// stb r5,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r5.u8);
	// stb r4,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r4.u8);
	// stb r9,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r9.u8);
	// stb r24,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r24.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r7,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r7.u8);
	// stb r3,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r3.u8);
	// stb r28,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r28.u8);
	// stb r5,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r5.u8);
	// stb r6,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r6.u8);
	// stb r6,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r6.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r28,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r28.u8);
	// stb r8,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r8.u8);
	// stb r10,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r10.u8);
	// stb r30,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r30.u8);
	// stb r29,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r29.u8);
	// stb r9,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r9.u8);
	// stb r27,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r27.u8);
	// stb r10,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r10.u8);
	// stb r4,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r4.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r14,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r14.u8);
	// stb r8,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r8.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r19,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r19.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r25,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r25.u8);
	// stb r23,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r23.u8);
	// stb r20,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r20.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r26,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r26.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// stb r23,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r23.u8);
	// li r26,98
	ctx.r26.s64 = 98;
	// stb r27,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r27.u8);
	// stb r14,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r14.u8);
	// li r23,104
	ctx.r23.s64 = 104;
	// li r20,149
	ctx.r20.s64 = 149;
	// stb r25,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r25.u8);
	// li r15,49
	ctx.r15.s64 = 49;
	// stb r17,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r17.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// li r11,17
	ctx.r11.s64 = 17;
	// stb r26,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r26.u8);
	// li r27,243
	ctx.r27.s64 = 243;
	// li r26,112
	ctx.r26.s64 = 112;
	// stb r22,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r22.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r10,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r10.u8);
	// stb r3,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r3.u8);
	// stb r11,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r6,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r6.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r19,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r19.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r11,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r11.u8);
	// li r11,32
	ctx.r11.s64 = 32;
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r25,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r25.u8);
	// stb r20,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r20.u8);
	// stb r22,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r22.u8);
	// stb r15,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r15.u8);
	// stb r11,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r11.u8);
	// stb r23,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r23.u8);
	// stb r9,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r9.u8);
	// stb r11,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r11.u8);
	// stb r9,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r9.u8);
	// stb r9,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r9.u8);
	// stb r6,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r6.u8);
	// stb r30,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r30.u8);
	// stb r5,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r5.u8);
	// stb r6,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r6.u8);
	// stb r9,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r9.u8);
	// stb r30,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r30.u8);
	// stb r5,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r5.u8);
	// stb r11,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r11.u8);
	// stb r29,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r29.u8);
	// stb r9,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r9.u8);
	// stb r11,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r11.u8);
	// stb r26,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r26.u8);
	// stb r9,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r9.u8);
	// stb r4,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r4.u8);
	// stb r8,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r8.u8);
	// stb r7,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r7.u8);
	// stb r30,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r30.u8);
	// stb r9,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r9.u8);
	// stb r11,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r11.u8);
	// stb r11,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r11.u8);
	// stb r29,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r29.u8);
	// stb r9,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r9.u8);
	// stb r11,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r11.u8);
	// stb r3,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r3.u8);
	// stb r10,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r10.u8);
	// stb r3,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r3.u8);
	// stb r7,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r7.u8);
	// stb r27,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r27.u8);
	// stb r6,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r6.u8);
	// stb r11,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r11.u8);
	// stb r23,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r23.u8);
	// stb r9,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r9.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// stb r7,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r7.u8);
	// stb r6,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r6.u8);
	// stb r9,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r9.u8);
	// stb r29,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r29.u8);
	// stb r7,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r7.u8);
	// stb r14,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r14.u8);
	// stb r9,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r9.u8);
	// stb r30,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r30.u8);
	// stb r5,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r5.u8);
	// stb r14,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r14.u8);
	// li r14,250
	ctx.r14.s64 = 250;
	// li r27,191
	ctx.r27.s64 = 191;
	// stb r16,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r16.u8);
	// stb r11,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r11.u8);
	// stb r7,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r7.u8);
	// stb r10,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r10.u8);
	// stb r14,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r14.u8);
	// li r14,73
	ctx.r14.s64 = 73;
	// stb r27,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r27.u8);
	// li r27,81
	ctx.r27.s64 = 81;
	// stb r4,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r4.u8);
	// stb r10,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r10.u8);
	// stb r3,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r3.u8);
	// stb r14,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r14.u8);
	// li r14,65
	ctx.r14.s64 = 65;
	// stb r27,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r27.u8);
	// li r27,117
	ctx.r27.s64 = 117;
	// stb r11,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r11.u8);
	// stb r10,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r10.u8);
	// stb r24,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r24.u8);
	// stb r14,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r14.u8);
	// li r14,241
	ctx.r14.s64 = 241;
	// stb r27,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r27.u8);
	// stb r26,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r26.u8);
	// stb r10,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r10.u8);
	// stb r9,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r9.u8);
	// stb r4,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r4.u8);
	// stb r11,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r11.u8);
	// stb r30,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r30.u8);
	// stb r10,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r10.u8);
	// stb r3,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r3.u8);
	// stb r30,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r30.u8);
	// stb r10,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r10.u8);
	// stb r11,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r11.u8);
	// stb r10,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r10.u8);
	// stb r29,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r29.u8);
	// stb r11,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r11.u8);
	// stb r29,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r29.u8);
	// stb r8,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r8.u8);
	// stb r7,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r7.u8);
	// stb r24,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r24.u8);
	// stb r5,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r5.u8);
	// stb r11,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r11.u8);
	// stb r26,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r26.u8);
	// stb r27,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r27.u8);
	// stb r6,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r6.u8);
	// stb r8,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r8.u8);
	// stb r5,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r5.u8);
	// stb r11,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r11.u8);
	// stb r30,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r30.u8);
	// stb r10,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r10.u8);
	// stb r11,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r11.u8);
	// stb r28,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r28.u8);
	// stb r5,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r5.u8);
	// stb r6,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r6.u8);
	// stb r8,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r8.u8);
	// stb r4,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r4.u8);
	// stb r5,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r5.u8);
	// stb r29,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r29.u8);
	// stb r11,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r11.u8);
	// stb r28,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r28.u8);
	// stb r5,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r5.u8);
	// stb r6,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r6.u8);
	// stb r11,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r11.u8);
	// stb r29,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r29.u8);
	// stb r9,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r9.u8);
	// stb r11,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r11.u8);
	// stb r11,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r11.u8);
	// stb r30,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r30.u8);
	// stb r10,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r10.u8);
	// stb r11,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r11.u8);
	// stb r28,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r28.u8);
	// stb r5,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r5.u8);
	// stb r24,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r24.u8);
	// stb r26,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r26.u8);
	// stb r9,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r9.u8);
	// stb r14,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r14.u8);
	// stb r10,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r10.u8);
	// stb r4,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r4.u8);
	// stb r5,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r5.u8);
	// std r18,1048(r1)
	PPC_STORE_U64(ctx.r1.u32 + 1048, ctx.r18.u64);
	// li r18,6
	ctx.r18.s64 = 6;
	// stb r17,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r17.u8);
	// li r17,158
	ctx.r17.s64 = 158;
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r10,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r10.u8);
	// stb r22,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r22.u8);
	// stb r18,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r18.u8);
	// li r18,3
	ctx.r18.s64 = 3;
	// stb r17,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r17.u8);
	// li r17,37
	ctx.r17.s64 = 37;
	// stb r14,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r14.u8);
	// stb r7,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r7.u8);
	// stb r8,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r8.u8);
	// stb r18,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r18.u8);
	// li r18,10
	ctx.r18.s64 = 10;
	// stb r9,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r9.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r19,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r19.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r18,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r18.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r25,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r25.u8);
	// stb r20,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r20.u8);
	// stb r22,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r22.u8);
	// stb r17,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r17.u8);
	// stb r15,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r15.u8);
	// stb r11,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r11.u8);
	// stb r23,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r23.u8);
	// stb r9,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r9.u8);
	// stb r11,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r11.u8);
	// stb r29,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r29.u8);
	// stb r9,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r9.u8);
	// stb r3,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r3.u8);
	// stb r28,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r28.u8);
	// stb r7,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r7.u8);
	// stb r9,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r9.u8);
	// stb r8,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r8.u8);
	// stb r5,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r5.u8);
	// stb r11,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r11.u8);
	// stb r29,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r29.u8);
	// stb r9,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r9.u8);
	// stb r11,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r11.u8);
	// stb r26,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r26.u8);
	// stb r9,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r9.u8);
	// stb r4,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r4.u8);
	// stb r8,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r8.u8);
	// stb r7,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r7.u8);
	// stb r8,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r8.u8);
	// stb r9,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r9.u8);
	// stb r11,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r11.u8);
	// stb r10,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r10.u8);
	// stb r11,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r11.u8);
	// stb r29,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r29.u8);
	// stb r9,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r9.u8);
	// stb r11,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r11.u8);
	// stb r3,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r3.u8);
	// stb r10,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r10.u8);
	// stb r3,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r3.u8);
	// stb r3,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r3.u8);
	// stb r7,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r7.u8);
	// stb r5,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r5.u8);
	// stb r6,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r6.u8);
	// stb r10,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r10.u8);
	// stb r11,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r11.u8);
	// stb r30,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r30.u8);
	// stb r7,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r7.u8);
	// stb r11,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r11.u8);
	// stb r21,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r21.u8);
	// stb r7,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r7.u8);
	// stb r5,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r5.u8);
	// stb r28,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r28.u8);
	// stb r5,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r5.u8);
	// stb r11,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r11.u8);
	// stb r25,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r25.u8);
	// stb r11,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r11.u8);
	// stb r8,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r8.u8);
	// stb r10,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r10.u8);
	// stb r4,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r4.u8);
	// li r17,86
	ctx.r17.s64 = 86;
	// stb r24,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r24.u8);
	// stb r7,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r7.u8);
	// stb r6,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r6.u8);
	// stb r9,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r9.u8);
	// stb r8,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r8.u8);
	// stb r17,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r17.u8);
	// li r17,39
	ctx.r17.s64 = 39;
	// stb r9,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r9.u8);
	// stb r16,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r16.u8);
	// stb r11,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r11.u8);
	// stb r27,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r27.u8);
	// stb r17,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r17.u8);
	// li r17,107
	ctx.r17.s64 = 107;
	// stb r5,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r5.u8);
	// stb r7,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r7.u8);
	// stb r11,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r11.u8);
	// stb r4,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r4.u8);
	// stb r17,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r17.u8);
	// li r17,73
	ctx.r17.s64 = 73;
	// stb r7,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r7.u8);
	// stb r28,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r28.u8);
	// stb r5,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r5.u8);
	// stb r24,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r24.u8);
	// stb r17,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r17.u8);
	// li r17,65
	ctx.r17.s64 = 65;
	// stb r7,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r7.u8);
	// stb r6,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r6.u8);
	// stb r28,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r28.u8);
	// stb r7,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r7.u8);
	// stb r17,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r17.u8);
	// li r17,6
	ctx.r17.s64 = 6;
	// stb r9,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r9.u8);
	// stb r4,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r4.u8);
	// stb r10,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r10.u8);
	// stb r11,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r11.u8);
	// stb r17,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r17.u8);
	// li r17,3
	ctx.r17.s64 = 3;
	// stb r30,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r30.u8);
	// stb r9,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r9.u8);
	// stb r29,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r29.u8);
	// stb r29,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r29.u8);
	// stb r17,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r17.u8);
	// li r17,10
	ctx.r17.s64 = 10;
	// stb r27,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r27.u8);
	// stb r29,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r29.u8);
	// stb r8,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r8.u8);
	// stb r7,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r7.u8);
	// stb r24,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r24.u8);
	// stb r5,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r5.u8);
	// stb r11,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r11.u8);
	// stb r28,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r28.u8);
	// stb r23,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r23.u8);
	// stb r10,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r10.u8);
	// stb r28,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r28.u8);
	// stb r26,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r26.u8);
	// stb r5,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r5.u8);
	// stb r7,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r7.u8);
	// stb r6,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r6.u8);
	// stb r8,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r8.u8);
	// stb r11,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r11.u8);
	// stb r28,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r28.u8);
	// stb r5,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r5.u8);
	// stb r6,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r6.u8);
	// stb r11,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r11.u8);
	// stb r27,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r27.u8);
	// stb r6,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r6.u8);
	// stb r11,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r11.u8);
	// stb r28,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r28.u8);
	// stb r5,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r5.u8);
	// stb r24,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r24.u8);
	// stb r26,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r26.u8);
	// stb r9,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r9.u8);
	// stb r21,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r21.u8);
	// stb r6,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r6.u8);
	// stb r5,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r5.u8);
	// stb r11,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r11.u8);
	// stb r14,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r14.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r10,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r10.u8);
	// stb r17,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r17.u8);
	// li r14,83
	ctx.r14.s64 = 83;
	// stb r22,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r22.u8);
	// li r17,2
	ctx.r17.s64 = 2;
	// stb r30,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r30.u8);
	// stb r10,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r10.u8);
	// stb r27,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r27.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r14,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r14.u8);
	// stb r17,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r17.u8);
	// li r17,50
	ctx.r17.s64 = 50;
	// stb r14,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r14.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r19,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r19.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r17,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r17.u8);
	// li r17,37
	ctx.r17.s64 = 37;
	// stb r14,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r14.u8);
	// li r14,119
	ctx.r14.s64 = 119;
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r25,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r25.u8);
	// stb r20,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r20.u8);
	// stb r17,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r17.u8);
	// li r17,118
	ctx.r17.s64 = 118;
	// stb r14,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r22,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r22.u8);
	// stb r15,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r15.u8);
	// stb r11,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r11.u8);
	// stb r23,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r23.u8);
	// stb r9,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r9.u8);
	// stb r8,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r8.u8);
	// stb r11,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r11.u8);
	// stb r30,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r30.u8);
	// stb r9,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r9.u8);
	// stb r3,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r3.u8);
	// stb r11,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r11.u8);
	// stb r26,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r26.u8);
	// stb r7,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r7.u8);
	// stb r10,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r10.u8);
	// stb r29,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r29.u8);
	// stb r11,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r11.u8);
	// stb r17,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r17.u8);
	// stb r10,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r10.u8);
	// stb r4,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r4.u8);
	// stb r29,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r29.u8);
	// stb r9,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r9.u8);
	// stb r3,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r3.u8);
	// stb r3,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r3.u8);
	// stb r10,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r10.u8);
	// stb r6,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r6.u8);
	// stb r11,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r11.u8);
	// stb r27,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r27.u8);
	// stb r6,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r6.u8);
	// stb r30,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r30.u8);
	// stb r11,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r11.u8);
	// stb r30,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r30.u8);
	// stb r7,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r7.u8);
	// stb r10,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r10.u8);
	// stb r11,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r11.u8);
	// stb r26,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r26.u8);
	// stb r7,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r7.u8);
	// stb r10,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r10.u8);
	// stb r29,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r29.u8);
	// stb r3,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r3.u8);
	// stb r7,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r7.u8);
	// stb r8,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r8.u8);
	// stb r27,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r27.u8);
	// stb r6,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r6.u8);
	// stb r21,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r21.u8);
	// stb r11,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r11.u8);
	// stb r27,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r27.u8);
	// stb r4,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r4.u8);
	// stb r30,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r30.u8);
	// stb r10,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r10.u8);
	// stb r11,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r11.u8);
	// stb r14,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r14.u8);
	// stb r10,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r10.u8);
	// stb r10,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r10.u8);
	// stb r6,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r6.u8);
	// stb r30,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r30.u8);
	// li r14,77
	ctx.r14.s64 = 77;
	// stb r10,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r10.u8);
	// li r18,107
	ctx.r18.s64 = 107;
	// stb r8,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r8.u8);
	// stb r16,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r16.u8);
	// stb r11,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r11.u8);
	// stb r28,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r28.u8);
	// stb r14,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r14.u8);
	// li r14,246
	ctx.r14.s64 = 246;
	// stb r18,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r18.u8);
	// li r18,80
	ctx.r18.s64 = 80;
	// stb r23,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r23.u8);
	// stb r8,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r8.u8);
	// stb r10,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r10.u8);
	// stb r14,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r14.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r18,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r18.u8);
	// li r18,45
	ctx.r18.s64 = 45;
	// stb r3,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r3.u8);
	// stb r8,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r8.u8);
	// stb r11,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r11.u8);
	// stb r14,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r14.u8);
	// li r14,75
	ctx.r14.s64 = 75;
	// stb r30,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r30.u8);
	// stb r27,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r27.u8);
	// stb r11,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r11.u8);
	// stb r17,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r17.u8);
	// stb r14,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r14.u8);
	// stb r14,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r14.u8);
	// li r14,73
	ctx.r14.s64 = 73;
	// stb r5,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r5.u8);
	// stb r24,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r24.u8);
	// stb r11,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r11.u8);
	// stb r29,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r29.u8);
	// stb r14,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r10,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r10.u8);
	// stb r8,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r8.u8);
	// stb r8,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r8.u8);
	// stb r10,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r10.u8);
	// stb r14,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r14.u8);
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r6,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r6.u8);
	// stb r11,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r11.u8);
	// stb r5,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r5.u8);
	// stb r6,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r6.u8);
	// stb r8,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r8.u8);
	// stb r4,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r4.u8);
	// stb r5,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r5.u8);
	// stb r29,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r29.u8);
	// stb r29,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r29.u8);
	// stb r26,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r26.u8);
	// stb r27,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r27.u8);
	// stb r6,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r6.u8);
	// stb r8,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r8.u8);
	// stb r11,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r11.u8);
	// stb r24,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r24.u8);
	// stb r7,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r7.u8);
	// stb r8,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r8.u8);
	// stb r11,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r11.u8);
	// stb r30,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r30.u8);
	// stb r10,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r10.u8);
	// stb r4,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r4.u8);
	// stb r11,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r11.u8);
	// stb r9,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r9.u8);
	// stb r4,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r4.u8);
	// stb r8,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r8.u8);
	// stb r6,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r6.u8);
	// stb r10,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r10.u8);
	// stb r4,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r4.u8);
	// stb r18,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r18.u8);
	// stb r11,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r11.u8);
	// stb r10,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r10.u8);
	// stb r21,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r21.u8);
	// stb r7,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r7.u8);
	// stb r6,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r6.u8);
	// stb r6,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r6.u8);
	// stb r10,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r10.u8);
	// stb r6,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r6.u8);
	// stb r14,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r14.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r10,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r10.u8);
	// stb r22,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r22.u8);
	// stb r4,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r4.u8);
	// stb r9,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r9.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r14,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r14.u8);
	// li r14,3
	ctx.r14.s64 = 3;
	// stb r19,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r19.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r14,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r14.u8);
	// li r14,10
	ctx.r14.s64 = 10;
	// stb r25,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r25.u8);
	// stb r20,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r20.u8);
	// stb r22,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r22.u8);
	// stb r15,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r15.u8);
	// stb r14,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r11,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r11.u8);
	// stb r17,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r17.u8);
	// stb r7,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r7.u8);
	// stb r10,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r10.u8);
	// stb r14,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r14.u8);
	// li r14,212
	ctx.r14.s64 = 212;
	// stb r6,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r6.u8);
	// stb r8,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r8.u8);
	// stb r11,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r11.u8);
	// stb r30,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r30.u8);
	// stb r14,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r10,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r10.u8);
	// stb r11,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r11.u8);
	// stb r27,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r27.u8);
	// stb r7,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r7.u8);
	// stb r14,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r14.u8);
	// li r14,37
	ctx.r14.s64 = 37;
	// stb r8,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r8.u8);
	// stb r8,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r8.u8);
	// stb r10,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r10.u8);
	// stb r4,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r4.u8);
	// stb r14,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r14.u8);
	// li r14,113
	ctx.r14.s64 = 113;
	// stb r11,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r11.u8);
	// stb r29,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r29.u8);
	// stb r9,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r9.u8);
	// stb r11,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r11.u8);
	// stb r14,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r14.u8);
	// li r14,233
	ctx.r14.s64 = 233;
	// stb r26,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r26.u8);
	// stb r9,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r9.u8);
	// stb r4,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r4.u8);
	// stb r8,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r8.u8);
	// stb r7,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r7.u8);
	// stb r10,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r10.u8);
	// stb r11,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r11.u8);
	// stb r10,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r10.u8);
	// stb r8,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r8.u8);
	// stb r11,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r11.u8);
	// stb r29,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r29.u8);
	// stb r9,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r9.u8);
	// stb r11,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r11.u8);
	// stb r3,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r3.u8);
	// stb r10,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r10.u8);
	// stb r3,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r3.u8);
	// stb r3,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r3.u8);
	// stb r7,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r7.u8);
	// stb r5,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r5.u8);
	// stb r6,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r6.u8);
	// stb r11,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r11.u8);
	// stb r10,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r10.u8);
	// stb r3,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r3.u8);
	// stb r8,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r8.u8);
	// stb r11,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r11.u8);
	// stb r8,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r8.u8);
	// stb r10,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r10.u8);
	// stb r4,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r4.u8);
	// stb r24,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r24.u8);
	// stb r7,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r7.u8);
	// stb r6,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r6.u8);
	// stb r14,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r14.u8);
	// li r14,86
	ctx.r14.s64 = 86;
	// stb r10,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r10.u8);
	// stb r16,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r16.u8);
	// stb r11,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r11.u8);
	// stb r5,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r5.u8);
	// stb r14,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r14.u8);
	// li r14,122
	ctx.r14.s64 = 122;
	// stb r27,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r27.u8);
	// stb r29,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r29.u8);
	// stb r10,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r10.u8);
	// stb r17,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r17.u8);
	// stb r14,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r14.u8);
	// li r14,45
	ctx.r14.s64 = 45;
	// stb r5,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r5.u8);
	// stb r27,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r27.u8);
	// stb r3,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r3.u8);
	// stb r11,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r11.u8);
	// stb r14,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r14.u8);
	// li r14,224
	ctx.r14.s64 = 224;
	// stb r4,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r4.u8);
	// stb r10,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r10.u8);
	// stb r28,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r28.u8);
	// stb r23,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r23.u8);
	// stb r9,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r9.u8);
	// stb r4,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r4.u8);
	// stb r21,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r21.u8);
	// stb r10,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r10.u8);
	// stb r4,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r4.u8);
	// stb r11,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r11.u8);
	// stb r14,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r14.u8);
	// stb r11,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r11.u8);
	// stb r26,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r26.u8);
	// stb r9,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r9.u8);
	// stb r4,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r4.u8);
	// stb r8,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r8.u8);
	// stb r7,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r7.u8);
	// stb r4,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r4.u8);
	// stb r11,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r11.u8);
	// stb r30,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r30.u8);
	// stb r27,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r27.u8);
	// stb r11,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r11.u8);
	// stb r30,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r30.u8);
	// stb r10,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r10.u8);
	// stb r4,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r4.u8);
	// stb r6,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r6.u8);
	// stb r7,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r7.u8);
	// stb r10,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r10.u8);
	// stb r4,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r4.u8);
	// stb r11,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r11.u8);
	// stb r26,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r26.u8);
	// stb r5,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r5.u8);
	// stb r7,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r7.u8);
	// stb r6,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r6.u8);
	// stb r8,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r8.u8);
	// stb r11,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r11.u8);
	// stb r30,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r30.u8);
	// stb r10,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r10.u8);
	// stb r11,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r11.u8);
	// stb r26,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r26.u8);
	// stb r9,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r9.u8);
	// stb r3,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r3.u8);
	// stb r3,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r3.u8);
	// stb r9,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r9.u8);
	// stb r21,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r21.u8);
	// stb r10,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r10.u8);
	// stb r11,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r11.u8);
	// stb r9,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r9.u8);
	// stb r17,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r17.u8);
	// stb r10,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r10.u8);
	// stb r28,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r28.u8);
	// stb r11,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r11.u8);
	// stb r17,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r17.u8);
	// stb r5,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r5.u8);
	// stb r8,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r8.u8);
	// stb r4,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r4.u8);
	// stb r10,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r10.u8);
	// stb r11,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r11.u8);
	// stb r26,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r26.u8);
	// stb r9,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r9.u8);
	// stb r4,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r4.u8);
	// li r14,73
	ctx.r14.s64 = 73;
	// stb r8,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r8.u8);
	// stb r10,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r10.u8);
	// stb r6,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r6.u8);
	// stb r9,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r9.u8);
	// stb r7,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r7.u8);
	// stb r14,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r14.u8);
	// li r14,65
	ctx.r14.s64 = 65;
	// stb r4,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r4.u8);
	// stb r10,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r10.u8);
	// stb r11,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r11.u8);
	// stb r31,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r31.u8);
	// stb r14,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r14.u8);
	// li r14,160
	ctx.r14.s64 = 160;
	// stb r10,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r10.u8);
	// stb r22,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r22.u8);
	// stb r7,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r7.u8);
	// stb r6,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r6.u8);
	// stb r14,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r14.u8);
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r8,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r8.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r19,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r19.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r14,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r14.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r31,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r31.u8);
	// stb r25,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r25.u8);
	// stb r20,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r20.u8);
	// stb r14,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r14.u8);
	// li r14,3
	ctx.r14.s64 = 3;
	// stb r22,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r22.u8);
	// stb r15,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r15.u8);
	// stb r11,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r11.u8);
	// stb r23,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r23.u8);
	// stb r14,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r14.u8);
	// li r14,10
	ctx.r14.s64 = 10;
	// stb r9,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r9.u8);
	// stb r3,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r3.u8);
	// stb r11,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r11.u8);
	// stb r29,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r29.u8);
	// stb r14,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r10,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r10.u8);
	// stb r8,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r8.u8);
	// stb r11,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r11.u8);
	// stb r8,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r8.u8);
	// stb r14,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r14.u8);
	// li r14,220
	ctx.r14.s64 = 220;
	// stb r23,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r23.u8);
	// stb r10,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r10.u8);
	// stb r11,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r11.u8);
	// stb r21,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r21.u8);
	// stb r14,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r14.u8);
	// li r14,10
	ctx.r14.s64 = 10;
	// stb r9,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r9.u8);
	// stb r24,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r24.u8);
	// stb r10,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r10.u8);
	// stb r11,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r11.u8);
	// stb r14,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r14.u8);
	// li r14,255
	ctx.r14.s64 = 255;
	// stb r9,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r9.u8);
	// stb r6,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r6.u8);
	// stb r30,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r30.u8);
	// stb r11,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r11.u8);
	// stb r14,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r14.u8);
	// stb r14,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r14.u8);
	// li r14,37
	ctx.r14.s64 = 37;
	// stb r8,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r8.u8);
	// stb r23,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r23.u8);
	// stb r10,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r10.u8);
	// stb r11,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r11.u8);
	// stb r14,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r21,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r21.u8);
	// stb r9,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r9.u8);
	// stb r24,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r24.u8);
	// stb r10,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r10.u8);
	// stb r14,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r14.u8);
	// stb r11,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r11.u8);
	// li r21,87
	ctx.r21.s64 = 87;
	// stb r5,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r5.u8);
	// stb r5,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r5.u8);
	// stb r5,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r5.u8);
	// stb r5,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r5.u8);
	// stb r5,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r5.u8);
	// stb r21,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r21.u8);
	// li r21,121
	ctx.r21.s64 = 121;
	// stb r5,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r5.u8);
	// stb r5,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r5.u8);
	// stb r5,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r5.u8);
	// li r5,119
	ctx.r5.s64 = 119;
	// stb r3,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r3.u8);
	// stb r21,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r21.u8);
	// li r21,107
	ctx.r21.s64 = 107;
	// stb r10,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r10.u8);
	// stb r3,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r3.u8);
	// stb r3,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r3.u8);
	// stb r7,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r7.u8);
	// stb r6,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r6.u8);
	// stb r11,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r11.u8);
	// stb r23,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r23.u8);
	// stb r9,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r9.u8);
	// stb r3,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r3.u8);
	// stb r11,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r11.u8);
	// stb r10,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r10.u8);
	// stb r6,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r6.u8);
	// stb r30,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r30.u8);
	// stb r10,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r10.u8);
	// stb r30,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r30.u8);
	// stb r16,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r16.u8);
	// stb r11,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r11.u8);
	// stb r27,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r27.u8);
	// stb r29,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r29.u8);
	// stb r30,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r30.u8);
	// stb r11,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r11.u8);
	// stb r27,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r27.u8);
	// stb r11,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r11.u8);
	// stb r29,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r29.u8);
	// stb r7,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r7.u8);
	// stb r21,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r21.u8);
	// stb r10,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r10.u8);
	// stb r11,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r11.u8);
	// stb r8,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r8.u8);
	// stb r11,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r11.u8);
	// stb r4,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r4.u8);
	// stb r10,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r10.u8);
	// stb r29,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r29.u8);
	// stb r9,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r9.u8);
	// stb r30,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r30.u8);
	// stb r11,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r11.u8);
	// stb r14,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r14.u8);
	// stb r4,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r4.u8);
	// stb r24,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r24.u8);
	// stb r11,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r11.u8);
	// stb r8,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r8.u8);
	// stb r23,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r23.u8);
	// stb r10,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r10.u8);
	// stb r11,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r11.u8);
	// stb r26,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r26.u8);
	// stb r4,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r4.u8);
	// stb r10,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r10.u8);
	// stb r17,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r17.u8);
	// stb r7,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r7.u8);
	// stb r27,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r27.u8);
	// stb r3,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r3.u8);
	// stb r11,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r11.u8);
	// stb r28,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r28.u8);
	// stb r23,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r23.u8);
	// stb r10,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r10.u8);
	// stb r28,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r28.u8);
	// stb r21,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r21.u8);
	// stb r26,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r26.u8);
	// stb r7,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r7.u8);
	// stb r6,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r6.u8);
	// stb r8,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r8.u8);
	// stb r11,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r11.u8);
	// stb r5,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r5.u8);
	// stb r7,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r7.u8);
	// stb r8,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r8.u8);
	// stb r23,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r23.u8);
	// stb r11,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r11.u8);
	// li r7,80
	ctx.r7.s64 = 80;
	// stb r11,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r11.u8);
	// li r11,65
	ctx.r11.s64 = 65;
	// ld r18,1048(r1)
	ctx.r18.u64 = PPC_LOAD_U64(ctx.r1.u32 + 1048);
	// li r5,964
	ctx.r5.s64 = 964;
	// stb r4,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r4.u8);
	// stb r4,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r4.u8);
	// addi r30,r18,24
	ctx.r30.s64 = ctx.r18.s64 + 24;
	// stb r7,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r7.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r11.u8);
	// li r11,73
	ctx.r11.s64 = 73;
	// stb r9,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r9.u8);
	// stb r8,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r8.u8);
	// stb r6,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r6.u8);
	// stb r10,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r10.u8);
	// stb r11,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r11.u8);
	// li r11,63
	ctx.r11.s64 = 63;
	// stb r31,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r31.u8);
	// stb r10,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r10.u8);
	// stb r19,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r19.u8);
	// stb r31,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r31.u8);
	// stb r11,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r31,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r31.u8);
	// stb r31,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r31.u8);
	// stb r25,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r25.u8);
	// stb r20,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r20.u8);
	// stb r11,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r31.u8);
	// stb r31,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r31.u8);
	// stb r31,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r31.u8);
	// stb r25,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r25.u8);
	// stb r11,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r11.u8);
	// li r11,201
	ctx.r11.s64 = 201;
	// stb r20,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r20.u8);
	// stb r22,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r22.u8);
	// stb r15,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r15.u8);
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// stb r11,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r31,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r31.u8);
	// stb r31,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r31.u8);
	// stb r31,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r31.u8);
	// stb r25,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r25.u8);
	// stb r11,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r11.u8);
	// li r11,147
	ctx.r11.s64 = 147;
	// stb r7,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r7.u8);
	// stb r31,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r31.u8);
	// stb r31,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r31.u8);
	// stb r31,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r31.u8);
	// stb r11,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r25,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r25.u8);
	// stb r20,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r20.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r11,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r25,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r25.u8);
	// stb r31,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r31.u8);
	// stb r31,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r31.u8);
	// stb r31,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r31.u8);
	// stb r11,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r11.u8);
	// stb r11,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r31.u8);
	// stb r31,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r31.u8);
	// stb r31,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r31.u8);
	// stb r31,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r31.u8);
	// stb r11,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r11.u8);
	// li r11,150
	ctx.r11.s64 = 150;
	// stb r28,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r28.u8);
	// stb r11,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r11.u8);
	// stb r11,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r11.u8);
	// li r11,134
	ctx.r11.s64 = 134;
	// stb r31,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r31.u8);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r31,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r31.u8);
	// stb r31,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r31.u8);
	// stb r11,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249DB34;
	sub_82B06418(ctx, base);
	// mr r3,r18
	ctx.r3.u64 = ctx.r18.u64;
	// stw r30,20(r18)
	PPC_STORE_U32(ctx.r18.u32 + 20, ctx.r30.u32);
	// addi r1,r1,1216
	ctx.r1.s64 = ctx.r1.s64 + 1216;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249DB48"))) PPC_WEAK_FUNC(sub_8249DB48);
PPC_FUNC_IMPL(__imp__sub_8249DB48) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249DB50;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27988
	ctx.r4.s64 = ctx.r10.s64 + 27988;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249DB8C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,157
	ctx.r11.s64 = 157;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249DC68;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249DC78"))) PPC_WEAK_FUNC(sub_8249DC78);
PPC_FUNC_IMPL(__imp__sub_8249DC78) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249DC80;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27972
	ctx.r4.s64 = ctx.r10.s64 + 27972;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249DCBC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,158
	ctx.r11.s64 = 158;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,152
	ctx.r9.s64 = 152;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249DD9C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249DDB0"))) PPC_WEAK_FUNC(sub_8249DDB0);
PPC_FUNC_IMPL(__imp__sub_8249DDB0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249DDB8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28152
	ctx.r4.s64 = ctx.r10.s64 + 28152;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249DDF4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,86
	ctx.r11.s64 = 86;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,127
	ctx.r11.s64 = 127;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249DEE4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249DEF8"))) PPC_WEAK_FUNC(sub_8249DEF8);
PPC_FUNC_IMPL(__imp__sub_8249DEF8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249DF00;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28164
	ctx.r4.s64 = ctx.r10.s64 + 28164;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249DF3C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,160
	ctx.r11.s64 = 160;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,154
	ctx.r9.s64 = 154;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,121
	ctx.r11.s64 = 121;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249E038;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249E048"))) PPC_WEAK_FUNC(sub_8249E048);
PPC_FUNC_IMPL(__imp__sub_8249E048) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e44
	ctx.lr = 0x8249E050;
	__savegprlr_19(ctx, base);
	// stwu r1,-416(r1)
	ea = -416 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,218
	ctx.r9.s64 = 218;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28172
	ctx.r4.s64 = ctx.r10.s64 + 28172;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249E08C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r7,232
	ctx.r7.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r19,77
	ctx.r19.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r20,244
	ctx.r20.s64 = 244;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r3,155
	ctx.r3.s64 = 155;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,161
	ctx.r11.s64 = 161;
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r24,154
	ctx.r24.s64 = 154;
	// stb r19,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r19.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r25,46
	ctx.r25.s64 = 46;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,92
	ctx.r11.s64 = 92;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r20,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r20.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,13
	ctx.r11.s64 = 13;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,167
	ctx.r11.s64 = 167;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r7,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r7.u8);
	// stb r3,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r3.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,123
	ctx.r11.s64 = 123;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,164
	ctx.r11.s64 = 164;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r7,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r7.u8);
	// stb r24,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r24.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r5,87
	ctx.r5.s64 = 87;
	// stb r25,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r25.u8);
	// li r9,226
	ctx.r9.s64 = 226;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// li r11,86
	ctx.r11.s64 = 86;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r28,24
	ctx.r28.s64 = 24;
	// stb r10,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r10.u8);
	// li r22,7
	ctx.r22.s64 = 7;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r5,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r5.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// li r9,150
	ctx.r9.s64 = 150;
	// stb r5,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r5.u8);
	// li r5,6
	ctx.r5.s64 = 6;
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r11,127
	ctx.r11.s64 = 127;
	// stb r28,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r28.u8);
	// li r28,16
	ctx.r28.s64 = 16;
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r22,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r22.u8);
	// stb r9,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r9.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// stb r5,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r5.u8);
	// li r5,45
	ctx.r5.s64 = 45;
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r28,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r28.u8);
	// li r26,247
	ctx.r26.s64 = 247;
	// li r27,68
	ctx.r27.s64 = 68;
	// stb r22,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r22.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// li r9,130
	ctx.r9.s64 = 130;
	// stb r5,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r5.u8);
	// li r5,41
	ctx.r5.s64 = 41;
	// li r21,5
	ctx.r21.s64 = 5;
	// stb r6,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r6.u8);
	// li r29,114
	ctx.r29.s64 = 114;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r4,42
	ctx.r4.s64 = 42;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// stb r9,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r9.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r5,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r5.u8);
	// li r23,31
	ctx.r23.s64 = 31;
	// li r28,11
	ctx.r28.s64 = 11;
	// stb r26,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r26.u8);
	// li r5,101
	ctx.r5.s64 = 101;
	// stb r21,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r21.u8);
	// stb r8,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r8.u8);
	// li r22,119
	ctx.r22.s64 = 119;
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r26,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r26.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r29,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r29.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r27,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r27.u8);
	// stb r4,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r4.u8);
	// stb r9,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r9.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r6,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r6.u8);
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r27,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r27.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r8,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r8.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r23,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r23.u8);
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r8,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r8.u8);
	// stb r28,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r28.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r5,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r5.u8);
	// stb r23,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r23.u8);
	// li r23,47
	ctx.r23.s64 = 47;
	// stb r4,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r4.u8);
	// stb r4,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r4.u8);
	// li r4,116
	ctx.r4.s64 = 116;
	// stb r22,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r22.u8);
	// li r22,18
	ctx.r22.s64 = 18;
	// stb r24,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r24.u8);
	// stb r23,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r23.u8);
	// li r23,28
	ctx.r23.s64 = 28;
	// stb r24,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r24.u8);
	// li r24,23
	ctx.r24.s64 = 23;
	// stb r4,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r4.u8);
	// li r4,105
	ctx.r4.s64 = 105;
	// stb r5,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r5.u8);
	// stb r5,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r5.u8);
	// li r5,100
	ctx.r5.s64 = 100;
	// stb r23,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r23.u8);
	// li r23,250
	ctx.r23.s64 = 250;
	// stb r24,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r24.u8);
	// li r24,27
	ctx.r24.s64 = 27;
	// stb r4,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r4.u8);
	// li r4,103
	ctx.r4.s64 = 103;
	// stb r22,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r22.u8);
	// li r22,191
	ctx.r22.s64 = 191;
	// stb r6,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r6.u8);
	// stb r23,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r23.u8);
	// li r23,177
	ctx.r23.s64 = 177;
	// stb r29,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r29.u8);
	// stb r4,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r4.u8);
	// stb r4,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r29,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r23,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r23.u8);
	// li r23,12
	ctx.r23.s64 = 12;
	// stb r5,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r5.u8);
	// li r5,218
	ctx.r5.s64 = 218;
	// stb r6,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r6.u8);
	// stb r6,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r6.u8);
	// li r6,97
	ctx.r6.s64 = 97;
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r7,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r7.u8);
	// stb r9,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r9.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r7,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r7.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r8,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r8.u8);
	// stb r24,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r24.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r22,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r22.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r9,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r9.u8);
	// stb r11,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r11.u8);
	// stb r11,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r11.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r7,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r7.u8);
	// stb r3,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r3.u8);
	// stb r9,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r9.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r3,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r3.u8);
	// stb r25,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r25.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r19,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r19.u8);
	// stb r23,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r23.u8);
	// stb r25,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r25.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// li r11,189
	ctx.r11.s64 = 189;
	// stb r6,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r6.u8);
	// li r6,26
	ctx.r6.s64 = 26;
	// stb r3,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r11,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r11.u8);
	// li r11,85
	ctx.r11.s64 = 85;
	// stb r6,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r6.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r7,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r7.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r11,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r11.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// stb r21,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r21.u8);
	// stb r8,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r8.u8);
	// stb r10,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r10.u8);
	// stb r26,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r26.u8);
	// stb r11,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r24,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r24.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r27,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r27.u8);
	// stb r11,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r11,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r11.u8);
	// stb r11,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r9,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r9.u8);
	// stb r8,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r8.u8);
	// stb r28,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r28.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r11,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r11.u8);
	// stb r20,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r20.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249E50C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,416
	ctx.r1.s64 = ctx.r1.s64 + 416;
	// b 0x82e28e94
	__restgprlr_19(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249E520"))) PPC_WEAK_FUNC(sub_8249E520);
PPC_FUNC_IMPL(__imp__sub_8249E520) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249E528;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28200
	ctx.r4.s64 = ctx.r10.s64 + 28200;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249E564;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,162
	ctx.r11.s64 = 162;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249E640;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249E650"))) PPC_WEAK_FUNC(sub_8249E650);
PPC_FUNC_IMPL(__imp__sub_8249E650) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249E658;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28016
	ctx.r4.s64 = ctx.r10.s64 + 28016;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249E694;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,157
	ctx.r9.s64 = 157;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,163
	ctx.r11.s64 = 163;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249E778;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249E788"))) PPC_WEAK_FUNC(sub_8249E788);
PPC_FUNC_IMPL(__imp__sub_8249E788) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249E790;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28220
	ctx.r4.s64 = ctx.r10.s64 + 28220;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249E7CC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,164
	ctx.r11.s64 = 164;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,158
	ctx.r9.s64 = 158;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249E8AC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249E8C0"))) PPC_WEAK_FUNC(sub_8249E8C0);
PPC_FUNC_IMPL(__imp__sub_8249E8C0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249E8C8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28236
	ctx.r4.s64 = ctx.r10.s64 + 28236;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249E904;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,159
	ctx.r9.s64 = 159;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249EA00;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249EA10"))) PPC_WEAK_FUNC(sub_8249EA10);
PPC_FUNC_IMPL(__imp__sub_8249EA10) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249EA18;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28248
	ctx.r4.s64 = ctx.r10.s64 + 28248;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249EA54;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,93
	ctx.r9.s64 = 93;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,166
	ctx.r11.s64 = 166;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,45
	ctx.r9.s64 = 45;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249EB34;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249EB48"))) PPC_WEAK_FUNC(sub_8249EB48);
PPC_FUNC_IMPL(__imp__sub_8249EB48) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249EB50;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28256
	ctx.r4.s64 = ctx.r10.s64 + 28256;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249EB8C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,167
	ctx.r11.s64 = 167;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,161
	ctx.r9.s64 = 161;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249EC6C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249EC80"))) PPC_WEAK_FUNC(sub_8249EC80);
PPC_FUNC_IMPL(__imp__sub_8249EC80) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249EC88;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28264
	ctx.r4.s64 = ctx.r10.s64 + 28264;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249ECC4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,168
	ctx.r11.s64 = 168;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,162
	ctx.r9.s64 = 162;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249EDA4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249EDB8"))) PPC_WEAK_FUNC(sub_8249EDB8);
PPC_FUNC_IMPL(__imp__sub_8249EDB8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249EDC0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32252
	ctx.r10.s64 = -2113667072;
	// addi r4,r10,30536
	ctx.r4.s64 = ctx.r10.s64 + 30536;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249EDFC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,93
	ctx.r9.s64 = 93;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,169
	ctx.r11.s64 = 169;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,49
	ctx.r9.s64 = 49;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,126
	ctx.r11.s64 = 126;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249EEF4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249EF08"))) PPC_WEAK_FUNC(sub_8249EF08);
PPC_FUNC_IMPL(__imp__sub_8249EF08) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249EF10;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28276
	ctx.r4.s64 = ctx.r10.s64 + 28276;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249EF4C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,170
	ctx.r11.s64 = 170;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F040;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F050"))) PPC_WEAK_FUNC(sub_8249F050);
PPC_FUNC_IMPL(__imp__sub_8249F050) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F058;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28296
	ctx.r4.s64 = ctx.r10.s64 + 28296;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F094;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,171
	ctx.r11.s64 = 171;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,165
	ctx.r9.s64 = 165;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,126
	ctx.r11.s64 = 126;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F18C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F1A0"))) PPC_WEAK_FUNC(sub_8249F1A0);
PPC_FUNC_IMPL(__imp__sub_8249F1A0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F1A8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28312
	ctx.r4.s64 = ctx.r10.s64 + 28312;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F1E4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,93
	ctx.r9.s64 = 93;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,172
	ctx.r11.s64 = 172;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F2E0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F2F0"))) PPC_WEAK_FUNC(sub_8249F2F0);
PPC_FUNC_IMPL(__imp__sub_8249F2F0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F2F8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28276
	ctx.r4.s64 = ctx.r10.s64 + 28276;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F334;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,173
	ctx.r11.s64 = 173;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F428;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F438"))) PPC_WEAK_FUNC(sub_8249F438);
PPC_FUNC_IMPL(__imp__sub_8249F438) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F440;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28296
	ctx.r4.s64 = ctx.r10.s64 + 28296;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F47C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,174
	ctx.r11.s64 = 174;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,168
	ctx.r9.s64 = 168;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,126
	ctx.r11.s64 = 126;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F574;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F588"))) PPC_WEAK_FUNC(sub_8249F588);
PPC_FUNC_IMPL(__imp__sub_8249F588) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F590;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28200
	ctx.r4.s64 = ctx.r10.s64 + 28200;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F5CC;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,169
	ctx.r9.s64 = 169;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,175
	ctx.r11.s64 = 175;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F6B0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F6C0"))) PPC_WEAK_FUNC(sub_8249F6C0);
PPC_FUNC_IMPL(__imp__sub_8249F6C0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F6C8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28016
	ctx.r4.s64 = ctx.r10.s64 + 28016;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F704;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,170
	ctx.r9.s64 = 170;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,176
	ctx.r11.s64 = 176;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F7E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F7F8"))) PPC_WEAK_FUNC(sub_8249F7F8);
PPC_FUNC_IMPL(__imp__sub_8249F7F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F800;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28220
	ctx.r4.s64 = ctx.r10.s64 + 28220;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F83C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,177
	ctx.r11.s64 = 177;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,171
	ctx.r9.s64 = 171;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249F91C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249F930"))) PPC_WEAK_FUNC(sub_8249F930);
PPC_FUNC_IMPL(__imp__sub_8249F930) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249F938;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28248
	ctx.r4.s64 = ctx.r10.s64 + 28248;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249F974;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,178
	ctx.r11.s64 = 178;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,172
	ctx.r9.s64 = 172;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249FA54;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249FA68"))) PPC_WEAK_FUNC(sub_8249FA68);
PPC_FUNC_IMPL(__imp__sub_8249FA68) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249FA70;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28256
	ctx.r4.s64 = ctx.r10.s64 + 28256;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249FAAC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,179
	ctx.r11.s64 = 179;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,173
	ctx.r9.s64 = 173;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249FB8C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249FBA0"))) PPC_WEAK_FUNC(sub_8249FBA0);
PPC_FUNC_IMPL(__imp__sub_8249FBA0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249FBA8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28264
	ctx.r4.s64 = ctx.r10.s64 + 28264;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249FBE4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,180
	ctx.r11.s64 = 180;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,174
	ctx.r9.s64 = 174;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249FCC4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249FCD8"))) PPC_WEAK_FUNC(sub_8249FCD8);
PPC_FUNC_IMPL(__imp__sub_8249FCD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249FCE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28312
	ctx.r4.s64 = ctx.r10.s64 + 28312;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249FD1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,93
	ctx.r9.s64 = 93;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,181
	ctx.r11.s64 = 181;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,166
	ctx.r9.s64 = 166;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249FE18;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249FE28"))) PPC_WEAK_FUNC(sub_8249FE28);
PPC_FUNC_IMPL(__imp__sub_8249FE28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249FE30;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28236
	ctx.r4.s64 = ctx.r10.s64 + 28236;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249FE6C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,182
	ctx.r11.s64 = 182;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,176
	ctx.r9.s64 = 176;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x8249FF68;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_8249FF78"))) PPC_WEAK_FUNC(sub_8249FF78);
PPC_FUNC_IMPL(__imp__sub_8249FF78) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x8249FF80;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28320
	ctx.r4.s64 = ctx.r10.s64 + 28320;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x8249FFBC;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,180
	ctx.r9.s64 = 180;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,183
	ctx.r11.s64 = 183;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A00A0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A00B0"))) PPC_WEAK_FUNC(sub_824A00B0);
PPC_FUNC_IMPL(__imp__sub_824A00B0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28332
	ctx.r4.s64 = ctx.r10.s64 + 28332;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A00FC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,196
	ctx.r10.s64 = 196;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,184
	ctx.r11.s64 = 184;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,241
	ctx.r10.s64 = 241;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,3
	ctx.r10.s64 = 3;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,94
	ctx.r11.s64 = 94;
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,190
	ctx.r11.s64 = 190;
	// stb r10,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r10.u8);
	// li r10,83
	ctx.r10.s64 = 83;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,178
	ctx.r11.s64 = 178;
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,149
	ctx.r11.s64 = 149;
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,230
	ctx.r11.s64 = 230;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// bl 0x82b06418
	ctx.lr = 0x824A0254;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A0278"))) PPC_WEAK_FUNC(sub_824A0278);
PPC_FUNC_IMPL(__imp__sub_824A0278) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0280;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28348
	ctx.r4.s64 = ctx.r10.s64 + 28348;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A02BC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,185
	ctx.r11.s64 = 185;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0398;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A03A8"))) PPC_WEAK_FUNC(sub_824A03A8);
PPC_FUNC_IMPL(__imp__sub_824A03A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A03B0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28320
	ctx.r4.s64 = ctx.r10.s64 + 28320;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A03EC;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,183
	ctx.r9.s64 = 183;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,186
	ctx.r11.s64 = 186;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A04D0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A04E0"))) PPC_WEAK_FUNC(sub_824A04E0);
PPC_FUNC_IMPL(__imp__sub_824A04E0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A04E8;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,66
	ctx.r9.s64 = 66;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28360
	ctx.r4.s64 = ctx.r10.s64 + 28360;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0524;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,48
	ctx.r8.s64 = 48;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,181
	ctx.r10.s64 = 181;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,187
	ctx.r11.s64 = 187;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,74
	ctx.r8.s64 = 74;
	// stb r10,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r10.u8);
	// stb r10,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// li r8,180
	ctx.r8.s64 = 180;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// li r10,83
	ctx.r10.s64 = 83;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r8,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r8.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,87
	ctx.r11.s64 = 87;
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// li r8,41
	ctx.r8.s64 = 41;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r8,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r8.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r9,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r9.u8);
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// li r5,66
	ctx.r5.s64 = 66;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// li r11,184
	ctx.r11.s64 = 184;
	// stb r11,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0690;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A06A0"))) PPC_WEAK_FUNC(sub_824A06A0);
PPC_FUNC_IMPL(__imp__sub_824A06A0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A06A8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A06E4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,188
	ctx.r11.s64 = 188;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A07C4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A07D8"))) PPC_WEAK_FUNC(sub_824A07D8);
PPC_FUNC_IMPL(__imp__sub_824A07D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A07E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28380
	ctx.r4.s64 = ctx.r10.s64 + 28380;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A081C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,189
	ctx.r11.s64 = 189;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,24
	ctx.r11.s64 = 24;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A08C4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A08D8"))) PPC_WEAK_FUNC(sub_824A08D8);
PPC_FUNC_IMPL(__imp__sub_824A08D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A08E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28396
	ctx.r4.s64 = ctx.r10.s64 + 28396;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A091C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,190
	ctx.r11.s64 = 190;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,184
	ctx.r11.s64 = 184;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A09C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A09D8"))) PPC_WEAK_FUNC(sub_824A09D8);
PPC_FUNC_IMPL(__imp__sub_824A09D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A09E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28416
	ctx.r4.s64 = ctx.r10.s64 + 28416;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0A1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,191
	ctx.r11.s64 = 191;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,185
	ctx.r11.s64 = 185;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,50
	ctx.r11.s64 = 50;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0AC8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A0AD8"))) PPC_WEAK_FUNC(sub_824A0AD8);
PPC_FUNC_IMPL(__imp__sub_824A0AD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0AE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28432
	ctx.r4.s64 = ctx.r10.s64 + 28432;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0B1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,48
	ctx.r10.s64 = 48;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,192
	ctx.r11.s64 = 192;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r10,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r10.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,186
	ctx.r11.s64 = 186;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0BC4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A0BD8"))) PPC_WEAK_FUNC(sub_824A0BD8);
PPC_FUNC_IMPL(__imp__sub_824A0BD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0BE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28452
	ctx.r4.s64 = ctx.r10.s64 + 28452;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0C1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,56
	ctx.r10.s64 = 56;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,193
	ctx.r11.s64 = 193;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// stb r10,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r10.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0CC4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A0CD8"))) PPC_WEAK_FUNC(sub_824A0CD8);
PPC_FUNC_IMPL(__imp__sub_824A0CD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0CE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28476
	ctx.r4.s64 = ctx.r10.s64 + 28476;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0D1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,194
	ctx.r11.s64 = 194;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,188
	ctx.r11.s64 = 188;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,56
	ctx.r11.s64 = 56;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,52
	ctx.r11.s64 = 52;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0DC8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A0DD8"))) PPC_WEAK_FUNC(sub_824A0DD8);
PPC_FUNC_IMPL(__imp__sub_824A0DD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0DE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28500
	ctx.r4.s64 = ctx.r10.s64 + 28500;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0E1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,195
	ctx.r11.s64 = 195;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,189
	ctx.r11.s64 = 189;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,56
	ctx.r11.s64 = 56;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,53
	ctx.r11.s64 = 53;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0EC8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A0ED8"))) PPC_WEAK_FUNC(sub_824A0ED8);
PPC_FUNC_IMPL(__imp__sub_824A0ED8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0EE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28524
	ctx.r4.s64 = ctx.r10.s64 + 28524;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A0F1C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,196
	ctx.r11.s64 = 196;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,190
	ctx.r11.s64 = 190;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,56
	ctx.r11.s64 = 56;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A0FC8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A0FD8"))) PPC_WEAK_FUNC(sub_824A0FD8);
PPC_FUNC_IMPL(__imp__sub_824A0FD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A0FE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28548
	ctx.r4.s64 = ctx.r10.s64 + 28548;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A101C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,197
	ctx.r11.s64 = 197;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,191
	ctx.r11.s64 = 191;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,57
	ctx.r11.s64 = 57;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A10C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A10D8"))) PPC_WEAK_FUNC(sub_824A10D8);
PPC_FUNC_IMPL(__imp__sub_824A10D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A10E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28572
	ctx.r4.s64 = ctx.r10.s64 + 28572;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A111C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,198
	ctx.r11.s64 = 198;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,192
	ctx.r11.s64 = 192;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,57
	ctx.r11.s64 = 57;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,55
	ctx.r11.s64 = 55;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A11C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A11D8"))) PPC_WEAK_FUNC(sub_824A11D8);
PPC_FUNC_IMPL(__imp__sub_824A11D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A11E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28600
	ctx.r4.s64 = ctx.r10.s64 + 28600;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A121C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,193
	ctx.r11.s64 = 193;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,57
	ctx.r11.s64 = 57;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,56
	ctx.r11.s64 = 56;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A12C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A12D8"))) PPC_WEAK_FUNC(sub_824A12D8);
PPC_FUNC_IMPL(__imp__sub_824A12D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A12E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28624
	ctx.r4.s64 = ctx.r10.s64 + 28624;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A131C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,200
	ctx.r11.s64 = 200;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,194
	ctx.r11.s64 = 194;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,57
	ctx.r11.s64 = 57;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A13C4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A13D8"))) PPC_WEAK_FUNC(sub_824A13D8);
PPC_FUNC_IMPL(__imp__sub_824A13D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A13E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-144(r1)
	ea = -144 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,28
	ctx.r9.s64 = 28;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28644
	ctx.r4.s64 = ctx.r10.s64 + 28644;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A141C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,201
	ctx.r11.s64 = 201;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,195
	ctx.r11.s64 = 195;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,52
	ctx.r11.s64 = 52;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A14C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,144
	ctx.r1.s64 = ctx.r1.s64 + 144;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A14D8"))) PPC_WEAK_FUNC(sub_824A14D8);
PPC_FUNC_IMPL(__imp__sub_824A14D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A14E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,35
	ctx.r9.s64 = 35;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28668
	ctx.r4.s64 = ctx.r10.s64 + 28668;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A151C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r5,35
	ctx.r5.s64 = 35;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,202
	ctx.r11.s64 = 202;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// stb r10,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r10.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,76
	ctx.r11.s64 = 76;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// stb r11,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r11.u8);
	// stb r11,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r11.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r11,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r11.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A15E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A15F8"))) PPC_WEAK_FUNC(sub_824A15F8);
PPC_FUNC_IMPL(__imp__sub_824A15F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1600;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,35
	ctx.r9.s64 = 35;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28688
	ctx.r4.s64 = ctx.r10.s64 + 28688;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A163C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,120
	ctx.r9.s64 = 120;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,35
	ctx.r5.s64 = 35;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,203
	ctx.r11.s64 = 203;
	// stb r9,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r9.u8);
	// li r9,51
	ctx.r9.s64 = 51;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,70
	ctx.r9.s64 = 70;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,197
	ctx.r11.s64 = 197;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// stb r11,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r11.u8);
	// stb r11,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r11.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1708;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1718"))) PPC_WEAK_FUNC(sub_824A1718);
PPC_FUNC_IMPL(__imp__sub_824A1718) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1720;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28708
	ctx.r4.s64 = ctx.r10.s64 + 28708;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A175C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,69
	ctx.r9.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,77
	ctx.r10.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,204
	ctx.r11.s64 = 204;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r9.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,128
	ctx.r11.s64 = 128;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1838;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1848"))) PPC_WEAK_FUNC(sub_824A1848);
PPC_FUNC_IMPL(__imp__sub_824A1848) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1850;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28732
	ctx.r4.s64 = ctx.r10.s64 + 28732;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A188C;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,199
	ctx.r9.s64 = 199;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,205
	ctx.r11.s64 = 205;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1970;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1980"))) PPC_WEAK_FUNC(sub_824A1980);
PPC_FUNC_IMPL(__imp__sub_824A1980) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1988;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-28920
	ctx.r4.s64 = ctx.r10.s64 + -28920;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A19C4;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,200
	ctx.r9.s64 = 200;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,206
	ctx.r11.s64 = 206;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1AA8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1AB8"))) PPC_WEAK_FUNC(sub_824A1AB8);
PPC_FUNC_IMPL(__imp__sub_824A1AB8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1AC0;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,76
	ctx.r9.s64 = 76;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28748
	ctx.r4.s64 = ctx.r10.s64 + 28748;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A1AFC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,201
	ctx.r9.s64 = 201;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,207
	ctx.r11.s64 = 207;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,239
	ctx.r10.s64 = 239;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,60
	ctx.r10.s64 = 60;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,79
	ctx.r10.s64 = 79;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,17
	ctx.r10.s64 = 17;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,92
	ctx.r11.s64 = 92;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,41
	ctx.r10.s64 = 41;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// li r9,200
	ctx.r9.s64 = 200;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r5,76
	ctx.r5.s64 = 76;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r9,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r9.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// li r11,65
	ctx.r11.s64 = 65;
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1C98;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1CA8"))) PPC_WEAK_FUNC(sub_824A1CA8);
PPC_FUNC_IMPL(__imp__sub_824A1CA8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1CB0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28792
	ctx.r4.s64 = ctx.r10.s64 + 28792;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A1CEC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,112
	ctx.r9.s64 = 112;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,211
	ctx.r9.s64 = 211;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1DCC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1DE0"))) PPC_WEAK_FUNC(sub_824A1DE0);
PPC_FUNC_IMPL(__imp__sub_824A1DE0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1DE8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A1E24;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,209
	ctx.r11.s64 = 209;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A1F04;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A1F18"))) PPC_WEAK_FUNC(sub_824A1F18);
PPC_FUNC_IMPL(__imp__sub_824A1F18) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A1F20;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28820
	ctx.r4.s64 = ctx.r10.s64 + 28820;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A1F5C;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,204
	ctx.r9.s64 = 204;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,210
	ctx.r11.s64 = 210;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2040;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2050"))) PPC_WEAK_FUNC(sub_824A2050);
PPC_FUNC_IMPL(__imp__sub_824A2050) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2058;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,66
	ctx.r9.s64 = 66;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28836
	ctx.r4.s64 = ctx.r10.s64 + 28836;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2094;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r6,144
	ctx.r6.s64 = 144;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,232
	ctx.r8.s64 = 232;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,205
	ctx.r9.s64 = 205;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r7,99
	ctx.r7.s64 = 99;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,211
	ctx.r11.s64 = 211;
	// stb r6,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r6.u8);
	// li r6,7
	ctx.r6.s64 = 7;
	// li r10,2
	ctx.r10.s64 = 2;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r6,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r6.u8);
	// li r6,41
	ctx.r6.s64 = 41;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r7,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r7.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,113
	ctx.r11.s64 = 113;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,18
	ctx.r11.s64 = 18;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r8,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r8.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r6,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r6.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r8,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r8.u8);
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r5,66
	ctx.r5.s64 = 66;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r10,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r10.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r7,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r7.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,248
	ctx.r11.s64 = 248;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A21FC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2210"))) PPC_WEAK_FUNC(sub_824A2210);
PPC_FUNC_IMPL(__imp__sub_824A2210) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2218;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28864
	ctx.r4.s64 = ctx.r10.s64 + 28864;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2254;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,210
	ctx.r9.s64 = 210;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,212
	ctx.r11.s64 = 212;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2338;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2348"))) PPC_WEAK_FUNC(sub_824A2348);
PPC_FUNC_IMPL(__imp__sub_824A2348) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2350;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28820
	ctx.r4.s64 = ctx.r10.s64 + 28820;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A238C;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,207
	ctx.r9.s64 = 207;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2470;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2480"))) PPC_WEAK_FUNC(sub_824A2480);
PPC_FUNC_IMPL(__imp__sub_824A2480) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2488;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,71
	ctx.r9.s64 = 71;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28880
	ctx.r4.s64 = ctx.r10.s64 + 28880;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A24C4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,18
	ctx.r10.s64 = 18;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,208
	ctx.r8.s64 = 208;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r7,44
	ctx.r7.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,214
	ctx.r11.s64 = 214;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,55
	ctx.r10.s64 = 55;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,12
	ctx.r10.s64 = 12;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,41
	ctx.r10.s64 = 41;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,113
	ctx.r11.s64 = 113;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,102
	ctx.r11.s64 = 102;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r9,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r9.u8);
	// stb r7,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r7.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// stb r8,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r8.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,207
	ctx.r11.s64 = 207;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r5,71
	ctx.r5.s64 = 71;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// li r11,249
	ctx.r11.s64 = 249;
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2648;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2658"))) PPC_WEAK_FUNC(sub_824A2658);
PPC_FUNC_IMPL(__imp__sub_824A2658) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2660;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A269C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,215
	ctx.r11.s64 = 215;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A277C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2790"))) PPC_WEAK_FUNC(sub_824A2790);
PPC_FUNC_IMPL(__imp__sub_824A2790) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2798;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28912
	ctx.r4.s64 = ctx.r10.s64 + 28912;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A27D4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,216
	ctx.r11.s64 = 216;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A28B0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A28C0"))) PPC_WEAK_FUNC(sub_824A28C0);
PPC_FUNC_IMPL(__imp__sub_824A28C0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A28C8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28928
	ctx.r4.s64 = ctx.r10.s64 + 28928;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2904;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,216
	ctx.r9.s64 = 216;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,217
	ctx.r11.s64 = 217;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A29E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A29F8"))) PPC_WEAK_FUNC(sub_824A29F8);
PPC_FUNC_IMPL(__imp__sub_824A29F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824A2A00;
	__savegprlr_26(ctx, base);
	// stwu r1,-288(r1)
	ea = -288 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,139
	ctx.r9.s64 = 139;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28944
	ctx.r4.s64 = ctx.r10.s64 + 28944;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2A3C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,199
	ctx.r10.s64 = 199;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r27,77
	ctx.r27.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r28,75
	ctx.r28.s64 = 75;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r3,212
	ctx.r3.s64 = 212;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,218
	ctx.r11.s64 = 218;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,145
	ctx.r10.s64 = 145;
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r27,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r27.u8);
	// li r6,15
	ctx.r6.s64 = 15;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r9,214
	ctx.r9.s64 = 214;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,80
	ctx.r10.s64 = 80;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r7,7
	ctx.r7.s64 = 7;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,47
	ctx.r11.s64 = 47;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,37
	ctx.r10.s64 = 37;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r28,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r28.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r3,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r3.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r6,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r6.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// stb r6,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r6.u8);
	// li r6,215
	ctx.r6.s64 = 215;
	// li r10,71
	ctx.r10.s64 = 71;
	// stb r28,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r28.u8);
	// li r28,8
	ctx.r28.s64 = 8;
	// stb r9,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r9.u8);
	// li r26,26
	ctx.r26.s64 = 26;
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r3,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r3.u8);
	// stb r6,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r6.u8);
	// li r5,139
	ctx.r5.s64 = 139;
	// stb r6,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r6.u8);
	// li r6,11
	ctx.r6.s64 = 11;
	// stb r10,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r10.u8);
	// li r10,150
	ctx.r10.s64 = 150;
	// stb r28,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r28.u8);
	// li r28,61
	ctx.r28.s64 = 61;
	// stb r26,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r26.u8);
	// li r26,1
	ctx.r26.s64 = 1;
	// stb r9,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r9.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r6,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r6.u8);
	// li r6,28
	ctx.r6.s64 = 28;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// li r10,44
	ctx.r10.s64 = 44;
	// stb r28,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r28.u8);
	// li r28,25
	ctx.r28.s64 = 25;
	// stb r7,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r7.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r9,6
	ctx.r9.s64 = 6;
	// stb r6,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r6.u8);
	// li r6,182
	ctx.r6.s64 = 182;
	// stb r10,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r6,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r6.u8);
	// li r6,39
	ctx.r6.s64 = 39;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// stb r8,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r8.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r6,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r6.u8);
	// li r6,163
	ctx.r6.s64 = 163;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r11,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r11.u8);
	// stb r26,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r26.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r7,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r7.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r28,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r28.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r11,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r11.u8);
	// stb r8,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r8.u8);
	// stb r10,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r10.u8);
	// stb r6,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r6.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// stb r8,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r8.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// li r11,216
	ctx.r11.s64 = 216;
	// stb r9,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r9.u8);
	// li r9,40
	ctx.r9.s64 = 40;
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r7,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r7.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r9,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r9.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r11,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r9,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r9.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r10,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r10.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// stb r27,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r27.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2D14;
	sub_82B06418(ctx, base);
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// addi r1,r1,288
	ctx.r1.s64 = ctx.r1.s64 + 288;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2D28"))) PPC_WEAK_FUNC(sub_824A2D28);
PPC_FUNC_IMPL(__imp__sub_824A2D28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2D30;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32229
	ctx.r10.s64 = -2112159744;
	// addi r4,r10,-27392
	ctx.r4.s64 = ctx.r10.s64 + -27392;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2D6C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,219
	ctx.r11.s64 = 219;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2E44;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2E58"))) PPC_WEAK_FUNC(sub_824A2E58);
PPC_FUNC_IMPL(__imp__sub_824A2E58) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2E60;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28960
	ctx.r4.s64 = ctx.r10.s64 + 28960;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2E9C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,220
	ctx.r11.s64 = 220;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,214
	ctx.r9.s64 = 214;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A2F94;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A2FA8"))) PPC_WEAK_FUNC(sub_824A2FA8);
PPC_FUNC_IMPL(__imp__sub_824A2FA8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A2FB0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A2FEC;
	sub_822E0818(ctx, base);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,215
	ctx.r9.s64 = 215;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,221
	ctx.r11.s64 = 221;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A30D4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A30E8"))) PPC_WEAK_FUNC(sub_824A30E8);
PPC_FUNC_IMPL(__imp__sub_824A30E8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A30F0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28980
	ctx.r4.s64 = ctx.r10.s64 + 28980;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A312C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,75
	ctx.r9.s64 = 75;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,222
	ctx.r11.s64 = 222;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,85
	ctx.r9.s64 = 85;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,224
	ctx.r11.s64 = 224;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A3228;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A3238"))) PPC_WEAK_FUNC(sub_824A3238);
PPC_FUNC_IMPL(__imp__sub_824A3238) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A3240;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32229
	ctx.r10.s64 = -2112159744;
	// addi r4,r10,-27416
	ctx.r4.s64 = ctx.r10.s64 + -27416;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A327C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,223
	ctx.r11.s64 = 223;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,221
	ctx.r9.s64 = 221;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A335C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A3370"))) PPC_WEAK_FUNC(sub_824A3370);
PPC_FUNC_IMPL(__imp__sub_824A3370) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A3378;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29000
	ctx.r4.s64 = ctx.r10.s64 + 29000;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A33B4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,224
	ctx.r11.s64 = 224;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,218
	ctx.r9.s64 = 218;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,192
	ctx.r11.s64 = 192;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A34AC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A34C0"))) PPC_WEAK_FUNC(sub_824A34C0);
PPC_FUNC_IMPL(__imp__sub_824A34C0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e54
	ctx.lr = 0x824A34C8;
	__savegprlr_23(ctx, base);
	// stwu r1,-352(r1)
	ea = -352 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,186
	ctx.r9.s64 = 186;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29008
	ctx.r4.s64 = ctx.r10.s64 + 29008;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A3504;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,81
	ctx.r8.s64 = 81;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r4,77
	ctx.r4.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,75
	ctx.r10.s64 = 75;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r6,219
	ctx.r6.s64 = 219;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,225
	ctx.r11.s64 = 225;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,41
	ctx.r8.s64 = 41;
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r4,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r4.u8);
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r7,218
	ctx.r7.s64 = 218;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// li r8,78
	ctx.r8.s64 = 78;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,230
	ctx.r11.s64 = 230;
	// stb r8,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r8.u8);
	// li r8,127
	ctx.r8.s64 = 127;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r10.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r6,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r6.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r5,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r5.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r7,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r7.u8);
	// stb r8,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r8.u8);
	// li r8,124
	ctx.r8.s64 = 124;
	// stb r4,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r4.u8);
	// li r25,54
	ctx.r25.s64 = 54;
	// stb r4,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r4.u8);
	// li r29,5
	ctx.r29.s64 = 5;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r26,25
	ctx.r26.s64 = 25;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r28,165
	ctx.r28.s64 = 165;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r8,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r8.u8);
	// li r8,150
	ctx.r8.s64 = 150;
	// stb r25,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r25.u8);
	// li r27,7
	ctx.r27.s64 = 7;
	// stb r29,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r29.u8);
	// li r23,22
	ctx.r23.s64 = 22;
	// stb r29,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r29.u8);
	// li r3,221
	ctx.r3.s64 = 221;
	// stb r25,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r25.u8);
	// li r24,53
	ctx.r24.s64 = 53;
	// stb r8,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r8.u8);
	// li r8,16
	ctx.r8.s64 = 16;
	// li r25,182
	ctx.r25.s64 = 182;
	// stb r27,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r27.u8);
	// li r29,183
	ctx.r29.s64 = 183;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r4,56
	ctx.r4.s64 = 56;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// stb r26,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r26.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r6,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r6.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r28,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r28.u8);
	// stb r23,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r23.u8);
	// stb r5,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r5.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r11,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r11.u8);
	// stb r3,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r3.u8);
	// stb r8,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r8.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r11,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r11.u8);
	// stb r7,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r7.u8);
	// stb r26,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r26.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r6,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r6.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r9,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r9.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r28,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r28.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// stb r8,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r8.u8);
	// stb r24,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r24.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r10,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r10.u8);
	// stb r25,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r25.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r29,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r29.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r8,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r8.u8);
	// stb r4,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r4.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// li r5,58
	ctx.r5.s64 = 58;
	// stb r11,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r11.u8);
	// li r26,140
	ctx.r26.s64 = 140;
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// stb r11,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r29,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r5,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r5.u8);
	// stb r3,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r3.u8);
	// stb r4,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r5,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r5.u8);
	// li r5,186
	ctx.r5.s64 = 186;
	// stb r3,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r11,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r9,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r9.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r11,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r10,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r10.u8);
	// stb r26,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r26.u8);
	// stb r24,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r24.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r10,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r10.u8);
	// stb r25,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r25.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r10,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r10.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r9,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r9.u8);
	// stb r11,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r8,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r8.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r9,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r9.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r10,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r10.u8);
	// stb r26,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r26.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r6,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r6.u8);
	// stb r28,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r28.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r7,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r7.u8);
	// stb r23,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r23.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r27,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r27.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// stb r27,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r27.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A389C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,352
	ctx.r1.s64 = ctx.r1.s64 + 352;
	// b 0x82e28ea4
	__restgprlr_23(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A38B0"))) PPC_WEAK_FUNC(sub_824A38B0);
PPC_FUNC_IMPL(__imp__sub_824A38B0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A38B8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29032
	ctx.r4.s64 = ctx.r10.s64 + 29032;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A38F4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,226
	ctx.r11.s64 = 226;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,75
	ctx.r11.s64 = 75;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A39E4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A39F8"))) PPC_WEAK_FUNC(sub_824A39F8);
PPC_FUNC_IMPL(__imp__sub_824A39F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29040
	ctx.r4.s64 = ctx.r10.s64 + 29040;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A3A44;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,227
	ctx.r11.s64 = 227;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,198
	ctx.r11.s64 = 198;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,223
	ctx.r11.s64 = 223;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,157
	ctx.r11.s64 = 157;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,175
	ctx.r11.s64 = 175;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A3B9C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A3BC0"))) PPC_WEAK_FUNC(sub_824A3BC0);
PPC_FUNC_IMPL(__imp__sub_824A3BC0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A3BC8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29072
	ctx.r4.s64 = ctx.r10.s64 + 29072;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A3C04;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,228
	ctx.r11.s64 = 228;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A3CFC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A3D10"))) PPC_WEAK_FUNC(sub_824A3D10);
PPC_FUNC_IMPL(__imp__sub_824A3D10) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A3D18;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29088
	ctx.r4.s64 = ctx.r10.s64 + 29088;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A3D54;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,229
	ctx.r11.s64 = 229;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,228
	ctx.r9.s64 = 228;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A3E34;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A3E48"))) PPC_WEAK_FUNC(sub_824A3E48);
PPC_FUNC_IMPL(__imp__sub_824A3E48) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A3E50;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29104
	ctx.r4.s64 = ctx.r10.s64 + 29104;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A3E8C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,230
	ctx.r11.s64 = 230;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,224
	ctx.r9.s64 = 224;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A3F84;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A3F98"))) PPC_WEAK_FUNC(sub_824A3F98);
PPC_FUNC_IMPL(__imp__sub_824A3F98) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A3FA0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28960
	ctx.r4.s64 = ctx.r10.s64 + 28960;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A3FDC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,225
	ctx.r9.s64 = 225;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A40D4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A40E8"))) PPC_WEAK_FUNC(sub_824A40E8);
PPC_FUNC_IMPL(__imp__sub_824A40E8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A40F0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32229
	ctx.r10.s64 = -2112159744;
	// addi r4,r10,-27392
	ctx.r4.s64 = ctx.r10.s64 + -27392;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A412C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A4204;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A4218"))) PPC_WEAK_FUNC(sub_824A4218);
PPC_FUNC_IMPL(__imp__sub_824A4218) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A4220;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29124
	ctx.r4.s64 = ctx.r10.s64 + 29124;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A425C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,227
	ctx.r9.s64 = 227;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A433C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A4350"))) PPC_WEAK_FUNC(sub_824A4350);
PPC_FUNC_IMPL(__imp__sub_824A4350) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A4358;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29136
	ctx.r4.s64 = ctx.r10.s64 + 29136;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A4394;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,234
	ctx.r11.s64 = 234;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A446C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A4480"))) PPC_WEAK_FUNC(sub_824A4480);
PPC_FUNC_IMPL(__imp__sub_824A4480) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A4488;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29152
	ctx.r4.s64 = ctx.r10.s64 + 29152;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A44C4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,235
	ctx.r11.s64 = 235;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,229
	ctx.r9.s64 = 229;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A45A4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A45B8"))) PPC_WEAK_FUNC(sub_824A45B8);
PPC_FUNC_IMPL(__imp__sub_824A45B8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A45C0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29164
	ctx.r4.s64 = ctx.r10.s64 + 29164;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A45FC;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,236
	ctx.r11.s64 = 236;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,230
	ctx.r9.s64 = 230;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A46DC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A46F0"))) PPC_WEAK_FUNC(sub_824A46F0);
PPC_FUNC_IMPL(__imp__sub_824A46F0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A46F8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29188
	ctx.r4.s64 = ctx.r10.s64 + 29188;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A4734;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,232
	ctx.r9.s64 = 232;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,237
	ctx.r11.s64 = 237;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,231
	ctx.r9.s64 = 231;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,247
	ctx.r11.s64 = 247;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A4834;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A4848"))) PPC_WEAK_FUNC(sub_824A4848);
PPC_FUNC_IMPL(__imp__sub_824A4848) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A4850;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28960
	ctx.r4.s64 = ctx.r10.s64 + 28960;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A488C;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,69
	ctx.r9.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,77
	ctx.r10.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,238
	ctx.r11.s64 = 238;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r9.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A4980;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A4990"))) PPC_WEAK_FUNC(sub_824A4990);
PPC_FUNC_IMPL(__imp__sub_824A4990) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e3c
	ctx.lr = 0x824A4998;
	__savegprlr_17(ctx, base);
	// stwu r1,-576(r1)
	ea = -576 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,365
	ctx.r9.s64 = 365;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29204
	ctx.r4.s64 = ctx.r10.s64 + 29204;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A49D4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,128
	ctx.r10.s64 = 128;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r6,233
	ctx.r6.s64 = 233;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r7,5
	ctx.r7.s64 = 5;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r21,119
	ctx.r21.s64 = 119;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,239
	ctx.r11.s64 = 239;
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,174
	ctx.r10.s64 = 174;
	// li r27,229
	ctx.r27.s64 = 229;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r9,50
	ctx.r9.s64 = 50;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r28,230
	ctx.r28.s64 = 230;
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// li r24,37
	ctx.r24.s64 = 37;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r6,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r6.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r7,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r7.u8);
	// stb r21,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r21.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r27,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r27.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// stb r5,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r5.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r28,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r28.u8);
	// stb r24,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r24.u8);
	// li r9,47
	ctx.r9.s64 = 47;
	// stb r10,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r10.u8);
	// li r8,44
	ctx.r8.s64 = 44;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r25,7
	ctx.r25.s64 = 7;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r3,22
	ctx.r3.s64 = 22;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r26,26
	ctx.r26.s64 = 26;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// stb r9,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r9.u8);
	// li r9,150
	ctx.r9.s64 = 150;
	// stb r8,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r8.u8);
	// li r8,25
	ctx.r8.s64 = 25;
	// li r18,2
	ctx.r18.s64 = 2;
	// stb r25,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r25.u8);
	// li r23,85
	ctx.r23.s64 = 85;
	// stb r28,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r28.u8);
	// li r29,121
	ctx.r29.s64 = 121;
	// stb r3,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r3.u8);
	// stb r9,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r9.u8);
	// li r4,98
	ctx.r4.s64 = 98;
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// li r9,54
	ctx.r9.s64 = 54;
	// li r22,16
	ctx.r22.s64 = 16;
	// stb r18,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r18.u8);
	// stb r5,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r5.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r9,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r9.u8);
	// li r9,217
	ctx.r9.s64 = 217;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r27,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r27.u8);
	// stb r24,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r24.u8);
	// stb r25,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r25.u8);
	// stb r10,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r10.u8);
	// stb r24,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r24.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r27,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r27.u8);
	// stb r8,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r8.u8);
	// stb r26,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r26.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r11,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r11.u8);
	// stb r28,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r28.u8);
	// stb r10,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r10.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r23,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r23.u8);
	// stb r29,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r29.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r7,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r7.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r4,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r4.u8);
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r3,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r3.u8);
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r11,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r11.u8);
	// stb r6,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r6.u8);
	// stb r22,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r22.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r11,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r11.u8);
	// stb r27,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r27.u8);
	// stb r8,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r8.u8);
	// stb r26,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r26.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r23,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r23.u8);
	// li r23,185
	ctx.r23.s64 = 185;
	// stb r29,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r29.u8);
	// li r29,253
	ctx.r29.s64 = 253;
	// stb r9,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r9.u8);
	// li r9,46
	ctx.r9.s64 = 46;
	// stb r4,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r4.u8);
	// li r19,247
	ctx.r19.s64 = 247;
	// li r4,231
	ctx.r4.s64 = 231;
	// stb r21,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r21.u8);
	// stb r23,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r23.u8);
	// li r23,248
	ctx.r23.s64 = 248;
	// stb r29,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r29.u8);
	// li r29,209
	ctx.r29.s64 = 209;
	// stb r9,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r9.u8);
	// li r9,255
	ctx.r9.s64 = 255;
	// li r22,27
	ctx.r22.s64 = 27;
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r20,87
	ctx.r20.s64 = 87;
	// stb r28,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r28.u8);
	// stb r23,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r23.u8);
	// li r23,76
	ctx.r23.s64 = 76;
	// stb r29,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r29.u8);
	// li r29,4
	ctx.r29.s64 = 4;
	// stb r10,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r10.u8);
	// li r21,42
	ctx.r21.s64 = 42;
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r23,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r23.u8);
	// li r23,67
	ctx.r23.s64 = 67;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r7,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r7.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r10,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r10.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r5,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r5.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r11,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r11.u8);
	// stb r4,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r4.u8);
	// stb r8,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r8.u8);
	// stb r9,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r9.u8);
	// stb r9,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r9.u8);
	// stb r8,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r8.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// stb r6,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r6.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r7,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r7.u8);
	// stb r29,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r29.u8);
	// stb r10,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r10.u8);
	// stb r9,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r9.u8);
	// stb r9,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r9.u8);
	// stb r19,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r19.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r7,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r7.u8);
	// stb r29,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r29.u8);
	// stb r10,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r10.u8);
	// stb r9,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r9.u8);
	// stb r9,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r9.u8);
	// stb r25,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r25.u8);
	// stb r10,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r10.u8);
	// stb r22,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r22.u8);
	// stb r8,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r8.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// stb r6,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r6.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r7,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r7.u8);
	// stb r29,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r29.u8);
	// stb r10,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r10.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r20,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r20.u8);
	// stb r23,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r23.u8);
	// stb r23,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r23.u8);
	// li r23,21
	ctx.r23.s64 = 21;
	// stb r21,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r21.u8);
	// li r21,79
	ctx.r21.s64 = 79;
	// stb r22,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r22.u8);
	// li r17,166
	ctx.r17.s64 = 166;
	// li r22,8
	ctx.r22.s64 = 8;
	// stb r3,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r3.u8);
	// stb r5,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r5.u8);
	// stb r23,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r23.u8);
	// li r23,43
	ctx.r23.s64 = 43;
	// stb r8,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r8.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r23,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r23.u8);
	// li r23,216
	ctx.r23.s64 = 216;
	// stb r11,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r11.u8);
	// stb r6,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r6.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r7,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r7.u8);
	// stb r29,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r29.u8);
	// stb r10,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r10.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r21,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r21.u8);
	// stb r17,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r17.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r11,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r11.u8);
	// stb r4,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r4.u8);
	// stb r8,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r8.u8);
	// stb r8,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r8.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r11,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r11.u8);
	// stb r6,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r6.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r7,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r7.u8);
	// stb r29,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r29.u8);
	// stb r10,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r10.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r20,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r20.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r23,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r23.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r11,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r11.u8);
	// stb r4,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r4.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r11,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r11.u8);
	// stb r11,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r11.u8);
	// stb r3,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r3.u8);
	// stb r5,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r5.u8);
	// stb r8,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r8.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r11,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r11.u8);
	// stb r6,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r6.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r7,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r7.u8);
	// stb r22,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r22.u8);
	// stb r10,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r10.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r21,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r21.u8);
	// stb r20,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r20.u8);
	// li r20,197
	ctx.r20.s64 = 197;
	// li r23,165
	ctx.r23.s64 = 165;
	// stb r24,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r24.u8);
	// li r17,28
	ctx.r17.s64 = 28;
	// stb r5,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r5.u8);
	// stb r4,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r4.u8);
	// addi r24,r30,24
	ctx.r24.s64 = ctx.r30.s64 + 24;
	// stb r8,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r8.u8);
	// li r5,365
	ctx.r5.s64 = 365;
	// stb r20,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r20.u8);
	// li r20,53
	ctx.r20.s64 = 53;
	// stb r23,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r23.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r20,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r20.u8);
	// li r20,254
	ctx.r20.s64 = 254;
	// stb r11,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r11.u8);
	// stb r6,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r6.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r3,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r3.u8);
	// stb r20,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r20.u8);
	// li r20,206
	ctx.r20.s64 = 206;
	// stb r22,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r22.u8);
	// stb r17,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r17.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r20,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r20.u8);
	// li r20,32
	ctx.r20.s64 = 32;
	// stb r9,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r9.u8);
	// stb r9,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r9.u8);
	// stb r9,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r9.u8);
	// stb r9,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r9.u8);
	// stb r20,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r20.u8);
	// li r20,246
	ctx.r20.s64 = 246;
	// stb r19,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r19.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r20,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r20.u8);
	// li r20,107
	ctx.r20.s64 = 107;
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r11,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r11.u8);
	// stb r11,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r11.u8);
	// stb r3,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r3.u8);
	// stb r26,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r26.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r11,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r11.u8);
	// stb r8,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r8.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r11,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r11.u8);
	// stb r6,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r6.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r7,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r7.u8);
	// stb r10,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r10.u8);
	// stb r9,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r9.u8);
	// stb r9,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r9.u8);
	// stb r20,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r20.u8);
	// stb r8,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r8.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r11,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r11.u8);
	// stb r6,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r6.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r7,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r7.u8);
	// stb r22,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r22.u8);
	// stb r10,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r10.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r21,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r21.u8);
	// stb r23,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r23.u8);
	// stb r23,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r23.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r11,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r11.u8);
	// li r10,6
	ctx.r10.s64 = 6;
	// stb r11,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// li r8,163
	ctx.r8.s64 = 163;
	// stb r3,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r3.u8);
	// stb r3,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r3.u8);
	// mr r3,r24
	ctx.r3.u64 = ctx.r24.u64;
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r11,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r27,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r27.u8);
	// stb r10,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r10.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r26,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r26.u8);
	// stb r11,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r8,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r8.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r11,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r28,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r28.u8);
	// stb r10,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r10.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r25,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r25.u8);
	// stb r29,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r29.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r18,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r18.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r11,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r11.u8);
	// stb r9,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r9.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A50A0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r24,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r24.u32);
	// addi r1,r1,576
	ctx.r1.s64 = ctx.r1.s64 + 576;
	// b 0x82e28e8c
	__restgprlr_17(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A50B0"))) PPC_WEAK_FUNC(sub_824A50B0);
PPC_FUNC_IMPL(__imp__sub_824A50B0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A50B8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29216
	ctx.r4.s64 = ctx.r10.s64 + 29216;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A50F4;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,240
	ctx.r11.s64 = 240;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A51E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A51F8"))) PPC_WEAK_FUNC(sub_824A51F8);
PPC_FUNC_IMPL(__imp__sub_824A51F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29232
	ctx.r4.s64 = ctx.r10.s64 + 29232;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5244;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,241
	ctx.r11.s64 = 241;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,86
	ctx.r11.s64 = 86;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,126
	ctx.r11.s64 = 126;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,235
	ctx.r11.s64 = 235;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,147
	ctx.r11.s64 = 147;
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,46
	ctx.r11.s64 = 46;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,237
	ctx.r11.s64 = 237;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A53A0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A53C0"))) PPC_WEAK_FUNC(sub_824A53C0);
PPC_FUNC_IMPL(__imp__sub_824A53C0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A53C8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29216
	ctx.r4.s64 = ctx.r10.s64 + 29216;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5404;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,242
	ctx.r11.s64 = 242;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A54F8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A5508"))) PPC_WEAK_FUNC(sub_824A5508);
PPC_FUNC_IMPL(__imp__sub_824A5508) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29248
	ctx.r4.s64 = ctx.r10.s64 + 29248;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5554;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,236
	ctx.r10.s64 = 236;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,243
	ctx.r11.s64 = 243;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,237
	ctx.r11.s64 = 237;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,151
	ctx.r11.s64 = 151;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,109
	ctx.r11.s64 = 109;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,238
	ctx.r11.s64 = 238;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A56AC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A56D0"))) PPC_WEAK_FUNC(sub_824A56D0);
PPC_FUNC_IMPL(__imp__sub_824A56D0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A56D8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29216
	ctx.r4.s64 = ctx.r10.s64 + 29216;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5714;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,244
	ctx.r11.s64 = 244;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A5808;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A5818"))) PPC_WEAK_FUNC(sub_824A5818);
PPC_FUNC_IMPL(__imp__sub_824A5818) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29268
	ctx.r4.s64 = ctx.r10.s64 + 29268;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5864;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,238
	ctx.r10.s64 = 238;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,245
	ctx.r11.s64 = 245;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,239
	ctx.r11.s64 = 239;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,170
	ctx.r11.s64 = 170;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,240
	ctx.r11.s64 = 240;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A59BC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A59E0"))) PPC_WEAK_FUNC(sub_824A59E0);
PPC_FUNC_IMPL(__imp__sub_824A59E0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A59E8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29216
	ctx.r4.s64 = ctx.r10.s64 + 29216;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5A24;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,246
	ctx.r11.s64 = 246;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A5B18;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A5B28"))) PPC_WEAK_FUNC(sub_824A5B28);
PPC_FUNC_IMPL(__imp__sub_824A5B28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29284
	ctx.r4.s64 = ctx.r10.s64 + 29284;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5B74;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,240
	ctx.r10.s64 = 240;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,247
	ctx.r11.s64 = 247;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,241
	ctx.r11.s64 = 241;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,235
	ctx.r11.s64 = 235;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,239
	ctx.r11.s64 = 239;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A5CCC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A5CF0"))) PPC_WEAK_FUNC(sub_824A5CF0);
PPC_FUNC_IMPL(__imp__sub_824A5CF0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A5CF8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5D34;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,248
	ctx.r11.s64 = 248;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A5E14;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A5E28"))) PPC_WEAK_FUNC(sub_824A5E28);
PPC_FUNC_IMPL(__imp__sub_824A5E28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A5E30;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,68
	ctx.r9.s64 = 68;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29304
	ctx.r4.s64 = ctx.r10.s64 + 29304;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A5E6C;
	sub_822E0818(ctx, base);
	// li r10,242
	ctx.r10.s64 = 242;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,164
	ctx.r8.s64 = 164;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,243
	ctx.r9.s64 = 243;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,249
	ctx.r11.s64 = 249;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,24
	ctx.r10.s64 = 24;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r8,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r8.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,68
	ctx.r5.s64 = 68;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,217
	ctx.r11.s64 = 217;
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A5FDC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A5FF0"))) PPC_WEAK_FUNC(sub_824A5FF0);
PPC_FUNC_IMPL(__imp__sub_824A5FF0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A5FF8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6034;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A6114;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6128"))) PPC_WEAK_FUNC(sub_824A6128);
PPC_FUNC_IMPL(__imp__sub_824A6128) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6130;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,68
	ctx.r9.s64 = 68;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29324
	ctx.r4.s64 = ctx.r10.s64 + 29324;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A616C;
	sub_822E0818(ctx, base);
	// li r10,244
	ctx.r10.s64 = 244;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,169
	ctx.r8.s64 = 169;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,245
	ctx.r9.s64 = 245;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,251
	ctx.r11.s64 = 251;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,76
	ctx.r10.s64 = 76;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r8,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r8.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,68
	ctx.r5.s64 = 68;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,220
	ctx.r11.s64 = 220;
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A62DC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A62F0"))) PPC_WEAK_FUNC(sub_824A62F0);
PPC_FUNC_IMPL(__imp__sub_824A62F0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A62F8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6334;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,252
	ctx.r9.s64 = 252;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// li r8,5
	ctx.r8.s64 = 5;
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r9,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r9.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// li r8,128
	ctx.r8.s64 = 128;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,224
	ctx.r11.s64 = 224;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r8,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r8.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r9,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r9.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A642C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6440"))) PPC_WEAK_FUNC(sub_824A6440);
PPC_FUNC_IMPL(__imp__sub_824A6440) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6448;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,68
	ctx.r9.s64 = 68;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29340
	ctx.r4.s64 = ctx.r10.s64 + 29340;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6484;
	sub_822E0818(ctx, base);
	// li r10,246
	ctx.r10.s64 = 246;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,174
	ctx.r7.s64 = 174;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,247
	ctx.r9.s64 = 247;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,135
	ctx.r8.s64 = 135;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r7,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r7.u8);
	// li r7,1
	ctx.r7.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r8,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r8.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,136
	ctx.r10.s64 = 136;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r7,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r7.u8);
	// li r7,42
	ctx.r7.s64 = 42;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r7,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r7.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,68
	ctx.r5.s64 = 68;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r8,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r8.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A65F0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6600"))) PPC_WEAK_FUNC(sub_824A6600);
PPC_FUNC_IMPL(__imp__sub_824A6600) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6608;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6644;
	sub_822E0818(ctx, base);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,254
	ctx.r11.s64 = 254;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A6724;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6738"))) PPC_WEAK_FUNC(sub_824A6738);
PPC_FUNC_IMPL(__imp__sub_824A6738) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6740;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,68
	ctx.r9.s64 = 68;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29360
	ctx.r4.s64 = ctx.r10.s64 + 29360;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A677C;
	sub_822E0818(ctx, base);
	// li r10,248
	ctx.r10.s64 = 248;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,179
	ctx.r8.s64 = 179;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,249
	ctx.r9.s64 = 249;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,197
	ctx.r10.s64 = 197;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r8,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r8.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,68
	ctx.r5.s64 = 68;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,131
	ctx.r11.s64 = 131;
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A68EC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6900"))) PPC_WEAK_FUNC(sub_824A6900);
PPC_FUNC_IMPL(__imp__sub_824A6900) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6908;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6944;
	sub_822E0818(ctx, base);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A6A20;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6A30"))) PPC_WEAK_FUNC(sub_824A6A30);
PPC_FUNC_IMPL(__imp__sub_824A6A30) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6A38;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,68
	ctx.r9.s64 = 68;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29384
	ctx.r4.s64 = ctx.r10.s64 + 29384;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6A74;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,250
	ctx.r9.s64 = 250;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r10.u8);
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// li r8,184
	ctx.r8.s64 = 184;
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,251
	ctx.r9.s64 = 251;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,6
	ctx.r8.s64 = 6;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r8,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r8.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r8,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r8.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,68
	ctx.r5.s64 = 68;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,129
	ctx.r11.s64 = 129;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A6BE0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6BF0"))) PPC_WEAK_FUNC(sub_824A6BF0);
PPC_FUNC_IMPL(__imp__sub_824A6BF0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6BF8;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,72
	ctx.r9.s64 = 72;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29416
	ctx.r4.s64 = ctx.r10.s64 + 29416;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6C34;
	sub_822E0818(ctx, base);
	// li r9,252
	ctx.r9.s64 = 252;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,2
	ctx.r10.s64 = 2;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,254
	ctx.r8.s64 = 254;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r10.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// li r9,189
	ctx.r9.s64 = 189;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r9.u8);
	// li r9,9
	ctx.r9.s64 = 9;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// li r9,81
	ctx.r9.s64 = 81;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r9,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r9.u8);
	// li r9,13
	ctx.r9.s64 = 13;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r9.u8);
	// stb r9,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r9.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r7,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r7.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r5,72
	ctx.r5.s64 = 72;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r8,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r8.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r10,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r10.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A6DB4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6DC8"))) PPC_WEAK_FUNC(sub_824A6DC8);
PPC_FUNC_IMPL(__imp__sub_824A6DC8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A6DD0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,22632
	ctx.r4.s64 = ctx.r10.s64 + 22632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6E0C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A6EEC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A6F00"))) PPC_WEAK_FUNC(sub_824A6F00);
PPC_FUNC_IMPL(__imp__sub_824A6F00) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29456
	ctx.r4.s64 = ctx.r10.s64 + 29456;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A6F4C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,208
	ctx.r10.s64 = 208;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,110
	ctx.r10.s64 = 110;
	// stb r9,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r9.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,2
	ctx.r10.s64 = 2;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,104
	ctx.r11.s64 = 104;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,139
	ctx.r11.s64 = 139;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,105
	ctx.r11.s64 = 105;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,29
	ctx.r11.s64 = 29;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,30
	ctx.r11.s64 = 30;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r9,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r9.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,134
	ctx.r11.s64 = 134;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// bl 0x82b06418
	ctx.lr = 0x824A7098;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A70B8"))) PPC_WEAK_FUNC(sub_824A70B8);
PPC_FUNC_IMPL(__imp__sub_824A70B8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A70C0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29484
	ctx.r4.s64 = ctx.r10.s64 + 29484;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A70FC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,100
	ctx.r9.s64 = 100;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,25
	ctx.r9.s64 = 25;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A71DC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A71F0"))) PPC_WEAK_FUNC(sub_824A71F0);
PPC_FUNC_IMPL(__imp__sub_824A71F0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824A71F8;
	__savegprlr_26(ctx, base);
	// stwu r1,-256(r1)
	ea = -256 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,114
	ctx.r9.s64 = 114;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,10212
	ctx.r4.s64 = ctx.r10.s64 + 10212;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A7234;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,143
	ctx.r9.s64 = 143;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,12
	ctx.r10.s64 = 12;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r6,20
	ctx.r6.s64 = 20;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r27,6
	ctx.r27.s64 = 6;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r9,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r9.u8);
	// li r9,55
	ctx.r9.s64 = 55;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r28,22
	ctx.r28.s64 = 22;
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r27,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r27.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// li r9,28
	ctx.r9.s64 = 28;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,103
	ctx.r11.s64 = 103;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r6,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r6.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,52
	ctx.r11.s64 = 52;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r9,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r9.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r6,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r6.u8);
	// stb r28,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r28.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,154
	ctx.r11.s64 = 154;
	// stb r10,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r10.u8);
	// li r3,5
	ctx.r3.s64 = 5;
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// li r8,247
	ctx.r8.s64 = 247;
	// stb r10,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r10.u8);
	// li r9,226
	ctx.r9.s64 = 226;
	// stb r10,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r10.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r3,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r3.u8);
	// li r26,150
	ctx.r26.s64 = 150;
	// stb r3,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r3.u8);
	// li r3,245
	ctx.r3.s64 = 245;
	// stb r8,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r8.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r8,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r8.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r5,114
	ctx.r5.s64 = 114;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r11,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r11.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// stb r11,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r11.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r11,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r11.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r3,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r3.u8);
	// li r3,239
	ctx.r3.s64 = 239;
	// stb r8,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r8.u8);
	// li r8,199
	ctx.r8.s64 = 199;
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// stb r11,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r11.u8);
	// li r11,40
	ctx.r11.s64 = 40;
	// stb r3,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r3.u8);
	// li r3,38
	ctx.r3.s64 = 38;
	// stb r8,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r8.u8);
	// li r8,45
	ctx.r8.s64 = 45;
	// stb r7,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r7.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r9,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r9.u8);
	// stb r26,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r26.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// stb r11,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r3,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r3.u8);
	// stb r28,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r28.u8);
	// stb r6,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r6.u8);
	// stb r7,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r7.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r27,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r27.u8);
	// stb r9,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r9.u8);
	// stb r8,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r8.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// stb r11,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r11.u8);
	// li r11,75
	ctx.r11.s64 = 75;
	// stb r9,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r9.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r11,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r10,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r10.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A749C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,256
	ctx.r1.s64 = ctx.r1.s64 + 256;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A74B0"))) PPC_WEAK_FUNC(sub_824A74B0);
PPC_FUNC_IMPL(__imp__sub_824A74B0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A74B8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29516
	ctx.r4.s64 = ctx.r10.s64 + 29516;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A74F4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,254
	ctx.r11.s64 = 254;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,126
	ctx.r11.s64 = 126;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A75E8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A75F8"))) PPC_WEAK_FUNC(sub_824A75F8);
PPC_FUNC_IMPL(__imp__sub_824A75F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A7600;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29528
	ctx.r4.s64 = ctx.r10.s64 + 29528;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A763C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,197
	ctx.r11.s64 = 197;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A7734;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A7748"))) PPC_WEAK_FUNC(sub_824A7748);
PPC_FUNC_IMPL(__imp__sub_824A7748) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A7750;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29544
	ctx.r4.s64 = ctx.r10.s64 + 29544;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A778C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,9
	ctx.r11.s64 = 9;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,3
	ctx.r9.s64 = 3;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A7888;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A7898"))) PPC_WEAK_FUNC(sub_824A7898);
PPC_FUNC_IMPL(__imp__sub_824A7898) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e4c
	ctx.lr = 0x824A78A0;
	__savegprlr_21(ctx, base);
	// stwu r1,-480(r1)
	ea = -480 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r29,r3
	ctx.r29.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r29,4
	ctx.r3.s64 = ctx.r29.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,302
	ctx.r9.s64 = 302;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29556
	ctx.r4.s64 = ctx.r10.s64 + 29556;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r29)
	PPC_STORE_U32(ctx.r29.u32 + 0, ctx.r11.u32);
	// stw r9,16(r29)
	PPC_STORE_U32(ctx.r29.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A78DC;
	sub_822E0818(ctx, base);
	// li r10,16
	ctx.r10.s64 = 16;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r24,77
	ctx.r24.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r25,45
	ctx.r25.s64 = 45;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,64
	ctx.r10.s64 = 64;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// li r28,15
	ctx.r28.s64 = 15;
	// stb r24,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r24.u8);
	// li r30,3
	ctx.r30.s64 = 3;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,206
	ctx.r10.s64 = 206;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// li r10,107
	ctx.r10.s64 = 107;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,243
	ctx.r10.s64 = 243;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,46
	ctx.r10.s64 = 46;
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r25,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r25.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r28,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r28.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r30,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r30.u8);
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// li r7,197
	ctx.r7.s64 = 197;
	// stb r30,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r30.u8);
	// stb r30,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r30.u8);
	// li r30,27
	ctx.r30.s64 = 27;
	// li r6,247
	ctx.r6.s64 = 247;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// li r3,7
	ctx.r3.s64 = 7;
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// li r7,29
	ctx.r7.s64 = 29;
	// stb r30,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r30.u8);
	// li r30,44
	ctx.r30.s64 = 44;
	// stb r6,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r6.u8);
	// li r4,42
	ctx.r4.s64 = 42;
	// li r5,22
	ctx.r5.s64 = 22;
	// stb r8,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r8.u8);
	// li r22,83
	ctx.r22.s64 = 83;
	// stb r10,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r10.u8);
	// stb r7,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r7.u8);
	// li r7,114
	ctx.r7.s64 = 114;
	// stb r30,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r30.u8);
	// li r23,11
	ctx.r23.s64 = 11;
	// li r6,2
	ctx.r6.s64 = 2;
	// stb r10,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r10.u8);
	// li r30,5
	ctx.r30.s64 = 5;
	// stb r3,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r3.u8);
	// li r27,232
	ctx.r27.s64 = 232;
	// stb r22,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r22.u8);
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// li r26,78
	ctx.r26.s64 = 78;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r4,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r4.u8);
	// stb r5,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r5.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// stb r23,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r23.u8);
	// stb r28,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r28.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r6,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r6.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r7,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r7.u8);
	// stb r9,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r9.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r4,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r4.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r11,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r11.u8);
	// stb r9,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r9.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r30,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r30.u8);
	// stb r8,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r8.u8);
	// stb r8,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r8.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r27,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r27.u8);
	// stb r26,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r26.u8);
	// stb r5,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r5.u8);
	// stb r3,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r3.u8);
	// stb r4,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r4.u8);
	// li r4,24
	ctx.r4.s64 = 24;
	// stb r5,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r5.u8);
	// li r21,130
	ctx.r21.s64 = 130;
	// stb r5,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r5.u8);
	// li r26,240
	ctx.r26.s64 = 240;
	// stb r5,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r5.u8);
	// li r5,182
	ctx.r5.s64 = 182;
	// stb r3,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r3.u8);
	// li r3,248
	ctx.r3.s64 = 248;
	// stb r4,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r4.u8);
	// li r4,19
	ctx.r4.s64 = 19;
	// stb r21,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r21.u8);
	// li r21,119
	ctx.r21.s64 = 119;
	// stb r24,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r24.u8);
	// li r24,35
	ctx.r24.s64 = 35;
	// stb r5,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r5.u8);
	// li r5,6
	ctx.r5.s64 = 6;
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r4,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r4.u8);
	// li r4,151
	ctx.r4.s64 = 151;
	// stb r26,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r26.u8);
	// stb r21,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r21.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r4,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r4.u8);
	// li r4,54
	ctx.r4.s64 = 54;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// stb r6,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r6.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r4,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r4.u8);
	// li r4,175
	ctx.r4.s64 = 175;
	// stb r7,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r7.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r4,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r4.u8);
	// li r4,37
	ctx.r4.s64 = 37;
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// stb r6,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r6.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r30,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r30.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r8,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r8.u8);
	// stb r10,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r10.u8);
	// stb r10,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r10.u8);
	// stb r10,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r10.u8);
	// stb r4,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r4.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r7,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r7.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r11,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r11.u8);
	// stb r9,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r9.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r5,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r5.u8);
	// stb r9,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r9.u8);
	// stb r25,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r25.u8);
	// stb r8,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r8.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r27,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r27.u8);
	// stb r28,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r28.u8);
	// stb r7,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r7.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// stb r6,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r6.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r30,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r30.u8);
	// stb r9,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r9.u8);
	// stb r8,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r8.u8);
	// stb r10,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r10.u8);
	// stb r10,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r10.u8);
	// stb r3,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r3.u8);
	// stb r24,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r24.u8);
	// stb r7,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r7.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// li r4,34
	ctx.r4.s64 = 34;
	// stb r24,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r24.u8);
	// li r25,110
	ctx.r25.s64 = 110;
	// stb r5,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r5.u8);
	// li r24,76
	ctx.r24.s64 = 76;
	// stb r26,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r26.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// addi r26,r29,24
	ctx.r26.s64 = ctx.r29.s64 + 24;
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// li r5,302
	ctx.r5.s64 = 302;
	// stb r4,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r4.u8);
	// li r4,111
	ctx.r4.s64 = 111;
	// stb r11,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r11.u8);
	// stb r6,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r6.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r30,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r30.u8);
	// stb r4,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r9.u8);
	// stb r8,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r8.u8);
	// stb r10,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r10.u8);
	// stb r10,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r10.u8);
	// stb r3,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r3.u8);
	// stb r28,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r28.u8);
	// stb r7,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r7.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r6,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r6.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r30,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r30.u8);
	// stb r9,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r9.u8);
	// stb r8,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r8.u8);
	// stb r10,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r10.u8);
	// stb r10,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r10.u8);
	// stb r3,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r3.u8);
	// stb r25,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r25.u8);
	// stb r7,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r7.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r11,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r11.u8);
	// stb r6,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r6.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r30,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r30.u8);
	// stb r9,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r9.u8);
	// stb r8,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r8.u8);
	// stb r10,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r10.u8);
	// stb r10,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r10.u8);
	// stb r3,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r3.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r28,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r28.u8);
	// stb r7,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r7.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r11,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r11.u8);
	// stb r6,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r6.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r30,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r30.u8);
	// stb r9,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r9.u8);
	// stb r8,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r8.u8);
	// stb r10,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r10.u8);
	// stb r10,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r10.u8);
	// stb r3,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r3.u8);
	// stb r7,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r7.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r11,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r11.u8);
	// stb r9,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r9.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r30,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r30.u8);
	// stb r9,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r9.u8);
	// stb r8,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r8.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r27,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r27.u8);
	// stb r24,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r24.u8);
	// stb r28,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r28.u8);
	// stb r11,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r11.u8);
	// stb r11,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r11.u8);
	// li r11,75
	ctx.r11.s64 = 75;
	// stb r3,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r3.u8);
	// mr r3,r26
	ctx.r3.u64 = ctx.r26.u64;
	// stb r7,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r7.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r11,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r6,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r6.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r30,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r30.u8);
	// stb r11,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r11.u8);
	// li r11,234
	ctx.r11.s64 = 234;
	// stb r9,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r9.u8);
	// stb r8,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r8.u8);
	// stb r10,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r10.u8);
	// stb r10,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r10.u8);
	// stb r25,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r25.u8);
	// stb r7,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r7.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r9,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r9.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r30,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r30.u8);
	// stb r9,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r9.u8);
	// stb r8,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r8.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r27,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r27.u8);
	// stb r9,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r9.u8);
	// stb r23,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r23.u8);
	// stb r22,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r22.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r6,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r6.u8);
	// stb r8,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r8.u8);
	// stb r6,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r6.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r11,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r11.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A7E80;
	sub_82B06418(ctx, base);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stw r26,20(r29)
	PPC_STORE_U32(ctx.r29.u32 + 20, ctx.r26.u32);
	// addi r1,r1,480
	ctx.r1.s64 = ctx.r1.s64 + 480;
	// b 0x82e28e9c
	__restgprlr_21(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A7E90"))) PPC_WEAK_FUNC(sub_824A7E90);
PPC_FUNC_IMPL(__imp__sub_824A7E90) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A7E98;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29580
	ctx.r4.s64 = ctx.r10.s64 + 29580;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A7ED4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,224
	ctx.r11.s64 = 224;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A7FC8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A7FD8"))) PPC_WEAK_FUNC(sub_824A7FD8);
PPC_FUNC_IMPL(__imp__sub_824A7FD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x824A7FE0;
	__savegprlr_28(ctx, base);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r28,48
	ctx.r28.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29600
	ctx.r4.s64 = ctx.r10.s64 + 29600;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r28,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r28.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A801C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,247
	ctx.r11.s64 = 247;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// stb r28,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r28.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A810C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A8120"))) PPC_WEAK_FUNC(sub_824A8120);
PPC_FUNC_IMPL(__imp__sub_824A8120) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824A8128;
	__savegprlr_26(ctx, base);
	// stwu r1,-272(r1)
	ea = -272 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,135
	ctx.r9.s64 = 135;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27720
	ctx.r4.s64 = ctx.r10.s64 + 27720;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A8164;
	sub_822E0818(ctx, base);
	// li r10,248
	ctx.r10.s64 = 248;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// li r10,253
	ctx.r10.s64 = 253;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,13
	ctx.r11.s64 = 13;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,49
	ctx.r10.s64 = 49;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,101
	ctx.r10.s64 = 101;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,6
	ctx.r10.s64 = 6;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// li r10,147
	ctx.r10.s64 = 147;
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,200
	ctx.r10.s64 = 200;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,76
	ctx.r10.s64 = 76;
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,7
	ctx.r10.s64 = 7;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// li r10,73
	ctx.r10.s64 = 73;
	// stb r7,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r7.u8);
	// stb r7,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r7.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,154
	ctx.r10.s64 = 154;
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r28,245
	ctx.r28.s64 = 245;
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r26,46
	ctx.r26.s64 = 46;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r8,247
	ctx.r8.s64 = 247;
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// li r6,5
	ctx.r6.s64 = 5;
	// stb r11,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r11.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// li r27,226
	ctx.r27.s64 = 226;
	// stb r11,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r11.u8);
	// li r3,150
	ctx.r3.s64 = 150;
	// stb r11,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r11.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r28,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r28.u8);
	// li r28,239
	ctx.r28.s64 = 239;
	// stb r26,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r26.u8);
	// li r26,86
	ctx.r26.s64 = 86;
	// stb r8,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r8.u8);
	// li r5,135
	ctx.r5.s64 = 135;
	// stb r8,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r8.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r28,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r28.u8);
	// li r28,38
	ctx.r28.s64 = 38;
	// stb r26,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r26.u8);
	// li r26,127
	ctx.r26.s64 = 127;
	// stb r8,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r8.u8);
	// stb r8,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r8.u8);
	// li r8,36
	ctx.r8.s64 = 36;
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// li r11,74
	ctx.r11.s64 = 74;
	// stb r28,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r28.u8);
	// li r28,22
	ctx.r28.s64 = 22;
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// stb r27,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r27.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r11,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r6,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r6.u8);
	// stb r9,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r9.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// stb r3,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r3.u8);
	// stb r11,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// stb r9,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r9.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// li r11,87
	ctx.r11.s64 = 87;
	// stb r28,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r28.u8);
	// stb r7,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r7.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r26,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r26.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// stb r10,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r10.u8);
	// stb r27,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r27.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r6,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r6.u8);
	// stb r9,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r9.u8);
	// stb r10,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r10.u8);
	// stb r3,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r3.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r8,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r8.u8);
	// stb r11,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r11.u8);
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r11,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r7,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r7.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r8,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r8.u8);
	// stb r28,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r28.u8);
	// stb r9,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r9.u8);
	// stb r11,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// li r11,71
	ctx.r11.s64 = 71;
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// li r11,9
	ctx.r11.s64 = 9;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A8440;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,272
	ctx.r1.s64 = ctx.r1.s64 + 272;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A8450"))) PPC_WEAK_FUNC(sub_824A8450);
PPC_FUNC_IMPL(__imp__sub_824A8450) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,62
	ctx.r9.s64 = 62;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,27720
	ctx.r4.s64 = ctx.r10.s64 + 27720;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A849C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// li r11,248
	ctx.r11.s64 = 248;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,142
	ctx.r11.s64 = 142;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,227
	ctx.r11.s64 = 227;
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,84
	ctx.r11.s64 = 84;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,62
	ctx.r5.s64 = 62;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,71
	ctx.r11.s64 = 71;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,9
	ctx.r11.s64 = 9;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A85F8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824A8618"))) PPC_WEAK_FUNC(sub_824A8618);
PPC_FUNC_IMPL(__imp__sub_824A8618) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A8620;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,26680
	ctx.r4.s64 = ctx.r10.s64 + 26680;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A865C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A8734;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A8748"))) PPC_WEAK_FUNC(sub_824A8748);
PPC_FUNC_IMPL(__imp__sub_824A8748) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A8750;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29612
	ctx.r4.s64 = ctx.r10.s64 + 29612;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A878C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,10
	ctx.r9.s64 = 10;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A8884;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A8898"))) PPC_WEAK_FUNC(sub_824A8898);
PPC_FUNC_IMPL(__imp__sub_824A8898) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A88A0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29544
	ctx.r4.s64 = ctx.r10.s64 + 29544;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A88DC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,17
	ctx.r11.s64 = 17;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A89D8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A89E8"))) PPC_WEAK_FUNC(sub_824A89E8);
PPC_FUNC_IMPL(__imp__sub_824A89E8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A89F0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29632
	ctx.r4.s64 = ctx.r10.s64 + 29632;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A8A2C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,18
	ctx.r11.s64 = 18;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A8B1C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A8B30"))) PPC_WEAK_FUNC(sub_824A8B30);
PPC_FUNC_IMPL(__imp__sub_824A8B30) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A8B38;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29544
	ctx.r4.s64 = ctx.r10.s64 + 29544;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A8B74;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,19
	ctx.r11.s64 = 19;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,13
	ctx.r9.s64 = 13;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A8C70;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A8C80"))) PPC_WEAK_FUNC(sub_824A8C80);
PPC_FUNC_IMPL(__imp__sub_824A8C80) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e50
	ctx.lr = 0x824A8C88;
	__savegprlr_22(ctx, base);
	// stwu r1,-352(r1)
	ea = -352 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,180
	ctx.r9.s64 = 180;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29648
	ctx.r4.s64 = ctx.r10.s64 + 29648;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A8CC4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r23,46
	ctx.r23.s64 = 46;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r3,14
	ctx.r3.s64 = 14;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r4,100
	ctx.r4.s64 = 100;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r23,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r23.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,32
	ctx.r11.s64 = 32;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,64
	ctx.r11.s64 = 64;
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r3,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r3.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,166
	ctx.r11.s64 = 166;
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,103
	ctx.r11.s64 = 103;
	// stb r5,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r5.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r7,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r7.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,62
	ctx.r11.s64 = 62;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,121
	ctx.r11.s64 = 121;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r22,101
	ctx.r22.s64 = 101;
	// stb r4,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r4.u8);
	// li r8,44
	ctx.r8.s64 = 44;
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// stb r5,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r5.u8);
	// li r10,25
	ctx.r10.s64 = 25;
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// li r6,99
	ctx.r6.s64 = 99;
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// li r24,4
	ctx.r24.s64 = 4;
	// stb r22,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r22.u8);
	// li r22,28
	ctx.r22.s64 = 28;
	// stb r8,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r8.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r4,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r4.u8);
	// li r25,27
	ctx.r25.s64 = 27;
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// li r29,42
	ctx.r29.s64 = 42;
	// li r26,5
	ctx.r26.s64 = 5;
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// stb r22,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r22.u8);
	// li r22,33
	ctx.r22.s64 = 33;
	// li r27,232
	ctx.r27.s64 = 232;
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r28,81
	ctx.r28.s64 = 81;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r7,13
	ctx.r7.s64 = 13;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,97
	ctx.r5.s64 = 97;
	// stb r6,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r6.u8);
	// stb r22,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r22.u8);
	// li r4,199
	ctx.r4.s64 = 199;
	// li r22,113
	ctx.r22.s64 = 113;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r10.u8);
	// stb r24,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r24.u8);
	// stb r25,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r25.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r29,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r29.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r10,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r10.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// stb r3,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r3.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r26,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r26.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r11,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r11.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r27,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r27.u8);
	// stb r28,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r28.u8);
	// stb r8,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r8.u8);
	// stb r11,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r11.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r22,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r22.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r8,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r8.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r9,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r9.u8);
	// stb r7,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r7.u8);
	// stb r23,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r23.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r5,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r5.u8);
	// stb r4,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r4.u8);
	// stb r11,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r11.u8);
	// li r5,255
	ctx.r5.s64 = 255;
	// stb r10,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r10.u8);
	// stb r10,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r10.u8);
	// stb r10,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r7,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r7.u8);
	// stb r7,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r7.u8);
	// li r7,175
	ctx.r7.s64 = 175;
	// stb r5,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r5.u8);
	// stb r5,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r5.u8);
	// li r5,247
	ctx.r5.s64 = 247;
	// stb r10,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r10.u8);
	// li r10,83
	ctx.r10.s64 = 83;
	// stb r11,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r11.u8);
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// li r11,235
	ctx.r11.s64 = 235;
	// stb r5,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r5.u8);
	// li r5,7
	ctx.r5.s64 = 7;
	// stb r10,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r10.u8);
	// li r10,2
	ctx.r10.s64 = 2;
	// stb r29,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r4,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r3,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r5,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r5.u8);
	// li r5,118
	ctx.r5.s64 = 118;
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r5,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r5.u8);
	// li r5,119
	ctx.r5.s64 = 119;
	// stb r9,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r9.u8);
	// stb r8,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r8.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// li r5,180
	ctx.r5.s64 = 180;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r9,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r9.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r25,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r25.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r6,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r6.u8);
	// stb r7,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r7.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r9,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r9.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r26,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r26.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r27,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r27.u8);
	// stb r28,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r28.u8);
	// stb r8,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r8.u8);
	// stb r24,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r24.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r10,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r10.u8);
	// stb r10,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r10.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r6,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r6.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A905C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,352
	ctx.r1.s64 = ctx.r1.s64 + 352;
	// b 0x82e28ea0
	__restgprlr_22(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A9070"))) PPC_WEAK_FUNC(sub_824A9070);
PPC_FUNC_IMPL(__imp__sub_824A9070) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x824A9078;
	__savegprlr_28(ctx, base);
	// stwu r1,-288(r1)
	ea = -288 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,163
	ctx.r9.s64 = 163;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29672
	ctx.r4.s64 = ctx.r10.s64 + 29672;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A90B4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,182
	ctx.r8.s64 = 182;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,64
	ctx.r10.s64 = 64;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r29,69
	ctx.r29.s64 = 69;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r4,12
	ctx.r4.s64 = 12;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,104
	ctx.r10.s64 = 104;
	// stb r29,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r29.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// li r8,105
	ctx.r8.s64 = 105;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// li r8,46
	ctx.r8.s64 = 46;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r4,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r4.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r9,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r9.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r8,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r8.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r4,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r4.u8);
	// li r8,97
	ctx.r8.s64 = 97;
	// li r4,5
	ctx.r4.s64 = 5;
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// li r7,199
	ctx.r7.s64 = 199;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r9,10
	ctx.r9.s64 = 10;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// li r3,1
	ctx.r3.s64 = 1;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r8,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r8.u8);
	// li r8,255
	ctx.r8.s64 = 255;
	// stb r4,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r4.u8);
	// li r4,76
	ctx.r4.s64 = 76;
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// li r6,7
	ctx.r6.s64 = 7;
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// li r7,4
	ctx.r7.s64 = 4;
	// li r5,25
	ctx.r5.s64 = 25;
	// stb r3,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r3.u8);
	// stb r8,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r8.u8);
	// li r28,232
	ctx.r28.s64 = 232;
	// stb r8,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r8.u8);
	// li r8,247
	ctx.r8.s64 = 247;
	// stb r4,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r4.u8);
	// li r4,132
	ctx.r4.s64 = 132;
	// stb r6,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r6.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r8,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r8.u8);
	// li r8,29
	ctx.r8.s64 = 29;
	// stb r4,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r4.u8);
	// li r4,150
	ctx.r4.s64 = 150;
	// stb r10,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r10.u8);
	// stb r7,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r7.u8);
	// stb r10,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r10.u8);
	// stb r8,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r8.u8);
	// li r8,114
	ctx.r8.s64 = 114;
	// stb r4,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r4.u8);
	// li r4,37
	ctx.r4.s64 = 37;
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r8,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r8.u8);
	// li r8,42
	ctx.r8.s64 = 42;
	// stb r4,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r4.u8);
	// li r4,24
	ctx.r4.s64 = 24;
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r9,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r9.u8);
	// stb r5,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r5.u8);
	// stb r8,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r8.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r4,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r4.u8);
	// li r4,151
	ctx.r4.s64 = 151;
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r8,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r8.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r7,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r7.u8);
	// stb r3,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r3.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r28,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r28.u8);
	// stb r29,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r29.u8);
	// stb r6,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r6.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r11,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r11.u8);
	// stb r9,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r9.u8);
	// stb r8,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r8.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r9,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r9.u8);
	// stb r4,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r4.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r11,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r11.u8);
	// stb r6,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r6.u8);
	// li r6,16
	ctx.r6.s64 = 16;
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// li r4,44
	ctx.r4.s64 = 44;
	// stb r11,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// stb r3,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r3.u8);
	// li r5,163
	ctx.r5.s64 = 163;
	// stb r6,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r6.u8);
	// li r6,27
	ctx.r6.s64 = 27;
	// stb r4,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r4.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r11,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r9.u8);
	// stb r8,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r8.u8);
	// stb r6,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r6.u8);
	// li r6,35
	ctx.r6.s64 = 35;
	// stb r8,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r8.u8);
	// stb r11,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r11.u8);
	// stb r11,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r7,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r7.u8);
	// stb r6,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r6.u8);
	// li r6,87
	ctx.r6.s64 = 87;
	// stb r10,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r10.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r6,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r6.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r9,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r9.u8);
	// stb r8,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r8.u8);
	// stb r7,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r7.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// stb r28,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r28.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A9400;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,288
	ctx.r1.s64 = ctx.r1.s64 + 288;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A9410"))) PPC_WEAK_FUNC(sub_824A9410);
PPC_FUNC_IMPL(__imp__sub_824A9410) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A9418;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28960
	ctx.r4.s64 = ctx.r10.s64 + 28960;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A9454;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A9544;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A9558"))) PPC_WEAK_FUNC(sub_824A9558);
PPC_FUNC_IMPL(__imp__sub_824A9558) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e64
	ctx.lr = 0x824A9560;
	__savegprlr_27(ctx, base);
	// stwu r1,-304(r1)
	ea = -304 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,175
	ctx.r9.s64 = 175;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29696
	ctx.r4.s64 = ctx.r10.s64 + 29696;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A959C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,25
	ctx.r10.s64 = 25;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r28,77
	ctx.r28.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,17
	ctx.r8.s64 = 17;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,23
	ctx.r11.s64 = 23;
	// li r5,1
	ctx.r5.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r28,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r28.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,56
	ctx.r11.s64 = 56;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,30
	ctx.r11.s64 = 30;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,172
	ctx.r11.s64 = 172;
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,240
	ctx.r11.s64 = 240;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,212
	ctx.r11.s64 = 212;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r10.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// stb r5,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r5.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,116
	ctx.r11.s64 = 116;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,47
	ctx.r11.s64 = 47;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// li r7,247
	ctx.r7.s64 = 247;
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r3,249
	ctx.r3.s64 = 249;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r4,5
	ctx.r4.s64 = 5;
	// stb r5,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r5.u8);
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r29,87
	ctx.r29.s64 = 87;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r7,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r7.u8);
	// li r27,42
	ctx.r27.s64 = 42;
	// stb r7,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r7.u8);
	// li r7,226
	ctx.r7.s64 = 226;
	// stb r3,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r3.u8);
	// li r3,112
	ctx.r3.s64 = 112;
	// stb r4,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r4.u8);
	// stb r6,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r6.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// li r7,93
	ctx.r7.s64 = 93;
	// stb r3,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r3.u8);
	// li r3,7
	ctx.r3.s64 = 7;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r7,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r7.u8);
	// li r7,28
	ctx.r7.s64 = 28;
	// stb r3,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r3.u8);
	// li r3,111
	ctx.r3.s64 = 111;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// stb r7,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r7.u8);
	// li r7,32
	ctx.r7.s64 = 32;
	// stb r3,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r3.u8);
	// li r3,119
	ctx.r3.s64 = 119;
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r9,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r9.u8);
	// stb r7,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r7.u8);
	// li r7,97
	ctx.r7.s64 = 97;
	// stb r3,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r3.u8);
	// li r3,78
	ctx.r3.s64 = 78;
	// stb r8,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r8.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r7,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r7.u8);
	// li r7,26
	ctx.r7.s64 = 26;
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r7,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r7.u8);
	// li r7,22
	ctx.r7.s64 = 22;
	// stb r9,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r9.u8);
	// stb r8,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r8.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r4,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r4.u8);
	// stb r7,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r7.u8);
	// stb r6,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r6.u8);
	// stb r5,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r5.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r29,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r29.u8);
	// stb r3,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r3.u8);
	// stb r27,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r27.u8);
	// stb r7,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r7.u8);
	// stb r10,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r10.u8);
	// stb r10,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r10.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r9,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r9.u8);
	// stb r8,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r8.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r4,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r4.u8);
	// stb r6,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r6.u8);
	// stb r5,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r5.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// li r4,82
	ctx.r4.s64 = 82;
	// stb r11,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r11.u8);
	// li r5,16
	ctx.r5.s64 = 16;
	// stb r11,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r11.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r10,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r10.u8);
	// li r10,81
	ctx.r10.s64 = 81;
	// stb r4,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r4.u8);
	// li r4,228
	ctx.r4.s64 = 228;
	// stb r5,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r5.u8);
	// li r5,27
	ctx.r5.s64 = 27;
	// stb r29,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r11.u8);
	// stb r11,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r10,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r10.u8);
	// li r10,49
	ctx.r10.s64 = 49;
	// stb r4,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r4.u8);
	// li r4,29
	ctx.r4.s64 = 29;
	// stb r3,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r5,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r5.u8);
	// stb r11,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r10,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r10.u8);
	// li r10,48
	ctx.r10.s64 = 48;
	// stb r4,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r5,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r5.u8);
	// li r5,175
	ctx.r5.s64 = 175;
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r11,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r11.u8);
	// stb r11,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r11.u8);
	// stb r11,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r11,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r11.u8);
	// li r11,242
	ctx.r11.s64 = 242;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r7,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r7.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r9,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r9.u8);
	// stb r8,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r8.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r28,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r28.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r7,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r7.u8);
	// stb r10,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r10.u8);
	// stb r6,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r6.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A992C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,304
	ctx.r1.s64 = ctx.r1.s64 + 304;
	// b 0x82e28eb4
	__restgprlr_27(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A9940"))) PPC_WEAK_FUNC(sub_824A9940);
PPC_FUNC_IMPL(__imp__sub_824A9940) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A9948;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29716
	ctx.r4.s64 = ctx.r10.s64 + 29716;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A9984;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,24
	ctx.r11.s64 = 24;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A9A78;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A9A88"))) PPC_WEAK_FUNC(sub_824A9A88);
PPC_FUNC_IMPL(__imp__sub_824A9A88) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e54
	ctx.lr = 0x824A9A90;
	__savegprlr_23(ctx, base);
	// stwu r1,-368(r1)
	ea = -368 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,204
	ctx.r9.s64 = 204;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29732
	ctx.r4.s64 = ctx.r10.s64 + 29732;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A9ACC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,25
	ctx.r9.s64 = 25;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r24,40
	ctx.r24.s64 = 40;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r26,233
	ctx.r26.s64 = 233;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r27,19
	ctx.r27.s64 = 19;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// li r28,2
	ctx.r28.s64 = 2;
	// stb r9,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r9.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,76
	ctx.r11.s64 = 76;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r24,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r24.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,189
	ctx.r11.s64 = 189;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,93
	ctx.r11.s64 = 93;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r26,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r26.u8);
	// stb r27,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r27.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,203
	ctx.r11.s64 = 203;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,145
	ctx.r11.s64 = 145;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r28,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r28.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,142
	ctx.r11.s64 = 142;
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// li r5,150
	ctx.r5.s64 = 150;
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// li r3,6
	ctx.r3.s64 = 6;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// li r7,247
	ctx.r7.s64 = 247;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r10,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r10.u8);
	// stb r5,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r5.u8);
	// li r6,5
	ctx.r6.s64 = 5;
	// stb r3,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r3.u8);
	// li r3,45
	ctx.r3.s64 = 45;
	// stb r5,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r5.u8);
	// li r5,245
	ctx.r5.s64 = 245;
	// li r4,226
	ctx.r4.s64 = 226;
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r25,27
	ctx.r25.s64 = 27;
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// stb r7,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r7.u8);
	// stb r3,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r3.u8);
	// li r3,67
	ctx.r3.s64 = 67;
	// stb r5,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r5.u8);
	// li r5,239
	ctx.r5.s64 = 239;
	// stb r4,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r4.u8);
	// stb r6,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r6.u8);
	// stb r8,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r8.u8);
	// stb r3,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r3.u8);
	// li r3,24
	ctx.r3.s64 = 24;
	// stb r5,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r5.u8);
	// li r5,38
	ctx.r5.s64 = 38;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// stb r7,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r7.u8);
	// stb r3,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r3.u8);
	// li r3,154
	ctx.r3.s64 = 154;
	// stb r5,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r5.u8);
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r8,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r8.u8);
	// stb r11,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r11.u8);
	// stb r11,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r11.u8);
	// stb r3,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r3.u8);
	// li r3,22
	ctx.r3.s64 = 22;
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// li r5,46
	ctx.r5.s64 = 46;
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r25,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r25.u8);
	// stb r9,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r9.u8);
	// stb r9,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r9.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r11,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r11.u8);
	// stb r7,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r7.u8);
	// stb r4,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r4.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r6,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r6.u8);
	// stb r8,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r8.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// stb r11,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r11.u8);
	// stb r7,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r7.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r6,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r6.u8);
	// stb r8,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r8.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// stb r3,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r3.u8);
	// stb r3,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r3.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r26,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r26.u8);
	// stb r27,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r27.u8);
	// stb r9,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r9.u8);
	// stb r9,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r9.u8);
	// stb r5,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r5.u8);
	// stb r11,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r11.u8);
	// stb r11,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r11.u8);
	// li r5,253
	ctx.r5.s64 = 253;
	// stb r7,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r7.u8);
	// stb r7,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r7.u8);
	// li r23,12
	ctx.r23.s64 = 12;
	// stb r7,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r7.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r7,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r7.u8);
	// li r7,211
	ctx.r7.s64 = 211;
	// stb r25,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r25.u8);
	// li r25,84
	ctx.r25.s64 = 84;
	// stb r5,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r5.u8);
	// li r5,209
	ctx.r5.s64 = 209;
	// stb r9,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r9.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r6,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r6.u8);
	// stb r6,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r6.u8);
	// stb r6,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r6.u8);
	// li r6,232
	ctx.r6.s64 = 232;
	// stb r5,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r5.u8);
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// li r5,185
	ctx.r5.s64 = 185;
	// stb r7,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r7.u8);
	// li r7,217
	ctx.r7.s64 = 217;
	// stb r9,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r9.u8);
	// stb r25,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r25.u8);
	// li r25,64
	ctx.r25.s64 = 64;
	// stb r9,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// stb r5,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r5.u8);
	// li r5,205
	ctx.r5.s64 = 205;
	// stb r27,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r27.u8);
	// li r27,28
	ctx.r27.s64 = 28;
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// stb r5,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r5.u8);
	// li r5,204
	ctx.r5.s64 = 204;
	// stb r11,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r11.u8);
	// stb r11,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r11.u8);
	// stb r11,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r11.u8);
	// stb r11,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r11.u8);
	// li r11,249
	ctx.r11.s64 = 249;
	// stb r10,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r10.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r8,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r8.u8);
	// stb r10,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r10.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r8,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r8.u8);
	// stb r10,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r10.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r8,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r8.u8);
	// stb r10,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r10.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r6,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r6.u8);
	// stb r7,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r7.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r23,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r23.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r25,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r25.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r24,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r24.u8);
	// stb r3,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r3.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r26,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r26.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r9,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r9.u8);
	// stb r8,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r8.u8);
	// stb r27,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r27.u8);
	// stb r11,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r11.u8);
	// li r11,74
	ctx.r11.s64 = 74;
	// stb r3,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r10,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r10.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r11,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r6,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r6.u8);
	// stb r7,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r7.u8);
	// stb r8,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r8.u8);
	// stb r9,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r9.u8);
	// stb r11,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r11,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r11.u8);
	// li r11,176
	ctx.r11.s64 = 176;
	// stb r28,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r28.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r28,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r28.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824A9EE0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,368
	ctx.r1.s64 = ctx.r1.s64 + 368;
	// b 0x82e28ea4
	__restgprlr_23(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824A9EF0"))) PPC_WEAK_FUNC(sub_824A9EF0);
PPC_FUNC_IMPL(__imp__sub_824A9EF0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824A9EF8;
	__savegprlr_29(ctx, base);
	// stwu r1,-208(r1)
	ea = -208 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,81
	ctx.r9.s64 = 81;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-16648
	ctx.r4.s64 = ctx.r10.s64 + -16648;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824A9F34;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,222
	ctx.r9.s64 = 222;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,250
	ctx.r7.s64 = 250;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,167
	ctx.r8.s64 = 167;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r10,97
	ctx.r10.s64 = 97;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,170
	ctx.r9.s64 = 170;
	// li r6,28
	ctx.r6.s64 = 28;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// li r9,19
	ctx.r9.s64 = 19;
	// stb r7,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r7.u8);
	// stb r8,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r8.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// li r9,125
	ctx.r9.s64 = 125;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r10.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r9,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r9.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,64
	ctx.r11.s64 = 64;
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r6,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r6.u8);
	// stb r7,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r7.u8);
	// stb r8,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r8.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,209
	ctx.r11.s64 = 209;
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r5,81
	ctx.r5.s64 = 81;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r8,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r8,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r8.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// stb r11,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r11.u8);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r11,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r11.u8);
	// li r11,119
	ctx.r11.s64 = 119;
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AA0F0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,208
	ctx.r1.s64 = ctx.r1.s64 + 208;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AA100"))) PPC_WEAK_FUNC(sub_824AA100);
PPC_FUNC_IMPL(__imp__sub_824AA100) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AA108;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,76
	ctx.r9.s64 = 76;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-16648
	ctx.r4.s64 = ctx.r10.s64 + -16648;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AA144;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,143
	ctx.r9.s64 = 143;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,31
	ctx.r7.s64 = 31;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,249
	ctx.r8.s64 = 249;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r9,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r9.u8);
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r7,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r7.u8);
	// li r7,17
	ctx.r7.s64 = 17;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// li r9,20
	ctx.r9.s64 = 20;
	// stb r7,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r7.u8);
	// li r7,28
	ctx.r7.s64 = 28;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r9,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r9.u8);
	// li r9,45
	ctx.r9.s64 = 45;
	// stb r8,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r8.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r7,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r7.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// stb r8,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r8.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// li r5,76
	ctx.r5.s64 = 76;
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,13
	ctx.r11.s64 = 13;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,39
	ctx.r11.s64 = 39;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// li r11,119
	ctx.r11.s64 = 119;
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AA2E4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AA2F8"))) PPC_WEAK_FUNC(sub_824AA2F8);
PPC_FUNC_IMPL(__imp__sub_824AA2F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x824AA300;
	__savegprlr_28(ctx, base);
	// stwu r1,-208(r1)
	ea = -208 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r28,83
	ctx.r28.s64 = 83;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-16648
	ctx.r4.s64 = ctx.r10.s64 + -16648;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r28,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r28.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AA33C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r5,53
	ctx.r5.s64 = 53;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,191
	ctx.r10.s64 = 191;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r6,28
	ctx.r6.s64 = 28;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r7,250
	ctx.r7.s64 = 250;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r5,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r5.u8);
	// li r5,35
	ctx.r5.s64 = 35;
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r8,167
	ctx.r8.s64 = 167;
	// li r9,98
	ctx.r9.s64 = 98;
	// stb r6,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r6.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r5,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r5.u8);
	// li r5,31
	ctx.r5.s64 = 31;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r7,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r7.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r5,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r5.u8);
	// li r5,24
	ctx.r5.s64 = 24;
	// stb r8,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r8.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r5,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r5.u8);
	// stb r6,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r6.u8);
	// stb r7,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r7.u8);
	// stb r8,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r8.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,45
	ctx.r11.s64 = 45;
	// stb r10,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r10.u8);
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// li r10,6
	ctx.r10.s64 = 6;
	// li r8,40
	ctx.r8.s64 = 40;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,83
	ctx.r5.s64 = 83;
	// stb r9,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r9.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r10,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r10.u8);
	// li r10,37
	ctx.r10.s64 = 37;
	// stb r8,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r8.u8);
	// li r8,15
	ctx.r8.s64 = 15;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r8,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r8.u8);
	// stb r9,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r9.u8);
	// stb r28,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r28.u8);
	// stb r11,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r11.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r10,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r10.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// li r11,119
	ctx.r11.s64 = 119;
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r11.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AA504;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,208
	ctx.r1.s64 = ctx.r1.s64 + 208;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AA518"))) PPC_WEAK_FUNC(sub_824AA518);
PPC_FUNC_IMPL(__imp__sub_824AA518) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AA520;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29752
	ctx.r4.s64 = ctx.r10.s64 + 29752;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AA55C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,29
	ctx.r11.s64 = 29;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AA634;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AA648"))) PPC_WEAK_FUNC(sub_824AA648);
PPC_FUNC_IMPL(__imp__sub_824AA648) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AA650;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29760
	ctx.r4.s64 = ctx.r10.s64 + 29760;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AA68C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,30
	ctx.r11.s64 = 30;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,24
	ctx.r9.s64 = 24;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,73
	ctx.r11.s64 = 73;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AA788;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AA798"))) PPC_WEAK_FUNC(sub_824AA798);
PPC_FUNC_IMPL(__imp__sub_824AA798) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e48
	ctx.lr = 0x824AA7A0;
	__savegprlr_20(ctx, base);
	// stwu r1,-432(r1)
	ea = -432 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,235
	ctx.r9.s64 = 235;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29768
	ctx.r4.s64 = ctx.r10.s64 + 29768;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AA7DC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,188
	ctx.r10.s64 = 188;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r27,31
	ctx.r27.s64 = 31;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r21,77
	ctx.r21.s64 = 77;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r6,98
	ctx.r6.s64 = 98;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,172
	ctx.r10.s64 = 172;
	// li r8,25
	ctx.r8.s64 = 25;
	// stb r27,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r27.u8);
	// li r22,18
	ctx.r22.s64 = 18;
	// stb r21,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r21.u8);
	// li r7,24
	ctx.r7.s64 = 24;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,240
	ctx.r11.s64 = 240;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,176
	ctx.r10.s64 = 176;
	// li r3,37
	ctx.r3.s64 = 37;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r28,7
	ctx.r28.s64 = 7;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,15
	ctx.r10.s64 = 15;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r6,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r6.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r22,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r22.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r7,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r7.u8);
	// stb r3,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r3.u8);
	// li r4,115
	ctx.r4.s64 = 115;
	// stb r3,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r3.u8);
	// li r10,173
	ctx.r10.s64 = 173;
	// stb r28,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r28.u8);
	// li r20,28
	ctx.r20.s64 = 28;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r5,217
	ctx.r5.s64 = 217;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r4,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r4.u8);
	// li r4,130
	ctx.r4.s64 = 130;
	// stb r10,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r10.u8);
	// li r10,150
	ctx.r10.s64 = 150;
	// stb r20,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r20.u8);
	// li r20,97
	ctx.r20.s64 = 97;
	// li r23,54
	ctx.r23.s64 = 54;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r29,5
	ctx.r29.s64 = 5;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// stb r4,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r4.u8);
	// li r4,151
	ctx.r4.s64 = 151;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r20,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r20.u8);
	// li r24,232
	ctx.r24.s64 = 232;
	// li r25,72
	ctx.r25.s64 = 72;
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// li r3,16
	ctx.r3.s64 = 16;
	// stb r23,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r23.u8);
	// stb r4,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r4.u8);
	// li r4,4
	ctx.r4.s64 = 4;
	// li r26,6
	ctx.r26.s64 = 6;
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// li r20,179
	ctx.r20.s64 = 179;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// stb r5,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r5.u8);
	// stb r9,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r9.u8);
	// stb r28,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r28.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r8,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r8.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// stb r8,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r8.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r29,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r29.u8);
	// stb r4,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r4.u8);
	// stb r10,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r10.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r24,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r24.u8);
	// stb r25,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r25.u8);
	// stb r9,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r9.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// stb r8,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r8.u8);
	// stb r3,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r3.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// stb r7,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r7.u8);
	// stb r10,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r10.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r6,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r6.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r26,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r26.u8);
	// stb r4,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r4.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r20,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r20.u8);
	// stb r9,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r9.u8);
	// stb r9,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r9.u8);
	// stb r8,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r8.u8);
	// li r20,19
	ctx.r20.s64 = 19;
	// stb r3,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r3.u8);
	// stb r3,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r3.u8);
	// stb r3,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r3.u8);
	// li r3,33
	ctx.r3.s64 = 33;
	// stb r27,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r27.u8);
	// li r27,27
	ctx.r27.s64 = 27;
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r20,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r20.u8);
	// li r20,162
	ctx.r20.s64 = 162;
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r3,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r3.u8);
	// li r3,145
	ctx.r3.s64 = 145;
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// stb r20,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r20.u8);
	// li r20,79
	ctx.r20.s64 = 79;
	// stb r7,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r7.u8);
	// stb r10,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r10.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r20,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r20.u8);
	// li r20,175
	ctx.r20.s64 = 175;
	// stb r6,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r6.u8);
	// stb r5,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r5.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r27,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r27.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r8,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r8.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r11,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r11.u8);
	// stb r7,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r7.u8);
	// stb r10,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r10.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r6,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r6.u8);
	// stb r5,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r5.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r29,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r29.u8);
	// stb r4,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r4.u8);
	// stb r10,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r10.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r20,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r20.u8);
	// stb r9,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r9.u8);
	// stb r8,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r8.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r11,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r11.u8);
	// stb r7,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r7.u8);
	// stb r10,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r10.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r6,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r6.u8);
	// stb r5,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r5.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r27,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r27.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r22,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r22.u8);
	// stb r21,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r21.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r3,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r3.u8);
	// stb r8,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r8.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r9,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r9.u8);
	// stb r9,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r9.u8);
	// stb r9,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// stb r8,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r8.u8);
	// li r8,165
	ctx.r8.s64 = 165;
	// stb r10,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r10.u8);
	// stb r10,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r10.u8);
	// stb r10,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r10.u8);
	// li r10,99
	ctx.r10.s64 = 99;
	// stb r9,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r9.u8);
	// li r9,83
	ctx.r9.s64 = 83;
	// stb r29,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r4,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r4.u8);
	// stb r5,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r5.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r4,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r4.u8);
	// li r5,235
	ctx.r5.s64 = 235;
	// stb r9,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r11,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r11.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r24,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r24.u8);
	// stb r25,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r25.u8);
	// stb r23,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r23.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r6,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r6.u8);
	// stb r8,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r8.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r11,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r11.u8);
	// stb r7,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r7.u8);
	// stb r26,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r26.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r28,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r28.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r9,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r9.u8);
	// stb r9,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r9.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r10,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r10.u8);
	// stb r11,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r11.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AAC54;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,432
	ctx.r1.s64 = ctx.r1.s64 + 432;
	// b 0x82e28e98
	__restgprlr_20(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AAC68"))) PPC_WEAK_FUNC(sub_824AAC68);
PPC_FUNC_IMPL(__imp__sub_824AAC68) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// stw r12,-8(r1)
	PPC_STORE_U32(ctx.r1.u32 + -8, ctx.r12.u32);
	// std r30,-24(r1)
	PPC_STORE_U64(ctx.r1.u32 + -24, ctx.r30.u64);
	// std r31,-16(r1)
	PPC_STORE_U64(ctx.r1.u32 + -16, ctx.r31.u64);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,61
	ctx.r9.s64 = 61;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29788
	ctx.r4.s64 = ctx.r10.s64 + 29788;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AACB4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,32
	ctx.r11.s64 = 32;
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// li r10,83
	ctx.r10.s64 = 83;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,89
	ctx.r11.s64 = 89;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,121
	ctx.r11.s64 = 121;
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,85
	ctx.r11.s64 = 85;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,218
	ctx.r11.s64 = 218;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r10.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,61
	ctx.r5.s64 = 61;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,222
	ctx.r11.s64 = 222;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// addi r31,r30,24
	ctx.r31.s64 = ctx.r30.s64 + 24;
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AADFC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// lwz r12,-8(r1)
	ctx.r12.u64 = PPC_LOAD_U32(ctx.r1.u32 + -8);
	// mtlr r12
	ctx.lr = ctx.r12.u64;
	// ld r30,-24(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + -24);
	// ld r31,-16(r1)
	ctx.r31.u64 = PPC_LOAD_U64(ctx.r1.u32 + -16);
	// blr 
	return;
}

__attribute__((alias("__imp__sub_824AAE20"))) PPC_WEAK_FUNC(sub_824AAE20);
PPC_FUNC_IMPL(__imp__sub_824AAE20) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AAE28;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29820
	ctx.r4.s64 = ctx.r10.s64 + 29820;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AAE64;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AAF58;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AAF68"))) PPC_WEAK_FUNC(sub_824AAF68);
PPC_FUNC_IMPL(__imp__sub_824AAF68) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AAF70;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-5168
	ctx.r4.s64 = ctx.r10.s64 + -5168;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AAFAC;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,28
	ctx.r9.s64 = 28;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,34
	ctx.r11.s64 = 34;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AB090;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AB0A0"))) PPC_WEAK_FUNC(sub_824AB0A0);
PPC_FUNC_IMPL(__imp__sub_824AB0A0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824AB0A8;
	__savegprlr_26(ctx, base);
	// stwu r1,-272(r1)
	ea = -272 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,123
	ctx.r9.s64 = 123;
	// lis r10,-32255
	ctx.r10.s64 = -2113863680;
	// addi r4,r10,-17312
	ctx.r4.s64 = ctx.r10.s64 + -17312;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AB0E4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,68
	ctx.r8.s64 = 68;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,18
	ctx.r9.s64 = 18;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r27,2
	ctx.r27.s64 = 2;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,35
	ctx.r11.s64 = 35;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,207
	ctx.r8.s64 = 207;
	// li r28,13
	ctx.r28.s64 = 13;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r8,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r8.u8);
	// li r8,64
	ctx.r8.s64 = 64;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,113
	ctx.r11.s64 = 113;
	// stb r8,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r8.u8);
	// li r8,61
	ctx.r8.s64 = 61;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,110
	ctx.r11.s64 = 110;
	// stb r8,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r8.u8);
	// li r8,130
	ctx.r8.s64 = 130;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,29
	ctx.r11.s64 = 29;
	// stb r8,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r8.u8);
	// li r8,154
	ctx.r8.s64 = 154;
	// stb r10,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r10.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r27,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r27.u8);
	// stb r28,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r28.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r8,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r8.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// li r8,24
	ctx.r8.s64 = 24;
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// li r9,10
	ctx.r9.s64 = 10;
	// stb r10,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r10.u8);
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// li r3,16
	ctx.r3.s64 = 16;
	// stb r10,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r10.u8);
	// li r6,44
	ctx.r6.s64 = 44;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// stb r8,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r8.u8);
	// li r8,17
	ctx.r8.s64 = 17;
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// li r7,49
	ctx.r7.s64 = 49;
	// li r9,28
	ctx.r9.s64 = 28;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// li r26,25
	ctx.r26.s64 = 25;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// stb r8,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r8.u8);
	// li r8,27
	ctx.r8.s64 = 27;
	// li r10,74
	ctx.r10.s64 = 74;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r3,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r3.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r6,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r6.u8);
	// li r5,123
	ctx.r5.s64 = 123;
	// stb r11,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r7,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r7.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// stb r11,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r11.u8);
	// stb r11,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r8,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r8.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r11,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r9,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r9.u8);
	// stb r26,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r26.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r9,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r9.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r28,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r28.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r8,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r8.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r10,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r10.u8);
	// stb r3,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r3.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r6,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r6.u8);
	// stb r7,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r7.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r27,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r27.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r11,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r11,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// li r11,251
	ctx.r11.s64 = 251;
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AB380;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,272
	ctx.r1.s64 = ctx.r1.s64 + 272;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AB390"))) PPC_WEAK_FUNC(sub_824AB390);
PPC_FUNC_IMPL(__imp__sub_824AB390) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AB398;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29820
	ctx.r4.s64 = ctx.r10.s64 + 29820;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AB3D4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,36
	ctx.r11.s64 = 36;
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AB4C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AB4D8"))) PPC_WEAK_FUNC(sub_824AB4D8);
PPC_FUNC_IMPL(__imp__sub_824AB4D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AB4E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28864
	ctx.r4.s64 = ctx.r10.s64 + 28864;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AB51C;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,31
	ctx.r9.s64 = 31;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AB600;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AB610"))) PPC_WEAK_FUNC(sub_824AB610);
PPC_FUNC_IMPL(__imp__sub_824AB610) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AB618;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,28820
	ctx.r4.s64 = ctx.r10.s64 + 28820;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AB654;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,32
	ctx.r9.s64 = 32;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,38
	ctx.r11.s64 = 38;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AB738;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AB748"))) PPC_WEAK_FUNC(sub_824AB748);
PPC_FUNC_IMPL(__imp__sub_824AB748) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AB750;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,76
	ctx.r9.s64 = 76;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29832
	ctx.r4.s64 = ctx.r10.s64 + 29832;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AB78C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,18
	ctx.r10.s64 = 18;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,33
	ctx.r8.s64 = 33;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,39
	ctx.r11.s64 = 39;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,61
	ctx.r10.s64 = 61;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,12
	ctx.r10.s64 = 12;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,113
	ctx.r11.s64 = 113;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,17
	ctx.r10.s64 = 17;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,106
	ctx.r11.s64 = 106;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,41
	ctx.r10.s64 = 41;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r9,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r9.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// stb r8,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r8.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r8,32
	ctx.r8.s64 = 32;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,31
	ctx.r11.s64 = 31;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// li r5,76
	ctx.r5.s64 = 76;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r8,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r8.u8);
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r9,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r9.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AB92C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AB940"))) PPC_WEAK_FUNC(sub_824AB940);
PPC_FUNC_IMPL(__imp__sub_824AB940) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e64
	ctx.lr = 0x824AB948;
	__savegprlr_27(ctx, base);
	// stwu r1,-288(r1)
	ea = -288 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,155
	ctx.r9.s64 = 155;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29864
	ctx.r4.s64 = ctx.r10.s64 + 29864;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AB984;
	sub_822E0818(ctx, base);
	// li r10,245
	ctx.r10.s64 = 245;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,77
	ctx.r9.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r4,116
	ctx.r4.s64 = 116;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r28,135
	ctx.r28.s64 = 135;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// li r10,240
	ctx.r10.s64 = 240;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,40
	ctx.r11.s64 = 40;
	// li r5,18
	ctx.r5.s64 = 18;
	// stb r9,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r9.u8);
	// li r29,7
	ctx.r29.s64 = 7;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r6,56
	ctx.r6.s64 = 56;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,225
	ctx.r10.s64 = 225;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r8,58
	ctx.r8.s64 = 58;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// li r10,133
	ctx.r10.s64 = 133;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r4,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r4.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,96
	ctx.r10.s64 = 96;
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,93
	ctx.r10.s64 = 93;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,154
	ctx.r10.s64 = 154;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r28,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r28.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r5,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r5.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r29,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r29.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r6,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r6.u8);
	// stb r4,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r4.u8);
	// li r4,193
	ctx.r4.s64 = 193;
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// li r6,32
	ctx.r6.s64 = 32;
	// stb r8,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r8.u8);
	// li r27,52
	ctx.r27.s64 = 52;
	// stb r8,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r8.u8);
	// li r8,41
	ctx.r8.s64 = 41;
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r4,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r4.u8);
	// li r4,51
	ctx.r4.s64 = 51;
	// stb r6,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r6.u8);
	// li r6,98
	ctx.r6.s64 = 98;
	// stb r9,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r9.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r9,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r9.u8);
	// li r9,79
	ctx.r9.s64 = 79;
	// stb r8,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r8.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r4,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r4.u8);
	// li r4,85
	ctx.r4.s64 = 85;
	// stb r6,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r6.u8);
	// li r6,6
	ctx.r6.s64 = 6;
	// stb r5,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r5.u8);
	// li r3,5
	ctx.r3.s64 = 5;
	// stb r27,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r27.u8);
	// li r5,4
	ctx.r5.s64 = 4;
	// stb r9,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r9.u8);
	// li r27,49
	ctx.r27.s64 = 49;
	// stb r4,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r4.u8);
	// li r4,36
	ctx.r4.s64 = 36;
	// stb r6,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r6.u8);
	// li r6,28
	ctx.r6.s64 = 28;
	// li r9,170
	ctx.r9.s64 = 170;
	// stb r7,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r7.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r4,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r4.u8);
	// stb r4,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r4.u8);
	// li r4,45
	ctx.r4.s64 = 45;
	// stb r6,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r6.u8);
	// stb r6,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r6.u8);
	// li r6,247
	ctx.r6.s64 = 247;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r4,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r4.u8);
	// li r4,13
	ctx.r4.s64 = 13;
	// stb r3,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r3.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r4,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r4.u8);
	// li r4,39
	ctx.r4.s64 = 39;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r8,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r8.u8);
	// stb r7,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r7.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r5,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r5.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r8,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r8.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r27,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r27.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r29,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r29.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// stb r11,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r11.u8);
	// stb r6,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r6.u8);
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r10,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r10.u8);
	// stb r11,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r11.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// stb r11,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r11.u8);
	// stb r4,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r4.u8);
	// stb r7,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r7.u8);
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r11.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r11,35
	ctx.r11.s64 = 35;
	// stb r9,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r9.u8);
	// li r9,12
	ctx.r9.s64 = 12;
	// stb r10,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r10.u8);
	// stb r10,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r10.u8);
	// li r10,246
	ctx.r10.s64 = 246;
	// stb r3,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r9,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r9.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r5,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r5.u8);
	// li r5,155
	ctx.r5.s64 = 155;
	// stb r6,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r6.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r10,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r10.u8);
	// stb r28,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r28.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r11,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r11,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r11,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r11.u8);
	// stb r11,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r11.u8);
	// li r11,99
	ctx.r11.s64 = 99;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r8,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r8.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r9,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r9.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// stb r10,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r10.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ABCC8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,288
	ctx.r1.s64 = ctx.r1.s64 + 288;
	// b 0x82e28eb4
	__restgprlr_27(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ABCD8"))) PPC_WEAK_FUNC(sub_824ABCD8);
PPC_FUNC_IMPL(__imp__sub_824ABCD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ABCE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29872
	ctx.r4.s64 = ctx.r10.s64 + 29872;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ABD1C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,41
	ctx.r11.s64 = 41;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,50
	ctx.r9.s64 = 50;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ABE18;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ABE28"))) PPC_WEAK_FUNC(sub_824ABE28);
PPC_FUNC_IMPL(__imp__sub_824ABE28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ABE30;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29904
	ctx.r4.s64 = ctx.r10.s64 + 29904;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ABE6C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,42
	ctx.r11.s64 = 42;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,36
	ctx.r9.s64 = 36;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ABF68;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ABF78"))) PPC_WEAK_FUNC(sub_824ABF78);
PPC_FUNC_IMPL(__imp__sub_824ABF78) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ABF80;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29952
	ctx.r4.s64 = ctx.r10.s64 + 29952;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ABFBC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,43
	ctx.r11.s64 = 43;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,37
	ctx.r9.s64 = 37;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC0B8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC0C8"))) PPC_WEAK_FUNC(sub_824AC0C8);
PPC_FUNC_IMPL(__imp__sub_824AC0C8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC0D0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29992
	ctx.r4.s64 = ctx.r10.s64 + 29992;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC10C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,44
	ctx.r11.s64 = 44;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,38
	ctx.r9.s64 = 38;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC208;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC218"))) PPC_WEAK_FUNC(sub_824AC218);
PPC_FUNC_IMPL(__imp__sub_824AC218) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC220;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30036
	ctx.r4.s64 = ctx.r10.s64 + 30036;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC25C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,45
	ctx.r11.s64 = 45;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC358;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC368"))) PPC_WEAK_FUNC(sub_824AC368);
PPC_FUNC_IMPL(__imp__sub_824AC368) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC370;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30072
	ctx.r4.s64 = ctx.r10.s64 + 30072;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC3AC;
	sub_822E0818(ctx, base);
	// li r9,80
	ctx.r9.s64 = 80;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,190
	ctx.r9.s64 = 190;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,46
	ctx.r11.s64 = 46;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC498;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC4A8"))) PPC_WEAK_FUNC(sub_824AC4A8);
PPC_FUNC_IMPL(__imp__sub_824AC4A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC4B0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30104
	ctx.r4.s64 = ctx.r10.s64 + 30104;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC4EC;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,41
	ctx.r9.s64 = 41;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,47
	ctx.r11.s64 = 47;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC5D8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC5E8"))) PPC_WEAK_FUNC(sub_824AC5E8);
PPC_FUNC_IMPL(__imp__sub_824AC5E8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC5F0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30128
	ctx.r4.s64 = ctx.r10.s64 + 30128;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC62C;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,42
	ctx.r9.s64 = 42;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC718;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC728"))) PPC_WEAK_FUNC(sub_824AC728);
PPC_FUNC_IMPL(__imp__sub_824AC728) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC730;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30148
	ctx.r4.s64 = ctx.r10.s64 + 30148;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC76C;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,43
	ctx.r9.s64 = 43;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC858;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC868"))) PPC_WEAK_FUNC(sub_824AC868);
PPC_FUNC_IMPL(__imp__sub_824AC868) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x824AC870;
	__savegprlr_28(ctx, base);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r28,44
	ctx.r28.s64 = 44;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30176
	ctx.r4.s64 = ctx.r10.s64 + 30176;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r28,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r28.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC8AC;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,50
	ctx.r11.s64 = 50;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,128
	ctx.r9.s64 = 128;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r28,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r28.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AC994;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AC9A8"))) PPC_WEAK_FUNC(sub_824AC9A8);
PPC_FUNC_IMPL(__imp__sub_824AC9A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AC9B0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30200
	ctx.r4.s64 = ctx.r10.s64 + 30200;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AC9EC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,80
	ctx.r9.s64 = 80;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,201
	ctx.r9.s64 = 201;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ACAE8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ACAF8"))) PPC_WEAK_FUNC(sub_824ACAF8);
PPC_FUNC_IMPL(__imp__sub_824ACAF8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ACB00;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30252
	ctx.r4.s64 = ctx.r10.s64 + 30252;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ACB3C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,52
	ctx.r11.s64 = 52;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,46
	ctx.r9.s64 = 46;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ACC38;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ACC48"))) PPC_WEAK_FUNC(sub_824ACC48);
PPC_FUNC_IMPL(__imp__sub_824ACC48) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ACC50;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30296
	ctx.r4.s64 = ctx.r10.s64 + 30296;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ACC8C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,53
	ctx.r11.s64 = 53;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,47
	ctx.r9.s64 = 47;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ACD88;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ACD98"))) PPC_WEAK_FUNC(sub_824ACD98);
PPC_FUNC_IMPL(__imp__sub_824ACD98) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x824ACDA0;
	__savegprlr_28(ctx, base);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r28,48
	ctx.r28.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30340
	ctx.r4.s64 = ctx.r10.s64 + 30340;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r28,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r28.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ACDDC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r28,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r28.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ACED4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ACEE8"))) PPC_WEAK_FUNC(sub_824ACEE8);
PPC_FUNC_IMPL(__imp__sub_824ACEE8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ACEF0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30376
	ctx.r4.s64 = ctx.r10.s64 + 30376;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ACF2C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,55
	ctx.r11.s64 = 55;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,49
	ctx.r9.s64 = 49;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD028;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD038"))) PPC_WEAK_FUNC(sub_824AD038);
PPC_FUNC_IMPL(__imp__sub_824AD038) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD040;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29872
	ctx.r4.s64 = ctx.r10.s64 + 29872;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD07C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,56
	ctx.r9.s64 = 56;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r9.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r8,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r8.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD174;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD188"))) PPC_WEAK_FUNC(sub_824AD188);
PPC_FUNC_IMPL(__imp__sub_824AD188) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD190;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29904
	ctx.r4.s64 = ctx.r10.s64 + 29904;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD1CC;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,57
	ctx.r11.s64 = 57;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,51
	ctx.r9.s64 = 51;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD2C8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD2D8"))) PPC_WEAK_FUNC(sub_824AD2D8);
PPC_FUNC_IMPL(__imp__sub_824AD2D8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD2E0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,29952
	ctx.r4.s64 = ctx.r10.s64 + 29952;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD31C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,52
	ctx.r9.s64 = 52;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD418;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD428"))) PPC_WEAK_FUNC(sub_824AD428);
PPC_FUNC_IMPL(__imp__sub_824AD428) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD430;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30296
	ctx.r4.s64 = ctx.r10.s64 + 30296;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD46C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,59
	ctx.r11.s64 = 59;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD560;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD570"))) PPC_WEAK_FUNC(sub_824AD570);
PPC_FUNC_IMPL(__imp__sub_824AD570) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD578;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30340
	ctx.r4.s64 = ctx.r10.s64 + 30340;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD5B4;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,60
	ctx.r11.s64 = 60;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,54
	ctx.r9.s64 = 54;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD6B0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD6C0"))) PPC_WEAK_FUNC(sub_824AD6C0);
PPC_FUNC_IMPL(__imp__sub_824AD6C0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD6C8;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,48
	ctx.r9.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30376
	ctx.r4.s64 = ctx.r10.s64 + 30376;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD704;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,61
	ctx.r11.s64 = 61;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,55
	ctx.r9.s64 = 55;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,253
	ctx.r11.s64 = 253;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,165
	ctx.r11.s64 = 165;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD800;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD810"))) PPC_WEAK_FUNC(sub_824AD810);
PPC_FUNC_IMPL(__imp__sub_824AD810) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD818;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32252
	ctx.r10.s64 = -2113667072;
	// addi r4,r10,30996
	ctx.r4.s64 = ctx.r10.s64 + 30996;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD854;
	sub_822E0818(ctx, base);
	// li r9,126
	ctx.r9.s64 = 126;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,74
	ctx.r9.s64 = 74;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,62
	ctx.r11.s64 = 62;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,192
	ctx.r9.s64 = 192;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AD940;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AD950"))) PPC_WEAK_FUNC(sub_824AD950);
PPC_FUNC_IMPL(__imp__sub_824AD950) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AD958;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32252
	ctx.r10.s64 = -2113667072;
	// addi r4,r10,30996
	ctx.r4.s64 = ctx.r10.s64 + 30996;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AD994;
	sub_822E0818(ctx, base);
	// li r9,126
	ctx.r9.s64 = 126;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,89
	ctx.r9.s64 = 89;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,63
	ctx.r11.s64 = 63;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,192
	ctx.r9.s64 = 192;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ADA80;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ADA90"))) PPC_WEAK_FUNC(sub_824ADA90);
PPC_FUNC_IMPL(__imp__sub_824ADA90) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ADA98;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32253
	ctx.r10.s64 = -2113732608;
	// addi r4,r10,5060
	ctx.r4.s64 = ctx.r10.s64 + 5060;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ADAD4;
	sub_822E0818(ctx, base);
	// li r8,126
	ctx.r8.s64 = 126;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r8,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r8.u8);
	// li r8,151
	ctx.r8.s64 = 151;
	// stb r9,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r9.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,32
	ctx.r9.s64 = 32;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// stb r8,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ADBB8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ADBC8"))) PPC_WEAK_FUNC(sub_824ADBC8);
PPC_FUNC_IMPL(__imp__sub_824ADBC8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824ADBD0;
	__savegprlr_29(ctx, base);
	// stwu r1,-160(r1)
	ea = -160 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,44
	ctx.r9.s64 = 44;
	// lis r10,-32253
	ctx.r10.s64 = -2113732608;
	// addi r4,r10,5088
	ctx.r4.s64 = ctx.r10.s64 + 5088;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ADC0C;
	sub_822E0818(ctx, base);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,59
	ctx.r9.s64 = 59;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,65
	ctx.r11.s64 = 65;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,64
	ctx.r9.s64 = 64;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,32
	ctx.r9.s64 = 32;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ADCF4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,160
	ctx.r1.s64 = ctx.r1.s64 + 160;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ADD08"))) PPC_WEAK_FUNC(sub_824ADD08);
PPC_FUNC_IMPL(__imp__sub_824ADD08) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e68
	ctx.lr = 0x824ADD10;
	__savegprlr_28(ctx, base);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r28,48
	ctx.r28.s64 = 48;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30416
	ctx.r4.s64 = ctx.r10.s64 + 30416;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r28,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r28.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ADD4C;
	sub_822E0818(ctx, base);
	// li r11,136
	ctx.r11.s64 = 136;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,20
	ctx.r9.s64 = 20;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,69
	ctx.r10.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r5,48
	ctx.r5.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,152
	ctx.r9.s64 = 152;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r11,247
	ctx.r11.s64 = 247;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// stb r28,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r28.u8);
	// bl 0x82b06418
	ctx.lr = 0x824ADE44;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// b 0x82e28eb8
	__restgprlr_28(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824ADE58"))) PPC_WEAK_FUNC(sub_824ADE58);
PPC_FUNC_IMPL(__imp__sub_824ADE58) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e44
	ctx.lr = 0x824ADE60;
	__savegprlr_19(ctx, base);
	// stwu r1,-720(r1)
	ea = -720 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,526
	ctx.r9.s64 = 526;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30436
	ctx.r4.s64 = ctx.r10.s64 + 30436;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824ADE9C;
	sub_822E0818(ctx, base);
	// li r11,219
	ctx.r11.s64 = 219;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,32
	ctx.r10.s64 = 32;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,79
	ctx.r9.s64 = 79;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r19,77
	ctx.r19.s64 = 77;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r6,15
	ctx.r6.s64 = 15;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,17
	ctx.r11.s64 = 17;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,78
	ctx.r10.s64 = 78;
	// li r29,11
	ctx.r29.s64 = 11;
	// stb r9,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r9.u8);
	// li r20,69
	ctx.r20.s64 = 69;
	// stb r19,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r19.u8);
	// li r27,76
	ctx.r27.s64 = 76;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,89
	ctx.r11.s64 = 89;
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r8,68
	ctx.r8.s64 = 68;
	// li r10,87
	ctx.r10.s64 = 87;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r3,16
	ctx.r3.s64 = 16;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r21,194
	ctx.r21.s64 = 194;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r11.u8);
	// li r11,65
	ctx.r11.s64 = 65;
	// stb r6,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r6.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r29,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r29.u8);
	// stb r20,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r20.u8);
	// stb r27,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r27.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// stb r11,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r11.u8);
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// stb r9,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r9.u8);
	// stb r10,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r10.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r3,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r3.u8);
	// stb r21,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r21.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// li r9,161
	ctx.r9.s64 = 161;
	// li r4,70
	ctx.r4.s64 = 70;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// li r5,130
	ctx.r5.s64 = 130;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// li r7,148
	ctx.r7.s64 = 148;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// li r9,91
	ctx.r9.s64 = 91;
	// li r22,159
	ctx.r22.s64 = 159;
	// stb r4,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r4.u8);
	// stb r5,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r5.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r9,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r9.u8);
	// li r9,184
	ctx.r9.s64 = 184;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r10,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r10.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r7,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r7.u8);
	// stb r22,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r22.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r6,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r6.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r4,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r4.u8);
	// stb r5,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r5.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r7,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r7.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r9,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r9.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r4,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r4.u8);
	// stb r5,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r5.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r10,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r10.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// li r28,34
	ctx.r28.s64 = 34;
	// stb r7,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r7.u8);
	// li r9,160
	ctx.r9.s64 = 160;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// li r7,155
	ctx.r7.s64 = 155;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r28,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r28.u8);
	// li r28,243
	ctx.r28.s64 = 243;
	// stb r9,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r9.u8);
	// li r9,29
	ctx.r9.s64 = 29;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r28,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r28.u8);
	// li r28,30
	ctx.r28.s64 = 30;
	// stb r9,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r9.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r28,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r28.u8);
	// li r28,45
	ctx.r28.s64 = 45;
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r8,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r8.u8);
	// stb r7,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r7.u8);
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// li r28,20
	ctx.r28.s64 = 20;
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r9,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r9.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r11,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r11.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r8,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r8.u8);
	// stb r7,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r7.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r9,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r9.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r28,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r28.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r11,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r11.u8);
	// stb r11,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r11.u8);
	// li r11,71
	ctx.r11.s64 = 71;
	// li r28,24
	ctx.r28.s64 = 24;
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// li r23,12
	ctx.r23.s64 = 12;
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// li r24,25
	ctx.r24.s64 = 25;
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// li r25,53
	ctx.r25.s64 = 53;
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r11,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r11.u8);
	// li r11,196
	ctx.r11.s64 = 196;
	// stb r28,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r28.u8);
	// li r28,37
	ctx.r28.s64 = 37;
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// li r26,97
	ctx.r26.s64 = 97;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r8,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r8.u8);
	// stb r11,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r11.u8);
	// li r11,181
	ctx.r11.s64 = 181;
	// stb r7,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r7.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r9,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r9.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r23,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r23.u8);
	// stb r3,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r3.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r28,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r28.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r8,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r8.u8);
	// stb r7,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r7.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r9,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r9.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r24,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r24.u8);
	// stb r11,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r11.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r25,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r25.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r24,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r24.u8);
	// li r24,180
	ctx.r24.s64 = 180;
	// stb r26,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r26.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r11,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r11.u8);
	// stb r11,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r11.u8);
	// stb r11,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r11.u8);
	// stb r11,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r11.u8);
	// stb r11,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r11.u8);
	// stb r11,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r11.u8);
	// stb r11,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r11.u8);
	// stb r11,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r11.u8);
	// li r11,75
	ctx.r11.s64 = 75;
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r11,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r11.u8);
	// li r11,118
	ctx.r11.s64 = 118;
	// stb r10,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r10.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r11,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r11.u8);
	// li r11,166
	ctx.r11.s64 = 166;
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r24,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r24.u8);
	// stb r11,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r11.u8);
	// li r11,248
	ctx.r11.s64 = 248;
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r25,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r25.u8);
	// stb r26,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r26.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r10,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r10.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r4,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r4.u8);
	// stb r5,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r5.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r10,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r10.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r11,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r11.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r6,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r6.u8);
	// li r5,13
	ctx.r5.s64 = 13;
	// stb r6,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r6.u8);
	// stb r6,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r6.u8);
	// li r6,38
	ctx.r6.s64 = 38;
	// li r4,83
	ctx.r4.s64 = 83;
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r11,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r5,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r5.u8);
	// li r5,6
	ctx.r5.s64 = 6;
	// stb r6,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r6.u8);
	// li r6,58
	ctx.r6.s64 = 58;
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r11,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r5,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r5.u8);
	// li r5,14
	ctx.r5.s64 = 14;
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r9,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r9.u8);
	// stb r11,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r29,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r29.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r11,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r11.u8);
	// stb r3,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r3.u8);
	// stb r29,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r29.u8);
	// stb r23,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r23.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r5,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r5.u8);
	// stb r6,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r6.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r11,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r11.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r3,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r3.u8);
	// stb r4,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r4.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r11,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r6,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r6.u8);
	// li r6,39
	ctx.r6.s64 = 39;
	// stb r7,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r7.u8);
	// li r7,120
	ctx.r7.s64 = 120;
	// stb r5,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r5.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// li r5,526
	ctx.r5.s64 = 526;
	// stb r11,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r11,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r11.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r8,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r8.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r9,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r9.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r21,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r21.u8);
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r28,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r28.u8);
	// stb r22,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r22.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r6,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r6.u8);
	// stb r7,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r7.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r10,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r10.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// li r3,163
	ctx.r3.s64 = 163;
	// stb r27,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r27.u8);
	// li r8,62
	ctx.r8.s64 = 62;
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// li r9,204
	ctx.r9.s64 = 204;
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// li r11,205
	ctx.r11.s64 = 205;
	// stb r28,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r28.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r3,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r8,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r8.u8);
	// stb r9,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r9.u8);
	// stb r11,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r11.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r31,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r31.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r6,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r6.u8);
	// stb r7,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r7.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r31,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r31.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r10,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r10.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r8,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r8.u8);
	// stb r27,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r27.u8);
	// stb r9,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r9.u8);
	// stb r11,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r11.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r20,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r20.u8);
	// stb r19,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r19.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r31.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AE7F8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,720
	ctx.r1.s64 = ctx.r1.s64 + 720;
	// b 0x82e28e94
	__restgprlr_19(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AE808"))) PPC_WEAK_FUNC(sub_824AE808);
PPC_FUNC_IMPL(__imp__sub_824AE808) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824AE810;
	__savegprlr_29(ctx, base);
	// stwu r1,-224(r1)
	ea = -224 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,104
	ctx.r9.s64 = 104;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30464
	ctx.r4.s64 = ctx.r10.s64 + 30464;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AE84C;
	sub_822E0818(ctx, base);
	// li r10,143
	ctx.r10.s64 = 143;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,221
	ctx.r11.s64 = 221;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,77
	ctx.r7.s64 = 77;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,15
	ctx.r8.s64 = 15;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r7,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r7.u8);
	// stb r8,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r8.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,6
	ctx.r10.s64 = 6;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,12
	ctx.r10.s64 = 12;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,213
	ctx.r10.s64 = 213;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r9.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r10,54
	ctx.r10.s64 = 54;
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,104
	ctx.r5.s64 = 104;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r10,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r10.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r10,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r10.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// stb r8,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r8.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r7,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r7.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AEA4C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,224
	ctx.r1.s64 = ctx.r1.s64 + 224;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AEA60"))) PPC_WEAK_FUNC(sub_824AEA60);
PPC_FUNC_IMPL(__imp__sub_824AEA60) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e58
	ctx.lr = 0x824AEA68;
	__savegprlr_24(ctx, base);
	// stwu r1,-736(r1)
	ea = -736 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,571
	ctx.r9.s64 = 571;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30496
	ctx.r4.s64 = ctx.r10.s64 + 30496;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AEAA4;
	sub_822E0818(ctx, base);
	// li r11,254
	ctx.r11.s64 = 254;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,30
	ctx.r10.s64 = 30;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,70
	ctx.r7.s64 = 70;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,130
	ctx.r8.s64 = 130;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r24,77
	ctx.r24.s64 = 77;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// li r9,148
	ctx.r9.s64 = 148;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r6,162
	ctx.r6.s64 = 162;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r25,33
	ctx.r25.s64 = 33;
	// stb r24,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r24.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r7,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r7.u8);
	// stb r8,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r8.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r6,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r6.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r25,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r25.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r7,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r7.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r6,163
	ctx.r6.s64 = 163;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r26,40
	ctx.r26.s64 = 40;
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r4,38
	ctx.r4.s64 = 38;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// stb r6,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r6.u8);
	// li r6,166
	ctx.r6.s64 = 166;
	// stb r26,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r26.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r6,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r6.u8);
	// li r6,41
	ctx.r6.s64 = 41;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r7,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r7.u8);
	// stb r6,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r6.u8);
	// li r6,167
	ctx.r6.s64 = 167;
	// stb r8,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r8.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r9,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r9.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r11,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r11.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// stb r8,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r8.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r9,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r9.u8);
	// stb r6,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r6.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// stb r4,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r4.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r7,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r7.u8);
	// stb r8,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r8.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// li r6,164
	ctx.r6.s64 = 164;
	// stb r11,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r11.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// li r11,50
	ctx.r11.s64 = 50;
	// stb r9,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r9.u8);
	// li r3,89
	ctx.r3.s64 = 89;
	// stb r7,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r7.u8);
	// li r7,32
	ctx.r7.s64 = 32;
	// stb r9,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r9.u8);
	// li r27,14
	ctx.r27.s64 = 14;
	// stb r6,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r6.u8);
	// li r6,37
	ctx.r6.s64 = 37;
	// stb r11,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r11.u8);
	// li r9,165
	ctx.r9.s64 = 165;
	// li r11,88
	ctx.r11.s64 = 88;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// li r28,68
	ctx.r28.s64 = 68;
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r6,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r6.u8);
	// li r6,2
	ctx.r6.s64 = 2;
	// stb r10,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r10.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r8,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r8.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r10,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r10.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r9,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r9.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r7,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r7.u8);
	// stb r4,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r4.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r3,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r3.u8);
	// stb r6,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r6.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r27,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r27.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r11,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r11.u8);
	// stb r7,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r7.u8);
	// li r11,109
	ctx.r11.s64 = 109;
	// stb r6,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r6.u8);
	// li r8,101
	ctx.r8.s64 = 101;
	// stb r28,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r28.u8);
	// li r9,97
	ctx.r9.s64 = 97;
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// li r5,87
	ctx.r5.s64 = 87;
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// li r29,12
	ctx.r29.s64 = 12;
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r11,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r11.u8);
	// li r11,103
	ctx.r11.s64 = 103;
	// stb r8,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r8.u8);
	// li r6,8
	ctx.r6.s64 = 8;
	// stb r8,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r8.u8);
	// li r8,108
	ctx.r8.s64 = 108;
	// stb r9,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r9.u8);
	// stb r9,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r9.u8);
	// stb r11,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r11.u8);
	// li r11,248
	ctx.r11.s64 = 248;
	// stb r5,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r5.u8);
	// stb r8,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r8.u8);
	// li r8,53
	ctx.r8.s64 = 53;
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r11,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r11,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r11.u8);
	// li r11,116
	ctx.r11.s64 = 116;
	// stb r3,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r3.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r11,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r11.u8);
	// stb r11,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r11.u8);
	// li r11,104
	ctx.r11.s64 = 104;
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r11,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r29,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r29.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r6,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r6.u8);
	// stb r9,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r9.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r7,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r7.u8);
	// stb r26,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r26.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r8,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r8.u8);
	// stb r9,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r9.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r10,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r10.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r7,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r7.u8);
	// li r7,39
	ctx.r7.s64 = 39;
	// stb r11,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r11.u8);
	// stb r11,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r11.u8);
	// stb r11,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r11.u8);
	// stb r11,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r11.u8);
	// stb r7,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r7.u8);
	// li r7,252
	ctx.r7.s64 = 252;
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r7,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r7.u8);
	// li r7,251
	ctx.r7.s64 = 251;
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r8,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r8.u8);
	// stb r9,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r9.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r10,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r10.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r11,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r11.u8);
	// stb r11,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r11.u8);
	// stb r11,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r11.u8);
	// stb r11,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r11.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r5,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r5.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r8,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r8.u8);
	// stb r9,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r9.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r10,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r10.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r11,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r11.u8);
	// stb r11,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r11.u8);
	// stb r11,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r11.u8);
	// stb r11,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r11.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r5,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r5.u8);
	// stb r7,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r7.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r8,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r8.u8);
	// stb r9,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r9.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// li r7,62
	ctx.r7.s64 = 62;
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// li r5,246
	ctx.r5.s64 = 246;
	// stb r10,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r10.u8);
	// li r3,245
	ctx.r3.s64 = 245;
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r7,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r7.u8);
	// stb r5,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r5.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stb r7,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r7.u8);
	// li r7,80
	ctx.r7.s64 = 80;
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r11,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r11.u8);
	// stb r11,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r11.u8);
	// stb r11,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r11.u8);
	// stb r11,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r11.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r8,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r8.u8);
	// stb r9,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r9.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r10,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r10.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r11,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r11.u8);
	// stb r11,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r11.u8);
	// stb r11,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r11.u8);
	// stb r11,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r11.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r3,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r3.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r8,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r8.u8);
	// stb r9,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r9.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r10,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r10.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r11,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r11.u8);
	// stb r11,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r11.u8);
	// stb r11,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r11.u8);
	// stb r11,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r11.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// stb r7,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r7.u8);
	// stb r5,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r5.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r11,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r11.u8);
	// stb r11,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r11.u8);
	// stb r11,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r11.u8);
	// stb r11,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r11.u8);
	// stb r11,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r11.u8);
	// stb r11,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r11.u8);
	// stb r11,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r11.u8);
	// stb r11,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r10,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r10.u8);
	// stb r7,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r7.u8);
	// li r7,27
	ctx.r7.s64 = 27;
	// stb r10,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r10.u8);
	// li r10,15
	ctx.r10.s64 = 15;
	// stb r8,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r8.u8);
	// stb r11,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r11.u8);
	// li r11,9
	ctx.r11.s64 = 9;
	// stb r9,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r9.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r11,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r11,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r7,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r7.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r8,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r8.u8);
	// stb r9,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r9.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r25,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r25.u8);
	// stb r10,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r10.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r6,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r6.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r31,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r31.u8);
	// stb r31,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r31.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r11,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r11.u8);
	// stb r10,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r10.u8);
	// li r9,6
	ctx.r9.s64 = 6;
	// stb r10,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r11.u8);
	// li r5,571
	ctx.r5.s64 = 571;
	// stb r11,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r29,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r9,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// stb r10,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r10.u8);
	// li r10,54
	ctx.r10.s64 = 54;
	// stb r4,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r9,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r9.u8);
	// stb r10,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r10.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// stb r31,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r31.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r10,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r27,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r27.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r31.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r31,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r31.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r28,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r28.u8);
	// stb r10,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r10.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r31,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r31.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r6,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r6.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r3,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r3.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r11,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r11.u8);
	// stb r24,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r24.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AF498;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,736
	ctx.r1.s64 = ctx.r1.s64 + 736;
	// b 0x82e28ea8
	__restgprlr_24(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AF4A8"))) PPC_WEAK_FUNC(sub_824AF4A8);
PPC_FUNC_IMPL(__imp__sub_824AF4A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824AF4B0;
	__savegprlr_26(ctx, base);
	// stwu r1,-416(r1)
	ea = -416 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,279
	ctx.r9.s64 = 279;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30524
	ctx.r4.s64 = ctx.r10.s64 + 30524;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AF4EC;
	sub_822E0818(ctx, base);
	// li r11,36
	ctx.r11.s64 = 36;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r27,78
	ctx.r27.s64 = 78;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r28,97
	ctx.r28.s64 = 97;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r29,70
	ctx.r29.s64 = 70;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r3,130
	ctx.r3.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,178
	ctx.r11.s64 = 178;
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r27,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r27.u8);
	// li r9,65
	ctx.r9.s64 = 65;
	// stb r28,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r28.u8);
	// li r7,68
	ctx.r7.s64 = 68;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r8,155
	ctx.r8.s64 = 155;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r29,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r29.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,168
	ctx.r11.s64 = 168;
	// stb r3,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r3.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r7,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r7.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r9,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r9.u8);
	// li r9,37
	ctx.r9.s64 = 37;
	// li r6,16
	ctx.r6.s64 = 16;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r4,39
	ctx.r4.s64 = 39;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,191
	ctx.r5.s64 = 191;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r9,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r9.u8);
	// li r9,71
	ctx.r9.s64 = 71;
	// stb r6,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r6.u8);
	// li r6,18
	ctx.r6.s64 = 18;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// li r9,196
	ctx.r9.s64 = 196;
	// stb r6,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r6.u8);
	// li r6,128
	ctx.r6.s64 = 128;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r9,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r9.u8);
	// li r9,61
	ctx.r9.s64 = 61;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// li r9,228
	ctx.r9.s64 = 228;
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r7,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r7.u8);
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// li r9,120
	ctx.r9.s64 = 120;
	// stb r8,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r8.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r4,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r4.u8);
	// stb r9,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r9.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// stb r6,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r6.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r10,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r10.u8);
	// li r26,62
	ctx.r26.s64 = 62;
	// stb r10,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r10.u8);
	// li r10,140
	ctx.r10.s64 = 140;
	// stb r6,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r6.u8);
	// li r6,22
	ctx.r6.s64 = 22;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r26,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r26.u8);
	// li r26,34
	ctx.r26.s64 = 34;
	// stb r10,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r10.u8);
	// li r10,33
	ctx.r10.s64 = 33;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r26,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r26.u8);
	// stb r10,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r10.u8);
	// li r10,15
	ctx.r10.s64 = 15;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r10,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r10.u8);
	// li r10,143
	ctx.r10.s64 = 143;
	// stb r4,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r4.u8);
	// stb r9,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r9.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r5,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r5.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r6,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r6.u8);
	// stb r27,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r27.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r29,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r29.u8);
	// stb r3,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r3.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r9,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r9.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r11,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r11.u8);
	// stb r10,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r10.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// li r10,7
	ctx.r10.s64 = 7;
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// li r6,12
	ctx.r6.s64 = 12;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// li r5,279
	ctx.r5.s64 = 279;
	// stb r10,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r10.u8);
	// li r10,3
	ctx.r10.s64 = 3;
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r10,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r9,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r9.u8);
	// stb r6,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r6.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r10,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r10.u8);
	// stb r10,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r10.u8);
	// li r10,208
	ctx.r10.s64 = 208;
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r10,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r10.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r10,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r10,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r10.u8);
	// li r10,54
	ctx.r10.s64 = 54;
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r10,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r10.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r9,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r9.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r10,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r10.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r7,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r7.u8);
	// stb r8,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r8.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r11,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r11.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// li r11,156
	ctx.r11.s64 = 156;
	// stb r28,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r28.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r11,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r11,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r11,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824AFA10;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,416
	ctx.r1.s64 = ctx.r1.s64 + 416;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824AFA20"))) PPC_WEAK_FUNC(sub_824AFA20);
PPC_FUNC_IMPL(__imp__sub_824AFA20) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e5c
	ctx.lr = 0x824AFA28;
	__savegprlr_25(ctx, base);
	// stwu r1,-528(r1)
	ea = -528 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,370
	ctx.r9.s64 = 370;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30552
	ctx.r4.s64 = ctx.r10.s64 + 30552;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824AFA64;
	sub_822E0818(ctx, base);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r6,70
	ctx.r6.s64 = 70;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,130
	ctx.r7.s64 = 130;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r3,78
	ctx.r3.s64 = 78;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// li r8,14
	ctx.r8.s64 = 14;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r3,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r3.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,169
	ctx.r11.s64 = 169;
	// stb r8,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r8.u8);
	// stb r9,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r9.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r6,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r6.u8);
	// stb r7,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r7.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r6,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r6.u8);
	// stb r7,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r7.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r7,140
	ctx.r7.s64 = 140;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r4,89
	ctx.r4.s64 = 89;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r25,39
	ctx.r25.s64 = 39;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r26,120
	ctx.r26.s64 = 120;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r5,31
	ctx.r5.s64 = 31;
	// stb r8,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r8.u8);
	// stb r7,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r7.u8);
	// li r7,121
	ctx.r7.s64 = 121;
	// stb r4,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r4.u8);
	// li r6,15
	ctx.r6.s64 = 15;
	// stb r4,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r4.u8);
	// li r27,11
	ctx.r27.s64 = 11;
	// li r4,32
	ctx.r4.s64 = 32;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// li r7,10
	ctx.r7.s64 = 10;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// li r7,63
	ctx.r7.s64 = 63;
	// stb r25,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r25.u8);
	// stb r26,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r26.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r7,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r7.u8);
	// li r7,128
	ctx.r7.s64 = 128;
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r7,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r7.u8);
	// li r7,144
	ctx.r7.s64 = 144;
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r7,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r7.u8);
	// li r7,2
	ctx.r7.s64 = 2;
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r7,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r7.u8);
	// li r7,66
	ctx.r7.s64 = 66;
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r5,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r5.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r7,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r7.u8);
	// li r7,68
	ctx.r7.s64 = 68;
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r6,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r6.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r27,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r27.u8);
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// stb r7,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r7.u8);
	// stb r4,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r4.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// li r11,84
	ctx.r11.s64 = 84;
	// li r4,67
	ctx.r4.s64 = 67;
	// stb r3,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r3.u8);
	// stb r5,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r5.u8);
	// li r3,53
	ctx.r3.s64 = 53;
	// stb r5,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r5.u8);
	// li r29,85
	ctx.r29.s64 = 85;
	// li r5,145
	ctx.r5.s64 = 145;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// li r11,146
	ctx.r11.s64 = 146;
	// stb r4,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r4.u8);
	// li r4,97
	ctx.r4.s64 = 97;
	// li r28,65
	ctx.r28.s64 = 65;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r29,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r29.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r11.u8);
	// stb r11,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r11.u8);
	// stb r11,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r11.u8);
	// stb r11,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r11.u8);
	// stb r11,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r11.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// stb r11,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r11.u8);
	// li r11,41
	ctx.r11.s64 = 41;
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r3,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r3.u8);
	// stb r4,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r4.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r5,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r5.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r3,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r3.u8);
	// stb r4,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r4.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r10,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r10.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// stb r11,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r11.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// li r11,49
	ctx.r11.s64 = 49;
	// stb r6,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r6.u8);
	// stb r6,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r6.u8);
	// li r6,6
	ctx.r6.s64 = 6;
	// li r3,155
	ctx.r3.s64 = 155;
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r7,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r7.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r11,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r6,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r6.u8);
	// li r6,16
	ctx.r6.s64 = 16;
	// stb r3,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r3.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r11,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r6,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r6.u8);
	// li r6,83
	ctx.r6.s64 = 83;
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r11,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r6,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r6.u8);
	// li r6,58
	ctx.r6.s64 = 58;
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r9,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r9.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r11,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r11,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r29,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r29.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r9,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r9.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r11,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r11.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r8,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r8.u8);
	// stb r6,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r6.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r8,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// li r5,208
	ctx.r5.s64 = 208;
	// stb r11,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r11.u8);
	// stb r11,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r11.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r11.u8);
	// li r11,245
	ctx.r11.s64 = 245;
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r8,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r8.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r5,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r5.u8);
	// li r5,370
	ctx.r5.s64 = 370;
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r27,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r27.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r6,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r6.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r8,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r8.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r7,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r7.u8);
	// stb r3,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r3.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r9,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r9.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r11,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r11.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// li r11,52
	ctx.r11.s64 = 52;
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r11,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r11.u8);
	// li r11,76
	ctx.r11.s64 = 76;
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r25,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r25.u8);
	// stb r26,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r26.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r11,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r11.u8);
	// li r11,112
	ctx.r11.s64 = 112;
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r11,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r10,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r10.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r11,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r28,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r28.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r11,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r11.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B0124;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,528
	ctx.r1.s64 = ctx.r1.s64 + 528;
	// b 0x82e28eac
	__restgprlr_25(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B0138"))) PPC_WEAK_FUNC(sub_824B0138);
PPC_FUNC_IMPL(__imp__sub_824B0138) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e64
	ctx.lr = 0x824B0140;
	__savegprlr_27(ctx, base);
	// stwu r1,-352(r1)
	ea = -352 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,213
	ctx.r9.s64 = 213;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30584
	ctx.r4.s64 = ctx.r10.s64 + 30584;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B017C;
	sub_822E0818(ctx, base);
	// li r11,86
	ctx.r11.s64 = 86;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,20
	ctx.r9.s64 = 20;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r27,78
	ctx.r27.s64 = 78;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r28,21
	ctx.r28.s64 = 21;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,203
	ctx.r11.s64 = 203;
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// li r29,143
	ctx.r29.s64 = 143;
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r27,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r27.u8);
	// li r4,13
	ctx.r4.s64 = 13;
	// stb r28,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r28.u8);
	// li r3,14
	ctx.r3.s64 = 14;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r7,16
	ctx.r7.s64 = 16;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// stb r8,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r8.u8);
	// stb r29,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r29.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// stb r4,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r4.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r11.u8);
	// stb r3,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r3.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// stb r9,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r9.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r7,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r7.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// li r6,17
	ctx.r6.s64 = 17;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r7,18
	ctx.r7.s64 = 18;
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r5,12
	ctx.r5.s64 = 12;
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// li r11,215
	ctx.r11.s64 = 215;
	// stb r6,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r6.u8);
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// li r7,19
	ctx.r7.s64 = 19;
	// stb r6,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r6.u8);
	// li r6,65
	ctx.r6.s64 = 65;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// li r11,89
	ctx.r11.s64 = 89;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// li r7,10
	ctx.r7.s64 = 10;
	// stb r6,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r6.u8);
	// li r6,69
	ctx.r6.s64 = 69;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r11,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r7,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r7.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r5,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r5.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r10,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r10.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r11.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// li r11,76
	ctx.r11.s64 = 76;
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r27,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r27.u8);
	// stb r6,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r6.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r11,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r11.u8);
	// stb r9,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r9.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r10,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r10.u8);
	// stb r10,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r10.u8);
	// li r10,208
	ctx.r10.s64 = 208;
	// stb r7,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r7.u8);
	// li r7,6
	ctx.r7.s64 = 6;
	// stb r29,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r29.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r4,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r11.u8);
	// stb r11,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r10,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r5,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r5.u8);
	// li r5,213
	ctx.r5.s64 = 213;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r8,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r8.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r11,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r11,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r7,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r7.u8);
	// stb r7,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r7.u8);
	// stb r9,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r9.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r3,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r3.u8);
	// stb r10,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r10.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r11,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r11.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// li r11,241
	ctx.r11.s64 = 241;
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r8,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r8.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r11,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r28,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r28.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r6,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r6.u8);
	// stb r11,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r11.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B057C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,352
	ctx.r1.s64 = ctx.r1.s64 + 352;
	// b 0x82e28eb4
	__restgprlr_27(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B0590"))) PPC_WEAK_FUNC(sub_824B0590);
PPC_FUNC_IMPL(__imp__sub_824B0590) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B0598;
	__savegprlr_29(ctx, base);
	// stwu r1,-432(r1)
	ea = -432 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,311
	ctx.r9.s64 = 311;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30620
	ctx.r4.s64 = ctx.r10.s64 + 30620;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B05D4;
	sub_822E0818(ctx, base);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,209
	ctx.r10.s64 = 209;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,172
	ctx.r9.s64 = 172;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r3,3
	ctx.r3.s64 = 3;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,115
	ctx.r11.s64 = 115;
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// li r10,70
	ctx.r10.s64 = 70;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,20
	ctx.r9.s64 = 20;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,90
	ctx.r11.s64 = 90;
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// li r10,130
	ctx.r10.s64 = 130;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,210
	ctx.r11.s64 = 210;
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,89
	ctx.r11.s64 = 89;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r11.u8);
	// li r11,120
	ctx.r11.s64 = 120;
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r3,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r3.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r9,91
	ctx.r9.s64 = 91;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r8,95
	ctx.r8.s64 = 95;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r9,79
	ctx.r9.s64 = 79;
	// stb r8,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r8.u8);
	// li r8,186
	ctx.r8.s64 = 186;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r9,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r9.u8);
	// li r9,93
	ctx.r9.s64 = 93;
	// stb r8,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r8.u8);
	// li r8,94
	ctx.r8.s64 = 94;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r9,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r9.u8);
	// li r9,170
	ctx.r9.s64 = 170;
	// stb r8,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r8.u8);
	// li r8,76
	ctx.r8.s64 = 76;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r9,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r9.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r11,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r11.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r9,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r9.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r10,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r10.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r8,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r8.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// li r8,67
	ctx.r8.s64 = 67;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// li r7,97
	ctx.r7.s64 = 97;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// li r4,69
	ctx.r4.s64 = 69;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// li r5,77
	ctx.r5.s64 = 77;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// li r6,15
	ctx.r6.s64 = 15;
	// stb r9,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r9.u8);
	// stb r8,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r8.u8);
	// stb r7,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r7.u8);
	// li r7,18
	ctx.r7.s64 = 18;
	// stb r8,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r8.u8);
	// li r8,33
	ctx.r8.s64 = 33;
	// stb r11,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r11.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r7,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r7.u8);
	// li r7,8
	ctx.r7.s64 = 8;
	// stb r8,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r8.u8);
	// li r8,143
	ctx.r8.s64 = 143;
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r10,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r10.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r9,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r9.u8);
	// stb r11,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r11.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r10,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r10.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r4,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r4.u8);
	// stb r5,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r5.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r6,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r6.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r7,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r7.u8);
	// stb r8,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r8.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r6,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r6.u8);
	// li r6,38
	ctx.r6.s64 = 38;
	// stb r3,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r3.u8);
	// li r3,11
	ctx.r3.s64 = 11;
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r8,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r6,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r6.u8);
	// li r6,14
	ctx.r6.s64 = 14;
	// stb r3,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r3.u8);
	// li r3,12
	ctx.r3.s64 = 12;
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r8,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r8.u8);
	// stb r8,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// stb r6,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r6.u8);
	// li r6,58
	ctx.r6.s64 = 58;
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r8,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r8.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r8,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r8.u8);
	// li r8,68
	ctx.r8.s64 = 68;
	// stb r3,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r3.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r8,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r8.u8);
	// li r8,155
	ctx.r8.s64 = 155;
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r6,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r6.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r8,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r8.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r7,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r7.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r11,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r11.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// li r11,60
	ctx.r11.s64 = 60;
	// stb r4,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r4.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r5,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r5.u8);
	// li r5,311
	ctx.r5.s64 = 311;
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r8,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r8.u8);
	// li r8,53
	ctx.r8.s64 = 53;
	// stb r11,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r11.u8);
	// li r11,35
	ctx.r11.s64 = 35;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r8,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r8.u8);
	// li r8,37
	ctx.r8.s64 = 37;
	// stb r11,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r11.u8);
	// li r11,215
	ctx.r11.s64 = 215;
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r8,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r8.u8);
	// li r8,163
	ctx.r8.s64 = 163;
	// stb r11,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r8,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r8.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r9,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r9.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r10,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r10.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r11,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r11.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B0B8C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,432
	ctx.r1.s64 = ctx.r1.s64 + 432;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B0BA0"))) PPC_WEAK_FUNC(sub_824B0BA0);
PPC_FUNC_IMPL(__imp__sub_824B0BA0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e40
	ctx.lr = 0x824B0BA8;
	__savegprlr_18(ctx, base);
	// stwu r1,-880(r1)
	ea = -880 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,679
	ctx.r9.s64 = 679;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30652
	ctx.r4.s64 = ctx.r10.s64 + 30652;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B0BE4;
	sub_822E0818(ctx, base);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r6,24
	ctx.r6.s64 = 24;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,25
	ctx.r9.s64 = 25;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r7,70
	ctx.r7.s64 = 70;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,130
	ctx.r8.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,149
	ctx.r11.s64 = 149;
	// li r10,159
	ctx.r10.s64 = 159;
	// stb r6,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r6.u8);
	// li r18,33
	ctx.r18.s64 = 33;
	// stb r9,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r9.u8);
	// li r24,1
	ctx.r24.s64 = 1;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r7,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r7.u8);
	// stb r8,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r8.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r10,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r10.u8);
	// stb r18,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r18.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r6,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r6.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r7,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r7.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r24,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r24.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r9,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r9.u8);
	// li r5,35
	ctx.r5.s64 = 35;
	// stb r9,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r9.u8);
	// li r9,34
	ctx.r9.s64 = 34;
	// li r19,32
	ctx.r19.s64 = 32;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r25,2
	ctx.r25.s64 = 2;
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// li r3,3
	ctx.r3.s64 = 3;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r5,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r5.u8);
	// li r5,154
	ctx.r5.s64 = 154;
	// stb r9,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r9.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r19,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r19.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r6,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r6.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r7,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r7.u8);
	// stb r8,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r8.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r25,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r25.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r6,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r6.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// stb r8,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r8.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r3,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r3.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r10,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r10.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r9,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r9.u8);
	// stb r5,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r5.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r7,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r7.u8);
	// stb r8,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r8.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// li r4,30
	ctx.r4.s64 = 30;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r10,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r10.u8);
	// stb r4,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r4.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r9,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r9.u8);
	// stb r5,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r5.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r7,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r7.u8);
	// stb r8,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r8.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r24,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r24.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r10,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r10.u8);
	// stb r4,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r4.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r9,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r9.u8);
	// stb r5,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r5.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r7,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r7.u8);
	// stb r8,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r8.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r11,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r11.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r25,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r25.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r10,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r10.u8);
	// stb r4,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r4.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r9,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r9.u8);
	// stb r5,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r5.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r7,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r7.u8);
	// stb r10,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r10.u8);
	// li r10,31
	ctx.r10.s64 = 31;
	// stb r8,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r8.u8);
	// li r5,61
	ctx.r5.s64 = 61;
	// li r8,63
	ctx.r8.s64 = 63;
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// li r26,15
	ctx.r26.s64 = 15;
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// li r20,143
	ctx.r20.s64 = 143;
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r10,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r10.u8);
	// li r10,204
	ctx.r10.s64 = 204;
	// li r27,68
	ctx.r27.s64 = 68;
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// li r4,128
	ctx.r4.s64 = 128;
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// li r7,205
	ctx.r7.s64 = 205;
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r11,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r11.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r3,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r3.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r6,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r6.u8);
	// stb r26,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r26.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r9,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r9.u8);
	// stb r20,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r20.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r27,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r27.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r11,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r11.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r8,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r8.u8);
	// stb r4,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r4.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r8,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r8.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r5,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r5.u8);
	// stb r10,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r10.u8);
	// stb r10,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r10.u8);
	// stb r7,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r7.u8);
	// stb r5,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r5.u8);
	// stb r10,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r10.u8);
	// stb r10,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r10.u8);
	// stb r10,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r10.u8);
	// li r21,66
	ctx.r21.s64 = 66;
	// stb r10,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r10.u8);
	// li r22,72
	ctx.r22.s64 = 72;
	// stb r10,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r10.u8);
	// stb r10,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r10.u8);
	// li r10,95
	ctx.r10.s64 = 95;
	// stb r8,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r8.u8);
	// stb r5,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r5.u8);
	// stb r8,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r8.u8);
	// stb r5,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r5.u8);
	// li r5,152
	ctx.r5.s64 = 152;
	// stb r10,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r10.u8);
	// li r10,124
	ctx.r10.s64 = 124;
	// stb r8,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r8.u8);
	// stb r8,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r8.u8);
	// stb r8,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r8.u8);
	// li r8,120
	ctx.r8.s64 = 120;
	// stb r7,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r7.u8);
	// stb r10,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r10.u8);
	// li r10,238
	ctx.r10.s64 = 238;
	// stb r4,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r4.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r7,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r7.u8);
	// stb r10,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r10.u8);
	// li r10,153
	ctx.r10.s64 = 153;
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r7,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r7.u8);
	// stb r10,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r10.u8);
	// li r10,39
	ctx.r10.s64 = 39;
	// stb r4,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r4.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r4,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r4.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r9,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r9.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r10,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r10.u8);
	// stb r8,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r8.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r11,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r11.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r21,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r21.u8);
	// stb r22,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r22.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r9,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r9.u8);
	// stb r5,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r5.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// li r29,13
	ctx.r29.s64 = 13;
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// li r3,55
	ctx.r3.s64 = 55;
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// li r4,197
	ctx.r4.s64 = 197;
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// li r5,172
	ctx.r5.s64 = 172;
	// stb r10,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r10.u8);
	// li r28,12
	ctx.r28.s64 = 12;
	// stb r8,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r8.u8);
	// stb r29,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r29.u8);
	// li r29,64
	ctx.r29.s64 = 64;
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r11,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r11.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r3,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r3.u8);
	// stb r10,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r10.u8);
	// stb r4,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r4.u8);
	// stb r5,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r5.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r6,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r6.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r10,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r10.u8);
	// stb r8,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r8.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r11,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r11.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r29,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r29.u8);
	// stb r29,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r29.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r6,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r6.u8);
	// stb r28,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r28.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r10,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r10.u8);
	// stb r8,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r8.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r11,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r11.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r3,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r3.u8);
	// stb r10,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r10.u8);
	// li r23,206
	ctx.r23.s64 = 206;
	// stb r19,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r19.u8);
	// stb r7,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r7.u8);
	// li r29,79
	ctx.r29.s64 = 79;
	// li r7,20
	ctx.r7.s64 = 20;
	// stb r4,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r4.u8);
	// li r19,115
	ctx.r19.s64 = 115;
	// stb r5,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r5.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r23,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r23.u8);
	// li r23,65
	ctx.r23.s64 = 65;
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r29,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r29.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r10,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r10.u8);
	// stb r8,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r8.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r11,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r11.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r23,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r23.u8);
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r29,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r29.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r10,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r10.u8);
	// stb r8,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r8.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r11,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r11.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r3,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r3.u8);
	// stb r10,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r10.u8);
	// stb r4,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r4.u8);
	// stb r5,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r5.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r7,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r7.u8);
	// stb r19,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r19.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r10,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r10.u8);
	// stb r8,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r8.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r11,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r11.u8);
	// stb r11,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// stb r7,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r7.u8);
	// li r7,114
	ctx.r7.s64 = 114;
	// stb r10,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r10.u8);
	// stb r10,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r11,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r11.u8);
	// li r11,207
	ctx.r11.s64 = 207;
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r21,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r21.u8);
	// stb r22,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r22.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r7,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r7.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r31.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r8,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r8.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r31,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r31.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r3,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r3.u8);
	// stb r4,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r4.u8);
	// stb r5,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r5.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r23,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r23.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r27,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r27.u8);
	// stb r10,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r10.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r9,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r9.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r29,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r29.u8);
	// stb r11,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r11.u8);
	// stb r31,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r31.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r18,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r18.u8);
	// stb r26,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r26.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r31,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r31.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r9,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r9.u8);
	// li r5,679
	ctx.r5.s64 = 679;
	// stb r20,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r20.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r8,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r8.u8);
	// li r8,6
	ctx.r8.s64 = 6;
	// stb r11,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r11.u8);
	// stb r11,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r8,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r8.u8);
	// li r8,16
	ctx.r8.s64 = 16;
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r11,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// stb r8,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r8.u8);
	// li r8,58
	ctx.r8.s64 = 58;
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r8,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r8,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r8.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r25,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r25.u8);
	// stb r24,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r24.u8);
	// stb r26,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r26.u8);
	// stb r28,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r28.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r28,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r28.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r11,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r11.u8);
	// stb r31,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r31.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r31,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r31.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r31,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r31.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r8,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r8.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r27,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r27.u8);
	// stb r10,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r10.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r11,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r31,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r31.u8);
	// stb r11,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r9,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r9.u8);
	// stb r31,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r31,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r31.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r6,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r6.u8);
	// stb r31,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r31.u8);
	// stb r31,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r31.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r11,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r11.u8);
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// stb r31,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r31.u8);
	// stb r31,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r31.u8);
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B178C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,880
	ctx.r1.s64 = ctx.r1.s64 + 880;
	// b 0x82e28e90
	__restgprlr_18(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B17A0"))) PPC_WEAK_FUNC(sub_824B17A0);
PPC_FUNC_IMPL(__imp__sub_824B17A0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B17A8;
	__savegprlr_29(ctx, base);
	// stwu r1,-352(r1)
	ea = -352 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,227
	ctx.r9.s64 = 227;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30684
	ctx.r4.s64 = ctx.r10.s64 + 30684;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B17E4;
	sub_822E0818(ctx, base);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r6,47
	ctx.r6.s64 = 47;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,65
	ctx.r8.s64 = 65;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,68
	ctx.r9.s64 = 68;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,161
	ctx.r11.s64 = 161;
	// stb r6,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r6.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,190
	ctx.r11.s64 = 190;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,172
	ctx.r11.s64 = 172;
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,32
	ctx.r11.s64 = 32;
	// stb r9,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r9.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r7,48
	ctx.r7.s64 = 48;
	// stb r8,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r8.u8);
	// li r5,18
	ctx.r5.s64 = 18;
	// stb r6,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r6.u8);
	// stb r8,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r8.u8);
	// li r6,145
	ctx.r6.s64 = 145;
	// li r8,33
	ctx.r8.s64 = 33;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r7,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r7.u8);
	// stb r5,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r5.u8);
	// li r5,31
	ctx.r5.s64 = 31;
	// stb r7,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r7.u8);
	// li r7,20
	ctx.r7.s64 = 20;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r5,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r5.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// stb r10,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r10.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r6,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r6.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r8,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r8.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r9,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r9.u8);
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r11,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r11.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r7,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r7.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r8,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r8.u8);
	// li r8,15
	ctx.r8.s64 = 15;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r8,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r8.u8);
	// li r8,143
	ctx.r8.s64 = 143;
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r8,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r8.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r11,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r11.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r8,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r8.u8);
	// li r8,3
	ctx.r8.s64 = 3;
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r8,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r8,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r8.u8);
	// li r8,11
	ctx.r8.s64 = 11;
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r8,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r8.u8);
	// li r8,12
	ctx.r8.s64 = 12;
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r8,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r8.u8);
	// stb r8,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r8.u8);
	// li r8,213
	ctx.r8.s64 = 213;
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r8,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r8.u8);
	// li r8,14
	ctx.r8.s64 = 14;
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r8,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r8.u8);
	// li r8,58
	ctx.r8.s64 = 58;
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r8,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r8,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r8.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r8,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r8.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r11,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r11.u8);
	// li r11,26
	ctx.r11.s64 = 26;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r9,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r9.u8);
	// li r5,227
	ctx.r5.s64 = 227;
	// stb r10,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r10.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r11,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r11.u8);
	// li r11,44
	ctx.r11.s64 = 44;
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r11,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r11,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r11,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r11.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B1C14;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,352
	ctx.r1.s64 = ctx.r1.s64 + 352;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B1C28"))) PPC_WEAK_FUNC(sub_824B1C28);
PPC_FUNC_IMPL(__imp__sub_824B1C28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B1C30;
	__savegprlr_29(ctx, base);
	// stwu r1,-256(r1)
	ea = -256 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,132
	ctx.r9.s64 = 132;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30720
	ctx.r4.s64 = ctx.r10.s64 + 30720;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B1C6C;
	sub_822E0818(ctx, base);
	// li r10,172
	ctx.r10.s64 = 172;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,37
	ctx.r9.s64 = 37;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,143
	ctx.r8.s64 = 143;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r10.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,167
	ctx.r11.s64 = 167;
	// stb r10,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r9,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r9.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,33
	ctx.r10.s64 = 33;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,15
	ctx.r10.s64 = 15;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// li r10,166
	ctx.r10.s64 = 166;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// stb r11,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r11.u8);
	// li r5,132
	ctx.r5.s64 = 132;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r8,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r8.u8);
	// li r8,14
	ctx.r8.s64 = 14;
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// li r10,163
	ctx.r10.s64 = 163;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r11,63
	ctx.r11.s64 = 63;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r8,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r8.u8);
	// li r8,5
	ctx.r8.s64 = 5;
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// li r10,39
	ctx.r10.s64 = 39;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r8,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// stb r10,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r10.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r8,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r8.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r8,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r8.u8);
	// li r8,68
	ctx.r8.s64 = 68;
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r8,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r8.u8);
	// li r8,155
	ctx.r8.s64 = 155;
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r8,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r8.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r11,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r11.u8);
	// li r11,128
	ctx.r11.s64 = 128;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r11,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B1EFC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,256
	ctx.r1.s64 = ctx.r1.s64 + 256;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B1F10"))) PPC_WEAK_FUNC(sub_824B1F10);
PPC_FUNC_IMPL(__imp__sub_824B1F10) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824B1F18;
	__savegprlr_14(ctx, base);
	// stwu r1,-1552(r1)
	ea = -1552 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r24,r3
	ctx.r24.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r24,4
	ctx.r3.s64 = ctx.r24.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,1311
	ctx.r9.s64 = 1311;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30752
	ctx.r4.s64 = ctx.r10.s64 + 30752;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r24)
	PPC_STORE_U32(ctx.r24.u32 + 0, ctx.r11.u32);
	// stw r9,16(r24)
	PPC_STORE_U32(ctx.r24.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B1F54;
	sub_822E0818(ctx, base);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,46
	ctx.r10.s64 = 46;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,12
	ctx.r7.s64 = 12;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r17,70
	ctx.r17.s64 = 70;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r21,130
	ctx.r21.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,27
	ctx.r10.s64 = 27;
	// li r22,172
	ctx.r22.s64 = 172;
	// stb r7,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r7.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r15,143
	ctx.r15.s64 = 143;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,47
	ctx.r11.s64 = 47;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r18,1
	ctx.r18.s64 = 1;
	// li r10,108
	ctx.r10.s64 = 108;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r17,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r17.u8);
	// stb r21,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r21.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r22,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r22.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r7,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r7.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r8,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r8.u8);
	// stb r15,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r15.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r18,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r18.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r14,3
	ctx.r14.s64 = 3;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r25,93
	ctx.r25.s64 = 93;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r26,170
	ctx.r26.s64 = 170;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r27,95
	ctx.r27.s64 = 95;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// li r28,186
	ctx.r28.s64 = 186;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r29,94
	ctx.r29.s64 = 94;
	// stb r14,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r14.u8);
	// li r30,76
	ctx.r30.s64 = 76;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r25,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r25.u8);
	// stb r26,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r26.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// stb r10,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r10.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r27,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r27.u8);
	// stb r28,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r28.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r29,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r29.u8);
	// stb r30,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r30.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// li r19,68
	ctx.r19.s64 = 68;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// li r4,97
	ctx.r4.s64 = 97;
	// stb r9,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r9.u8);
	// li r5,18
	ctx.r5.s64 = 18;
	// stb r10,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r10.u8);
	// li r20,128
	ctx.r20.s64 = 128;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// li r3,69
	ctx.r3.s64 = 69;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// li r6,77
	ctx.r6.s64 = 77;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r19,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r19.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r4,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r4.u8);
	// stb r5,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r5.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r9,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r9.u8);
	// stb r10,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r10.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r19,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r19.u8);
	// stb r20,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r20.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r3,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r3.u8);
	// stb r6,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r6.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r25,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r25.u8);
	// stb r26,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r26.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r9,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r9.u8);
	// stb r10,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r10.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// li r23,67
	ctx.r23.s64 = 67;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// li r16,106
	ctx.r16.s64 = 106;
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r27,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r27.u8);
	// stb r28,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r28.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r9,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r9.u8);
	// stb r10,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r10.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r29,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r29.u8);
	// stb r30,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r30.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r9,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r9.u8);
	// stb r10,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r10.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r11,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r11.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r23,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r23.u8);
	// stb r16,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r16.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r4,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r4.u8);
	// stb r5,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r5.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r9,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r9.u8);
	// stb r10,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r10.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r11,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r11.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r19,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r19.u8);
	// stb r20,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r20.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r3,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r3.u8);
	// stb r6,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r6.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r25,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r25.u8);
	// stb r26,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r26.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r9,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r9.u8);
	// stb r10,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r10.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r11,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r11.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r27,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r27.u8);
	// stb r28,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r28.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r9,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r9.u8);
	// stb r10,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r10.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r11,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r11.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r29,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r29.u8);
	// stb r30,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r30.u8);
	// li r16,250
	ctx.r16.s64 = 250;
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r16,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r16.u8);
	// li r16,72
	ctx.r16.s64 = 72;
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r9,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r9.u8);
	// stb r10,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r10.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r16,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r16.u8);
	// li r16,48
	ctx.r16.s64 = 48;
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r11,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r11.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r23,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r23.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r4,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r4.u8);
	// stb r5,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r5.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r9,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r9.u8);
	// stb r10,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r10.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r11,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r11.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r23,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r23.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r3,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r3.u8);
	// stb r6,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r6.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r7,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r7.u8);
	// stb r16,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r16.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r17,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r17.u8);
	// stb r21,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r21.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r7,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r7.u8);
	// li r16,53
	ctx.r16.s64 = 53;
	// stb r7,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r7.u8);
	// li r7,46
	ctx.r7.s64 = 46;
	// stb r21,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r21.u8);
	// li r21,45
	ctx.r21.s64 = 45;
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r11,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r11.u8);
	// stb r16,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r16.u8);
	// li r16,21
	ctx.r16.s64 = 21;
	// stb r7,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r7.u8);
	// li r7,91
	ctx.r7.s64 = 91;
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r16,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r16.u8);
	// li r16,89
	ctx.r16.s64 = 89;
	// stb r7,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r7.u8);
	// li r7,79
	ctx.r7.s64 = 79;
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r22,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r22.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r17,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r17.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r11,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r11.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r22,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r22.u8);
	// stb r21,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r21.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r16,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r16.u8);
	// stb r14,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r14.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r10,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r10.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r31,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r31.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r7,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r7.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r31,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r31.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r25,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r25.u8);
	// stb r26,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r26.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r9,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r9.u8);
	// stb r10,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r10.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r31.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r11,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r11.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r27,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r27.u8);
	// stb r28,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r28.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r31,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r31.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r9,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r9.u8);
	// stb r10,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r10.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r11,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r11.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r29,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r29.u8);
	// stb r30,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r30.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r31,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r31.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r9,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r9.u8);
	// stb r10,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r10.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r31,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r31.u8);
	// stb r31,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r31.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r11,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r11.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r23,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r23.u8);
	// stb r20,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r20.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// li r7,82
	ctx.r7.s64 = 82;
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r4,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r4.u8);
	// stb r5,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r5.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r7,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r7.u8);
	// li r7,228
	ctx.r7.s64 = 228;
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r9,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r9.u8);
	// stb r10,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r10.u8);
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r31,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r31.u8);
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r11,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r11.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r23,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r23.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r3,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r3.u8);
	// stb r6,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r6.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r31,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r31.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r21,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r21.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r8,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r8.u8);
	// stb r15,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r15.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r18,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r18.u8);
	// stb r7,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r7.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r31,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r31.u8);
	// stb r31,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r31.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r11,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r11.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r25,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r25.u8);
	// stb r26,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r26.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r31,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r31.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r9,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r9.u8);
	// stb r10,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r10.u8);
	// stb r31,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r31.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// li r22,65
	ctx.r22.s64 = 65;
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// li r7,66
	ctx.r7.s64 = 66;
	// stb r31,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r31.u8);
	// stb r31,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r31.u8);
	// stb r11,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r11.u8);
	// stb r31,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r31.u8);
	// stb r31,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r31.u8);
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r22,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r22.u8);
	// stb r20,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r20.u8);
	// stb r31,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r31.u8);
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r27,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r27.u8);
	// stb r28,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r28.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r9,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r9.u8);
	// stb r10,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r10.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r31,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r31.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r31,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r31.u8);
	// stb r31,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r31.u8);
	// stb r11,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r11.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r31,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r31.u8);
	// stb r22,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r22.u8);
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r29,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r29.u8);
	// stb r30,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r30.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r31,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r31.u8);
	// stb r9,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r9.u8);
	// stb r10,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r10.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r11,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r11.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r31,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r31.u8);
	// stb r7,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r7.u8);
	// stb r8,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r8.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r31,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r31.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r31,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r31.u8);
	// stb r4,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r4.u8);
	// stb r5,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r5.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r31,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r31.u8);
	// stb r31,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r31.u8);
	// stb r31,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r31.u8);
	// stb r9,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r9.u8);
	// li r20,136
	ctx.r20.s64 = 136;
	// stb r10,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r10.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r20,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r20.u8);
	// li r20,64
	ctx.r20.s64 = 64;
	// stb r31,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r31.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r11,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r11.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r31,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r31.u8);
	// stb r7,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r7.u8);
	// stb r8,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r8.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r31,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r31.u8);
	// stb r31,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r31.u8);
	// stb r31,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r31.u8);
	// stb r3,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r3.u8);
	// stb r6,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r6.u8);
	// stb r31,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r31.u8);
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r31,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r31.u8);
	// stb r25,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r25.u8);
	// stb r26,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r26.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r31,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r31.u8);
	// stb r31,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r31.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r9,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r9.u8);
	// stb r10,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r10.u8);
	// stb r31,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r31.u8);
	// stb r31,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r31.u8);
	// stb r31,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r31.u8);
	// stb r31,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r31.u8);
	// stb r31,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r31.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r11,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r11.u8);
	// stb r31,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r31.u8);
	// stb r31,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r31.u8);
	// stb r31,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r31.u8);
	// stb r31,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r31.u8);
	// stb r22,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r22.u8);
	// stb r31,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r31.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r31,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r31.u8);
	// stb r31,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r31.u8);
	// stb r27,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r27.u8);
	// stb r28,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r28.u8);
	// stb r31,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r31.u8);
	// stb r31,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r31.u8);
	// stb r31,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r31.u8);
	// stb r31,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r31.u8);
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r9,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r9.u8);
	// stb r10,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r10.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r31,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r31.u8);
	// stb r31,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r31.u8);
	// stb r31,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r31.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r31,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r31.u8);
	// stb r11,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r11.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r31,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r31.u8);
	// stb r7,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r7.u8);
	// stb r20,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r20.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r31,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r31.u8);
	// stb r31,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r31.u8);
	// stb r29,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r29.u8);
	// stb r30,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r30.u8);
	// stb r31,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r31.u8);
	// stb r31,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r31.u8);
	// stb r31,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r31.u8);
	// stb r31,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r31.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r9,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r9.u8);
	// stb r10,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r10.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r31,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r31.u8);
	// stb r31,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r31.u8);
	// stb r31,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r31.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// stb r11,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r11.u8);
	// stb r31,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r31.u8);
	// stb r31,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r31.u8);
	// stb r31,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r31.u8);
	// stb r31,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r31.u8);
	// stb r7,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r7.u8);
	// stb r8,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r8.u8);
	// stb r31,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r31.u8);
	// stb r31,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r31.u8);
	// stb r31,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r4,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r4.u8);
	// stb r5,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r5.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r31,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r31.u8);
	// stb r31,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r31.u8);
	// stb r31,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r31.u8);
	// stb r31,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r31.u8);
	// stb r9,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r9.u8);
	// stb r10,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r10.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r31,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r31.u8);
	// stb r31,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r31.u8);
	// stb r31,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r31.u8);
	// stb r31,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r31.u8);
	// stb r31,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r31.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r11,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r11.u8);
	// stb r31,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r31.u8);
	// stb r31,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r31.u8);
	// stb r31,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r31.u8);
	// stb r31,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r31.u8);
	// stb r7,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r7.u8);
	// stb r8,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r8.u8);
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r31.u8);
	// stb r31,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r31.u8);
	// stb r31,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r31.u8);
	// stb r3,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r3.u8);
	// stb r6,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r6.u8);
	// stb r31,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r31.u8);
	// stb r31,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r31.u8);
	// stb r31,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r31.u8);
	// stb r31,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r31.u8);
	// stb r31,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r31.u8);
	// stb r31,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r31.u8);
	// stb r25,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r25.u8);
	// stb r26,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r26.u8);
	// stb r31,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r31.u8);
	// stb r31,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r31.u8);
	// stb r31,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r31.u8);
	// stb r31,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r31.u8);
	// stb r31,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r31.u8);
	// stb r31,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r31.u8);
	// stb r9,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r9.u8);
	// stb r10,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r10.u8);
	// stb r31,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r31.u8);
	// stb r31,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r31.u8);
	// stb r31,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r31.u8);
	// li r14,144
	ctx.r14.s64 = 144;
	// stb r31,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r31.u8);
	// li r20,178
	ctx.r20.s64 = 178;
	// stb r31,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r31.u8);
	// stb r31,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r31.u8);
	// stb r31,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r31.u8);
	// stb r11,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r11.u8);
	// stb r31,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r31.u8);
	// stb r31,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r31.u8);
	// stb r31,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r31.u8);
	// stb r31,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r31.u8);
	// stb r22,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r22.u8);
	// stb r14,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r14.u8);
	// stb r31,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r31.u8);
	// stb r31,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r31.u8);
	// stb r31,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r31.u8);
	// stb r31,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r31.u8);
	// stb r27,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r27.u8);
	// stb r28,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r28.u8);
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// stb r31,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r31.u8);
	// stb r31,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r31.u8);
	// stb r31,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r31.u8);
	// stb r31,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r31.u8);
	// stb r31,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r31.u8);
	// stb r9,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r9.u8);
	// stb r10,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r10.u8);
	// stb r31,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r31.u8);
	// stb r31,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r31.u8);
	// stb r31,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r31.u8);
	// stb r31,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r31.u8);
	// stb r31,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r31.u8);
	// stb r31,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r31.u8);
	// stb r31,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r31.u8);
	// stb r11,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r11.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r31,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r31.u8);
	// stb r31,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r31.u8);
	// stb r7,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r7.u8);
	// stb r20,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r20.u8);
	// stb r31,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r31.u8);
	// stb r31,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r31.u8);
	// stb r31,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r31.u8);
	// stb r31,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r31.u8);
	// stb r29,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r29.u8);
	// stb r30,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r30.u8);
	// stb r31,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r31.u8);
	// stb r31,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r31.u8);
	// stb r31,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r31.u8);
	// stb r31,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r31.u8);
	// stb r31,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r31.u8);
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r9,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r9.u8);
	// stb r10,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r10.u8);
	// stb r31,1044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1044, ctx.r31.u8);
	// stb r31,1045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1045, ctx.r31.u8);
	// stb r31,1046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1046, ctx.r31.u8);
	// stb r31,1047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1047, ctx.r31.u8);
	// stb r31,1048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1048, ctx.r31.u8);
	// stb r31,1049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1049, ctx.r31.u8);
	// stb r31,1050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1050, ctx.r31.u8);
	// stb r11,1051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1051, ctx.r11.u8);
	// stb r31,1052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1052, ctx.r31.u8);
	// stb r31,1053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1053, ctx.r31.u8);
	// stb r31,1054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1054, ctx.r31.u8);
	// stb r31,1055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1055, ctx.r31.u8);
	// stb r7,1056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1056, ctx.r7.u8);
	// stb r8,1057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1057, ctx.r8.u8);
	// stb r31,1058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1058, ctx.r31.u8);
	// stb r31,1059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1059, ctx.r31.u8);
	// stb r31,1060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1060, ctx.r31.u8);
	// stb r31,1061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1061, ctx.r31.u8);
	// stb r4,1062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1062, ctx.r4.u8);
	// stb r5,1063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1063, ctx.r5.u8);
	// stb r31,1064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1064, ctx.r31.u8);
	// stb r31,1065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1065, ctx.r31.u8);
	// stb r31,1066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1066, ctx.r31.u8);
	// stb r31,1067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1067, ctx.r31.u8);
	// stb r31,1068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1068, ctx.r31.u8);
	// stb r31,1069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1069, ctx.r31.u8);
	// stb r9,1070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1070, ctx.r9.u8);
	// stb r10,1071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1071, ctx.r10.u8);
	// stb r31,1072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1072, ctx.r31.u8);
	// stb r31,1073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1073, ctx.r31.u8);
	// stb r31,1074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1074, ctx.r31.u8);
	// stb r31,1075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1075, ctx.r31.u8);
	// stb r31,1076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1076, ctx.r31.u8);
	// stb r31,1077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1077, ctx.r31.u8);
	// stb r31,1078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1078, ctx.r31.u8);
	// stb r11,1079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1079, ctx.r11.u8);
	// stb r31,1080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1080, ctx.r31.u8);
	// stb r31,1081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1081, ctx.r31.u8);
	// stb r31,1082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1082, ctx.r31.u8);
	// stb r31,1083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1083, ctx.r31.u8);
	// stb r7,1084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1084, ctx.r7.u8);
	// stb r8,1085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1085, ctx.r8.u8);
	// stb r31,1086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1086, ctx.r31.u8);
	// stb r31,1087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1087, ctx.r31.u8);
	// stb r31,1088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1088, ctx.r31.u8);
	// stb r31,1089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1089, ctx.r31.u8);
	// stb r3,1090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1090, ctx.r3.u8);
	// stb r6,1091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1091, ctx.r6.u8);
	// stb r31,1092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1092, ctx.r31.u8);
	// stb r31,1093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1093, ctx.r31.u8);
	// stb r31,1094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1094, ctx.r31.u8);
	// stb r31,1095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1095, ctx.r31.u8);
	// stb r31,1096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1096, ctx.r31.u8);
	// stb r31,1097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1097, ctx.r31.u8);
	// stb r25,1098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1098, ctx.r25.u8);
	// stb r26,1099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1099, ctx.r26.u8);
	// stb r31,1100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1100, ctx.r31.u8);
	// stb r31,1101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1101, ctx.r31.u8);
	// stb r31,1102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1102, ctx.r31.u8);
	// stb r31,1103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1103, ctx.r31.u8);
	// stb r31,1104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1104, ctx.r31.u8);
	// stb r31,1105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1105, ctx.r31.u8);
	// stb r9,1106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1106, ctx.r9.u8);
	// stb r10,1107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1107, ctx.r10.u8);
	// stb r31,1108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1108, ctx.r31.u8);
	// stb r31,1109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1109, ctx.r31.u8);
	// stb r31,1110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1110, ctx.r31.u8);
	// stb r31,1111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1111, ctx.r31.u8);
	// stb r31,1112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1112, ctx.r31.u8);
	// stb r31,1113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1113, ctx.r31.u8);
	// stb r31,1114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1114, ctx.r31.u8);
	// stb r11,1115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1115, ctx.r11.u8);
	// stb r31,1116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1116, ctx.r31.u8);
	// stb r31,1117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1117, ctx.r31.u8);
	// stb r31,1118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1118, ctx.r31.u8);
	// stb r31,1119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1119, ctx.r31.u8);
	// stb r22,1120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1120, ctx.r22.u8);
	// stb r14,1121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1121, ctx.r14.u8);
	// stb r31,1122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1122, ctx.r31.u8);
	// stb r31,1123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1123, ctx.r31.u8);
	// stb r31,1124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1124, ctx.r31.u8);
	// stb r31,1125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1125, ctx.r31.u8);
	// stb r27,1126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1126, ctx.r27.u8);
	// stb r28,1127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1127, ctx.r28.u8);
	// stb r31,1128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1128, ctx.r31.u8);
	// stb r31,1129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1129, ctx.r31.u8);
	// stb r31,1130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1130, ctx.r31.u8);
	// stb r31,1131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1131, ctx.r31.u8);
	// stb r31,1132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1132, ctx.r31.u8);
	// stb r31,1133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1133, ctx.r31.u8);
	// stb r9,1134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1134, ctx.r9.u8);
	// stb r10,1135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1135, ctx.r10.u8);
	// stb r31,1136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1136, ctx.r31.u8);
	// stb r31,1137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1137, ctx.r31.u8);
	// stb r31,1138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1138, ctx.r31.u8);
	// stb r31,1139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1139, ctx.r31.u8);
	// stb r31,1140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1140, ctx.r31.u8);
	// stb r31,1141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1141, ctx.r31.u8);
	// stb r31,1142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1142, ctx.r31.u8);
	// stb r11,1143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1143, ctx.r11.u8);
	// stb r31,1144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1144, ctx.r31.u8);
	// stb r31,1145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1145, ctx.r31.u8);
	// stb r31,1146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1146, ctx.r31.u8);
	// stb r31,1147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1147, ctx.r31.u8);
	// stb r7,1148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1148, ctx.r7.u8);
	// stb r20,1149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1149, ctx.r20.u8);
	// stb r31,1150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1150, ctx.r31.u8);
	// stb r10,1163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1163, ctx.r10.u8);
	// stb r10,1191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1191, ctx.r10.u8);
	// li r10,100
	ctx.r10.s64 = 100;
	// stb r31,1151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1151, ctx.r31.u8);
	// stb r31,1152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1152, ctx.r31.u8);
	// stb r31,1153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1153, ctx.r31.u8);
	// stb r29,1154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1154, ctx.r29.u8);
	// stb r10,1219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1219, ctx.r10.u8);
	// li r10,2
	ctx.r10.s64 = 2;
	// stb r30,1155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1155, ctx.r30.u8);
	// stb r31,1156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1156, ctx.r31.u8);
	// stb r31,1157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1157, ctx.r31.u8);
	// stb r31,1158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1158, ctx.r31.u8);
	// stb r31,1159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1159, ctx.r31.u8);
	// stb r31,1160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1160, ctx.r31.u8);
	// stb r31,1161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1161, ctx.r31.u8);
	// stb r9,1162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1162, ctx.r9.u8);
	// stb r31,1164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1164, ctx.r31.u8);
	// stb r31,1165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1165, ctx.r31.u8);
	// stb r31,1166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1166, ctx.r31.u8);
	// stb r31,1167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1167, ctx.r31.u8);
	// stb r31,1168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1168, ctx.r31.u8);
	// stb r31,1169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1169, ctx.r31.u8);
	// stb r31,1170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1170, ctx.r31.u8);
	// stb r11,1171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1171, ctx.r11.u8);
	// stb r31,1172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1172, ctx.r31.u8);
	// stb r31,1173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1173, ctx.r31.u8);
	// stb r31,1174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1174, ctx.r31.u8);
	// stb r31,1175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1175, ctx.r31.u8);
	// stb r7,1176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1176, ctx.r7.u8);
	// stb r8,1177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1177, ctx.r8.u8);
	// stb r31,1178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1178, ctx.r31.u8);
	// stb r31,1179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1179, ctx.r31.u8);
	// stb r31,1180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1180, ctx.r31.u8);
	// stb r31,1181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1181, ctx.r31.u8);
	// stb r4,1182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1182, ctx.r4.u8);
	// stb r5,1183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1183, ctx.r5.u8);
	// stb r31,1184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1184, ctx.r31.u8);
	// stb r31,1185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1185, ctx.r31.u8);
	// stb r31,1186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1186, ctx.r31.u8);
	// stb r31,1187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1187, ctx.r31.u8);
	// stb r31,1188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1188, ctx.r31.u8);
	// stb r31,1189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1189, ctx.r31.u8);
	// stb r9,1190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1190, ctx.r9.u8);
	// stb r31,1192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1192, ctx.r31.u8);
	// stb r31,1193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1193, ctx.r31.u8);
	// stb r31,1194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1194, ctx.r31.u8);
	// stb r31,1195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1195, ctx.r31.u8);
	// stb r31,1196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1196, ctx.r31.u8);
	// stb r31,1197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1197, ctx.r31.u8);
	// stb r31,1198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1198, ctx.r31.u8);
	// stb r11,1199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1199, ctx.r11.u8);
	// stb r31,1200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1200, ctx.r31.u8);
	// stb r31,1201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1201, ctx.r31.u8);
	// stb r31,1202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1202, ctx.r31.u8);
	// stb r31,1203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1203, ctx.r31.u8);
	// stb r7,1204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1204, ctx.r7.u8);
	// stb r8,1205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1205, ctx.r8.u8);
	// stb r31,1206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1206, ctx.r31.u8);
	// stb r31,1207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1207, ctx.r31.u8);
	// stb r31,1208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1208, ctx.r31.u8);
	// stb r31,1209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1209, ctx.r31.u8);
	// stb r3,1210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1210, ctx.r3.u8);
	// stb r6,1211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1211, ctx.r6.u8);
	// stb r31,1212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1212, ctx.r31.u8);
	// stb r31,1213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1213, ctx.r31.u8);
	// stb r31,1214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1214, ctx.r31.u8);
	// stb r31,1215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1215, ctx.r31.u8);
	// stb r31,1216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1216, ctx.r31.u8);
	// stb r31,1217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1217, ctx.r31.u8);
	// stb r21,1218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1218, ctx.r21.u8);
	// stb r31,1220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1220, ctx.r31.u8);
	// stb r31,1221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1221, ctx.r31.u8);
	// stb r31,1222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1222, ctx.r31.u8);
	// stb r31,1223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1223, ctx.r31.u8);
	// stb r31,1224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1224, ctx.r31.u8);
	// stb r31,1225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1225, ctx.r31.u8);
	// stb r16,1226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1226, ctx.r16.u8);
	// stb r10,1227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1227, ctx.r10.u8);
	// stb r31,1228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1228, ctx.r31.u8);
	// stb r31,1229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1229, ctx.r31.u8);
	// stb r11,1243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1243, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// li r9,32
	ctx.r9.s64 = 32;
	// stb r10,1259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1259, ctx.r10.u8);
	// li r10,110
	ctx.r10.s64 = 110;
	// stb r31,1230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1230, ctx.r31.u8);
	// stb r31,1231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1231, ctx.r31.u8);
	// stb r31,1232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1232, ctx.r31.u8);
	// stb r11,1244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1244, ctx.r11.u8);
	// stb r11,1245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1245, ctx.r11.u8);
	// li r11,119
	ctx.r11.s64 = 119;
	// stb r9,1283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1283, ctx.r9.u8);
	// li r9,79
	ctx.r9.s64 = 79;
	// stb r10,1281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1281, ctx.r10.u8);
	// li r10,116
	ctx.r10.s64 = 116;
	// stb r31,1233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1233, ctx.r31.u8);
	// stb r31,1234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1234, ctx.r31.u8);
	// stb r11,1251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1251, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r9,1284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1284, ctx.r9.u8);
	// li r9,98
	ctx.r9.s64 = 98;
	// stb r10,1282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1282, ctx.r10.u8);
	// stb r10,1289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1289, ctx.r10.u8);
	// li r10,105
	ctx.r10.s64 = 105;
	// stb r8,1235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1235, ctx.r8.u8);
	// stb r11,1267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1267, ctx.r11.u8);
	// li r11,117
	ctx.r11.s64 = 117;
	// stb r9,1285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1285, ctx.r9.u8);
	// li r9,106
	ctx.r9.s64 = 106;
	// stb r31,1236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1236, ctx.r31.u8);
	// stb r10,1290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1290, ctx.r10.u8);
	// li r10,118
	ctx.r10.s64 = 118;
	// stb r31,1237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1237, ctx.r31.u8);
	// stb r11,1277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1277, ctx.r11.u8);
	// li r11,114
	ctx.r11.s64 = 114;
	// stb r9,1286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1286, ctx.r9.u8);
	// li r9,99
	ctx.r9.s64 = 99;
	// stb r31,1238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1238, ctx.r31.u8);
	// stb r31,1239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1239, ctx.r31.u8);
	// stb r31,1240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1240, ctx.r31.u8);
	// stb r11,1278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1278, ctx.r11.u8);
	// stb r11,1279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1279, ctx.r11.u8);
	// li r11,101
	ctx.r11.s64 = 101;
	// stb r31,1241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1241, ctx.r31.u8);
	// stb r31,1242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1242, ctx.r31.u8);
	// stb r23,1246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1246, ctx.r23.u8);
	// stb r31,1247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1247, ctx.r31.u8);
	// stb r31,1248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1248, ctx.r31.u8);
	// stb r31,1249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1249, ctx.r31.u8);
	// stb r17,1250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1250, ctx.r17.u8);
	// stb r31,1252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1252, ctx.r31.u8);
	// stb r31,1253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1253, ctx.r31.u8);
	// stb r31,1254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1254, ctx.r31.u8);
	// stb r31,1255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1255, ctx.r31.u8);
	// stb r31,1256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1256, ctx.r31.u8);
	// stb r31,1257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1257, ctx.r31.u8);
	// stb r16,1258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1258, ctx.r16.u8);
	// stb r31,1260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1260, ctx.r31.u8);
	// stb r31,1261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1261, ctx.r31.u8);
	// stb r31,1262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1262, ctx.r31.u8);
	// stb r31,1263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1263, ctx.r31.u8);
	// stb r31,1264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1264, ctx.r31.u8);
	// stb r31,1265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1265, ctx.r31.u8);
	// stb r31,1266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1266, ctx.r31.u8);
	// stb r31,1268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1268, ctx.r31.u8);
	// stb r31,1269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1269, ctx.r31.u8);
	// stb r31,1270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1270, ctx.r31.u8);
	// stb r31,1271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1271, ctx.r31.u8);
	// stb r31,1272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1272, ctx.r31.u8);
	// stb r31,1273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1273, ctx.r31.u8);
	// stb r31,1274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1274, ctx.r31.u8);
	// stb r5,1275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1275, ctx.r5.u8);
	// stb r23,1276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1276, ctx.r23.u8);
	// stb r11,1280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1280, ctx.r11.u8);
	// stb r11,1287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1287, ctx.r11.u8);
	// stb r9,1288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1288, ctx.r9.u8);
	// stb r10,1291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1291, ctx.r10.u8);
	// stb r11,1292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1292, ctx.r11.u8);
	// stb r31,1293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1293, ctx.r31.u8);
	// stb r31,1294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1294, ctx.r31.u8);
	// stb r31,1295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1295, ctx.r31.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,1298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1298, ctx.r31.u8);
	// li r10,5
	ctx.r10.s64 = 5;
	// stb r31,1299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1299, ctx.r31.u8);
	// stb r31,1300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1300, ctx.r31.u8);
	// addi r30,r24,24
	ctx.r30.s64 = ctx.r24.s64 + 24;
	// stb r31,1301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1301, ctx.r31.u8);
	// li r5,1311
	ctx.r5.s64 = 1311;
	// stb r31,1302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1302, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,1296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1296, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,1303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1303, ctx.r31.u8);
	// stb r8,1304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1304, ctx.r8.u8);
	// stb r15,1305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1305, ctx.r15.u8);
	// stb r31,1306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1306, ctx.r31.u8);
	// stb r11,1297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1297, ctx.r11.u8);
	// stb r11,1322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1322, ctx.r11.u8);
	// stb r11,1325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1325, ctx.r11.u8);
	// li r11,38
	ctx.r11.s64 = 38;
	// stb r31,1307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1307, ctx.r31.u8);
	// stb r31,1308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1308, ctx.r31.u8);
	// stb r31,1309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1309, ctx.r31.u8);
	// stb r31,1310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1310, ctx.r31.u8);
	// stb r11,1326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1326, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,1311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1311, ctx.r31.u8);
	// stb r31,1312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1312, ctx.r31.u8);
	// stb r10,1313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1313, ctx.r10.u8);
	// stb r31,1314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1314, ctx.r31.u8);
	// stb r11,1333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1333, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,1315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1315, ctx.r31.u8);
	// stb r31,1316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1316, ctx.r31.u8);
	// stb r31,1317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1317, ctx.r31.u8);
	// stb r31,1318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1318, ctx.r31.u8);
	// stb r11,1334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1334, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,1319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1319, ctx.r31.u8);
	// stb r31,1320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1320, ctx.r31.u8);
	// stb r18,1321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1321, ctx.r18.u8);
	// stb r31,1323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1323, ctx.r31.u8);
	// stb r11,1353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1353, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,1324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1324, ctx.r31.u8);
	// stb r31,1327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1327, ctx.r31.u8);
	// stb r31,1328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1328, ctx.r31.u8);
	// stb r31,1329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1329, ctx.r31.u8);
	// stb r11,1354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1354, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,1330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1330, ctx.r31.u8);
	// stb r31,1331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1331, ctx.r31.u8);
	// stb r31,1332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1332, ctx.r31.u8);
	// stb r31,1335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1335, ctx.r31.u8);
	// stb r31,1336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1336, ctx.r31.u8);
	// stb r31,1337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1337, ctx.r31.u8);
	// stb r31,1338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1338, ctx.r31.u8);
	// stb r31,1339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1339, ctx.r31.u8);
	// stb r31,1340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1340, ctx.r31.u8);
	// stb r31,1341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1341, ctx.r31.u8);
	// stb r31,1342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1342, ctx.r31.u8);
	// stb r31,1343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1343, ctx.r31.u8);
	// stb r31,1344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1344, ctx.r31.u8);
	// stb r31,1345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1345, ctx.r31.u8);
	// stb r31,1346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1346, ctx.r31.u8);
	// stb r31,1347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1347, ctx.r31.u8);
	// stb r31,1348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1348, ctx.r31.u8);
	// stb r31,1349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1349, ctx.r31.u8);
	// stb r18,1350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1350, ctx.r18.u8);
	// stb r31,1351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1351, ctx.r31.u8);
	// stb r31,1352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1352, ctx.r31.u8);
	// stb r31,1355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1355, ctx.r31.u8);
	// stb r31,1356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1356, ctx.r31.u8);
	// stb r31,1357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1357, ctx.r31.u8);
	// stb r31,1358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1358, ctx.r31.u8);
	// stb r31,1359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1359, ctx.r31.u8);
	// stb r31,1360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1360, ctx.r31.u8);
	// stb r19,1361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1361, ctx.r19.u8);
	// stb r11,1362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1362, ctx.r11.u8);
	// stb r31,1363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1363, ctx.r31.u8);
	// stb r31,1364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1364, ctx.r31.u8);
	// li r11,90
	ctx.r11.s64 = 90;
	// stb r3,1385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1385, ctx.r3.u8);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stb r31,1365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1365, ctx.r31.u8);
	// stb r31,1366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1366, ctx.r31.u8);
	// stb r31,1367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1367, ctx.r31.u8);
	// stb r31,1368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1368, ctx.r31.u8);
	// stb r31,1369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1369, ctx.r31.u8);
	// stb r8,1370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1370, ctx.r8.u8);
	// stb r31,1371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1371, ctx.r31.u8);
	// stb r31,1372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1372, ctx.r31.u8);
	// stb r31,1373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1373, ctx.r31.u8);
	// stb r31,1374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1374, ctx.r31.u8);
	// stb r31,1375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1375, ctx.r31.u8);
	// stb r31,1376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1376, ctx.r31.u8);
	// stb r21,1377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1377, ctx.r21.u8);
	// stb r11,1378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1378, ctx.r11.u8);
	// stb r31,1379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1379, ctx.r31.u8);
	// stb r31,1380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1380, ctx.r31.u8);
	// stb r31,1381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1381, ctx.r31.u8);
	// stb r31,1382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1382, ctx.r31.u8);
	// stb r31,1383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1383, ctx.r31.u8);
	// stb r31,1384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1384, ctx.r31.u8);
	// stb r6,1386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1386, ctx.r6.u8);
	// stb r31,1387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1387, ctx.r31.u8);
	// stb r31,1388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1388, ctx.r31.u8);
	// stb r31,1389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1389, ctx.r31.u8);
	// stb r31,1390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1390, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B3514;
	sub_82B06418(ctx, base);
	// mr r3,r24
	ctx.r3.u64 = ctx.r24.u64;
	// stw r30,20(r24)
	PPC_STORE_U32(ctx.r24.u32 + 20, ctx.r30.u32);
	// addi r1,r1,1552
	ctx.r1.s64 = ctx.r1.s64 + 1552;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B3528"))) PPC_WEAK_FUNC(sub_824B3528);
PPC_FUNC_IMPL(__imp__sub_824B3528) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B3530;
	__savegprlr_29(ctx, base);
	// stwu r1,-272(r1)
	ea = -272 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,159
	ctx.r9.s64 = 159;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30780
	ctx.r4.s64 = ctx.r10.s64 + 30780;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B356C;
	sub_822E0818(ctx, base);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,148
	ctx.r10.s64 = 148;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,45
	ctx.r8.s64 = 45;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,227
	ctx.r11.s64 = 227;
	// stb r10,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r10.u8);
	// li r10,179
	ctx.r10.s64 = 179;
	// stb r8,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r8.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,158
	ctx.r11.s64 = 158;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,65
	ctx.r10.s64 = 65;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,100
	ctx.r10.s64 = 100;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,39
	ctx.r10.s64 = 39;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r11,72
	ctx.r11.s64 = 72;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r9,68
	ctx.r9.s64 = 68;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r9,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r9.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r10,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r10.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r11,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r11,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r11,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r11.u8);
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r11,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r11,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r11,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r11.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// li r5,159
	ctx.r5.s64 = 159;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r9,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r9.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// li r11,167
	ctx.r11.s64 = 167;
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r10,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r10.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r11,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r11,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r8,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r8.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r11,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r11.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B3880;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,272
	ctx.r1.s64 = ctx.r1.s64 + 272;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B3890"))) PPC_WEAK_FUNC(sub_824B3890);
PPC_FUNC_IMPL(__imp__sub_824B3890) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B3898;
	__savegprlr_29(ctx, base);
	// stwu r1,-256(r1)
	ea = -256 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,134
	ctx.r9.s64 = 134;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30816
	ctx.r4.s64 = ctx.r10.s64 + 30816;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B38D4;
	sub_822E0818(ctx, base);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,79
	ctx.r9.s64 = 79;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,155
	ctx.r8.s64 = 155;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,235
	ctx.r11.s64 = 235;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r9,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r9.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,156
	ctx.r11.s64 = 156;
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r9,247
	ctx.r9.s64 = 247;
	// li r7,143
	ctx.r7.s64 = 143;
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// stb r11,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r11.u8);
	// li r11,46
	ctx.r11.s64 = 46;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r5,134
	ctx.r5.s64 = 134;
	// stb r9,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r9.u8);
	// li r9,33
	ctx.r9.s64 = 33;
	// stb r7,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r7.u8);
	// li r7,6
	ctx.r7.s64 = 6;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r9.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r7,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r7.u8);
	// li r7,2
	ctx.r7.s64 = 2;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r9,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r9.u8);
	// stb r9,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r9.u8);
	// li r9,54
	ctx.r9.s64 = 54;
	// stb r7,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r7.u8);
	// li r7,1
	ctx.r7.s64 = 1;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r9,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r9.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r7,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r7.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r9,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r9.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r10,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r10.u8);
	// stb r8,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r8.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r11,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r11.u8);
	// li r11,172
	ctx.r11.s64 = 172;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B3B68;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,256
	ctx.r1.s64 = ctx.r1.s64 + 256;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B3B78"))) PPC_WEAK_FUNC(sub_824B3B78);
PPC_FUNC_IMPL(__imp__sub_824B3B78) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B3B80;
	__savegprlr_29(ctx, base);
	// stwu r1,-224(r1)
	ea = -224 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,103
	ctx.r9.s64 = 103;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30852
	ctx.r4.s64 = ctx.r10.s64 + 30852;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B3BBC;
	sub_822E0818(ctx, base);
	// li r10,15
	ctx.r10.s64 = 15;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,143
	ctx.r9.s64 = 143;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// stb r9,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r9.u8);
	// li r9,7
	ctx.r9.s64 = 7;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,12
	ctx.r10.s64 = 12;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,3
	ctx.r9.s64 = 3;
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// li r10,213
	ctx.r10.s64 = 213;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r9,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r9.u8);
	// li r9,6
	ctx.r9.s64 = 6;
	// stb r10,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r9.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r11,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r11.u8);
	// li r10,54
	ctx.r10.s64 = 54;
	// li r11,63
	ctx.r11.s64 = 63;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,103
	ctx.r5.s64 = 103;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r10.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// stb r11,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r11,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r10,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r11,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B3DC4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,224
	ctx.r1.s64 = ctx.r1.s64 + 224;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B3DD8"))) PPC_WEAK_FUNC(sub_824B3DD8);
PPC_FUNC_IMPL(__imp__sub_824B3DD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B3DE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-304(r1)
	ea = -304 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,186
	ctx.r9.s64 = 186;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30884
	ctx.r4.s64 = ctx.r10.s64 + 30884;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B3E1C;
	sub_822E0818(ctx, base);
	// li r11,79
	ctx.r11.s64 = 79;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r7,240
	ctx.r7.s64 = 240;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,39
	ctx.r8.s64 = 39;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,120
	ctx.r9.s64 = 120;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,44
	ctx.r11.s64 = 44;
	// stb r7,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r7.u8);
	// li r7,73
	ctx.r7.s64 = 73;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,41
	ctx.r11.s64 = 41;
	// stb r7,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r7.u8);
	// li r7,146
	ctx.r7.s64 = 146;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r8,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r8.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,219
	ctx.r11.s64 = 219;
	// stb r9,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r9.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r11.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r7,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r7.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r8,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r8.u8);
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r7,96
	ctx.r7.s64 = 96;
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r7,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r7.u8);
	// li r7,48
	ctx.r7.s64 = 48;
	// stb r11,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r7,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r7.u8);
	// li r7,108
	ctx.r7.s64 = 108;
	// stb r11,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// stb r11,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r8,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r8.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// stb r11,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r11,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r11,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// stb r11,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r10,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r10.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// li r5,186
	ctx.r5.s64 = 186;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r11,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r11,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// li r11,67
	ctx.r11.s64 = 67;
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r11,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r11.u8);
	// li r11,222
	ctx.r11.s64 = 222;
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r10,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r10.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B41A0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,304
	ctx.r1.s64 = ctx.r1.s64 + 304;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B41B0"))) PPC_WEAK_FUNC(sub_824B41B0);
PPC_FUNC_IMPL(__imp__sub_824B41B0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824B41B8;
	__savegprlr_14(ctx, base);
	// stwu r1,-3200(r1)
	ea = -3200 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r21,r3
	ctx.r21.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r21,4
	ctx.r3.s64 = ctx.r21.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,2951
	ctx.r9.s64 = 2951;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30920
	ctx.r4.s64 = ctx.r10.s64 + 30920;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r21)
	PPC_STORE_U32(ctx.r21.u32 + 0, ctx.r11.u32);
	// stw r9,16(r21)
	PPC_STORE_U32(ctx.r21.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B41F4;
	sub_822E0818(ctx, base);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,77
	ctx.r10.s64 = 77;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,98
	ctx.r9.s64 = 98;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r24,6
	ctx.r24.s64 = 6;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r29,16
	ctx.r29.s64 = 16;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,19
	ctx.r11.s64 = 19;
	// stb r10,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r10.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r9,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r9.u8);
	// li r28,2
	ctx.r28.s64 = 2;
	// li r20,10
	ctx.r20.s64 = 10;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r22,97
	ctx.r22.s64 = 97;
	// stb r29,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r29.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,238
	ctx.r11.s64 = 238;
	// li r30,101
	ctx.r30.s64 = 101;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r17,100
	ctx.r17.s64 = 100;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,89
	ctx.r11.s64 = 89;
	// stb r28,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r28.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r20,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r20.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r24,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r24.u8);
	// stb r22,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r22.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// stb r30,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r30.u8);
	// stb r17,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r17.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r24,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r24.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// li r10,62
	ctx.r10.s64 = 62;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r3,47
	ctx.r3.s64 = 47;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r9,3
	ctx.r9.s64 = 3;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r5,195
	ctx.r5.s64 = 195;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r18,4
	ctx.r18.s64 = 4;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r10.u8);
	// li r10,230
	ctx.r10.s64 = 230;
	// li r7,96
	ctx.r7.s64 = 96;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// li r8,9
	ctx.r8.s64 = 9;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// li r14,1
	ctx.r14.s64 = 1;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r6,87
	ctx.r6.s64 = 87;
	// stb r18,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r18.u8);
	// stb r10,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r10.u8);
	// li r10,102
	ctx.r10.s64 = 102;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r3,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r3.u8);
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// stb r10,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r30,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r30.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// stb r9,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r9.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r7,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r7.u8);
	// stb r8,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r8.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r5,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r5.u8);
	// stb r14,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r14.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// stb r6,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r6.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r3,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r3.u8);
	// stb r30,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r30.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r11,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r11.u8);
	// stb r9,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r9.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// li r4,66
	ctx.r4.s64 = 66;
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// li r6,44
	ctx.r6.s64 = 44;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// li r27,172
	ctx.r27.s64 = 172;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r14,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r14.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r7,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r7.u8);
	// stb r8,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r8.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r4,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r4.u8);
	// stb r6,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r6.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r5,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r5.u8);
	// stb r3,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r3.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r3,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r3.u8);
	// stb r30,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r30.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// stb r9,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r9.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r10,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r10.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r28,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r28.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r7,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r7.u8);
	// stb r8,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r8.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r4,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r4.u8);
	// stb r27,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r27.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r5,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r5.u8);
	// stb r9,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r9.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r3,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r3.u8);
	// stb r30,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r30.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r11,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r11.u8);
	// stb r9,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r9.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// li r26,52
	ctx.r26.s64 = 52;
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r10,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r10.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r9,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r9.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r7,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r7.u8);
	// stb r8,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r8.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r4,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r4.u8);
	// stb r26,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r26.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r4,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r4.u8);
	// stb r26,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r26.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r3,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r3.u8);
	// stb r30,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r30.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r11,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r11.u8);
	// stb r9,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r9.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r10,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r10.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r18,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r18.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r7,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r7.u8);
	// stb r8,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r8.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r5,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r5.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r4,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r4.u8);
	// stb r27,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r27.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r3,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r3.u8);
	// stb r30,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r30.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r11,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r11.u8);
	// stb r9,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r9.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// li r27,48
	ctx.r27.s64 = 48;
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// li r19,5
	ctx.r19.s64 = 5;
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// li r15,46
	ctx.r15.s64 = 46;
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r27,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r27.u8);
	// li r27,86
	ctx.r27.s64 = 86;
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r10,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r10.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r19,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r19.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r7,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r7.u8);
	// stb r8,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r8.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r5,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r5.u8);
	// stb r15,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r15.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r4,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r4.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r3,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r3.u8);
	// stb r30,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r30.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r11,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r11.u8);
	// stb r9,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r9.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r10,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r10.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r24,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r24.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r7,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r7.u8);
	// stb r8,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r8.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r5,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r5.u8);
	// stb r27,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r27.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r5,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r5.u8);
	// stb r19,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r19.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r3,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r3.u8);
	// stb r30,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r30.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r6,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r6.u8);
	// li r23,103
	ctx.r23.s64 = 103;
	// li r6,67
	ctx.r6.s64 = 67;
	// stb r11,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r11.u8);
	// li r16,7
	ctx.r16.s64 = 7;
	// stb r9,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r9.u8);
	// li r25,128
	ctx.r25.s64 = 128;
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r10,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r10.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r16,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r16.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r7,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r7.u8);
	// stb r8,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r8.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r5,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r5.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r5,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r5.u8);
	// stb r15,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r15.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r3,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r3.u8);
	// stb r23,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r23.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r11,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r11.u8);
	// stb r9,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r9.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r10,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r10.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r7,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r7.u8);
	// stb r8,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r8.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r6,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r6.u8);
	// stb r25,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r25.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r6,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r6.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r3,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r3.u8);
	// stb r23,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r23.u8);
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r11,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r11.u8);
	// stb r9,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r9.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r10,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r10.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r14,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r14.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r7,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r7.u8);
	// stb r8,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r8.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r6,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r6.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r6,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r6.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r3,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r3.u8);
	// stb r23,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r23.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r11,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r11.u8);
	// stb r9,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r9.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r10,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r10.u8);
	// stb r31,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r31.u8);
	// stb r31,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r31.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r28,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r28.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r7,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r7.u8);
	// stb r8,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r8.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r6,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r6.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r6,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r6.u8);
	// stb r25,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r25.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r31,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r31.u8);
	// stb r3,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r3.u8);
	// stb r23,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r23.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r11,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r11.u8);
	// stb r9,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r9.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r31.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r10,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r10.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r9,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r9.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r7,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r7.u8);
	// stb r8,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r8.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r6,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r6.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r6,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r6.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r31,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r31.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r3,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r3.u8);
	// stb r23,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r23.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r11,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r11.u8);
	// stb r9,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r9.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r10,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r10.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r18,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r18.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r7,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r7.u8);
	// stb r8,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r8.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r6,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r6.u8);
	// stb r25,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r25.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r6,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r6.u8);
	// stb r31,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r31.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r3,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r3.u8);
	// stb r23,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r23.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r31,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r31.u8);
	// stb r11,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r11.u8);
	// stb r9,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r9.u8);
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r31,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r31.u8);
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r10,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r10.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r31,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r31.u8);
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r19,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r19.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r7,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r7.u8);
	// stb r8,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r8.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r6,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r6.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r6,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r6.u8);
	// stb r31,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r31.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r3,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r3.u8);
	// stb r23,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r23.u8);
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r31,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r31.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r11,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r11.u8);
	// stb r9,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r9.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r10,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r10.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r24,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r24.u8);
	// stb r31,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r31.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r7,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r7.u8);
	// stb r8,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r8.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r31,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r31.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r6,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r6.u8);
	// stb r31,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r6,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r6.u8);
	// stb r25,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r25.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r31,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r31.u8);
	// stb r31,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r31.u8);
	// stb r3,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r3.u8);
	// stb r23,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r23.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r31,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r31.u8);
	// stb r31,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r31.u8);
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// li r3,24
	ctx.r3.s64 = 24;
	// stb r11,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r11.u8);
	// li r26,63
	ctx.r26.s64 = 63;
	// stb r9,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r9.u8);
	// li r27,117
	ctx.r27.s64 = 117;
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r31,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r31.u8);
	// stb r3,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r3.u8);
	// li r3,52
	ctx.r3.s64 = 52;
	// stb r31,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r31.u8);
	// stb r31,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r31.u8);
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r10,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r10.u8);
	// stb r31,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r31.u8);
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r16,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r16.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r7,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r7.u8);
	// stb r8,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r8.u8);
	// stb r31,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r31.u8);
	// stb r31,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r31.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r6,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r6.u8);
	// stb r31,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r31.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r31,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r31.u8);
	// stb r6,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r6.u8);
	// stb r31,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r31.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r31,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r31.u8);
	// stb r26,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r26.u8);
	// stb r27,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r27.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r31,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r31.u8);
	// stb r31,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r31.u8);
	// stb r11,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r11.u8);
	// stb r9,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r9.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r31,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r31.u8);
	// stb r31,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r31.u8);
	// stb r31,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r31.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r10,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r10.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r31,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r31.u8);
	// stb r7,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r7.u8);
	// stb r8,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r8.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r31,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r31.u8);
	// stb r31,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r31.u8);
	// stb r31,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r31.u8);
	// stb r4,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r4.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r31,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r31.u8);
	// stb r5,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r5.u8);
	// stb r3,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r3.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r31,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r31.u8);
	// stb r26,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r26.u8);
	// stb r27,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r27.u8);
	// stb r31,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r31.u8);
	// stb r31,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r31.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r14,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r14.u8);
	// li r3,11
	ctx.r3.s64 = 11;
	// li r14,192
	ctx.r14.s64 = 192;
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r11,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r11.u8);
	// stb r3,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r3.u8);
	// li r3,194
	ctx.r3.s64 = 194;
	// stb r14,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r14.u8);
	// li r14,24
	ctx.r14.s64 = 24;
	// stb r9,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r9.u8);
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r31,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r31.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r31,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r31.u8);
	// stb r31,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r31.u8);
	// stb r10,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r10.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r31,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r31.u8);
	// stb r31,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r31.u8);
	// stb r31,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r31.u8);
	// stb r31,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r31.u8);
	// stb r7,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r7.u8);
	// stb r8,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r8.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r31,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r31.u8);
	// stb r6,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r6.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r3,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r3.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r31,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r31.u8);
	// stb r31,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r31.u8);
	// stb r26,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r26.u8);
	// stb r27,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r27.u8);
	// stb r31,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r31.u8);
	// stb r31,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r31.u8);
	// stb r31,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r31.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r31,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r31.u8);
	// stb r11,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r11.u8);
	// stb r9,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r9.u8);
	// stb r31,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r31.u8);
	// stb r31,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r31.u8);
	// stb r31,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r31.u8);
	// stb r31,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r31.u8);
	// stb r31,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r31.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r31,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r31.u8);
	// stb r10,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r10.u8);
	// stb r31,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r31.u8);
	// stb r31,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r31.u8);
	// stb r31,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r31.u8);
	// stb r28,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r28.u8);
	// stb r31,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r31.u8);
	// stb r31,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r31.u8);
	// stb r7,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r7.u8);
	// stb r8,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r8.u8);
	// stb r31,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r31.u8);
	// stb r31,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r31.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r31,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r31.u8);
	// stb r6,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r6.u8);
	// stb r14,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r14.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r4,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r4.u8);
	// stb r10,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r10.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r31,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r31.u8);
	// stb r26,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r26.u8);
	// stb r27,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r27.u8);
	// li r14,134
	ctx.r14.s64 = 134;
	// stb r18,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r18.u8);
	// li r18,20
	ctx.r18.s64 = 20;
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r31,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r31.u8);
	// stb r31,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r31.u8);
	// stb r14,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r11,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r11.u8);
	// stb r9,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r9.u8);
	// stb r31,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r31.u8);
	// stb r31,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r31.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r31,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r31.u8);
	// stb r31,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r31.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r10,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r10.u8);
	// stb r31,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r31.u8);
	// stb r31,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r31.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// stb r9,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r9.u8);
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// stb r31,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r31.u8);
	// stb r7,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r7.u8);
	// stb r8,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r8.u8);
	// stb r31,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r31.u8);
	// stb r31,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r31.u8);
	// stb r31,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r31.u8);
	// stb r31,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r31.u8);
	// stb r4,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r4.u8);
	// stb r31,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r6,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r6.u8);
	// stb r10,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r10.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r31,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r31.u8);
	// stb r31,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r31.u8);
	// stb r26,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r26.u8);
	// stb r27,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r27.u8);
	// stb r31,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r31.u8);
	// stb r31,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r31.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r31,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r31.u8);
	// stb r31,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r31.u8);
	// stb r31,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r31.u8);
	// stb r11,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r11.u8);
	// stb r9,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r9.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r31,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r31.u8);
	// stb r31,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r31.u8);
	// stb r31,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r31.u8);
	// stb r31,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r31.u8);
	// stb r31,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r31.u8);
	// stb r31,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r31.u8);
	// stb r10,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r10.u8);
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r31.u8);
	// stb r31,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r31.u8);
	// stb r31,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r31.u8);
	// stb r31,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r31.u8);
	// stb r7,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r7.u8);
	// stb r8,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r8.u8);
	// stb r31,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r31.u8);
	// stb r31,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r31.u8);
	// stb r31,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r31.u8);
	// stb r31,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r31.u8);
	// stb r3,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r3.u8);
	// stb r14,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r14.u8);
	// stb r31,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r31.u8);
	// stb r31,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r31.u8);
	// stb r6,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r6.u8);
	// stb r18,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r18.u8);
	// stb r31,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r31.u8);
	// stb r31,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r31.u8);
	// stb r31,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r31.u8);
	// stb r31,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r31.u8);
	// li r18,40
	ctx.r18.s64 = 40;
	// std r21,3032(r1)
	PPC_STORE_U64(ctx.r1.u32 + 3032, ctx.r21.u64);
	// li r21,54
	ctx.r21.s64 = 54;
	// stb r26,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r26.u8);
	// stb r27,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r27.u8);
	// stb r31,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r31.u8);
	// stb r31,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r31.u8);
	// stb r18,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r18.u8);
	// li r18,112
	ctx.r18.s64 = 112;
	// stb r31,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r31.u8);
	// stb r31,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r31.u8);
	// stb r31,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r31.u8);
	// stb r31,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r31.u8);
	// stb r11,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r11.u8);
	// stb r9,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r9.u8);
	// stb r31,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r31.u8);
	// stb r31,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r31.u8);
	// stb r31,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r31.u8);
	// stb r31,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r31.u8);
	// stb r31,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r31.u8);
	// stb r31,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r31.u8);
	// stb r31,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r31.u8);
	// stb r10,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r10.u8);
	// stb r31,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r31.u8);
	// stb r31,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r31.u8);
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// stb r19,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r19.u8);
	// stb r31,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r31.u8);
	// stb r31,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r31.u8);
	// stb r7,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r7.u8);
	// stb r8,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r8.u8);
	// stb r31,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r31.u8);
	// stb r31,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r31.u8);
	// stb r31,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r31.u8);
	// stb r31,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r31.u8);
	// stb r5,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r5.u8);
	// stb r31,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r31.u8);
	// stb r31,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r31.u8);
	// stb r4,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r4.u8);
	// stb r18,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r18.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r31,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r31.u8);
	// stb r31,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r31.u8);
	// stb r26,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r26.u8);
	// stb r27,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r27.u8);
	// stb r31,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r31.u8);
	// stb r31,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r31.u8);
	// stb r31,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r31.u8);
	// stb r31,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r31.u8);
	// stb r31,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r31.u8);
	// stb r31,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r31.u8);
	// stb r11,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r11.u8);
	// stb r9,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r9.u8);
	// stb r31,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r31.u8);
	// stb r31,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r31.u8);
	// stb r31,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r31.u8);
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r31,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r31.u8);
	// stb r31,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r31.u8);
	// stb r31,1044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1044, ctx.r31.u8);
	// stb r10,1045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1045, ctx.r10.u8);
	// stb r31,1046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1046, ctx.r31.u8);
	// stb r31,1047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1047, ctx.r31.u8);
	// stb r31,1048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1048, ctx.r31.u8);
	// stb r24,1049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1049, ctx.r24.u8);
	// stb r31,1050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1050, ctx.r31.u8);
	// stb r31,1051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1051, ctx.r31.u8);
	// stb r7,1052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1052, ctx.r7.u8);
	// stb r8,1053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1053, ctx.r8.u8);
	// stb r31,1054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1054, ctx.r31.u8);
	// stb r31,1055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1055, ctx.r31.u8);
	// stb r31,1056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1056, ctx.r31.u8);
	// stb r31,1057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1057, ctx.r31.u8);
	// stb r5,1058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1058, ctx.r5.u8);
	// stb r21,1059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1059, ctx.r21.u8);
	// stb r31,1060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1060, ctx.r31.u8);
	// stb r31,1061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1061, ctx.r31.u8);
	// stb r3,1062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1062, ctx.r3.u8);
	// stb r14,1063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1063, ctx.r14.u8);
	// stb r31,1064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1064, ctx.r31.u8);
	// stb r24,1133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1133, ctx.r24.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// li r24,79
	ctx.r24.s64 = 79;
	// stb r31,1065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1065, ctx.r31.u8);
	// stb r31,1066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1066, ctx.r31.u8);
	// stb r31,1067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1067, ctx.r31.u8);
	// stb r26,1068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1068, ctx.r26.u8);
	// stb r14,1099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1099, ctx.r14.u8);
	// li r14,42
	ctx.r14.s64 = 42;
	// stb r24,1134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1134, ctx.r24.u8);
	// li r24,119
	ctx.r24.s64 = 119;
	// stb r27,1069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1069, ctx.r27.u8);
	// stb r31,1070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1070, ctx.r31.u8);
	// stb r31,1071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1071, ctx.r31.u8);
	// stb r14,1103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1103, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r24,1135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1135, ctx.r24.u8);
	// li r24,110
	ctx.r24.s64 = 110;
	// stb r31,1072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1072, ctx.r31.u8);
	// stb r31,1073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1073, ctx.r31.u8);
	// stb r31,1074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1074, ctx.r31.u8);
	// stb r31,1075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1075, ctx.r31.u8);
	// stb r11,1076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1076, ctx.r11.u8);
	// stb r9,1077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1077, ctx.r9.u8);
	// stb r31,1078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1078, ctx.r31.u8);
	// stb r31,1079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1079, ctx.r31.u8);
	// stb r31,1080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1080, ctx.r31.u8);
	// stb r31,1081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1081, ctx.r31.u8);
	// stb r31,1082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1082, ctx.r31.u8);
	// stb r31,1083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1083, ctx.r31.u8);
	// stb r31,1084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1084, ctx.r31.u8);
	// stb r10,1085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1085, ctx.r10.u8);
	// stb r31,1086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1086, ctx.r31.u8);
	// stb r31,1087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1087, ctx.r31.u8);
	// stb r31,1088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1088, ctx.r31.u8);
	// stb r16,1089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1089, ctx.r16.u8);
	// stb r31,1090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1090, ctx.r31.u8);
	// stb r31,1091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1091, ctx.r31.u8);
	// stb r7,1092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1092, ctx.r7.u8);
	// stb r8,1093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1093, ctx.r8.u8);
	// stb r31,1094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1094, ctx.r31.u8);
	// stb r31,1095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1095, ctx.r31.u8);
	// stb r31,1096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1096, ctx.r31.u8);
	// stb r31,1097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1097, ctx.r31.u8);
	// stb r3,1098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1098, ctx.r3.u8);
	// stb r31,1100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1100, ctx.r31.u8);
	// stb r31,1101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1101, ctx.r31.u8);
	// stb r5,1102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1102, ctx.r5.u8);
	// stb r31,1104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1104, ctx.r31.u8);
	// stb r31,1105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1105, ctx.r31.u8);
	// stb r31,1106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1106, ctx.r31.u8);
	// stb r31,1107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1107, ctx.r31.u8);
	// stb r29,1108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1108, ctx.r29.u8);
	// stb r14,1109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1109, ctx.r14.u8);
	// stb r31,1110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1110, ctx.r31.u8);
	// stb r31,1111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1111, ctx.r31.u8);
	// stb r31,1112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1112, ctx.r31.u8);
	// stb r31,1113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1113, ctx.r31.u8);
	// stb r31,1114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1114, ctx.r31.u8);
	// stb r31,1115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1115, ctx.r31.u8);
	// stb r11,1116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1116, ctx.r11.u8);
	// stb r28,1117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1117, ctx.r28.u8);
	// stb r31,1118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1118, ctx.r31.u8);
	// stb r31,1119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1119, ctx.r31.u8);
	// stb r31,1120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1120, ctx.r31.u8);
	// stb r31,1121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1121, ctx.r31.u8);
	// stb r31,1122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1122, ctx.r31.u8);
	// stb r31,1123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1123, ctx.r31.u8);
	// stb r31,1124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1124, ctx.r31.u8);
	// stb r20,1125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1125, ctx.r20.u8);
	// stb r31,1126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1126, ctx.r31.u8);
	// stb r31,1127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1127, ctx.r31.u8);
	// stb r31,1128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1128, ctx.r31.u8);
	// stb r31,1129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1129, ctx.r31.u8);
	// stb r31,1130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1130, ctx.r31.u8);
	// stb r31,1131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1131, ctx.r31.u8);
	// stb r31,1132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1132, ctx.r31.u8);
	// stb r24,1136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1136, ctx.r24.u8);
	// stb r30,1137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1137, ctx.r30.u8);
	// stb r17,1138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1138, ctx.r17.u8);
	// stb r31,1139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1139, ctx.r31.u8);
	// li r24,235
	ctx.r24.s64 = 235;
	// stb r31,1140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1140, ctx.r31.u8);
	// li r14,51
	ctx.r14.s64 = 51;
	// stb r31,1141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1141, ctx.r31.u8);
	// stb r29,1142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1142, ctx.r29.u8);
	// stb r31,1144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1144, ctx.r31.u8);
	// stb r31,1145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1145, ctx.r31.u8);
	// stb r24,1143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1143, ctx.r24.u8);
	// li r24,13
	ctx.r24.s64 = 13;
	// stb r14,1180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1180, ctx.r14.u8);
	// li r14,192
	ctx.r14.s64 = 192;
	// stb r31,1146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1146, ctx.r31.u8);
	// stb r31,1147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1147, ctx.r31.u8);
	// stb r31,1148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1148, ctx.r31.u8);
	// stb r24,1159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1159, ctx.r24.u8);
	// li r24,69
	ctx.r24.s64 = 69;
	// stb r31,1149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1149, ctx.r31.u8);
	// stb r11,1150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1150, ctx.r11.u8);
	// stb r28,1151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1151, ctx.r28.u8);
	// stb r31,1152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1152, ctx.r31.u8);
	// stb r24,1168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1168, ctx.r24.u8);
	// li r24,113
	ctx.r24.s64 = 113;
	// stb r31,1153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1153, ctx.r31.u8);
	// stb r31,1154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1154, ctx.r31.u8);
	// stb r31,1155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1155, ctx.r31.u8);
	// stb r31,1156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1156, ctx.r31.u8);
	// stb r24,1169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1169, ctx.r24.u8);
	// li r24,105
	ctx.r24.s64 = 105;
	// stb r31,1157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1157, ctx.r31.u8);
	// stb r31,1158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1158, ctx.r31.u8);
	// stb r31,1160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1160, ctx.r31.u8);
	// stb r31,1161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1161, ctx.r31.u8);
	// stb r24,1171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1171, ctx.r24.u8);
	// li r24,12
	ctx.r24.s64 = 12;
	// stb r31,1162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1162, ctx.r31.u8);
	// stb r31,1163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1163, ctx.r31.u8);
	// stb r31,1164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1164, ctx.r31.u8);
	// stb r31,1165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1165, ctx.r31.u8);
	// stb r31,1166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1166, ctx.r31.u8);
	// stb r8,1167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1167, ctx.r8.u8);
	// stb r27,1170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1170, ctx.r27.u8);
	// stb r18,1172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1172, ctx.r18.u8);
	// stb r18,1173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1173, ctx.r18.u8);
	// stb r30,1174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1174, ctx.r30.u8);
	// stb r17,1175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1175, ctx.r17.u8);
	// stb r31,1176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1176, ctx.r31.u8);
	// stb r31,1177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1177, ctx.r31.u8);
	// stb r31,1178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1178, ctx.r31.u8);
	// stb r24,1179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1179, ctx.r24.u8);
	// stb r31,1181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1181, ctx.r31.u8);
	// stb r31,1182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1182, ctx.r31.u8);
	// stb r31,1183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1183, ctx.r31.u8);
	// stb r31,1184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1184, ctx.r31.u8);
	// stb r31,1185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1185, ctx.r31.u8);
	// stb r31,1186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1186, ctx.r31.u8);
	// stb r11,1187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1187, ctx.r11.u8);
	// stb r9,1188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1188, ctx.r9.u8);
	// stb r31,1189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1189, ctx.r31.u8);
	// stb r31,1190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1190, ctx.r31.u8);
	// stb r31,1191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1191, ctx.r31.u8);
	// stb r31,1192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1192, ctx.r31.u8);
	// stb r31,1193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1193, ctx.r31.u8);
	// stb r31,1194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1194, ctx.r31.u8);
	// stb r31,1195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1195, ctx.r31.u8);
	// stb r10,1196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1196, ctx.r10.u8);
	// stb r31,1197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1197, ctx.r31.u8);
	// stb r31,1198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1198, ctx.r31.u8);
	// stb r31,1199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1199, ctx.r31.u8);
	// stb r31,1200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1200, ctx.r31.u8);
	// stb r31,1201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1201, ctx.r31.u8);
	// stb r31,1202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1202, ctx.r31.u8);
	// stb r7,1203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1203, ctx.r7.u8);
	// stb r8,1204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1204, ctx.r8.u8);
	// stb r31,1205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1205, ctx.r31.u8);
	// stb r31,1206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1206, ctx.r31.u8);
	// stb r31,1207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1207, ctx.r31.u8);
	// stb r31,1208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1208, ctx.r31.u8);
	// stb r5,1209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1209, ctx.r5.u8);
	// stb r14,1210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1210, ctx.r14.u8);
	// stb r31,1211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1211, ctx.r31.u8);
	// stb r31,1212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1212, ctx.r31.u8);
	// li r14,45
	ctx.r14.s64 = 45;
	// stb r6,1213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1213, ctx.r6.u8);
	// li r21,30
	ctx.r21.s64 = 30;
	// stb r20,1214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1214, ctx.r20.u8);
	// stb r31,1215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1215, ctx.r31.u8);
	// stb r31,1216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1216, ctx.r31.u8);
	// stb r31,1217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1217, ctx.r31.u8);
	// stb r14,1220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1220, ctx.r14.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r31,1218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1218, ctx.r31.u8);
	// stb r24,1219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1219, ctx.r24.u8);
	// stb r31,1221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1221, ctx.r31.u8);
	// stb r31,1222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1222, ctx.r31.u8);
	// stb r14,1249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1249, ctx.r14.u8);
	// li r14,58
	ctx.r14.s64 = 58;
	// stb r31,1223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1223, ctx.r31.u8);
	// stb r31,1224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1224, ctx.r31.u8);
	// stb r31,1225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1225, ctx.r31.u8);
	// stb r31,1226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1226, ctx.r31.u8);
	// stb r11,1227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1227, ctx.r11.u8);
	// stb r9,1228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1228, ctx.r9.u8);
	// stb r31,1229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1229, ctx.r31.u8);
	// stb r31,1230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1230, ctx.r31.u8);
	// stb r31,1231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1231, ctx.r31.u8);
	// stb r31,1232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1232, ctx.r31.u8);
	// stb r31,1233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1233, ctx.r31.u8);
	// stb r31,1234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1234, ctx.r31.u8);
	// stb r31,1235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1235, ctx.r31.u8);
	// stb r10,1236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1236, ctx.r10.u8);
	// stb r31,1237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1237, ctx.r31.u8);
	// stb r31,1238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1238, ctx.r31.u8);
	// stb r31,1239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1239, ctx.r31.u8);
	// stb r31,1240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1240, ctx.r31.u8);
	// stb r31,1241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1241, ctx.r31.u8);
	// stb r31,1242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1242, ctx.r31.u8);
	// stb r7,1243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1243, ctx.r7.u8);
	// stb r8,1244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1244, ctx.r8.u8);
	// stb r31,1245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1245, ctx.r31.u8);
	// stb r31,1246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1246, ctx.r31.u8);
	// stb r31,1247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1247, ctx.r31.u8);
	// stb r31,1248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1248, ctx.r31.u8);
	// stb r19,1250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1250, ctx.r19.u8);
	// stb r25,1251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1251, ctx.r25.u8);
	// stb r31,1252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1252, ctx.r31.u8);
	// stb r5,1253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1253, ctx.r5.u8);
	// stb r14,1254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1254, ctx.r14.u8);
	// stb r31,1255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1255, ctx.r31.u8);
	// stb r31,1256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1256, ctx.r31.u8);
	// stb r31,1257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1257, ctx.r31.u8);
	// stb r31,1258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1258, ctx.r31.u8);
	// stb r24,1259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1259, ctx.r24.u8);
	// stb r21,1260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1260, ctx.r21.u8);
	// stb r31,1261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1261, ctx.r31.u8);
	// stb r31,1262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1262, ctx.r31.u8);
	// stb r31,1263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1263, ctx.r31.u8);
	// stb r31,1264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1264, ctx.r31.u8);
	// stb r31,1265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1265, ctx.r31.u8);
	// stb r31,1266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1266, ctx.r31.u8);
	// stb r11,1267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1267, ctx.r11.u8);
	// stb r9,1268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1268, ctx.r9.u8);
	// stb r31,1269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1269, ctx.r31.u8);
	// stb r31,1270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1270, ctx.r31.u8);
	// stb r31,1271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1271, ctx.r31.u8);
	// stb r31,1272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1272, ctx.r31.u8);
	// stb r31,1273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1273, ctx.r31.u8);
	// stb r31,1274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1274, ctx.r31.u8);
	// stb r31,1275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1275, ctx.r31.u8);
	// stb r10,1276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1276, ctx.r10.u8);
	// stb r31,1277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1277, ctx.r31.u8);
	// stb r31,1278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1278, ctx.r31.u8);
	// stb r31,1279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1279, ctx.r31.u8);
	// stb r31,1280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1280, ctx.r31.u8);
	// stb r31,1281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1281, ctx.r31.u8);
	// stb r31,1282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1282, ctx.r31.u8);
	// stb r7,1283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1283, ctx.r7.u8);
	// stb r8,1284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1284, ctx.r8.u8);
	// stb r31,1285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1285, ctx.r31.u8);
	// stb r31,1286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1286, ctx.r31.u8);
	// stb r31,1287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1287, ctx.r31.u8);
	// stb r31,1288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1288, ctx.r31.u8);
	// stb r4,1289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1289, ctx.r4.u8);
	// stb r14,1294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1294, ctx.r14.u8);
	// li r14,26
	ctx.r14.s64 = 26;
	// stb r31,1290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1290, ctx.r31.u8);
	// stb r31,1291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1291, ctx.r31.u8);
	// stb r31,1292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1292, ctx.r31.u8);
	// stb r5,1293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1293, ctx.r5.u8);
	// stb r14,1300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1300, ctx.r14.u8);
	// li r14,24
	ctx.r14.s64 = 24;
	// stb r31,1295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1295, ctx.r31.u8);
	// stb r31,1296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1296, ctx.r31.u8);
	// stb r31,1297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1297, ctx.r31.u8);
	// stb r31,1298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1298, ctx.r31.u8);
	// stb r24,1299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1299, ctx.r24.u8);
	// stb r31,1301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1301, ctx.r31.u8);
	// stb r31,1302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1302, ctx.r31.u8);
	// stb r31,1303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1303, ctx.r31.u8);
	// stb r31,1304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1304, ctx.r31.u8);
	// stb r31,1305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1305, ctx.r31.u8);
	// stb r31,1306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1306, ctx.r31.u8);
	// stb r11,1307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1307, ctx.r11.u8);
	// stb r9,1308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1308, ctx.r9.u8);
	// stb r31,1309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1309, ctx.r31.u8);
	// stb r31,1310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1310, ctx.r31.u8);
	// stb r31,1311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1311, ctx.r31.u8);
	// stb r31,1312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1312, ctx.r31.u8);
	// stb r31,1313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1313, ctx.r31.u8);
	// stb r31,1314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1314, ctx.r31.u8);
	// stb r31,1315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1315, ctx.r31.u8);
	// stb r10,1316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1316, ctx.r10.u8);
	// stb r31,1317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1317, ctx.r31.u8);
	// stb r31,1318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1318, ctx.r31.u8);
	// stb r31,1319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1319, ctx.r31.u8);
	// stb r31,1320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1320, ctx.r31.u8);
	// stb r31,1321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1321, ctx.r31.u8);
	// stb r31,1322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1322, ctx.r31.u8);
	// stb r7,1323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1323, ctx.r7.u8);
	// stb r8,1324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1324, ctx.r8.u8);
	// stb r31,1325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1325, ctx.r31.u8);
	// stb r31,1326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1326, ctx.r31.u8);
	// stb r31,1327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1327, ctx.r31.u8);
	// stb r31,1328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1328, ctx.r31.u8);
	// stb r6,1329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1329, ctx.r6.u8);
	// stb r31,1330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1330, ctx.r31.u8);
	// stb r31,1331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1331, ctx.r31.u8);
	// stb r31,1332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1332, ctx.r31.u8);
	// stb r5,1333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1333, ctx.r5.u8);
	// stb r24,1334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1334, ctx.r24.u8);
	// stb r31,1335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1335, ctx.r31.u8);
	// stb r31,1336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1336, ctx.r31.u8);
	// stb r31,1337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1337, ctx.r31.u8);
	// stb r31,1338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1338, ctx.r31.u8);
	// stb r24,1339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1339, ctx.r24.u8);
	// stb r14,1340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1340, ctx.r14.u8);
	// stb r31,1341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1341, ctx.r31.u8);
	// stb r31,1342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1342, ctx.r31.u8);
	// stb r31,1343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1343, ctx.r31.u8);
	// stb r31,1344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1344, ctx.r31.u8);
	// stb r31,1345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1345, ctx.r31.u8);
	// stb r31,1346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1346, ctx.r31.u8);
	// stb r11,1347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1347, ctx.r11.u8);
	// stb r9,1348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1348, ctx.r9.u8);
	// stb r31,1349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1349, ctx.r31.u8);
	// stb r31,1350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1350, ctx.r31.u8);
	// stb r31,1351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1351, ctx.r31.u8);
	// stb r31,1352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1352, ctx.r31.u8);
	// stb r31,1353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1353, ctx.r31.u8);
	// stb r31,1354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1354, ctx.r31.u8);
	// stb r31,1355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1355, ctx.r31.u8);
	// stb r10,1356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1356, ctx.r10.u8);
	// stb r31,1357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1357, ctx.r31.u8);
	// stb r31,1358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1358, ctx.r31.u8);
	// stb r31,1359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1359, ctx.r31.u8);
	// stb r31,1360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1360, ctx.r31.u8);
	// stb r31,1361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1361, ctx.r31.u8);
	// stb r31,1362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1362, ctx.r31.u8);
	// stb r7,1363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1363, ctx.r7.u8);
	// stb r8,1364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1364, ctx.r8.u8);
	// stb r31,1365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1365, ctx.r31.u8);
	// stb r31,1366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1366, ctx.r31.u8);
	// stb r31,1367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1367, ctx.r31.u8);
	// stb r31,1368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1368, ctx.r31.u8);
	// li r14,193
	ctx.r14.s64 = 193;
	// stb r20,1374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1374, ctx.r20.u8);
	// li r20,122
	ctx.r20.s64 = 122;
	// stb r25,1370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1370, ctx.r25.u8);
	// stb r31,1371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1371, ctx.r31.u8);
	// stb r31,1372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1372, ctx.r31.u8);
	// stb r6,1373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1373, ctx.r6.u8);
	// stb r14,1369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1369, ctx.r14.u8);
	// stb r14,1413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1413, ctx.r14.u8);
	// li r14,48
	ctx.r14.s64 = 48;
	// stb r20,1380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1380, ctx.r20.u8);
	// li r20,172
	ctx.r20.s64 = 172;
	// stb r31,1375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1375, ctx.r31.u8);
	// stb r31,1376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1376, ctx.r31.u8);
	// stb r31,1377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1377, ctx.r31.u8);
	// stb r14,1414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1414, ctx.r14.u8);
	// li r14,130
	ctx.r14.s64 = 130;
	// stb r31,1378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1378, ctx.r31.u8);
	// stb r10,1379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1379, ctx.r10.u8);
	// stb r31,1381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1381, ctx.r31.u8);
	// stb r31,1382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1382, ctx.r31.u8);
	// stb r31,1383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1383, ctx.r31.u8);
	// stb r31,1384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1384, ctx.r31.u8);
	// stb r31,1385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1385, ctx.r31.u8);
	// stb r31,1386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1386, ctx.r31.u8);
	// stb r11,1387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1387, ctx.r11.u8);
	// stb r9,1388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1388, ctx.r9.u8);
	// stb r31,1389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1389, ctx.r31.u8);
	// stb r31,1390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1390, ctx.r31.u8);
	// stb r31,1391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1391, ctx.r31.u8);
	// stb r31,1392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1392, ctx.r31.u8);
	// stb r31,1393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1393, ctx.r31.u8);
	// stb r31,1394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1394, ctx.r31.u8);
	// stb r31,1395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1395, ctx.r31.u8);
	// stb r10,1396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1396, ctx.r10.u8);
	// stb r31,1397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1397, ctx.r31.u8);
	// stb r31,1398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1398, ctx.r31.u8);
	// stb r31,1399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1399, ctx.r31.u8);
	// stb r31,1400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1400, ctx.r31.u8);
	// stb r31,1401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1401, ctx.r31.u8);
	// stb r31,1402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1402, ctx.r31.u8);
	// stb r7,1403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1403, ctx.r7.u8);
	// stb r8,1404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1404, ctx.r8.u8);
	// stb r31,1405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1405, ctx.r31.u8);
	// stb r31,1406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1406, ctx.r31.u8);
	// stb r31,1407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1407, ctx.r31.u8);
	// stb r31,1408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1408, ctx.r31.u8);
	// stb r3,1409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1409, ctx.r3.u8);
	// stb r20,1410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1410, ctx.r20.u8);
	// stb r31,1411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1411, ctx.r31.u8);
	// stb r31,1412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1412, ctx.r31.u8);
	// stb r31,1415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1415, ctx.r31.u8);
	// stb r31,1416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1416, ctx.r31.u8);
	// stb r31,1417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1417, ctx.r31.u8);
	// stb r31,1418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1418, ctx.r31.u8);
	// stb r10,1419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1419, ctx.r10.u8);
	// stb r14,1420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1420, ctx.r14.u8);
	// stb r31,1421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1421, ctx.r31.u8);
	// stb r31,1422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1422, ctx.r31.u8);
	// stb r31,1423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1423, ctx.r31.u8);
	// stb r31,1424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1424, ctx.r31.u8);
	// stb r31,1425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1425, ctx.r31.u8);
	// stb r31,1426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1426, ctx.r31.u8);
	// stb r11,1427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1427, ctx.r11.u8);
	// stb r9,1428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1428, ctx.r9.u8);
	// stb r31,1429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1429, ctx.r31.u8);
	// stb r31,1430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1430, ctx.r31.u8);
	// stb r31,1431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1431, ctx.r31.u8);
	// stb r31,1432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1432, ctx.r31.u8);
	// stb r31,1433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1433, ctx.r31.u8);
	// stb r31,1434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1434, ctx.r31.u8);
	// stb r31,1435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1435, ctx.r31.u8);
	// stb r10,1436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1436, ctx.r10.u8);
	// stb r31,1437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1437, ctx.r31.u8);
	// stb r31,1438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1438, ctx.r31.u8);
	// stb r31,1439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1439, ctx.r31.u8);
	// stb r31,1440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1440, ctx.r31.u8);
	// stb r31,1441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1441, ctx.r31.u8);
	// stb r31,1442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1442, ctx.r31.u8);
	// stb r7,1443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1443, ctx.r7.u8);
	// stb r8,1444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1444, ctx.r8.u8);
	// stb r20,1454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1454, ctx.r20.u8);
	// li r20,133
	ctx.r20.s64 = 133;
	// li r14,232
	ctx.r14.s64 = 232;
	// stb r31,1445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1445, ctx.r31.u8);
	// stb r31,1446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1446, ctx.r31.u8);
	// stb r31,1447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1447, ctx.r31.u8);
	// stb r31,1448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1448, ctx.r31.u8);
	// stb r20,1460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1460, ctx.r20.u8);
	// li r20,152
	ctx.r20.s64 = 152;
	// stb r3,1449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1449, ctx.r3.u8);
	// stb r14,1450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1450, ctx.r14.u8);
	// stb r31,1451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1451, ctx.r31.u8);
	// stb r31,1452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1452, ctx.r31.u8);
	// stb r20,1490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1490, ctx.r20.u8);
	// li r20,188
	ctx.r20.s64 = 188;
	// stb r3,1453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1453, ctx.r3.u8);
	// stb r31,1455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1455, ctx.r31.u8);
	// stb r31,1456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1456, ctx.r31.u8);
	// stb r31,1457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1457, ctx.r31.u8);
	// stb r20,1494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1494, ctx.r20.u8);
	// li r20,226
	ctx.r20.s64 = 226;
	// stb r31,1458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1458, ctx.r31.u8);
	// stb r10,1459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1459, ctx.r10.u8);
	// stb r31,1461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1461, ctx.r31.u8);
	// stb r31,1462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1462, ctx.r31.u8);
	// stb r31,1463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1463, ctx.r31.u8);
	// stb r31,1464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1464, ctx.r31.u8);
	// stb r31,1465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1465, ctx.r31.u8);
	// stb r31,1466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1466, ctx.r31.u8);
	// stb r11,1467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1467, ctx.r11.u8);
	// stb r9,1468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1468, ctx.r9.u8);
	// stb r31,1469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1469, ctx.r31.u8);
	// stb r31,1470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1470, ctx.r31.u8);
	// stb r31,1471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1471, ctx.r31.u8);
	// stb r31,1472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1472, ctx.r31.u8);
	// stb r31,1473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1473, ctx.r31.u8);
	// stb r31,1474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1474, ctx.r31.u8);
	// stb r31,1475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1475, ctx.r31.u8);
	// stb r10,1476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1476, ctx.r10.u8);
	// stb r31,1477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1477, ctx.r31.u8);
	// stb r31,1478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1478, ctx.r31.u8);
	// stb r31,1479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1479, ctx.r31.u8);
	// stb r31,1480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1480, ctx.r31.u8);
	// stb r31,1481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1481, ctx.r31.u8);
	// stb r31,1482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1482, ctx.r31.u8);
	// stb r7,1483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1483, ctx.r7.u8);
	// stb r8,1484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1484, ctx.r8.u8);
	// stb r31,1485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1485, ctx.r31.u8);
	// stb r31,1486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1486, ctx.r31.u8);
	// stb r31,1487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1487, ctx.r31.u8);
	// stb r31,1488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1488, ctx.r31.u8);
	// stb r3,1489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1489, ctx.r3.u8);
	// stb r31,1491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1491, ctx.r31.u8);
	// stb r31,1492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1492, ctx.r31.u8);
	// stb r3,1493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1493, ctx.r3.u8);
	// stb r31,1495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1495, ctx.r31.u8);
	// stb r31,1496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1496, ctx.r31.u8);
	// stb r31,1497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1497, ctx.r31.u8);
	// stb r31,1498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1498, ctx.r31.u8);
	// stb r29,1499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1499, ctx.r29.u8);
	// stb r20,1500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1500, ctx.r20.u8);
	// stb r31,1501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1501, ctx.r31.u8);
	// stb r31,1502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1502, ctx.r31.u8);
	// stb r31,1503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1503, ctx.r31.u8);
	// stb r31,1504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1504, ctx.r31.u8);
	// stb r31,1505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1505, ctx.r31.u8);
	// stb r31,1506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1506, ctx.r31.u8);
	// stb r11,1507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1507, ctx.r11.u8);
	// stb r9,1508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1508, ctx.r9.u8);
	// stb r31,1509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1509, ctx.r31.u8);
	// stb r31,1510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1510, ctx.r31.u8);
	// stb r31,1511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1511, ctx.r31.u8);
	// stb r31,1512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1512, ctx.r31.u8);
	// stb r31,1513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1513, ctx.r31.u8);
	// stb r31,1514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1514, ctx.r31.u8);
	// stb r31,1515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1515, ctx.r31.u8);
	// stb r10,1516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1516, ctx.r10.u8);
	// stb r31,1517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1517, ctx.r31.u8);
	// stb r31,1518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1518, ctx.r31.u8);
	// stb r31,1519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1519, ctx.r31.u8);
	// stb r31,1520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1520, ctx.r31.u8);
	// li r20,200
	ctx.r20.s64 = 200;
	// stb r31,1521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1521, ctx.r31.u8);
	// stb r31,1522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1522, ctx.r31.u8);
	// stb r7,1523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1523, ctx.r7.u8);
	// stb r8,1524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1524, ctx.r8.u8);
	// stb r31,1525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1525, ctx.r31.u8);
	// stb r20,1530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1530, ctx.r20.u8);
	// li r20,80
	ctx.r20.s64 = 80;
	// stb r31,1526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1526, ctx.r31.u8);
	// stb r31,1527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1527, ctx.r31.u8);
	// stb r31,1528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1528, ctx.r31.u8);
	// stb r3,1529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1529, ctx.r3.u8);
	// stb r20,1534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1534, ctx.r20.u8);
	// li r20,225
	ctx.r20.s64 = 225;
	// stb r31,1531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1531, ctx.r31.u8);
	// stb r31,1532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1532, ctx.r31.u8);
	// stb r4,1533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1533, ctx.r4.u8);
	// stb r31,1535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1535, ctx.r31.u8);
	// stb r20,1540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1540, ctx.r20.u8);
	// li r20,144
	ctx.r20.s64 = 144;
	// stb r31,1536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1536, ctx.r31.u8);
	// stb r31,1537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1537, ctx.r31.u8);
	// stb r31,1538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1538, ctx.r31.u8);
	// stb r29,1539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1539, ctx.r29.u8);
	// stb r20,1570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1570, ctx.r20.u8);
	// li r20,132
	ctx.r20.s64 = 132;
	// stb r31,1541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1541, ctx.r31.u8);
	// stb r31,1542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1542, ctx.r31.u8);
	// stb r31,1543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1543, ctx.r31.u8);
	// stb r31,1544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1544, ctx.r31.u8);
	// stb r20,1574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1574, ctx.r20.u8);
	// li r20,246
	ctx.r20.s64 = 246;
	// stb r31,1545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1545, ctx.r31.u8);
	// stb r31,1546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1546, ctx.r31.u8);
	// stb r11,1547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1547, ctx.r11.u8);
	// stb r9,1548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1548, ctx.r9.u8);
	// stb r31,1549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1549, ctx.r31.u8);
	// stb r31,1550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1550, ctx.r31.u8);
	// stb r31,1551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1551, ctx.r31.u8);
	// stb r31,1552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1552, ctx.r31.u8);
	// stb r31,1553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1553, ctx.r31.u8);
	// stb r31,1554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1554, ctx.r31.u8);
	// stb r31,1555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1555, ctx.r31.u8);
	// stb r10,1556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1556, ctx.r10.u8);
	// stb r31,1557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1557, ctx.r31.u8);
	// stb r31,1558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1558, ctx.r31.u8);
	// stb r31,1559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1559, ctx.r31.u8);
	// stb r31,1560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1560, ctx.r31.u8);
	// stb r31,1561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1561, ctx.r31.u8);
	// stb r31,1562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1562, ctx.r31.u8);
	// stb r7,1563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1563, ctx.r7.u8);
	// stb r8,1564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1564, ctx.r8.u8);
	// stb r31,1565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1565, ctx.r31.u8);
	// stb r31,1566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1566, ctx.r31.u8);
	// stb r31,1567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1567, ctx.r31.u8);
	// stb r31,1568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1568, ctx.r31.u8);
	// stb r3,1569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1569, ctx.r3.u8);
	// stb r31,1571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1571, ctx.r31.u8);
	// stb r31,1572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1572, ctx.r31.u8);
	// stb r4,1573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1573, ctx.r4.u8);
	// stb r31,1575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1575, ctx.r31.u8);
	// stb r31,1576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1576, ctx.r31.u8);
	// stb r31,1577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1577, ctx.r31.u8);
	// stb r31,1578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1578, ctx.r31.u8);
	// stb r29,1579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1579, ctx.r29.u8);
	// stb r20,1580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1580, ctx.r20.u8);
	// stb r31,1581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1581, ctx.r31.u8);
	// stb r31,1582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1582, ctx.r31.u8);
	// stb r31,1583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1583, ctx.r31.u8);
	// stb r31,1584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1584, ctx.r31.u8);
	// stb r31,1585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1585, ctx.r31.u8);
	// stb r31,1586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1586, ctx.r31.u8);
	// stb r11,1587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1587, ctx.r11.u8);
	// stb r28,1588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1588, ctx.r28.u8);
	// stb r31,1589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1589, ctx.r31.u8);
	// stb r31,1590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1590, ctx.r31.u8);
	// stb r31,1591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1591, ctx.r31.u8);
	// stb r31,1592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1592, ctx.r31.u8);
	// stb r31,1593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1593, ctx.r31.u8);
	// stb r31,1594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1594, ctx.r31.u8);
	// stb r31,1595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1595, ctx.r31.u8);
	// li r20,18
	ctx.r20.s64 = 18;
	// stb r23,1607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1607, ctx.r23.u8);
	// stb r17,1610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1610, ctx.r17.u8);
	// li r23,32
	ctx.r23.s64 = 32;
	// li r17,109
	ctx.r17.s64 = 109;
	// stb r31,1597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1597, ctx.r31.u8);
	// li r14,59
	ctx.r14.s64 = 59;
	// stb r31,1598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1598, ctx.r31.u8);
	// li r21,193
	ctx.r21.s64 = 193;
	// stb r31,1599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1599, ctx.r31.u8);
	// stb r20,1596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1596, ctx.r20.u8);
	// li r20,14
	ctx.r20.s64 = 14;
	// stb r23,1612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1612, ctx.r23.u8);
	// li r23,65
	ctx.r23.s64 = 65;
	// stb r17,1615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1615, ctx.r17.u8);
	// li r17,111
	ctx.r17.s64 = 111;
	// stb r14,1622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1622, ctx.r14.u8);
	// li r14,192
	ctx.r14.s64 = 192;
	// stb r21,1655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1655, ctx.r21.u8);
	// li r21,48
	ctx.r21.s64 = 48;
	// stb r20,1604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1604, ctx.r20.u8);
	// li r20,85
	ctx.r20.s64 = 85;
	// stb r31,1600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1600, ctx.r31.u8);
	// stb r31,1601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1601, ctx.r31.u8);
	// stb r31,1602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1602, ctx.r31.u8);
	// stb r31,1603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1603, ctx.r31.u8);
	// stb r20,1605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1605, ctx.r20.u8);
	// li r20,114
	ctx.r20.s64 = 114;
	// stb r18,1606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1606, ctx.r18.u8);
	// stb r22,1609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1609, ctx.r22.u8);
	// stb r30,1611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1611, ctx.r30.u8);
	// stb r23,1613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1613, ctx.r23.u8);
	// stb r20,1608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1608, ctx.r20.u8);
	// stb r20,1614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1614, ctx.r20.u8);
	// stb r17,1616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1616, ctx.r17.u8);
	// stb r20,1617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1617, ctx.r20.u8);
	// stb r31,1618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1618, ctx.r31.u8);
	// stb r31,1619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1619, ctx.r31.u8);
	// stb r31,1620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1620, ctx.r31.u8);
	// stb r9,1621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1621, ctx.r9.u8);
	// stb r31,1623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1623, ctx.r31.u8);
	// stb r31,1624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1624, ctx.r31.u8);
	// stb r31,1625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1625, ctx.r31.u8);
	// stb r31,1626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1626, ctx.r31.u8);
	// stb r31,1627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1627, ctx.r31.u8);
	// stb r31,1628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1628, ctx.r31.u8);
	// stb r11,1629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1629, ctx.r11.u8);
	// stb r9,1630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1630, ctx.r9.u8);
	// stb r31,1631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1631, ctx.r31.u8);
	// stb r31,1632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1632, ctx.r31.u8);
	// stb r31,1633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1633, ctx.r31.u8);
	// stb r31,1634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1634, ctx.r31.u8);
	// stb r31,1635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1635, ctx.r31.u8);
	// stb r31,1636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1636, ctx.r31.u8);
	// stb r31,1637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1637, ctx.r31.u8);
	// stb r10,1638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1638, ctx.r10.u8);
	// stb r31,1639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1639, ctx.r31.u8);
	// stb r31,1640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1640, ctx.r31.u8);
	// stb r31,1641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1641, ctx.r31.u8);
	// stb r31,1642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1642, ctx.r31.u8);
	// stb r31,1643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1643, ctx.r31.u8);
	// stb r31,1644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1644, ctx.r31.u8);
	// stb r7,1645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1645, ctx.r7.u8);
	// stb r8,1646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1646, ctx.r8.u8);
	// stb r31,1647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1647, ctx.r31.u8);
	// stb r31,1648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1648, ctx.r31.u8);
	// stb r31,1649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1649, ctx.r31.u8);
	// stb r31,1650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1650, ctx.r31.u8);
	// stb r23,1651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1651, ctx.r23.u8);
	// stb r14,1652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1652, ctx.r14.u8);
	// stb r31,1653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1653, ctx.r31.u8);
	// stb r31,1654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1654, ctx.r31.u8);
	// stb r21,1656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1656, ctx.r21.u8);
	// stb r31,1657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1657, ctx.r31.u8);
	// stb r31,1658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1658, ctx.r31.u8);
	// stb r31,1659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1659, ctx.r31.u8);
	// stb r31,1660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1660, ctx.r31.u8);
	// stb r9,1661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1661, ctx.r9.u8);
	// stb r4,1662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1662, ctx.r4.u8);
	// stb r31,1663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1663, ctx.r31.u8);
	// stb r31,1664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1664, ctx.r31.u8);
	// stb r14,1691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1691, ctx.r14.u8);
	// li r14,160
	ctx.r14.s64 = 160;
	// stb r31,1665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1665, ctx.r31.u8);
	// stb r31,1666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1666, ctx.r31.u8);
	// stb r31,1667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1667, ctx.r31.u8);
	// stb r31,1668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1668, ctx.r31.u8);
	// stb r14,1692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1692, ctx.r14.u8);
	// li r14,170
	ctx.r14.s64 = 170;
	// stb r11,1669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1669, ctx.r11.u8);
	// stb r9,1670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1670, ctx.r9.u8);
	// stb r31,1671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1671, ctx.r31.u8);
	// stb r31,1672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1672, ctx.r31.u8);
	// stb r14,1696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1696, ctx.r14.u8);
	// li r14,224
	ctx.r14.s64 = 224;
	// stb r31,1673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1673, ctx.r31.u8);
	// stb r31,1674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1674, ctx.r31.u8);
	// stb r31,1675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1675, ctx.r31.u8);
	// stb r31,1676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1676, ctx.r31.u8);
	// stb r14,1702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1702, ctx.r14.u8);
	// li r14,160
	ctx.r14.s64 = 160;
	// stb r31,1677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1677, ctx.r31.u8);
	// stb r10,1678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1678, ctx.r10.u8);
	// stb r31,1679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1679, ctx.r31.u8);
	// stb r31,1680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1680, ctx.r31.u8);
	// stb r14,1732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1732, ctx.r14.u8);
	// li r14,80
	ctx.r14.s64 = 80;
	// stb r31,1681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1681, ctx.r31.u8);
	// stb r31,1682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1682, ctx.r31.u8);
	// stb r31,1683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1683, ctx.r31.u8);
	// stb r31,1684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1684, ctx.r31.u8);
	// stb r7,1685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1685, ctx.r7.u8);
	// stb r8,1686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1686, ctx.r8.u8);
	// stb r31,1687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1687, ctx.r31.u8);
	// stb r31,1688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1688, ctx.r31.u8);
	// stb r31,1689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1689, ctx.r31.u8);
	// stb r31,1690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1690, ctx.r31.u8);
	// stb r31,1693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1693, ctx.r31.u8);
	// stb r31,1694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1694, ctx.r31.u8);
	// stb r3,1695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1695, ctx.r3.u8);
	// stb r31,1697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1697, ctx.r31.u8);
	// stb r31,1698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1698, ctx.r31.u8);
	// stb r31,1699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1699, ctx.r31.u8);
	// stb r31,1700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1700, ctx.r31.u8);
	// stb r29,1701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1701, ctx.r29.u8);
	// stb r31,1703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1703, ctx.r31.u8);
	// stb r31,1704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1704, ctx.r31.u8);
	// stb r31,1705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1705, ctx.r31.u8);
	// stb r31,1706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1706, ctx.r31.u8);
	// stb r31,1707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1707, ctx.r31.u8);
	// stb r31,1708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1708, ctx.r31.u8);
	// stb r11,1709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1709, ctx.r11.u8);
	// stb r9,1710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1710, ctx.r9.u8);
	// stb r31,1711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1711, ctx.r31.u8);
	// stb r31,1712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1712, ctx.r31.u8);
	// stb r31,1713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1713, ctx.r31.u8);
	// stb r31,1714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1714, ctx.r31.u8);
	// stb r31,1715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1715, ctx.r31.u8);
	// stb r31,1716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1716, ctx.r31.u8);
	// stb r31,1717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1717, ctx.r31.u8);
	// stb r10,1718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1718, ctx.r10.u8);
	// stb r31,1719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1719, ctx.r31.u8);
	// stb r31,1720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1720, ctx.r31.u8);
	// stb r31,1721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1721, ctx.r31.u8);
	// stb r31,1722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1722, ctx.r31.u8);
	// stb r31,1723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1723, ctx.r31.u8);
	// stb r31,1724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1724, ctx.r31.u8);
	// stb r7,1725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1725, ctx.r7.u8);
	// stb r8,1726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1726, ctx.r8.u8);
	// stb r31,1727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1727, ctx.r31.u8);
	// stb r31,1728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1728, ctx.r31.u8);
	// stb r31,1729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1729, ctx.r31.u8);
	// stb r31,1730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1730, ctx.r31.u8);
	// stb r23,1731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1731, ctx.r23.u8);
	// stb r31,1733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1733, ctx.r31.u8);
	// stb r31,1734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1734, ctx.r31.u8);
	// stb r4,1735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1735, ctx.r4.u8);
	// stb r14,1736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1736, ctx.r14.u8);
	// stb r31,1737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1737, ctx.r31.u8);
	// stb r31,1738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1738, ctx.r31.u8);
	// stb r31,1739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1739, ctx.r31.u8);
	// stb r31,1740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1740, ctx.r31.u8);
	// li r14,223
	ctx.r14.s64 = 223;
	// stb r29,1741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1741, ctx.r29.u8);
	// stb r31,1743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1743, ctx.r31.u8);
	// stb r31,1744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1744, ctx.r31.u8);
	// stb r31,1745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1745, ctx.r31.u8);
	// stb r31,1746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1746, ctx.r31.u8);
	// stb r14,1742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1742, ctx.r14.u8);
	// li r14,240
	ctx.r14.s64 = 240;
	// stb r31,1747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1747, ctx.r31.u8);
	// stb r31,1748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1748, ctx.r31.u8);
	// stb r11,1749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1749, ctx.r11.u8);
	// stb r9,1750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1750, ctx.r9.u8);
	// stb r14,1772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1772, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r31,1751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1751, ctx.r31.u8);
	// stb r31,1752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1752, ctx.r31.u8);
	// stb r31,1753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1753, ctx.r31.u8);
	// stb r31,1754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1754, ctx.r31.u8);
	// stb r14,1776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1776, ctx.r14.u8);
	// li r14,231
	ctx.r14.s64 = 231;
	// stb r31,1755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1755, ctx.r31.u8);
	// stb r31,1756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1756, ctx.r31.u8);
	// stb r31,1757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1757, ctx.r31.u8);
	// stb r10,1758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1758, ctx.r10.u8);
	// stb r14,1782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1782, ctx.r14.u8);
	// li r14,13
	ctx.r14.s64 = 13;
	// stb r31,1759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1759, ctx.r31.u8);
	// stb r31,1760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1760, ctx.r31.u8);
	// stb r31,1761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1761, ctx.r31.u8);
	// stb r31,1762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1762, ctx.r31.u8);
	// stb r14,1798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1798, ctx.r14.u8);
	// li r14,121
	ctx.r14.s64 = 121;
	// stb r31,1763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1763, ctx.r31.u8);
	// stb r31,1764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1764, ctx.r31.u8);
	// stb r7,1765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1765, ctx.r7.u8);
	// stb r8,1766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1766, ctx.r8.u8);
	// stb r14,1809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1809, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r31,1767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1767, ctx.r31.u8);
	// stb r31,1768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1768, ctx.r31.u8);
	// stb r31,1769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1769, ctx.r31.u8);
	// stb r31,1770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1770, ctx.r31.u8);
	// stb r14,1810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1810, ctx.r14.u8);
	// li r14,109
	ctx.r14.s64 = 109;
	// stb r23,1771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1771, ctx.r23.u8);
	// stb r31,1773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1773, ctx.r31.u8);
	// stb r31,1774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1774, ctx.r31.u8);
	// stb r4,1775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1775, ctx.r4.u8);
	// stb r31,1777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1777, ctx.r31.u8);
	// stb r31,1778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1778, ctx.r31.u8);
	// stb r31,1779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1779, ctx.r31.u8);
	// stb r31,1780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1780, ctx.r31.u8);
	// stb r29,1781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1781, ctx.r29.u8);
	// stb r31,1783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1783, ctx.r31.u8);
	// stb r31,1784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1784, ctx.r31.u8);
	// stb r31,1785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1785, ctx.r31.u8);
	// stb r31,1786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1786, ctx.r31.u8);
	// stb r31,1787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1787, ctx.r31.u8);
	// stb r31,1788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1788, ctx.r31.u8);
	// stb r11,1789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1789, ctx.r11.u8);
	// stb r28,1790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1790, ctx.r28.u8);
	// stb r31,1791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1791, ctx.r31.u8);
	// stb r31,1792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1792, ctx.r31.u8);
	// stb r31,1793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1793, ctx.r31.u8);
	// stb r31,1794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1794, ctx.r31.u8);
	// stb r31,1795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1795, ctx.r31.u8);
	// stb r31,1796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1796, ctx.r31.u8);
	// stb r31,1797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1797, ctx.r31.u8);
	// stb r31,1799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1799, ctx.r31.u8);
	// stb r31,1800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1800, ctx.r31.u8);
	// stb r31,1801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1801, ctx.r31.u8);
	// stb r31,1802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1802, ctx.r31.u8);
	// stb r31,1803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1803, ctx.r31.u8);
	// stb r31,1804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1804, ctx.r31.u8);
	// stb r31,1805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1805, ctx.r31.u8);
	// stb r8,1806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1806, ctx.r8.u8);
	// stb r4,1807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1807, ctx.r4.u8);
	// stb r27,1808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1808, ctx.r27.u8);
	// stb r23,1811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1811, ctx.r23.u8);
	// stb r14,1812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1812, ctx.r14.u8);
	// stb r14,1813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1813, ctx.r14.u8);
	// li r14,77
	ctx.r14.s64 = 77;
	// stb r17,1814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1814, ctx.r17.u8);
	// stb r31,1815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1815, ctx.r31.u8);
	// stb r31,1816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1816, ctx.r31.u8);
	// stb r31,1817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1817, ctx.r31.u8);
	// stb r31,1820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1820, ctx.r31.u8);
	// stb r14,1818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1818, ctx.r14.u8);
	// li r14,147
	ctx.r14.s64 = 147;
	// stb r31,1821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1821, ctx.r31.u8);
	// stb r31,1822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1822, ctx.r31.u8);
	// stb r31,1823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1823, ctx.r31.u8);
	// stb r31,1824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1824, ctx.r31.u8);
	// stb r14,1819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1819, ctx.r14.u8);
	// li r14,33
	ctx.r14.s64 = 33;
	// stb r31,1825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1825, ctx.r31.u8);
	// stb r11,1826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1826, ctx.r11.u8);
	// stb r9,1827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1827, ctx.r9.u8);
	// stb r31,1828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1828, ctx.r31.u8);
	// stb r14,1849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1849, ctx.r14.u8);
	// li r14,77
	ctx.r14.s64 = 77;
	// stb r31,1829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1829, ctx.r31.u8);
	// stb r31,1830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1830, ctx.r31.u8);
	// stb r31,1831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1831, ctx.r31.u8);
	// stb r31,1832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1832, ctx.r31.u8);
	// stb r14,1858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1858, ctx.r14.u8);
	// li r14,149
	ctx.r14.s64 = 149;
	// stb r31,1833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1833, ctx.r31.u8);
	// stb r31,1834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1834, ctx.r31.u8);
	// stb r10,1835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1835, ctx.r10.u8);
	// stb r31,1836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1836, ctx.r31.u8);
	// stb r31,1837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1837, ctx.r31.u8);
	// stb r31,1838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1838, ctx.r31.u8);
	// stb r31,1839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1839, ctx.r31.u8);
	// stb r31,1840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1840, ctx.r31.u8);
	// stb r31,1841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1841, ctx.r31.u8);
	// stb r7,1842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1842, ctx.r7.u8);
	// stb r8,1843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1843, ctx.r8.u8);
	// stb r31,1844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1844, ctx.r31.u8);
	// stb r31,1845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1845, ctx.r31.u8);
	// stb r31,1846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1846, ctx.r31.u8);
	// stb r31,1847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1847, ctx.r31.u8);
	// stb r5,1848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1848, ctx.r5.u8);
	// stb r31,1850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1850, ctx.r31.u8);
	// stb r31,1851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1851, ctx.r31.u8);
	// stb r6,1852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1852, ctx.r6.u8);
	// stb r15,1853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1853, ctx.r15.u8);
	// stb r31,1854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1854, ctx.r31.u8);
	// stb r31,1855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1855, ctx.r31.u8);
	// stb r31,1856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1856, ctx.r31.u8);
	// stb r31,1857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1857, ctx.r31.u8);
	// stb r14,1859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1859, ctx.r14.u8);
	// stb r31,1860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1860, ctx.r31.u8);
	// stb r31,1861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1861, ctx.r31.u8);
	// stb r31,1862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1862, ctx.r31.u8);
	// stb r31,1863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1863, ctx.r31.u8);
	// stb r31,1864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1864, ctx.r31.u8);
	// stb r31,1865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1865, ctx.r31.u8);
	// stb r11,1866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1866, ctx.r11.u8);
	// stb r9,1867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1867, ctx.r9.u8);
	// stb r31,1868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1868, ctx.r31.u8);
	// stb r31,1869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1869, ctx.r31.u8);
	// stb r31,1870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1870, ctx.r31.u8);
	// stb r31,1871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1871, ctx.r31.u8);
	// stb r31,1872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1872, ctx.r31.u8);
	// stb r31,1873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1873, ctx.r31.u8);
	// stb r31,1874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1874, ctx.r31.u8);
	// stb r10,1875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1875, ctx.r10.u8);
	// stb r31,1876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1876, ctx.r31.u8);
	// stb r31,1877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1877, ctx.r31.u8);
	// stb r31,1878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1878, ctx.r31.u8);
	// stb r31,1879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1879, ctx.r31.u8);
	// stb r31,1880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1880, ctx.r31.u8);
	// stb r31,1881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1881, ctx.r31.u8);
	// stb r7,1882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1882, ctx.r7.u8);
	// stb r8,1883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1883, ctx.r8.u8);
	// stb r31,1884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1884, ctx.r31.u8);
	// stb r31,1885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1885, ctx.r31.u8);
	// stb r31,1886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1886, ctx.r31.u8);
	// stb r31,1887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1887, ctx.r31.u8);
	// stb r5,1888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1888, ctx.r5.u8);
	// stb r15,1889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1889, ctx.r15.u8);
	// li r14,106
	ctx.r14.s64 = 106;
	// stb r31,1890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1890, ctx.r31.u8);
	// stb r31,1891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1891, ctx.r31.u8);
	// stb r6,1892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1892, ctx.r6.u8);
	// stb r31,1894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1894, ctx.r31.u8);
	// stb r31,1895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1895, ctx.r31.u8);
	// stb r14,1893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1893, ctx.r14.u8);
	// li r14,77
	ctx.r14.s64 = 77;
	// stb r31,1896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1896, ctx.r31.u8);
	// stb r31,1897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1897, ctx.r31.u8);
	// stb r31,1900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1900, ctx.r31.u8);
	// stb r31,1901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1901, ctx.r31.u8);
	// stb r14,1898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1898, ctx.r14.u8);
	// li r14,150
	ctx.r14.s64 = 150;
	// stb r31,1902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1902, ctx.r31.u8);
	// stb r31,1903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1903, ctx.r31.u8);
	// stb r31,1904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1904, ctx.r31.u8);
	// stb r31,1905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1905, ctx.r31.u8);
	// stb r14,1899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1899, ctx.r14.u8);
	// li r14,40
	ctx.r14.s64 = 40;
	// stb r11,1906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1906, ctx.r11.u8);
	// stb r9,1907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1907, ctx.r9.u8);
	// stb r31,1908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1908, ctx.r31.u8);
	// stb r31,1909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1909, ctx.r31.u8);
	// stb r14,1929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1929, ctx.r14.u8);
	// li r14,126
	ctx.r14.s64 = 126;
	// stb r31,1910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1910, ctx.r31.u8);
	// stb r31,1911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1911, ctx.r31.u8);
	// stb r31,1912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1912, ctx.r31.u8);
	// stb r31,1913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1913, ctx.r31.u8);
	// stb r14,1933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1933, ctx.r14.u8);
	// li r14,241
	ctx.r14.s64 = 241;
	// stb r31,1914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1914, ctx.r31.u8);
	// stb r10,1915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1915, ctx.r10.u8);
	// stb r31,1916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1916, ctx.r31.u8);
	// stb r31,1917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1917, ctx.r31.u8);
	// stb r14,1939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1939, ctx.r14.u8);
	// li r14,13
	ctx.r14.s64 = 13;
	// stb r31,1918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1918, ctx.r31.u8);
	// stb r31,1919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1919, ctx.r31.u8);
	// stb r31,1920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1920, ctx.r31.u8);
	// stb r31,1921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1921, ctx.r31.u8);
	// stb r7,1922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1922, ctx.r7.u8);
	// stb r8,1923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1923, ctx.r8.u8);
	// stb r31,1924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1924, ctx.r31.u8);
	// stb r31,1925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1925, ctx.r31.u8);
	// stb r31,1926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1926, ctx.r31.u8);
	// stb r31,1927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1927, ctx.r31.u8);
	// stb r5,1928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1928, ctx.r5.u8);
	// stb r31,1930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1930, ctx.r31.u8);
	// stb r31,1931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1931, ctx.r31.u8);
	// stb r6,1932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1932, ctx.r6.u8);
	// stb r31,1934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1934, ctx.r31.u8);
	// stb r31,1935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1935, ctx.r31.u8);
	// stb r31,1936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1936, ctx.r31.u8);
	// stb r31,1937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1937, ctx.r31.u8);
	// stb r29,1938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1938, ctx.r29.u8);
	// stb r31,1940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1940, ctx.r31.u8);
	// stb r31,1941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1941, ctx.r31.u8);
	// stb r31,1942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1942, ctx.r31.u8);
	// stb r31,1943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1943, ctx.r31.u8);
	// stb r31,1944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1944, ctx.r31.u8);
	// stb r31,1945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1945, ctx.r31.u8);
	// stb r11,1946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1946, ctx.r11.u8);
	// stb r28,1947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1947, ctx.r28.u8);
	// stb r31,1948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1948, ctx.r31.u8);
	// stb r31,1949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1949, ctx.r31.u8);
	// stb r31,1950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1950, ctx.r31.u8);
	// stb r31,1951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1951, ctx.r31.u8);
	// stb r31,1952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1952, ctx.r31.u8);
	// stb r31,1953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1953, ctx.r31.u8);
	// stb r31,1954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1954, ctx.r31.u8);
	// stb r14,1955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1955, ctx.r14.u8);
	// stb r31,1956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1956, ctx.r31.u8);
	// stb r31,1957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1957, ctx.r31.u8);
	// stb r31,1958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1958, ctx.r31.u8);
	// stb r31,1959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1959, ctx.r31.u8);
	// stb r31,1960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1960, ctx.r31.u8);
	// stb r31,1961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1961, ctx.r31.u8);
	// stb r31,1962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1962, ctx.r31.u8);
	// stb r8,1963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1963, ctx.r8.u8);
	// stb r27,1965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1965, ctx.r27.u8);
	// li r14,80
	ctx.r14.s64 = 80;
	// li r27,99
	ctx.r27.s64 = 99;
	// stb r20,1966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1966, ctx.r20.u8);
	// stb r22,1969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1969, ctx.r22.u8);
	// stb r30,1971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1971, ctx.r30.u8);
	// stb r31,1972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1972, ctx.r31.u8);
	// stb r14,1964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1964, ctx.r14.u8);
	// li r14,87
	ctx.r14.s64 = 87;
	// stb r27,1967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1967, ctx.r27.u8);
	// li r27,104
	ctx.r27.s64 = 104;
	// stb r31,1973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1973, ctx.r31.u8);
	// stb r31,1974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1974, ctx.r31.u8);
	// stb r29,1975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1975, ctx.r29.u8);
	// stb r14,2001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2001, ctx.r14.u8);
	// li r14,110
	ctx.r14.s64 = 110;
	// stb r27,1968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1968, ctx.r27.u8);
	// li r27,115
	ctx.r27.s64 = 115;
	// stb r31,1977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1977, ctx.r31.u8);
	// stb r31,1978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1978, ctx.r31.u8);
	// stb r31,1979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1979, ctx.r31.u8);
	// stb r14,2006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2006, ctx.r14.u8);
	// li r14,17
	ctx.r14.s64 = 17;
	// stb r27,1970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1970, ctx.r27.u8);
	// li r27,242
	ctx.r27.s64 = 242;
	// stb r31,1980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1980, ctx.r31.u8);
	// stb r31,1981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1981, ctx.r31.u8);
	// stb r31,1982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1982, ctx.r31.u8);
	// stb r14,2010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2010, ctx.r14.u8);
	// li r14,212
	ctx.r14.s64 = 212;
	// stb r27,1976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1976, ctx.r27.u8);
	// li r27,11
	ctx.r27.s64 = 11;
	// stb r11,1983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1983, ctx.r11.u8);
	// stb r28,1984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1984, ctx.r28.u8);
	// stb r31,1985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1985, ctx.r31.u8);
	// stb r31,1986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1986, ctx.r31.u8);
	// stb r31,1987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1987, ctx.r31.u8);
	// stb r31,1988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1988, ctx.r31.u8);
	// stb r31,1989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1989, ctx.r31.u8);
	// stb r31,1990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1990, ctx.r31.u8);
	// stb r31,1991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1991, ctx.r31.u8);
	// stb r27,1992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1992, ctx.r27.u8);
	// stb r31,1993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1993, ctx.r31.u8);
	// stb r31,1994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1994, ctx.r31.u8);
	// stb r31,1995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1995, ctx.r31.u8);
	// stb r31,1996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1996, ctx.r31.u8);
	// stb r31,1997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1997, ctx.r31.u8);
	// stb r31,1998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1998, ctx.r31.u8);
	// stb r31,1999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1999, ctx.r31.u8);
	// stb r16,2000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2000, ctx.r16.u8);
	// stb r30,2002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2002, ctx.r30.u8);
	// stb r22,2003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2003, ctx.r22.u8);
	// stb r18,2004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2004, ctx.r18.u8);
	// stb r17,2005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2005, ctx.r17.u8);
	// stb r31,2007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2007, ctx.r31.u8);
	// stb r31,2008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2008, ctx.r31.u8);
	// stb r31,2009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2009, ctx.r31.u8);
	// stb r14,2011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2011, ctx.r14.u8);
	// stb r31,2012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2012, ctx.r31.u8);
	// stb r31,2013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2013, ctx.r31.u8);
	// stb r31,2014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2014, ctx.r31.u8);
	// stb r31,2015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2015, ctx.r31.u8);
	// stb r31,2016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2016, ctx.r31.u8);
	// stb r31,2017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2017, ctx.r31.u8);
	// stb r11,2018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2018, ctx.r11.u8);
	// stb r9,2019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2019, ctx.r9.u8);
	// stb r31,2020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2020, ctx.r31.u8);
	// stb r31,2021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2021, ctx.r31.u8);
	// stb r31,2022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2022, ctx.r31.u8);
	// stb r31,2023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2023, ctx.r31.u8);
	// stb r31,2024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2024, ctx.r31.u8);
	// stb r31,2025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2025, ctx.r31.u8);
	// stb r31,2026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2026, ctx.r31.u8);
	// stb r10,2027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2027, ctx.r10.u8);
	// stb r31,2028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2028, ctx.r31.u8);
	// stb r31,2029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2029, ctx.r31.u8);
	// stb r31,2030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2030, ctx.r31.u8);
	// stb r31,2031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2031, ctx.r31.u8);
	// stb r31,2032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2032, ctx.r31.u8);
	// stb r31,2033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2033, ctx.r31.u8);
	// stb r7,2034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2034, ctx.r7.u8);
	// stb r15,2045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2045, ctx.r15.u8);
	// li r15,17
	ctx.r15.s64 = 17;
	// stb r8,2035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2035, ctx.r8.u8);
	// stb r31,2036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2036, ctx.r31.u8);
	// stb r31,2037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2037, ctx.r31.u8);
	// stb r31,2038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2038, ctx.r31.u8);
	// stb r15,2050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2050, ctx.r15.u8);
	// li r15,216
	ctx.r15.s64 = 216;
	// stb r31,2039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2039, ctx.r31.u8);
	// stb r4,2040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2040, ctx.r4.u8);
	// stb r3,2041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2041, ctx.r3.u8);
	// stb r31,2042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2042, ctx.r31.u8);
	// stb r15,2051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2051, ctx.r15.u8);
	// li r15,190
	ctx.r15.s64 = 190;
	// stb r31,2043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2043, ctx.r31.u8);
	// stb r6,2044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2044, ctx.r6.u8);
	// stb r31,2046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2046, ctx.r31.u8);
	// stb r31,2047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2047, ctx.r31.u8);
	// stb r15,2081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2081, ctx.r15.u8);
	// li r15,106
	ctx.r15.s64 = 106;
	// stb r31,2048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2048, ctx.r31.u8);
	// stb r31,2049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2049, ctx.r31.u8);
	// stb r31,2052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2052, ctx.r31.u8);
	// stb r31,2053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2053, ctx.r31.u8);
	// stb r15,2085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2085, ctx.r15.u8);
	// li r15,233
	ctx.r15.s64 = 233;
	// stb r31,2054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2054, ctx.r31.u8);
	// stb r31,2055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2055, ctx.r31.u8);
	// stb r31,2056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2056, ctx.r31.u8);
	// stb r31,2057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2057, ctx.r31.u8);
	// stb r11,2058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2058, ctx.r11.u8);
	// stb r9,2059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2059, ctx.r9.u8);
	// stb r31,2060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2060, ctx.r31.u8);
	// stb r31,2061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2061, ctx.r31.u8);
	// stb r31,2062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2062, ctx.r31.u8);
	// stb r31,2063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2063, ctx.r31.u8);
	// stb r31,2064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2064, ctx.r31.u8);
	// stb r31,2065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2065, ctx.r31.u8);
	// stb r31,2066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2066, ctx.r31.u8);
	// stb r10,2067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2067, ctx.r10.u8);
	// stb r31,2068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2068, ctx.r31.u8);
	// stb r31,2069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2069, ctx.r31.u8);
	// stb r31,2070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2070, ctx.r31.u8);
	// stb r31,2071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2071, ctx.r31.u8);
	// stb r31,2072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2072, ctx.r31.u8);
	// stb r31,2073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2073, ctx.r31.u8);
	// stb r7,2074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2074, ctx.r7.u8);
	// stb r8,2075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2075, ctx.r8.u8);
	// stb r31,2076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2076, ctx.r31.u8);
	// stb r31,2077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2077, ctx.r31.u8);
	// stb r31,2078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2078, ctx.r31.u8);
	// stb r31,2079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2079, ctx.r31.u8);
	// stb r4,2080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2080, ctx.r4.u8);
	// stb r31,2082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2082, ctx.r31.u8);
	// stb r31,2083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2083, ctx.r31.u8);
	// stb r6,2084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2084, ctx.r6.u8);
	// stb r31,2086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2086, ctx.r31.u8);
	// stb r31,2087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2087, ctx.r31.u8);
	// stb r31,2088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2088, ctx.r31.u8);
	// stb r31,2089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2089, ctx.r31.u8);
	// stb r29,2090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2090, ctx.r29.u8);
	// stb r15,2091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2091, ctx.r15.u8);
	// stb r31,2092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2092, ctx.r31.u8);
	// stb r31,2093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2093, ctx.r31.u8);
	// stb r31,2094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2094, ctx.r31.u8);
	// stb r31,2095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2095, ctx.r31.u8);
	// stb r31,2096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2096, ctx.r31.u8);
	// stb r31,2097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2097, ctx.r31.u8);
	// stb r11,2098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2098, ctx.r11.u8);
	// stb r28,2099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2099, ctx.r28.u8);
	// stb r31,2100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2100, ctx.r31.u8);
	// stb r31,2101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2101, ctx.r31.u8);
	// stb r31,2102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2102, ctx.r31.u8);
	// stb r31,2103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2103, ctx.r31.u8);
	// stb r31,2104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2104, ctx.r31.u8);
	// stb r31,2105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2105, ctx.r31.u8);
	// stb r31,2106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2106, ctx.r31.u8);
	// stb r27,2107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2107, ctx.r27.u8);
	// stb r31,2108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2108, ctx.r31.u8);
	// stb r31,2109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2109, ctx.r31.u8);
	// stb r31,2110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2110, ctx.r31.u8);
	// li r27,110
	ctx.r27.s64 = 110;
	// stb r16,2115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2115, ctx.r16.u8);
	// li r16,52
	ctx.r16.s64 = 52;
	// stb r31,2111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2111, ctx.r31.u8);
	// li r15,72
	ctx.r15.s64 = 72;
	// stb r31,2112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2112, ctx.r31.u8);
	// stb r31,2113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2113, ctx.r31.u8);
	// stb r31,2114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2114, ctx.r31.u8);
	// stb r27,2118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2118, ctx.r27.u8);
	// li r27,99
	ctx.r27.s64 = 99;
	// stb r16,2160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2160, ctx.r16.u8);
	// li r16,57
	ctx.r16.s64 = 57;
	// stb r6,2116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2116, ctx.r6.u8);
	// stb r22,2117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2117, ctx.r22.u8);
	// stb r30,2120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2120, ctx.r30.u8);
	// stb r27,2119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2119, ctx.r27.u8);
	// li r27,108
	ctx.r27.s64 = 108;
	// stb r31,2122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2122, ctx.r31.u8);
	// stb r31,2123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2123, ctx.r31.u8);
	// stb r31,2124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2124, ctx.r31.u8);
	// stb r15,2125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2125, ctx.r15.u8);
	// stb r27,2121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2121, ctx.r27.u8);
	// li r27,56
	ctx.r27.s64 = 56;
	// stb r31,2127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2127, ctx.r31.u8);
	// stb r31,2128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2128, ctx.r31.u8);
	// stb r31,2129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2129, ctx.r31.u8);
	// stb r31,2130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2130, ctx.r31.u8);
	// stb r27,2126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2126, ctx.r27.u8);
	// li r27,173
	ctx.r27.s64 = 173;
	// stb r31,2131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2131, ctx.r31.u8);
	// stb r31,2132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2132, ctx.r31.u8);
	// stb r11,2133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2133, ctx.r11.u8);
	// stb r9,2134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2134, ctx.r9.u8);
	// stb r31,2135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2135, ctx.r31.u8);
	// stb r31,2136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2136, ctx.r31.u8);
	// stb r31,2137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2137, ctx.r31.u8);
	// stb r31,2138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2138, ctx.r31.u8);
	// stb r31,2139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2139, ctx.r31.u8);
	// stb r31,2140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2140, ctx.r31.u8);
	// stb r31,2141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2141, ctx.r31.u8);
	// stb r10,2142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2142, ctx.r10.u8);
	// stb r31,2143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2143, ctx.r31.u8);
	// stb r31,2144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2144, ctx.r31.u8);
	// stb r31,2145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2145, ctx.r31.u8);
	// stb r31,2146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2146, ctx.r31.u8);
	// stb r31,2147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2147, ctx.r31.u8);
	// stb r31,2148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2148, ctx.r31.u8);
	// stb r7,2149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2149, ctx.r7.u8);
	// stb r8,2150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2150, ctx.r8.u8);
	// stb r31,2151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2151, ctx.r31.u8);
	// stb r31,2152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2152, ctx.r31.u8);
	// stb r31,2153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2153, ctx.r31.u8);
	// stb r31,2154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2154, ctx.r31.u8);
	// stb r5,2155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2155, ctx.r5.u8);
	// stb r27,2156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2156, ctx.r27.u8);
	// stb r31,2157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2157, ctx.r31.u8);
	// stb r31,2158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2158, ctx.r31.u8);
	// stb r5,2159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2159, ctx.r5.u8);
	// stb r31,2161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2161, ctx.r31.u8);
	// stb r31,2162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2162, ctx.r31.u8);
	// stb r31,2163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2163, ctx.r31.u8);
	// stb r31,2164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2164, ctx.r31.u8);
	// stb r15,2165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2165, ctx.r15.u8);
	// stb r16,2166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2166, ctx.r16.u8);
	// stb r31,2167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2167, ctx.r31.u8);
	// stb r31,2168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2168, ctx.r31.u8);
	// stb r31,2169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2169, ctx.r31.u8);
	// stb r31,2170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2170, ctx.r31.u8);
	// stb r31,2171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2171, ctx.r31.u8);
	// stb r31,2172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2172, ctx.r31.u8);
	// stb r11,2173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2173, ctx.r11.u8);
	// stb r9,2174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2174, ctx.r9.u8);
	// stb r31,2175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2175, ctx.r31.u8);
	// stb r31,2176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2176, ctx.r31.u8);
	// stb r31,2177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2177, ctx.r31.u8);
	// stb r31,2178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2178, ctx.r31.u8);
	// stb r31,2179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2179, ctx.r31.u8);
	// stb r31,2180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2180, ctx.r31.u8);
	// stb r31,2181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2181, ctx.r31.u8);
	// stb r10,2182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2182, ctx.r10.u8);
	// stb r31,2183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2183, ctx.r31.u8);
	// li r14,140
	ctx.r14.s64 = 140;
	// stb r31,2184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2184, ctx.r31.u8);
	// li r16,30
	ctx.r16.s64 = 30;
	// stb r31,2185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2185, ctx.r31.u8);
	// stb r31,2186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2186, ctx.r31.u8);
	// stb r31,2187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2187, ctx.r31.u8);
	// stb r31,2188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2188, ctx.r31.u8);
	// stb r14,2206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2206, ctx.r14.u8);
	// li r14,240
	ctx.r14.s64 = 240;
	// stb r16,2200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2200, ctx.r16.u8);
	// li r16,91
	ctx.r16.s64 = 91;
	// stb r7,2189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2189, ctx.r7.u8);
	// stb r8,2190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2190, ctx.r8.u8);
	// stb r31,2191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2191, ctx.r31.u8);
	// stb r14,2240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2240, ctx.r14.u8);
	// li r14,141
	ctx.r14.s64 = 141;
	// stb r31,2192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2192, ctx.r31.u8);
	// stb r31,2193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2193, ctx.r31.u8);
	// stb r31,2194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2194, ctx.r31.u8);
	// stb r5,2195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2195, ctx.r5.u8);
	// stb r27,2196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2196, ctx.r27.u8);
	// stb r31,2197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2197, ctx.r31.u8);
	// stb r31,2198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2198, ctx.r31.u8);
	// stb r5,2199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2199, ctx.r5.u8);
	// stb r31,2201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2201, ctx.r31.u8);
	// stb r31,2202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2202, ctx.r31.u8);
	// stb r31,2203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2203, ctx.r31.u8);
	// stb r31,2204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2204, ctx.r31.u8);
	// stb r16,2205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2205, ctx.r16.u8);
	// stb r31,2207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2207, ctx.r31.u8);
	// stb r31,2208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2208, ctx.r31.u8);
	// stb r31,2209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2209, ctx.r31.u8);
	// stb r31,2210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2210, ctx.r31.u8);
	// stb r31,2211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2211, ctx.r31.u8);
	// stb r31,2212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2212, ctx.r31.u8);
	// stb r11,2213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2213, ctx.r11.u8);
	// stb r9,2214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2214, ctx.r9.u8);
	// stb r31,2215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2215, ctx.r31.u8);
	// stb r31,2216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2216, ctx.r31.u8);
	// stb r31,2217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2217, ctx.r31.u8);
	// stb r31,2218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2218, ctx.r31.u8);
	// stb r31,2219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2219, ctx.r31.u8);
	// stb r31,2220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2220, ctx.r31.u8);
	// stb r31,2221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2221, ctx.r31.u8);
	// stb r10,2222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2222, ctx.r10.u8);
	// stb r31,2223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2223, ctx.r31.u8);
	// stb r31,2224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2224, ctx.r31.u8);
	// stb r31,2225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2225, ctx.r31.u8);
	// stb r31,2226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2226, ctx.r31.u8);
	// stb r31,2227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2227, ctx.r31.u8);
	// stb r31,2228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2228, ctx.r31.u8);
	// stb r7,2229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2229, ctx.r7.u8);
	// stb r8,2230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2230, ctx.r8.u8);
	// stb r31,2231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2231, ctx.r31.u8);
	// stb r31,2232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2232, ctx.r31.u8);
	// stb r31,2233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2233, ctx.r31.u8);
	// stb r31,2234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2234, ctx.r31.u8);
	// stb r5,2235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2235, ctx.r5.u8);
	// stb r27,2236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2236, ctx.r27.u8);
	// stb r31,2237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2237, ctx.r31.u8);
	// stb r31,2238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2238, ctx.r31.u8);
	// stb r3,2239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2239, ctx.r3.u8);
	// stb r31,2241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2241, ctx.r31.u8);
	// stb r31,2242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2242, ctx.r31.u8);
	// stb r31,2243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2243, ctx.r31.u8);
	// stb r31,2244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2244, ctx.r31.u8);
	// stb r16,2245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2245, ctx.r16.u8);
	// stb r14,2246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2246, ctx.r14.u8);
	// stb r31,2247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2247, ctx.r31.u8);
	// stb r31,2248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2248, ctx.r31.u8);
	// stb r31,2249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2249, ctx.r31.u8);
	// stb r31,2250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2250, ctx.r31.u8);
	// stb r31,2251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2251, ctx.r31.u8);
	// stb r31,2252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2252, ctx.r31.u8);
	// stb r11,2253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2253, ctx.r11.u8);
	// stb r9,2254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2254, ctx.r9.u8);
	// stb r31,2255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2255, ctx.r31.u8);
	// stb r31,2256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2256, ctx.r31.u8);
	// stb r31,2257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2257, ctx.r31.u8);
	// stb r31,2258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2258, ctx.r31.u8);
	// stb r31,2259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2259, ctx.r31.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r31,2260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2260, ctx.r31.u8);
	// stb r31,2261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2261, ctx.r31.u8);
	// stb r10,2262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2262, ctx.r10.u8);
	// stb r31,2263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2263, ctx.r31.u8);
	// stb r31,2264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2264, ctx.r31.u8);
	// stb r14,2280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2280, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r31,2265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2265, ctx.r31.u8);
	// stb r31,2266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2266, ctx.r31.u8);
	// stb r31,2267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2267, ctx.r31.u8);
	// stb r31,2268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2268, ctx.r31.u8);
	// stb r14,2285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2285, ctx.r14.u8);
	// li r14,227
	ctx.r14.s64 = 227;
	// stb r7,2269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2269, ctx.r7.u8);
	// stb r8,2270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2270, ctx.r8.u8);
	// stb r31,2271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2271, ctx.r31.u8);
	// stb r31,2272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2272, ctx.r31.u8);
	// stb r14,2286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2286, ctx.r14.u8);
	// li r14,158
	ctx.r14.s64 = 158;
	// stb r31,2273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2273, ctx.r31.u8);
	// stb r31,2274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2274, ctx.r31.u8);
	// stb r5,2275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2275, ctx.r5.u8);
	// stb r27,2276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2276, ctx.r27.u8);
	// stb r14,2316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2316, ctx.r14.u8);
	// li r14,28
	ctx.r14.s64 = 28;
	// stb r31,2277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2277, ctx.r31.u8);
	// stb r31,2278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2278, ctx.r31.u8);
	// stb r3,2279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2279, ctx.r3.u8);
	// stb r31,2281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2281, ctx.r31.u8);
	// stb r14,2320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2320, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r31,2282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2282, ctx.r31.u8);
	// stb r31,2283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2283, ctx.r31.u8);
	// stb r31,2284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2284, ctx.r31.u8);
	// stb r31,2287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2287, ctx.r31.u8);
	// stb r14,2325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2325, ctx.r14.u8);
	// li r14,229
	ctx.r14.s64 = 229;
	// stb r31,2288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2288, ctx.r31.u8);
	// stb r31,2289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2289, ctx.r31.u8);
	// stb r31,2290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2290, ctx.r31.u8);
	// stb r31,2291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2291, ctx.r31.u8);
	// stb r31,2292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2292, ctx.r31.u8);
	// stb r11,2293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2293, ctx.r11.u8);
	// stb r9,2294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2294, ctx.r9.u8);
	// stb r31,2295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2295, ctx.r31.u8);
	// stb r31,2296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2296, ctx.r31.u8);
	// stb r31,2297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2297, ctx.r31.u8);
	// stb r31,2298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2298, ctx.r31.u8);
	// stb r31,2299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2299, ctx.r31.u8);
	// stb r31,2300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2300, ctx.r31.u8);
	// stb r31,2301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2301, ctx.r31.u8);
	// stb r10,2302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2302, ctx.r10.u8);
	// stb r31,2303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2303, ctx.r31.u8);
	// stb r31,2304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2304, ctx.r31.u8);
	// stb r31,2305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2305, ctx.r31.u8);
	// stb r31,2306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2306, ctx.r31.u8);
	// stb r31,2307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2307, ctx.r31.u8);
	// stb r31,2308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2308, ctx.r31.u8);
	// stb r7,2309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2309, ctx.r7.u8);
	// stb r8,2310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2310, ctx.r8.u8);
	// stb r31,2311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2311, ctx.r31.u8);
	// stb r31,2312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2312, ctx.r31.u8);
	// stb r31,2313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2313, ctx.r31.u8);
	// stb r31,2314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2314, ctx.r31.u8);
	// stb r5,2315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2315, ctx.r5.u8);
	// stb r31,2317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2317, ctx.r31.u8);
	// stb r31,2318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2318, ctx.r31.u8);
	// stb r6,2319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2319, ctx.r6.u8);
	// stb r31,2321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2321, ctx.r31.u8);
	// stb r31,2322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2322, ctx.r31.u8);
	// stb r31,2323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2323, ctx.r31.u8);
	// stb r31,2324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2324, ctx.r31.u8);
	// stb r14,2326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2326, ctx.r14.u8);
	// stb r31,2327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2327, ctx.r31.u8);
	// stb r31,2328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2328, ctx.r31.u8);
	// stb r31,2329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2329, ctx.r31.u8);
	// stb r31,2330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2330, ctx.r31.u8);
	// stb r31,2331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2331, ctx.r31.u8);
	// stb r31,2332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2332, ctx.r31.u8);
	// stb r11,2333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2333, ctx.r11.u8);
	// li r14,158
	ctx.r14.s64 = 158;
	// stb r9,2334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2334, ctx.r9.u8);
	// li r21,28
	ctx.r21.s64 = 28;
	// stb r31,2335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2335, ctx.r31.u8);
	// stb r31,2336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2336, ctx.r31.u8);
	// stb r31,2337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2337, ctx.r31.u8);
	// stb r31,2338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2338, ctx.r31.u8);
	// stb r14,2356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2356, ctx.r14.u8);
	// li r14,51
	ctx.r14.s64 = 51;
	// stb r31,2339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2339, ctx.r31.u8);
	// stb r31,2340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2340, ctx.r31.u8);
	// stb r31,2341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2341, ctx.r31.u8);
	// stb r10,2342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2342, ctx.r10.u8);
	// stb r14,2360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2360, ctx.r14.u8);
	// li r14,22
	ctx.r14.s64 = 22;
	// stb r31,2343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2343, ctx.r31.u8);
	// stb r31,2344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2344, ctx.r31.u8);
	// stb r31,2345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2345, ctx.r31.u8);
	// stb r31,2346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2346, ctx.r31.u8);
	// stb r14,2365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2365, ctx.r14.u8);
	// stb r14,2405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2405, ctx.r14.u8);
	// li r14,73
	ctx.r14.s64 = 73;
	// stb r31,2347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2347, ctx.r31.u8);
	// stb r31,2348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2348, ctx.r31.u8);
	// stb r7,2349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2349, ctx.r7.u8);
	// stb r8,2350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2350, ctx.r8.u8);
	// stb r31,2351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2351, ctx.r31.u8);
	// stb r31,2352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2352, ctx.r31.u8);
	// stb r31,2353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2353, ctx.r31.u8);
	// stb r31,2354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2354, ctx.r31.u8);
	// stb r5,2355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2355, ctx.r5.u8);
	// stb r31,2357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2357, ctx.r31.u8);
	// stb r31,2358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2358, ctx.r31.u8);
	// stb r6,2359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2359, ctx.r6.u8);
	// stb r31,2361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2361, ctx.r31.u8);
	// stb r31,2362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2362, ctx.r31.u8);
	// stb r31,2363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2363, ctx.r31.u8);
	// stb r31,2364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2364, ctx.r31.u8);
	// stb r15,2366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2366, ctx.r15.u8);
	// stb r31,2367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2367, ctx.r31.u8);
	// stb r31,2368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2368, ctx.r31.u8);
	// stb r31,2369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2369, ctx.r31.u8);
	// stb r31,2370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2370, ctx.r31.u8);
	// stb r31,2371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2371, ctx.r31.u8);
	// stb r31,2372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2372, ctx.r31.u8);
	// stb r11,2373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2373, ctx.r11.u8);
	// stb r9,2374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2374, ctx.r9.u8);
	// stb r31,2375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2375, ctx.r31.u8);
	// stb r31,2376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2376, ctx.r31.u8);
	// stb r31,2377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2377, ctx.r31.u8);
	// stb r31,2378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2378, ctx.r31.u8);
	// stb r31,2379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2379, ctx.r31.u8);
	// stb r31,2380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2380, ctx.r31.u8);
	// stb r31,2381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2381, ctx.r31.u8);
	// stb r10,2382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2382, ctx.r10.u8);
	// stb r31,2383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2383, ctx.r31.u8);
	// stb r31,2384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2384, ctx.r31.u8);
	// stb r31,2385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2385, ctx.r31.u8);
	// stb r31,2386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2386, ctx.r31.u8);
	// stb r31,2387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2387, ctx.r31.u8);
	// stb r31,2388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2388, ctx.r31.u8);
	// stb r7,2389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2389, ctx.r7.u8);
	// stb r8,2390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2390, ctx.r8.u8);
	// stb r31,2391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2391, ctx.r31.u8);
	// stb r31,2392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2392, ctx.r31.u8);
	// stb r31,2393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2393, ctx.r31.u8);
	// stb r31,2394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2394, ctx.r31.u8);
	// stb r6,2395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2395, ctx.r6.u8);
	// stb r23,2396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2396, ctx.r23.u8);
	// stb r31,2397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2397, ctx.r31.u8);
	// stb r31,2398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2398, ctx.r31.u8);
	// stb r6,2399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2399, ctx.r6.u8);
	// stb r21,2400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2400, ctx.r21.u8);
	// stb r31,2401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2401, ctx.r31.u8);
	// stb r31,2402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2402, ctx.r31.u8);
	// stb r31,2403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2403, ctx.r31.u8);
	// stb r31,2404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2404, ctx.r31.u8);
	// stb r14,2406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2406, ctx.r14.u8);
	// stb r31,2407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2407, ctx.r31.u8);
	// stb r31,2408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2408, ctx.r31.u8);
	// stb r31,2409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2409, ctx.r31.u8);
	// li r14,51
	ctx.r14.s64 = 51;
	// stb r31,2410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2410, ctx.r31.u8);
	// stb r31,2411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2411, ctx.r31.u8);
	// stb r31,2412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2412, ctx.r31.u8);
	// stb r11,2413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2413, ctx.r11.u8);
	// stb r9,2414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2414, ctx.r9.u8);
	// stb r14,2440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2440, ctx.r14.u8);
	// li r14,234
	ctx.r14.s64 = 234;
	// stb r31,2415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2415, ctx.r31.u8);
	// stb r31,2416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2416, ctx.r31.u8);
	// stb r31,2417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2417, ctx.r31.u8);
	// stb r31,2418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2418, ctx.r31.u8);
	// stb r14,2446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2446, ctx.r14.u8);
	// li r14,115
	ctx.r14.s64 = 115;
	// stb r31,2419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2419, ctx.r31.u8);
	// stb r31,2420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2420, ctx.r31.u8);
	// stb r31,2421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2421, ctx.r31.u8);
	// stb r10,2422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2422, ctx.r10.u8);
	// stb r14,2473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2473, ctx.r14.u8);
	// li r14,116
	ctx.r14.s64 = 116;
	// stb r31,2423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2423, ctx.r31.u8);
	// stb r31,2424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2424, ctx.r31.u8);
	// stb r31,2425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2425, ctx.r31.u8);
	// stb r31,2426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2426, ctx.r31.u8);
	// stb r31,2427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2427, ctx.r31.u8);
	// stb r31,2428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2428, ctx.r31.u8);
	// stb r7,2429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2429, ctx.r7.u8);
	// stb r8,2430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2430, ctx.r8.u8);
	// stb r31,2431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2431, ctx.r31.u8);
	// stb r31,2432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2432, ctx.r31.u8);
	// stb r31,2433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2433, ctx.r31.u8);
	// stb r31,2434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2434, ctx.r31.u8);
	// stb r6,2435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2435, ctx.r6.u8);
	// stb r23,2436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2436, ctx.r23.u8);
	// stb r31,2437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2437, ctx.r31.u8);
	// stb r31,2438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2438, ctx.r31.u8);
	// stb r6,2439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2439, ctx.r6.u8);
	// stb r31,2441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2441, ctx.r31.u8);
	// stb r31,2442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2442, ctx.r31.u8);
	// stb r31,2443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2443, ctx.r31.u8);
	// stb r31,2444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2444, ctx.r31.u8);
	// stb r29,2445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2445, ctx.r29.u8);
	// stb r31,2447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2447, ctx.r31.u8);
	// stb r31,2448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2448, ctx.r31.u8);
	// stb r31,2449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2449, ctx.r31.u8);
	// stb r31,2450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2450, ctx.r31.u8);
	// stb r31,2451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2451, ctx.r31.u8);
	// stb r31,2452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2452, ctx.r31.u8);
	// stb r11,2453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2453, ctx.r11.u8);
	// stb r28,2454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2454, ctx.r28.u8);
	// stb r31,2455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2455, ctx.r31.u8);
	// stb r31,2456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2456, ctx.r31.u8);
	// stb r31,2457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2457, ctx.r31.u8);
	// stb r31,2458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2458, ctx.r31.u8);
	// stb r31,2459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2459, ctx.r31.u8);
	// stb r31,2460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2460, ctx.r31.u8);
	// stb r31,2461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2461, ctx.r31.u8);
	// stb r8,2462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2462, ctx.r8.u8);
	// stb r31,2463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2463, ctx.r31.u8);
	// stb r31,2464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2464, ctx.r31.u8);
	// stb r31,2465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2465, ctx.r31.u8);
	// stb r31,2466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2466, ctx.r31.u8);
	// stb r31,2467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2467, ctx.r31.u8);
	// stb r31,2468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2468, ctx.r31.u8);
	// stb r31,2469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2469, ctx.r31.u8);
	// stb r19,2470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2470, ctx.r19.u8);
	// stb r6,2471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2471, ctx.r6.u8);
	// stb r17,2472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2472, ctx.r17.u8);
	// stb r14,2474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2474, ctx.r14.u8);
	// stb r31,2475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2475, ctx.r31.u8);
	// stb r31,2476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2476, ctx.r31.u8);
	// stb r31,2477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2477, ctx.r31.u8);
	// stb r26,2478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2478, ctx.r26.u8);
	// stb r14,2479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2479, ctx.r14.u8);
	// stb r31,2480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2480, ctx.r31.u8);
	// stb r31,2481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2481, ctx.r31.u8);
	// stb r31,2482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2482, ctx.r31.u8);
	// stb r31,2483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2483, ctx.r31.u8);
	// stb r31,2484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2484, ctx.r31.u8);
	// stb r31,2485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2485, ctx.r31.u8);
	// stb r11,2486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2486, ctx.r11.u8);
	// li r14,52
	ctx.r14.s64 = 52;
	// stb r16,2509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2509, ctx.r16.u8);
	// stb r16,2549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2549, ctx.r16.u8);
	// li r16,178
	ctx.r16.s64 = 178;
	// stb r9,2487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2487, ctx.r9.u8);
	// stb r31,2488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2488, ctx.r31.u8);
	// stb r31,2489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2489, ctx.r31.u8);
	// stb r14,2513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2513, ctx.r14.u8);
	// li r14,113
	ctx.r14.s64 = 113;
	// stb r31,2490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2490, ctx.r31.u8);
	// stb r31,2491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2491, ctx.r31.u8);
	// stb r31,2492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2492, ctx.r31.u8);
	// stb r31,2493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2493, ctx.r31.u8);
	// stb r14,2519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2519, ctx.r14.u8);
	// li r14,76
	ctx.r14.s64 = 76;
	// stb r31,2494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2494, ctx.r31.u8);
	// stb r10,2495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2495, ctx.r10.u8);
	// stb r31,2496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2496, ctx.r31.u8);
	// stb r31,2497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2497, ctx.r31.u8);
	// stb r31,2498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2498, ctx.r31.u8);
	// stb r31,2499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2499, ctx.r31.u8);
	// stb r31,2500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2500, ctx.r31.u8);
	// stb r31,2501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2501, ctx.r31.u8);
	// stb r7,2502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2502, ctx.r7.u8);
	// stb r8,2503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2503, ctx.r8.u8);
	// stb r31,2504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2504, ctx.r31.u8);
	// stb r31,2505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2505, ctx.r31.u8);
	// stb r31,2506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2506, ctx.r31.u8);
	// stb r31,2507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2507, ctx.r31.u8);
	// stb r6,2508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2508, ctx.r6.u8);
	// stb r31,2510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2510, ctx.r31.u8);
	// stb r31,2511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2511, ctx.r31.u8);
	// stb r5,2512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2512, ctx.r5.u8);
	// stb r31,2514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2514, ctx.r31.u8);
	// stb r31,2515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2515, ctx.r31.u8);
	// stb r31,2516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2516, ctx.r31.u8);
	// stb r31,2517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2517, ctx.r31.u8);
	// stb r26,2518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2518, ctx.r26.u8);
	// stb r31,2520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2520, ctx.r31.u8);
	// stb r31,2521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2521, ctx.r31.u8);
	// stb r31,2522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2522, ctx.r31.u8);
	// stb r31,2523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2523, ctx.r31.u8);
	// stb r31,2524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2524, ctx.r31.u8);
	// stb r31,2525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2525, ctx.r31.u8);
	// stb r11,2526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2526, ctx.r11.u8);
	// stb r9,2527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2527, ctx.r9.u8);
	// stb r31,2528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2528, ctx.r31.u8);
	// stb r31,2529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2529, ctx.r31.u8);
	// stb r31,2530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2530, ctx.r31.u8);
	// stb r31,2531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2531, ctx.r31.u8);
	// stb r31,2532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2532, ctx.r31.u8);
	// stb r31,2533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2533, ctx.r31.u8);
	// stb r31,2534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2534, ctx.r31.u8);
	// stb r10,2535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2535, ctx.r10.u8);
	// stb r31,2536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2536, ctx.r31.u8);
	// stb r31,2537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2537, ctx.r31.u8);
	// stb r31,2538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2538, ctx.r31.u8);
	// stb r31,2539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2539, ctx.r31.u8);
	// stb r31,2540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2540, ctx.r31.u8);
	// stb r31,2541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2541, ctx.r31.u8);
	// stb r7,2542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2542, ctx.r7.u8);
	// stb r8,2543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2543, ctx.r8.u8);
	// stb r31,2544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2544, ctx.r31.u8);
	// stb r31,2545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2545, ctx.r31.u8);
	// stb r31,2546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2546, ctx.r31.u8);
	// stb r31,2547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2547, ctx.r31.u8);
	// stb r6,2548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2548, ctx.r6.u8);
	// stb r31,2550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2550, ctx.r31.u8);
	// stb r31,2551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2551, ctx.r31.u8);
	// stb r5,2552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2552, ctx.r5.u8);
	// stb r29,2553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2553, ctx.r29.u8);
	// stb r31,2554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2554, ctx.r31.u8);
	// stb r31,2555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2555, ctx.r31.u8);
	// stb r31,2556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2556, ctx.r31.u8);
	// stb r31,2557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2557, ctx.r31.u8);
	// stb r14,2558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2558, ctx.r14.u8);
	// stb r16,2559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2559, ctx.r16.u8);
	// stb r31,2560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2560, ctx.r31.u8);
	// stb r31,2561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2561, ctx.r31.u8);
	// stb r31,2562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2562, ctx.r31.u8);
	// stb r31,2563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2563, ctx.r31.u8);
	// stb r5,2592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2592, ctx.r5.u8);
	// li r5,22
	ctx.r5.s64 = 22;
	// stb r27,2599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2599, ctx.r27.u8);
	// li r16,209
	ctx.r16.s64 = 209;
	// li r27,185
	ctx.r27.s64 = 185;
	// stb r14,2598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2598, ctx.r14.u8);
	// stb r31,2564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2564, ctx.r31.u8);
	// li r14,21
	ctx.r14.s64 = 21;
	// stb r31,2565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2565, ctx.r31.u8);
	// stb r5,2593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2593, ctx.r5.u8);
	// li r5,164
	ctx.r5.s64 = 164;
	// stb r11,2566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2566, ctx.r11.u8);
	// stb r9,2567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2567, ctx.r9.u8);
	// stb r31,2568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2568, ctx.r31.u8);
	// stb r31,2569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2569, ctx.r31.u8);
	// stb r5,2633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2633, ctx.r5.u8);
	// li r5,82
	ctx.r5.s64 = 82;
	// stb r31,2570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2570, ctx.r31.u8);
	// stb r31,2571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2571, ctx.r31.u8);
	// stb r31,2572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2572, ctx.r31.u8);
	// stb r31,2573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2573, ctx.r31.u8);
	// stb r31,2574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2574, ctx.r31.u8);
	// stb r10,2575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2575, ctx.r10.u8);
	// stb r31,2576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2576, ctx.r31.u8);
	// stb r31,2577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2577, ctx.r31.u8);
	// stb r31,2578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2578, ctx.r31.u8);
	// stb r31,2579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2579, ctx.r31.u8);
	// stb r31,2580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2580, ctx.r31.u8);
	// stb r31,2581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2581, ctx.r31.u8);
	// stb r7,2582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2582, ctx.r7.u8);
	// stb r8,2583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2583, ctx.r8.u8);
	// stb r31,2584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2584, ctx.r31.u8);
	// stb r31,2585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2585, ctx.r31.u8);
	// stb r31,2586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2586, ctx.r31.u8);
	// stb r31,2587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2587, ctx.r31.u8);
	// stb r6,2588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2588, ctx.r6.u8);
	// stb r16,2589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2589, ctx.r16.u8);
	// stb r25,2590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2590, ctx.r25.u8);
	// stb r31,2591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2591, ctx.r31.u8);
	// stb r31,2594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2594, ctx.r31.u8);
	// stb r31,2595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2595, ctx.r31.u8);
	// stb r31,2596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2596, ctx.r31.u8);
	// stb r31,2597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2597, ctx.r31.u8);
	// stb r31,2600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2600, ctx.r31.u8);
	// stb r31,2601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2601, ctx.r31.u8);
	// stb r31,2602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2602, ctx.r31.u8);
	// stb r31,2603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2603, ctx.r31.u8);
	// stb r31,2604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2604, ctx.r31.u8);
	// stb r31,2605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2605, ctx.r31.u8);
	// stb r11,2606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2606, ctx.r11.u8);
	// stb r9,2607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2607, ctx.r9.u8);
	// stb r31,2608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2608, ctx.r31.u8);
	// stb r31,2609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2609, ctx.r31.u8);
	// stb r31,2610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2610, ctx.r31.u8);
	// stb r31,2611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2611, ctx.r31.u8);
	// stb r31,2612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2612, ctx.r31.u8);
	// stb r31,2613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2613, ctx.r31.u8);
	// stb r31,2614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2614, ctx.r31.u8);
	// stb r10,2615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2615, ctx.r10.u8);
	// stb r31,2616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2616, ctx.r31.u8);
	// stb r31,2617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2617, ctx.r31.u8);
	// stb r31,2618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2618, ctx.r31.u8);
	// stb r31,2619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2619, ctx.r31.u8);
	// stb r31,2620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2620, ctx.r31.u8);
	// stb r31,2621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2621, ctx.r31.u8);
	// stb r7,2622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2622, ctx.r7.u8);
	// stb r8,2623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2623, ctx.r8.u8);
	// stb r31,2624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2624, ctx.r31.u8);
	// stb r31,2625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2625, ctx.r31.u8);
	// stb r31,2626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2626, ctx.r31.u8);
	// stb r31,2627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2627, ctx.r31.u8);
	// stb r6,2628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2628, ctx.r6.u8);
	// stb r27,2629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2629, ctx.r27.u8);
	// stb r31,2630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2630, ctx.r31.u8);
	// stb r31,2631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2631, ctx.r31.u8);
	// stb r3,2632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2632, ctx.r3.u8);
	// stb r31,2634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2634, ctx.r31.u8);
	// stb r31,2635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2635, ctx.r31.u8);
	// stb r31,2636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2636, ctx.r31.u8);
	// stb r31,2637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2637, ctx.r31.u8);
	// stb r5,2638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2638, ctx.r5.u8);
	// stb r5,2678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2678, ctx.r5.u8);
	// li r5,19
	ctx.r5.s64 = 19;
	// stb r14,2639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2639, ctx.r14.u8);
	// stb r31,2640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2640, ctx.r31.u8);
	// stb r31,2641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2641, ctx.r31.u8);
	// stb r31,2642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2642, ctx.r31.u8);
	// stb r5,2679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2679, ctx.r5.u8);
	// li r5,87
	ctx.r5.s64 = 87;
	// stb r31,2643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2643, ctx.r31.u8);
	// stb r31,2644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2644, ctx.r31.u8);
	// stb r31,2645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2645, ctx.r31.u8);
	// stb r11,2646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2646, ctx.r11.u8);
	// stb r9,2647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2647, ctx.r9.u8);
	// stb r31,2648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2648, ctx.r31.u8);
	// stb r31,2649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2649, ctx.r31.u8);
	// stb r31,2650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2650, ctx.r31.u8);
	// stb r31,2651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2651, ctx.r31.u8);
	// stb r31,2652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2652, ctx.r31.u8);
	// stb r31,2653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2653, ctx.r31.u8);
	// stb r31,2654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2654, ctx.r31.u8);
	// stb r10,2655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2655, ctx.r10.u8);
	// stb r31,2656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2656, ctx.r31.u8);
	// stb r31,2657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2657, ctx.r31.u8);
	// stb r31,2658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2658, ctx.r31.u8);
	// stb r31,2659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2659, ctx.r31.u8);
	// stb r31,2660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2660, ctx.r31.u8);
	// stb r31,2661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2661, ctx.r31.u8);
	// stb r7,2662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2662, ctx.r7.u8);
	// stb r8,2663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2663, ctx.r8.u8);
	// stb r31,2664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2664, ctx.r31.u8);
	// stb r31,2665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2665, ctx.r31.u8);
	// stb r31,2666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2666, ctx.r31.u8);
	// stb r31,2667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2667, ctx.r31.u8);
	// stb r6,2668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2668, ctx.r6.u8);
	// stb r16,2669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2669, ctx.r16.u8);
	// stb r25,2670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2670, ctx.r25.u8);
	// stb r31,2671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2671, ctx.r31.u8);
	// stb r3,2672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2672, ctx.r3.u8);
	// stb r15,2673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2673, ctx.r15.u8);
	// stb r31,2674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2674, ctx.r31.u8);
	// stb r31,2675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2675, ctx.r31.u8);
	// stb r31,2676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2676, ctx.r31.u8);
	// stb r31,2677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2677, ctx.r31.u8);
	// stb r31,2680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2680, ctx.r31.u8);
	// stb r31,2681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2681, ctx.r31.u8);
	// stb r31,2682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2682, ctx.r31.u8);
	// stb r31,2683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2683, ctx.r31.u8);
	// stb r31,2684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2684, ctx.r31.u8);
	// stb r31,2685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2685, ctx.r31.u8);
	// stb r11,2686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2686, ctx.r11.u8);
	// stb r9,2687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2687, ctx.r9.u8);
	// stb r31,2688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2688, ctx.r31.u8);
	// stb r31,2689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2689, ctx.r31.u8);
	// stb r31,2690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2690, ctx.r31.u8);
	// stb r31,2691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2691, ctx.r31.u8);
	// stb r31,2692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2692, ctx.r31.u8);
	// stb r31,2693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2693, ctx.r31.u8);
	// stb r31,2694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2694, ctx.r31.u8);
	// stb r10,2695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2695, ctx.r10.u8);
	// stb r31,2696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2696, ctx.r31.u8);
	// stb r31,2697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2697, ctx.r31.u8);
	// stb r31,2698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2698, ctx.r31.u8);
	// stb r31,2699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2699, ctx.r31.u8);
	// stb r31,2700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2700, ctx.r31.u8);
	// stb r31,2701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2701, ctx.r31.u8);
	// stb r7,2702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2702, ctx.r7.u8);
	// stb r8,2703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2703, ctx.r8.u8);
	// stb r31,2704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2704, ctx.r31.u8);
	// stb r31,2705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2705, ctx.r31.u8);
	// stb r31,2706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2706, ctx.r31.u8);
	// stb r31,2707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2707, ctx.r31.u8);
	// stb r6,2708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2708, ctx.r6.u8);
	// stb r27,2709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2709, ctx.r27.u8);
	// stb r31,2710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2710, ctx.r31.u8);
	// stb r31,2711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2711, ctx.r31.u8);
	// stb r23,2712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2712, ctx.r23.u8);
	// stb r31,2713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2713, ctx.r31.u8);
	// stb r31,2714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2714, ctx.r31.u8);
	// stb r31,2715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2715, ctx.r31.u8);
	// stb r31,2716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2716, ctx.r31.u8);
	// stb r31,2717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2717, ctx.r31.u8);
	// li r3,104
	ctx.r3.s64 = 104;
	// stb r5,2718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2718, ctx.r5.u8);
	// stb r9,2727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2727, ctx.r9.u8);
	// li r5,14
	ctx.r5.s64 = 14;
	// stb r9,2767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2767, ctx.r9.u8);
	// li r9,188
	ctx.r9.s64 = 188;
	// stb r31,2720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2720, ctx.r31.u8);
	// stb r31,2721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2721, ctx.r31.u8);
	// stb r3,2753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2753, ctx.r3.u8);
	// li r3,86
	ctx.r3.s64 = 86;
	// stb r5,2719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2719, ctx.r5.u8);
	// stb r31,2722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2722, ctx.r31.u8);
	// stb r31,2723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2723, ctx.r31.u8);
	// stb r31,2724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2724, ctx.r31.u8);
	// stb r3,2758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2758, ctx.r3.u8);
	// li r3,249
	ctx.r3.s64 = 249;
	// stb r31,2725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2725, ctx.r31.u8);
	// stb r11,2726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2726, ctx.r11.u8);
	// stb r31,2728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2728, ctx.r31.u8);
	// stb r31,2729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2729, ctx.r31.u8);
	// stb r31,2730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2730, ctx.r31.u8);
	// stb r31,2731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2731, ctx.r31.u8);
	// stb r31,2732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2732, ctx.r31.u8);
	// stb r31,2733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2733, ctx.r31.u8);
	// stb r31,2734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2734, ctx.r31.u8);
	// stb r10,2735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2735, ctx.r10.u8);
	// stb r31,2736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2736, ctx.r31.u8);
	// stb r31,2737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2737, ctx.r31.u8);
	// stb r31,2738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2738, ctx.r31.u8);
	// stb r31,2739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2739, ctx.r31.u8);
	// stb r31,2740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2740, ctx.r31.u8);
	// stb r31,2741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2741, ctx.r31.u8);
	// stb r7,2742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2742, ctx.r7.u8);
	// stb r8,2743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2743, ctx.r8.u8);
	// stb r31,2744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2744, ctx.r31.u8);
	// stb r31,2745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2745, ctx.r31.u8);
	// stb r31,2746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2746, ctx.r31.u8);
	// stb r31,2747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2747, ctx.r31.u8);
	// stb r6,2748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2748, ctx.r6.u8);
	// stb r16,2749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2749, ctx.r16.u8);
	// stb r25,2750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2750, ctx.r25.u8);
	// stb r31,2751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2751, ctx.r31.u8);
	// stb r4,2752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2752, ctx.r4.u8);
	// stb r31,2754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2754, ctx.r31.u8);
	// stb r31,2755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2755, ctx.r31.u8);
	// stb r31,2756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2756, ctx.r31.u8);
	// stb r31,2757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2757, ctx.r31.u8);
	// stb r3,2759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2759, ctx.r3.u8);
	// stb r31,2760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2760, ctx.r31.u8);
	// stb r31,2761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2761, ctx.r31.u8);
	// stb r31,2762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2762, ctx.r31.u8);
	// stb r31,2763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2763, ctx.r31.u8);
	// stb r31,2764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2764, ctx.r31.u8);
	// stb r31,2765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2765, ctx.r31.u8);
	// stb r11,2766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2766, ctx.r11.u8);
	// stb r31,2768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2768, ctx.r31.u8);
	// stb r31,2769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2769, ctx.r31.u8);
	// stb r31,2770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2770, ctx.r31.u8);
	// stb r31,2771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2771, ctx.r31.u8);
	// stb r31,2772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2772, ctx.r31.u8);
	// stb r31,2773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2773, ctx.r31.u8);
	// stb r31,2774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2774, ctx.r31.u8);
	// stb r10,2775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2775, ctx.r10.u8);
	// stb r31,2776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2776, ctx.r31.u8);
	// stb r31,2777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2777, ctx.r31.u8);
	// stb r31,2778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2778, ctx.r31.u8);
	// stb r31,2779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2779, ctx.r31.u8);
	// stb r31,2780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2780, ctx.r31.u8);
	// stb r31,2781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2781, ctx.r31.u8);
	// stb r7,2782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2782, ctx.r7.u8);
	// stb r8,2783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2783, ctx.r8.u8);
	// stb r31,2784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2784, ctx.r31.u8);
	// stb r31,2785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2785, ctx.r31.u8);
	// stb r31,2786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2786, ctx.r31.u8);
	// stb r31,2787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2787, ctx.r31.u8);
	// stb r6,2788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2788, ctx.r6.u8);
	// stb r27,2789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2789, ctx.r27.u8);
	// stb r31,2790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2790, ctx.r31.u8);
	// stb r31,2791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2791, ctx.r31.u8);
	// stb r4,2792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2792, ctx.r4.u8);
	// stb r9,2793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2793, ctx.r9.u8);
	// li r9,240
	ctx.r9.s64 = 240;
	// stb r31,2794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2794, ctx.r31.u8);
	// li r7,243
	ctx.r7.s64 = 243;
	// stb r31,2795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2795, ctx.r31.u8);
	// li r8,105
	ctx.r8.s64 = 105;
	// stb r31,2796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2796, ctx.r31.u8);
	// li r4,99
	ctx.r4.s64 = 99;
	// stb r31,2797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2797, ctx.r31.u8);
	// li r3,110
	ctx.r3.s64 = 110;
	// stb r29,2798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2798, ctx.r29.u8);
	// stb r9,2799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2799, ctx.r9.u8);
	// li r9,80
	ctx.r9.s64 = 80;
	// stb r7,2835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2835, ctx.r7.u8);
	// li r7,10
	ctx.r7.s64 = 10;
	// stb r31,2800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2800, ctx.r31.u8);
	// stb r31,2801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2801, ctx.r31.u8);
	// stb r31,2802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2802, ctx.r31.u8);
	// stb r9,2824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2824, ctx.r9.u8);
	// li r9,109
	ctx.r9.s64 = 109;
	// stb r7,2859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2859, ctx.r7.u8);
	// li r7,83
	ctx.r7.s64 = 83;
	// stb r31,2803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2803, ctx.r31.u8);
	// stb r31,2804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2804, ctx.r31.u8);
	// stb r31,2805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2805, ctx.r31.u8);
	// stb r9,2827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2827, ctx.r9.u8);
	// li r9,121
	ctx.r9.s64 = 121;
	// stb r11,2806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2806, ctx.r11.u8);
	// stb r28,2807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2807, ctx.r28.u8);
	// stb r31,2808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2808, ctx.r31.u8);
	// stb r31,2809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2809, ctx.r31.u8);
	// stb r31,2810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2810, ctx.r31.u8);
	// stb r31,2811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2811, ctx.r31.u8);
	// stb r31,2812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2812, ctx.r31.u8);
	// stb r31,2813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2813, ctx.r31.u8);
	// stb r31,2814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2814, ctx.r31.u8);
	// stb r24,2815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2815, ctx.r24.u8);
	// stb r31,2816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2816, ctx.r31.u8);
	// stb r31,2817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2817, ctx.r31.u8);
	// stb r31,2818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2818, ctx.r31.u8);
	// stb r31,2819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2819, ctx.r31.u8);
	// stb r31,2820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2820, ctx.r31.u8);
	// stb r31,2821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2821, ctx.r31.u8);
	// stb r31,2822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2822, ctx.r31.u8);
	// stb r10,2823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2823, ctx.r10.u8);
	// stb r20,2825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2825, ctx.r20.u8);
	// stb r8,2826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2826, ctx.r8.u8);
	// stb r22,2828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2828, ctx.r22.u8);
	// stb r20,2829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2829, ctx.r20.u8);
	// stb r9,2830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2830, ctx.r9.u8);
	// stb r31,2831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2831, ctx.r31.u8);
	// stb r31,2832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2832, ctx.r31.u8);
	// stb r31,2833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2833, ctx.r31.u8);
	// stb r29,2834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2834, ctx.r29.u8);
	// stb r31,2836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2836, ctx.r31.u8);
	// stb r31,2837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2837, ctx.r31.u8);
	// stb r31,2838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2838, ctx.r31.u8);
	// stb r31,2839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2839, ctx.r31.u8);
	// stb r31,2840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2840, ctx.r31.u8);
	// stb r31,2841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2841, ctx.r31.u8);
	// stb r11,2842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2842, ctx.r11.u8);
	// stb r28,2843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2843, ctx.r28.u8);
	// stb r31,2844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2844, ctx.r31.u8);
	// stb r31,2845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2845, ctx.r31.u8);
	// stb r31,2846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2846, ctx.r31.u8);
	// stb r31,2847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2847, ctx.r31.u8);
	// stb r31,2848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2848, ctx.r31.u8);
	// stb r31,2849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2849, ctx.r31.u8);
	// stb r31,2850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2850, ctx.r31.u8);
	// stb r5,2851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2851, ctx.r5.u8);
	// stb r31,2852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2852, ctx.r31.u8);
	// stb r31,2853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2853, ctx.r31.u8);
	// stb r31,2854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2854, ctx.r31.u8);
	// stb r31,2855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2855, ctx.r31.u8);
	// stb r31,2856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2856, ctx.r31.u8);
	// stb r31,2857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2857, ctx.r31.u8);
	// stb r31,2858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2858, ctx.r31.u8);
	// stb r7,2860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2860, ctx.r7.u8);
	// stb r30,2861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2861, ctx.r30.u8);
	// stb r4,2862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2862, ctx.r4.u8);
	// stb r17,2863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2863, ctx.r17.u8);
	// stb r3,2864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2864, ctx.r3.u8);
	// stb r11,2880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2880, ctx.r11.u8);
	// li r11,108
	ctx.r11.s64 = 108;
	// stb r9,2868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2868, ctx.r9.u8);
	// li r3,100
	ctx.r3.s64 = 100;
	// li r9,244
	ctx.r9.s64 = 244;
	// stb r22,2866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2866, ctx.r22.u8);
	// stb r20,2867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2867, ctx.r20.u8);
	// stb r31,2869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2869, ctx.r31.u8);
	// stb r11,2904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2904, ctx.r11.u8);
	// li r11,81
	ctx.r11.s64 = 81;
	// stb r3,2865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2865, ctx.r3.u8);
	// stb r31,2870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2870, ctx.r31.u8);
	// stb r31,2871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2871, ctx.r31.u8);
	// stb r29,2872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2872, ctx.r29.u8);
	// stb r11,2908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2908, ctx.r11.u8);
	// li r11,94
	ctx.r11.s64 = 94;
	// stb r9,2873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2873, ctx.r9.u8);
	// stb r31,2874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2874, ctx.r31.u8);
	// stb r31,2875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2875, ctx.r31.u8);
	// stb r31,2876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2876, ctx.r31.u8);
	// stb r11,2909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2909, ctx.r11.u8);
	// li r11,39
	ctx.r11.s64 = 39;
	// stb r31,2877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2877, ctx.r31.u8);
	// stb r31,2878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2878, ctx.r31.u8);
	// stb r31,2879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2879, ctx.r31.u8);
	// stb r28,2881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2881, ctx.r28.u8);
	// stb r11,2916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2916, ctx.r11.u8);
	// li r11,120
	ctx.r11.s64 = 120;
	// stb r31,2882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2882, ctx.r31.u8);
	// stb r31,2883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2883, ctx.r31.u8);
	// stb r31,2884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2884, ctx.r31.u8);
	// stb r31,2885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2885, ctx.r31.u8);
	// stb r11,2917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2917, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,2886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2886, ctx.r31.u8);
	// stb r31,2887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2887, ctx.r31.u8);
	// stb r31,2888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2888, ctx.r31.u8);
	// stb r24,2889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2889, ctx.r24.u8);
	// stb r11,2925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2925, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,2890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2890, ctx.r31.u8);
	// stb r31,2891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2891, ctx.r31.u8);
	// stb r31,2892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2892, ctx.r31.u8);
	// stb r31,2893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2893, ctx.r31.u8);
	// stb r31,2894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2894, ctx.r31.u8);
	// stb r31,2895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2895, ctx.r31.u8);
	// stb r31,2896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2896, ctx.r31.u8);
	// stb r10,2897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2897, ctx.r10.u8);
	// stb r7,2898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2898, ctx.r7.u8);
	// stb r18,2899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2899, ctx.r18.u8);
	// stb r30,2900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2900, ctx.r30.u8);
	// stb r4,2901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2901, ctx.r4.u8);
	// stb r8,2902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2902, ctx.r8.u8);
	// stb r22,2903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2903, ctx.r22.u8);
	// stb r31,2905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2905, ctx.r31.u8);
	// stb r31,2906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2906, ctx.r31.u8);
	// stb r31,2907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2907, ctx.r31.u8);
	// stb r31,2910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2910, ctx.r31.u8);
	// stb r31,2911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2911, ctx.r31.u8);
	// stb r31,2912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2912, ctx.r31.u8);
	// stb r31,2913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2913, ctx.r31.u8);
	// stb r31,2914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2914, ctx.r31.u8);
	// stb r31,2915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2915, ctx.r31.u8);
	// stb r31,2918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2918, ctx.r31.u8);
	// stb r31,2919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2919, ctx.r31.u8);
	// stb r31,2920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2920, ctx.r31.u8);
	// stb r31,2921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2921, ctx.r31.u8);
	// stb r31,2922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2922, ctx.r31.u8);
	// stb r31,2923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2923, ctx.r31.u8);
	// stb r31,2924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2924, ctx.r31.u8);
	// stb r31,2926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2926, ctx.r31.u8);
	// stb r31,2927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2927, ctx.r31.u8);
	// stb r31,2928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2928, ctx.r31.u8);
	// stb r31,2929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2929, ctx.r31.u8);
	// stb r26,2930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2930, ctx.r26.u8);
	// stb r25,2931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2931, ctx.r25.u8);
	// stb r31,2932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2932, ctx.r31.u8);
	// stb r31,2933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2933, ctx.r31.u8);
	// stb r31,2934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2934, ctx.r31.u8);
	// stb r31,2935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2935, ctx.r31.u8);
	// stb r11,2936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2936, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// ld r21,3032(r1)
	ctx.r21.u64 = PPC_LOAD_U64(ctx.r1.u32 + 3032);
	// stb r5,2973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2973, ctx.r5.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,2938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2938, ctx.r31.u8);
	// addi r30,r21,24
	ctx.r30.s64 = ctx.r21.s64 + 24;
	// stb r31,2939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2939, ctx.r31.u8);
	// li r5,2951
	ctx.r5.s64 = 2951;
	// stb r31,2940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2940, ctx.r31.u8);
	// stb r11,2937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2937, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r31,2941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2941, ctx.r31.u8);
	// stb r31,2942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2942, ctx.r31.u8);
	// stb r31,2943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2943, ctx.r31.u8);
	// stb r10,2944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2944, ctx.r10.u8);
	// stb r11,2945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2945, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,2946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2946, ctx.r31.u8);
	// stb r31,2947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2947, ctx.r31.u8);
	// stb r31,2948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2948, ctx.r31.u8);
	// stb r31,2949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2949, ctx.r31.u8);
	// stb r11,2961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2961, ctx.r11.u8);
	// li r11,18
	ctx.r11.s64 = 18;
	// stb r31,2950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2950, ctx.r31.u8);
	// stb r31,2951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2951, ctx.r31.u8);
	// stb r31,2952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2952, ctx.r31.u8);
	// stb r19,2953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2953, ctx.r19.u8);
	// stb r11,2962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2962, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,2954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2954, ctx.r31.u8);
	// stb r31,2955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2955, ctx.r31.u8);
	// stb r31,2956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2956, ctx.r31.u8);
	// stb r31,2957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2957, ctx.r31.u8);
	// stb r11,2966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2966, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,2958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2958, ctx.r31.u8);
	// stb r31,2959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2959, ctx.r31.u8);
	// stb r31,2960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2960, ctx.r31.u8);
	// stb r31,2963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2963, ctx.r31.u8);
	// stb r11,2974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2974, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,2964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2964, ctx.r31.u8);
	// stb r24,2965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2965, ctx.r24.u8);
	// stb r31,2967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2967, ctx.r31.u8);
	// stb r31,2968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2968, ctx.r31.u8);
	// stb r11,2993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2993, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,2969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2969, ctx.r31.u8);
	// stb r31,2970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2970, ctx.r31.u8);
	// stb r31,2971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2971, ctx.r31.u8);
	// stb r31,2972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2972, ctx.r31.u8);
	// stb r11,2994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2994, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,2975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2975, ctx.r31.u8);
	// stb r31,2976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2976, ctx.r31.u8);
	// stb r31,2977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2977, ctx.r31.u8);
	// stb r31,2978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2978, ctx.r31.u8);
	// stb r11,3001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3001, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,2979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2979, ctx.r31.u8);
	// stb r31,2980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2980, ctx.r31.u8);
	// stb r31,2981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2981, ctx.r31.u8);
	// stb r31,2982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2982, ctx.r31.u8);
	// stb r31,2983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2983, ctx.r31.u8);
	// stb r31,2984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2984, ctx.r31.u8);
	// stb r31,2985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2985, ctx.r31.u8);
	// stb r31,2986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2986, ctx.r31.u8);
	// stb r31,2987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2987, ctx.r31.u8);
	// stb r31,2988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2988, ctx.r31.u8);
	// stb r31,2989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2989, ctx.r31.u8);
	// stb r31,2990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2990, ctx.r31.u8);
	// stb r31,2991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2991, ctx.r31.u8);
	// stb r31,2992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2992, ctx.r31.u8);
	// stb r31,2995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2995, ctx.r31.u8);
	// stb r31,2996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2996, ctx.r31.u8);
	// stb r31,2997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2997, ctx.r31.u8);
	// stb r31,2998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2998, ctx.r31.u8);
	// stb r31,2999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2999, ctx.r31.u8);
	// stb r31,3000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3000, ctx.r31.u8);
	// stb r11,3002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3002, ctx.r11.u8);
	// stb r31,3003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3003, ctx.r31.u8);
	// li r11,234
	ctx.r11.s64 = 234;
	// stb r31,3004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3004, ctx.r31.u8);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stb r31,3005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3005, ctx.r31.u8);
	// stb r31,3006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3006, ctx.r31.u8);
	// stb r31,3007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3007, ctx.r31.u8);
	// stb r31,3008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3008, ctx.r31.u8);
	// stb r11,3018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3018, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,3009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3009, ctx.r31.u8);
	// stb r10,3010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3010, ctx.r10.u8);
	// stb r31,3011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3011, ctx.r31.u8);
	// stb r31,3012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3012, ctx.r31.u8);
	// stb r11,3025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3025, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,3013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3013, ctx.r31.u8);
	// stb r31,3014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3014, ctx.r31.u8);
	// stb r31,3015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3015, ctx.r31.u8);
	// stb r31,3016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3016, ctx.r31.u8);
	// stb r6,3017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3017, ctx.r6.u8);
	// stb r31,3019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3019, ctx.r31.u8);
	// stb r31,3020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3020, ctx.r31.u8);
	// stb r31,3021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3021, ctx.r31.u8);
	// stb r31,3022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3022, ctx.r31.u8);
	// stb r31,3023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3023, ctx.r31.u8);
	// stb r31,3024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3024, ctx.r31.u8);
	// stb r11,3026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3026, ctx.r11.u8);
	// stb r31,3027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3027, ctx.r31.u8);
	// stb r31,3028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3028, ctx.r31.u8);
	// stb r31,3029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3029, ctx.r31.u8);
	// stb r31,3030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 3030, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B7398;
	sub_82B06418(ctx, base);
	// mr r3,r21
	ctx.r3.u64 = ctx.r21.u64;
	// stw r30,20(r21)
	PPC_STORE_U32(ctx.r21.u32 + 20, ctx.r30.u32);
	// addi r1,r1,3200
	ctx.r1.s64 = ctx.r1.s64 + 3200;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B73A8"))) PPC_WEAK_FUNC(sub_824B73A8);
PPC_FUNC_IMPL(__imp__sub_824B73A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B73B0;
	__savegprlr_29(ctx, base);
	// stwu r1,-544(r1)
	ea = -544 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,418
	ctx.r9.s64 = 418;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30952
	ctx.r4.s64 = ctx.r10.s64 + 30952;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B73EC;
	sub_822E0818(ctx, base);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,64
	ctx.r10.s64 = 64;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r3,41
	ctx.r3.s64 = 41;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,53
	ctx.r8.s64 = 53;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r9,97
	ctx.r9.s64 = 97;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,88
	ctx.r11.s64 = 88;
	// stb r10,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r10.u8);
	// li r10,160
	ctx.r10.s64 = 160;
	// stb r3,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r3.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r10,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r10.u8);
	// li r10,18
	ctx.r10.s64 = 18;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,39
	ctx.r11.s64 = 39;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,46
	ctx.r10.s64 = 46;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,120
	ctx.r11.s64 = 120;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r8,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r8.u8);
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r10,25
	ctx.r10.s64 = 25;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r6,50
	ctx.r6.s64 = 50;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r7,226
	ctx.r7.s64 = 226;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// li r10,63
	ctx.r10.s64 = 63;
	// stb r6,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r6.u8);
	// li r6,182
	ctx.r6.s64 = 182;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// stb r10,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r10.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// li r10,225
	ctx.r10.s64 = 225;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r8,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r8.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r10,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r10.u8);
	// stb r10,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r10.u8);
	// li r10,253
	ctx.r10.s64 = 253;
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// li r10,67
	ctx.r10.s64 = 67;
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r8,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r8.u8);
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r10,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r10.u8);
	// stb r6,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r6.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r9,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r9.u8);
	// li r29,90
	ctx.r29.s64 = 90;
	// li r9,29
	ctx.r9.s64 = 29;
	// stb r8,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r8.u8);
	// stb r7,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r7.u8);
	// li r5,89
	ctx.r5.s64 = 89;
	// li r6,3
	ctx.r6.s64 = 3;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r11,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r11.u8);
	// li r11,98
	ctx.r11.s64 = 98;
	// stb r29,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r29.u8);
	// li r7,96
	ctx.r7.s64 = 96;
	// stb r9,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r9.u8);
	// li r8,9
	ctx.r8.s64 = 9;
	// li r9,65
	ctx.r9.s64 = 65;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// li r4,240
	ctx.r4.s64 = 240;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r11,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r11.u8);
	// li r29,254
	ctx.r29.s64 = 254;
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r5,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r5.u8);
	// stb r6,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r6.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r7,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r7.u8);
	// stb r8,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r8.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r10,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r10.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r9,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r9.u8);
	// stb r4,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r4.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r29,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r29.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r5,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r5.u8);
	// stb r9,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r9.u8);
	// li r29,142
	ctx.r29.s64 = 142;
	// stb r9,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r9.u8);
	// li r9,32
	ctx.r9.s64 = 32;
	// stb r8,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r8.u8);
	// stb r8,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r8.u8);
	// li r8,66
	ctx.r8.s64 = 66;
	// stb r4,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r4.u8);
	// li r4,79
	ctx.r4.s64 = 79;
	// stb r29,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r29.u8);
	// li r29,128
	ctx.r29.s64 = 128;
	// stb r9,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r9.u8);
	// li r9,33
	ctx.r9.s64 = 33;
	// stb r6,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r6.u8);
	// stb r8,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r8.u8);
	// li r8,180
	ctx.r8.s64 = 180;
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r9,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r9.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r11,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r11.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r7,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r7.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r10,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r10.u8);
	// stb r29,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r29.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r3,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r3.u8);
	// stb r4,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r4.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r5,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r5.u8);
	// stb r6,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r6.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r11,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r11.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r7,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r7.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r8,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r8.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r9,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r9.u8);
	// li r8,143
	ctx.r8.s64 = 143;
	// stb r9,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r9.u8);
	// li r9,38
	ctx.r9.s64 = 38;
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// li r5,16
	ctx.r5.s64 = 16;
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// li r6,12
	ctx.r6.s64 = 12;
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// li r7,1
	ctx.r7.s64 = 1;
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r8,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r8.u8);
	// li r8,6
	ctx.r8.s64 = 6;
	// stb r9,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r9.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// stb r5,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r5.u8);
	// li r5,83
	ctx.r5.s64 = 83;
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r8,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r8.u8);
	// li r8,2
	ctx.r8.s64 = 2;
	// stb r11,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r11.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r8,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r8.u8);
	// li r8,11
	ctx.r8.s64 = 11;
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r8,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r8.u8);
	// li r8,14
	ctx.r8.s64 = 14;
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r6,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r6.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r8,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r8.u8);
	// stb r9,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r9.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r7,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r7.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r5,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r5.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r8,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r8.u8);
	// stb r9,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r9.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r9,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r9.u8);
	// li r9,54
	ctx.r9.s64 = 54;
	// stb r7,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r7.u8);
	// li r7,213
	ctx.r7.s64 = 213;
	// stb r11,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r11.u8);
	// li r11,242
	ctx.r11.s64 = 242;
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// li r5,418
	ctx.r5.s64 = 418;
	// stb r9,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r9.u8);
	// li r9,233
	ctx.r9.s64 = 233;
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r9,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r9.u8);
	// li r9,68
	ctx.r9.s64 = 68;
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r9,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r9.u8);
	// li r9,155
	ctx.r9.s64 = 155;
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r6,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r6.u8);
	// stb r7,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r7.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r8,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r8.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r9,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r9.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r10,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r10.u8);
	// stb r11,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r11.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r11,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r11,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B7B7C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,544
	ctx.r1.s64 = ctx.r1.s64 + 544;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B7B90"))) PPC_WEAK_FUNC(sub_824B7B90);
PPC_FUNC_IMPL(__imp__sub_824B7B90) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824B7B98;
	__savegprlr_14(ctx, base);
	// stwu r1,-1872(r1)
	ea = -1872 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r20,r3
	ctx.r20.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r20,4
	ctx.r3.s64 = ctx.r20.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,1631
	ctx.r9.s64 = 1631;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,30980
	ctx.r4.s64 = ctx.r10.s64 + 30980;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r20)
	PPC_STORE_U32(ctx.r20.u32 + 0, ctx.r11.u32);
	// stw r9,16(r20)
	PPC_STORE_U32(ctx.r20.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B7BD4;
	sub_822E0818(ctx, base);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r30,12
	ctx.r30.s64 = 12;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r21,70
	ctx.r21.s64 = 70;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r19,130
	ctx.r19.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,131
	ctx.r11.s64 = 131;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,133
	ctx.r11.s64 = 133;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,47
	ctx.r11.s64 = 47;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r30,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r30.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r21,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r21.u8);
	// stb r19,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r19.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// li r9,27
	ctx.r9.s64 = 27;
	// li r10,108
	ctx.r10.s64 = 108;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r27,172
	ctx.r27.s64 = 172;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r14,46
	ctx.r14.s64 = 46;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r9.u8);
	// li r15,143
	ctx.r15.s64 = 143;
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// li r17,3
	ctx.r17.s64 = 3;
	// li r22,93
	ctx.r22.s64 = 93;
	// stb r27,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r27.u8);
	// li r23,170
	ctx.r23.s64 = 170;
	// stb r14,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r14.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r30,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r30.u8);
	// li r24,95
	ctx.r24.s64 = 95;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// li r25,186
	ctx.r25.s64 = 186;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r8,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r8.u8);
	// stb r15,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r15.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r17,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r17.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r22,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r22.u8);
	// stb r23,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r23.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r24,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r24.u8);
	// stb r25,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r25.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// li r7,22
	ctx.r7.s64 = 22;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// li r4,67
	ctx.r4.s64 = 67;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// li r26,94
	ctx.r26.s64 = 94;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// li r3,76
	ctx.r3.s64 = 76;
	// stb r9,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r9.u8);
	// li r5,97
	ctx.r5.s64 = 97;
	// stb r10,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r10.u8);
	// li r6,18
	ctx.r6.s64 = 18;
	// stb r7,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r7.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// li r7,155
	ctx.r7.s64 = 155;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r26,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r26.u8);
	// stb r3,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r3.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r9,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r9.u8);
	// stb r10,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r10.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r4,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r4.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r5,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r5.u8);
	// stb r6,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r6.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r9,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r9.u8);
	// stb r10,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r10.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r11,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r11.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r4,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r4.u8);
	// stb r7,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r7.u8);
	// li r7,82
	ctx.r7.s64 = 82;
	// li r28,69
	ctx.r28.s64 = 69;
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// li r29,77
	ctx.r29.s64 = 77;
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// li r16,128
	ctx.r16.s64 = 128;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r7,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r7.u8);
	// li r7,167
	ctx.r7.s64 = 167;
	// stb r28,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r28.u8);
	// stb r29,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r29.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r22,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r22.u8);
	// stb r23,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r23.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r9,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r9.u8);
	// stb r10,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r10.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r4,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r4.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r24,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r24.u8);
	// stb r25,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r25.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r9,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r9.u8);
	// stb r10,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r10.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r11,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r11.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r4,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r4.u8);
	// stb r7,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r7.u8);
	// stb r16,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r16.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r26,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r26.u8);
	// stb r3,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r3.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// li r7,150
	ctx.r7.s64 = 150;
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r9,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r9.u8);
	// stb r10,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r10.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r7,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r7.u8);
	// li r7,52
	ctx.r7.s64 = 52;
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r11,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r11.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r4,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r4.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r5,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r5.u8);
	// stb r6,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r6.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r9,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r9.u8);
	// stb r10,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r10.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r11,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r11.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r4,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r4.u8);
	// stb r7,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r7.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r28,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r28.u8);
	// stb r29,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r29.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r22,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r22.u8);
	// stb r23,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r23.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r9,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r9.u8);
	// stb r10,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r10.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r11,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r11.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// li r7,215
	ctx.r7.s64 = 215;
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// li r18,180
	ctx.r18.s64 = 180;
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r7,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r7.u8);
	// li r7,66
	ctx.r7.s64 = 66;
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r24,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r24.u8);
	// stb r25,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r25.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r9,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r9.u8);
	// stb r10,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r10.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r11,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r11.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r4,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r4.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r26,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r26.u8);
	// stb r3,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r3.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r9,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r9.u8);
	// stb r10,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r10.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r11,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r11.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r7,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r7.u8);
	// stb r18,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r18.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r5,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r5.u8);
	// stb r6,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r6.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r9,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r9.u8);
	// stb r10,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r10.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// li r18,164
	ctx.r18.s64 = 164;
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r11,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r11.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r18,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r18.u8);
	// li r18,48
	ctx.r18.s64 = 48;
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r7,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r7.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r18,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r18.u8);
	// li r18,53
	ctx.r18.s64 = 53;
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r28,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r28.u8);
	// stb r29,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r29.u8);
	// stb r18,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r18.u8);
	// li r18,21
	ctx.r18.s64 = 21;
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r18,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r18.u8);
	// li r18,45
	ctx.r18.s64 = 45;
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r30,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r30.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r21,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r21.u8);
	// stb r19,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r19.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r11,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r11.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r27,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r27.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r30,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r30.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r21,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r21.u8);
	// stb r19,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r19.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r11,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r11.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r31,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r31.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r27,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r27.u8);
	// stb r18,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r18.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r14,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r14.u8);
	// li r14,91
	ctx.r14.s64 = 91;
	// stb r30,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r30.u8);
	// li r30,89
	ctx.r30.s64 = 89;
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r14,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r14.u8);
	// li r14,79
	ctx.r14.s64 = 79;
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r30,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r30.u8);
	// stb r17,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r17.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r10,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r10.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r14,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r14.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r22,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r22.u8);
	// stb r23,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r23.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r31,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r31.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r9,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r9.u8);
	// stb r10,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r10.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r11,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r11.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r24,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r24.u8);
	// stb r25,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r25.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r31,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r31.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r9,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r9.u8);
	// stb r10,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r10.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r31,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r31.u8);
	// stb r31,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r31.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r11,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r11.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r26,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r26.u8);
	// stb r3,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r3.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r9,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r9.u8);
	// stb r10,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r10.u8);
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r31,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r31.u8);
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r11,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r11.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r4,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r4.u8);
	// stb r16,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r16.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r5,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r5.u8);
	// stb r6,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r6.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r31,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r31.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r9,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r9.u8);
	// stb r10,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r10.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r11,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r11.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r4,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r4.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r31,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r31.u8);
	// stb r28,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r28.u8);
	// stb r29,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r29.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r31,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r31.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r18,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r18.u8);
	// stb r30,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r30.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r31,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r31.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r19,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r19.u8);
	// li r19,171
	ctx.r19.s64 = 171;
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r21,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r21.u8);
	// stb r31,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r31.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r19,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r19.u8);
	// li r19,253
	ctx.r19.s64 = 253;
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r31,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r31.u8);
	// stb r19,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r19.u8);
	// li r19,82
	ctx.r19.s64 = 82;
	// stb r31,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r31.u8);
	// stb r11,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r11.u8);
	// stb r31,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r31.u8);
	// stb r31,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r31.u8);
	// stb r19,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r19.u8);
	// li r19,1
	ctx.r19.s64 = 1;
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r31,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r31.u8);
	// stb r31,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r31.u8);
	// stb r19,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r19.u8);
	// li r19,228
	ctx.r19.s64 = 228;
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r18,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r18.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r19,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r19.u8);
	// li r19,65
	ctx.r19.s64 = 65;
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r8,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r8.u8);
	// stb r15,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r15.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r31,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r31.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r31,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r31.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r31,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r31.u8);
	// stb r31,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r31.u8);
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r11,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r11.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r22,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r22.u8);
	// stb r23,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r23.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r31,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r31.u8);
	// stb r9,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r9.u8);
	// stb r10,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r10.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r11,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r11.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r31,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r31.u8);
	// stb r19,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r19.u8);
	// stb r16,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r16.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r31,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r31.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r31,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r31.u8);
	// stb r24,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r24.u8);
	// stb r25,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r25.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r31,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r31.u8);
	// stb r31,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r31.u8);
	// stb r31,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r31.u8);
	// stb r9,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r9.u8);
	// stb r10,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r10.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r31,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r31.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r11,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r11.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r31,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r31.u8);
	// stb r19,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r19.u8);
	// stb r31,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r31.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r31,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r31.u8);
	// stb r31,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r31.u8);
	// stb r31,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r31.u8);
	// stb r26,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r26.u8);
	// stb r3,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r3.u8);
	// stb r31,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r31.u8);
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r31,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r31.u8);
	// stb r9,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r9.u8);
	// stb r10,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r10.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r31,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r31.u8);
	// stb r31,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r31.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r31,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r31.u8);
	// stb r11,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r11.u8);
	// stb r31,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r31.u8);
	// stb r31,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r31.u8);
	// stb r31,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r31.u8);
	// stb r31,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r31.u8);
	// stb r7,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r7.u8);
	// stb r8,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r8.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r31,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r31.u8);
	// stb r31,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r31.u8);
	// stb r31,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r31.u8);
	// stb r5,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r5.u8);
	// stb r6,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r6.u8);
	// stb r31,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r31.u8);
	// stb r31,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r31.u8);
	// stb r31,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r31.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r31,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r31.u8);
	// stb r31,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r31.u8);
	// stb r9,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r9.u8);
	// stb r10,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r10.u8);
	// stb r31,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r31.u8);
	// stb r31,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r31.u8);
	// stb r31,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r31.u8);
	// stb r31,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r31.u8);
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r31,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r31.u8);
	// stb r11,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r11.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r31,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r31.u8);
	// stb r31,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r31.u8);
	// stb r31,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r31.u8);
	// stb r7,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r7.u8);
	// li r14,136
	ctx.r14.s64 = 136;
	// stb r8,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r8.u8);
	// stb r31,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r31.u8);
	// stb r31,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r31.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r14,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r14.u8);
	// li r14,64
	ctx.r14.s64 = 64;
	// stb r28,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r28.u8);
	// stb r29,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r29.u8);
	// stb r31,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r31.u8);
	// stb r31,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r31.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r31,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r31.u8);
	// stb r31,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r31.u8);
	// stb r22,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r22.u8);
	// stb r23,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r23.u8);
	// stb r31,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r31.u8);
	// stb r31,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r31.u8);
	// stb r31,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r31.u8);
	// stb r31,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r31.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r9,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r9.u8);
	// stb r10,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r10.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r31,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r31.u8);
	// stb r31,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r31.u8);
	// stb r31,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r31.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// stb r11,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r11.u8);
	// stb r31,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r31.u8);
	// stb r31,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r31.u8);
	// stb r31,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r31.u8);
	// stb r31,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r31.u8);
	// stb r19,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r19.u8);
	// stb r31,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r31.u8);
	// stb r31,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r31.u8);
	// stb r31,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r24,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r24.u8);
	// stb r25,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r25.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r31,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r31.u8);
	// stb r31,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r31.u8);
	// stb r31,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r31.u8);
	// stb r31,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r31.u8);
	// stb r9,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r9.u8);
	// stb r10,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r10.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r31,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r31.u8);
	// stb r31,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r31.u8);
	// stb r31,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r31.u8);
	// stb r31,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r31.u8);
	// stb r31,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r31.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r11,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r11.u8);
	// stb r31,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r31.u8);
	// stb r31,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r31.u8);
	// stb r31,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r31.u8);
	// stb r31,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r31.u8);
	// stb r7,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r7.u8);
	// stb r14,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r14.u8);
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r31.u8);
	// stb r31,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r31.u8);
	// stb r31,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r31.u8);
	// stb r26,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r26.u8);
	// stb r3,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r3.u8);
	// stb r31,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r31.u8);
	// stb r31,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r31.u8);
	// stb r31,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r31.u8);
	// stb r31,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r31.u8);
	// stb r31,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r31.u8);
	// stb r31,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r31.u8);
	// stb r9,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r9.u8);
	// stb r10,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r10.u8);
	// li r14,144
	ctx.r14.s64 = 144;
	// stb r31,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r31.u8);
	// stb r31,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r31.u8);
	// stb r31,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r31.u8);
	// stb r31,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r31.u8);
	// stb r31,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r31.u8);
	// stb r31,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r31.u8);
	// stb r31,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r31.u8);
	// stb r11,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r11.u8);
	// stb r31,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r31.u8);
	// stb r31,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r31.u8);
	// stb r31,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r31.u8);
	// stb r31,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r31.u8);
	// stb r7,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r7.u8);
	// stb r8,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r8.u8);
	// stb r31,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r31.u8);
	// stb r31,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r31.u8);
	// stb r31,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r31.u8);
	// stb r31,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r31.u8);
	// stb r5,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r5.u8);
	// stb r6,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r6.u8);
	// stb r31,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r31.u8);
	// stb r31,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r31.u8);
	// stb r31,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r31.u8);
	// stb r31,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r31.u8);
	// stb r31,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r31.u8);
	// stb r31,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r31.u8);
	// stb r9,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r9.u8);
	// stb r10,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r10.u8);
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// stb r31,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r31.u8);
	// stb r31,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r31.u8);
	// stb r31,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r31.u8);
	// stb r31,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r31.u8);
	// stb r31,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r31.u8);
	// stb r31,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r31.u8);
	// stb r11,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r11.u8);
	// stb r31,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r31.u8);
	// stb r31,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r31.u8);
	// stb r31,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r31.u8);
	// stb r31,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r31.u8);
	// stb r7,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r7.u8);
	// stb r8,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r8.u8);
	// stb r31,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r31.u8);
	// stb r31,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r31.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r28,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r28.u8);
	// stb r29,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r29.u8);
	// stb r31,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r31.u8);
	// stb r31,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r31.u8);
	// stb r31,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r31.u8);
	// stb r31,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r31.u8);
	// stb r31,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r31.u8);
	// stb r31,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r31.u8);
	// stb r22,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r22.u8);
	// stb r23,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r23.u8);
	// stb r31,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r31.u8);
	// stb r31,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r31.u8);
	// stb r31,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r31.u8);
	// stb r31,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r31.u8);
	// stb r31,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r31.u8);
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r9,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r9.u8);
	// stb r10,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r10.u8);
	// stb r31,1044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1044, ctx.r31.u8);
	// stb r31,1045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1045, ctx.r31.u8);
	// stb r31,1046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1046, ctx.r31.u8);
	// stb r31,1047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1047, ctx.r31.u8);
	// stb r31,1048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1048, ctx.r31.u8);
	// stb r31,1049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1049, ctx.r31.u8);
	// stb r31,1050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1050, ctx.r31.u8);
	// stb r11,1051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1051, ctx.r11.u8);
	// stb r31,1052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1052, ctx.r31.u8);
	// stb r31,1053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1053, ctx.r31.u8);
	// stb r31,1054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1054, ctx.r31.u8);
	// stb r31,1055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1055, ctx.r31.u8);
	// stb r19,1056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1056, ctx.r19.u8);
	// stb r14,1057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1057, ctx.r14.u8);
	// stb r31,1058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1058, ctx.r31.u8);
	// stb r31,1059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1059, ctx.r31.u8);
	// li r14,178
	ctx.r14.s64 = 178;
	// stb r31,1060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1060, ctx.r31.u8);
	// stb r31,1061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1061, ctx.r31.u8);
	// stb r24,1062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1062, ctx.r24.u8);
	// stb r25,1063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1063, ctx.r25.u8);
	// stb r31,1064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1064, ctx.r31.u8);
	// stb r31,1065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1065, ctx.r31.u8);
	// stb r31,1066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1066, ctx.r31.u8);
	// stb r31,1067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1067, ctx.r31.u8);
	// stb r31,1068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1068, ctx.r31.u8);
	// stb r31,1069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1069, ctx.r31.u8);
	// stb r9,1070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1070, ctx.r9.u8);
	// stb r10,1071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1071, ctx.r10.u8);
	// stb r31,1072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1072, ctx.r31.u8);
	// stb r31,1073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1073, ctx.r31.u8);
	// stb r31,1074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1074, ctx.r31.u8);
	// stb r31,1075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1075, ctx.r31.u8);
	// stb r31,1076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1076, ctx.r31.u8);
	// stb r31,1077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1077, ctx.r31.u8);
	// stb r31,1078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1078, ctx.r31.u8);
	// stb r11,1079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1079, ctx.r11.u8);
	// stb r31,1080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1080, ctx.r31.u8);
	// stb r31,1081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1081, ctx.r31.u8);
	// stb r31,1082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1082, ctx.r31.u8);
	// stb r31,1083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1083, ctx.r31.u8);
	// stb r7,1084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1084, ctx.r7.u8);
	// stb r14,1085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1085, ctx.r14.u8);
	// stb r31,1086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1086, ctx.r31.u8);
	// stb r31,1087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1087, ctx.r31.u8);
	// stb r31,1088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1088, ctx.r31.u8);
	// stb r31,1089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1089, ctx.r31.u8);
	// stb r26,1090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1090, ctx.r26.u8);
	// stb r3,1091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1091, ctx.r3.u8);
	// stb r31,1092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1092, ctx.r31.u8);
	// stb r31,1093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1093, ctx.r31.u8);
	// stb r31,1094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1094, ctx.r31.u8);
	// stb r31,1095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1095, ctx.r31.u8);
	// stb r31,1096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1096, ctx.r31.u8);
	// stb r31,1097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1097, ctx.r31.u8);
	// stb r9,1098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1098, ctx.r9.u8);
	// stb r10,1099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1099, ctx.r10.u8);
	// stb r31,1100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1100, ctx.r31.u8);
	// stb r31,1101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1101, ctx.r31.u8);
	// stb r31,1102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1102, ctx.r31.u8);
	// stb r31,1103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1103, ctx.r31.u8);
	// stb r31,1104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1104, ctx.r31.u8);
	// stb r31,1105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1105, ctx.r31.u8);
	// stb r31,1106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1106, ctx.r31.u8);
	// stb r11,1107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1107, ctx.r11.u8);
	// stb r31,1108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1108, ctx.r31.u8);
	// stb r31,1109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1109, ctx.r31.u8);
	// stb r31,1110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1110, ctx.r31.u8);
	// stb r31,1111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1111, ctx.r31.u8);
	// stb r7,1112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1112, ctx.r7.u8);
	// stb r8,1113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1113, ctx.r8.u8);
	// stb r31,1114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1114, ctx.r31.u8);
	// stb r31,1115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1115, ctx.r31.u8);
	// stb r31,1116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1116, ctx.r31.u8);
	// stb r31,1117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1117, ctx.r31.u8);
	// stb r5,1118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1118, ctx.r5.u8);
	// stb r6,1119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1119, ctx.r6.u8);
	// stb r31,1120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1120, ctx.r31.u8);
	// stb r31,1121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1121, ctx.r31.u8);
	// stb r31,1122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1122, ctx.r31.u8);
	// stb r31,1123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1123, ctx.r31.u8);
	// stb r31,1124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1124, ctx.r31.u8);
	// stb r31,1125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1125, ctx.r31.u8);
	// stb r9,1126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1126, ctx.r9.u8);
	// stb r10,1127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1127, ctx.r10.u8);
	// stb r31,1128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1128, ctx.r31.u8);
	// stb r31,1129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1129, ctx.r31.u8);
	// stb r31,1130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1130, ctx.r31.u8);
	// stb r31,1131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1131, ctx.r31.u8);
	// stb r31,1132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1132, ctx.r31.u8);
	// stb r31,1133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1133, ctx.r31.u8);
	// stb r31,1134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1134, ctx.r31.u8);
	// stb r11,1135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1135, ctx.r11.u8);
	// stb r31,1136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1136, ctx.r31.u8);
	// stb r31,1137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1137, ctx.r31.u8);
	// stb r31,1138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1138, ctx.r31.u8);
	// stb r31,1139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1139, ctx.r31.u8);
	// stb r23,1155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1155, ctx.r23.u8);
	// li r23,144
	ctx.r23.s64 = 144;
	// stb r7,1140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1140, ctx.r7.u8);
	// stb r8,1141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1141, ctx.r8.u8);
	// stb r31,1142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1142, ctx.r31.u8);
	// stb r31,1143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1143, ctx.r31.u8);
	// stb r31,1144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1144, ctx.r31.u8);
	// stb r31,1145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1145, ctx.r31.u8);
	// stb r28,1146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1146, ctx.r28.u8);
	// stb r29,1147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1147, ctx.r29.u8);
	// stb r31,1148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1148, ctx.r31.u8);
	// stb r31,1149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1149, ctx.r31.u8);
	// stb r31,1150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1150, ctx.r31.u8);
	// stb r31,1151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1151, ctx.r31.u8);
	// stb r31,1152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1152, ctx.r31.u8);
	// stb r31,1153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1153, ctx.r31.u8);
	// stb r22,1154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1154, ctx.r22.u8);
	// stb r31,1156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1156, ctx.r31.u8);
	// stb r31,1157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1157, ctx.r31.u8);
	// stb r31,1158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1158, ctx.r31.u8);
	// stb r31,1159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1159, ctx.r31.u8);
	// stb r31,1160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1160, ctx.r31.u8);
	// stb r31,1161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1161, ctx.r31.u8);
	// stb r9,1162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1162, ctx.r9.u8);
	// stb r10,1163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1163, ctx.r10.u8);
	// stb r31,1164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1164, ctx.r31.u8);
	// stb r31,1165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1165, ctx.r31.u8);
	// stb r31,1166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1166, ctx.r31.u8);
	// stb r31,1167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1167, ctx.r31.u8);
	// stb r31,1168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1168, ctx.r31.u8);
	// stb r31,1169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1169, ctx.r31.u8);
	// stb r31,1170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1170, ctx.r31.u8);
	// stb r11,1171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1171, ctx.r11.u8);
	// stb r31,1172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1172, ctx.r31.u8);
	// stb r31,1173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1173, ctx.r31.u8);
	// stb r31,1174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1174, ctx.r31.u8);
	// stb r31,1175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1175, ctx.r31.u8);
	// stb r19,1176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1176, ctx.r19.u8);
	// stb r23,1177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1177, ctx.r23.u8);
	// stb r31,1178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1178, ctx.r31.u8);
	// stb r31,1179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1179, ctx.r31.u8);
	// stb r31,1180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1180, ctx.r31.u8);
	// stb r31,1181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1181, ctx.r31.u8);
	// stb r24,1182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1182, ctx.r24.u8);
	// stb r25,1183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1183, ctx.r25.u8);
	// stb r31,1184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1184, ctx.r31.u8);
	// stb r31,1185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1185, ctx.r31.u8);
	// stb r31,1186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1186, ctx.r31.u8);
	// stb r31,1187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1187, ctx.r31.u8);
	// stb r31,1188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1188, ctx.r31.u8);
	// stb r31,1189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1189, ctx.r31.u8);
	// stb r9,1190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1190, ctx.r9.u8);
	// stb r10,1191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1191, ctx.r10.u8);
	// stb r31,1192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1192, ctx.r31.u8);
	// stb r31,1193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1193, ctx.r31.u8);
	// stb r31,1194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1194, ctx.r31.u8);
	// stb r31,1195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1195, ctx.r31.u8);
	// stb r31,1196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1196, ctx.r31.u8);
	// stb r31,1197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1197, ctx.r31.u8);
	// stb r31,1198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1198, ctx.r31.u8);
	// stb r11,1199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1199, ctx.r11.u8);
	// stb r31,1200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1200, ctx.r31.u8);
	// stb r31,1201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1201, ctx.r31.u8);
	// stb r31,1202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1202, ctx.r31.u8);
	// stb r31,1203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1203, ctx.r31.u8);
	// stb r7,1204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1204, ctx.r7.u8);
	// stb r14,1205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1205, ctx.r14.u8);
	// stb r31,1206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1206, ctx.r31.u8);
	// stb r31,1207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1207, ctx.r31.u8);
	// stb r31,1208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1208, ctx.r31.u8);
	// stb r31,1209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1209, ctx.r31.u8);
	// stb r26,1210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1210, ctx.r26.u8);
	// stb r3,1211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1211, ctx.r3.u8);
	// stb r31,1212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1212, ctx.r31.u8);
	// stb r31,1213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1213, ctx.r31.u8);
	// stb r31,1214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1214, ctx.r31.u8);
	// stb r31,1215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1215, ctx.r31.u8);
	// stb r31,1216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1216, ctx.r31.u8);
	// stb r31,1217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1217, ctx.r31.u8);
	// stb r9,1218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1218, ctx.r9.u8);
	// stb r10,1219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1219, ctx.r10.u8);
	// stb r9,1246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1246, ctx.r9.u8);
	// li r9,117
	ctx.r9.s64 = 117;
	// stb r10,1247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1247, ctx.r10.u8);
	// li r10,48
	ctx.r10.s64 = 48;
	// stb r31,1220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1220, ctx.r31.u8);
	// stb r31,1221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1221, ctx.r31.u8);
	// stb r31,1222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1222, ctx.r31.u8);
	// stb r9,1275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1275, ctx.r9.u8);
	// li r9,28
	ctx.r9.s64 = 28;
	// stb r31,1223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1223, ctx.r31.u8);
	// stb r31,1224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1224, ctx.r31.u8);
	// stb r31,1225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1225, ctx.r31.u8);
	// stb r31,1226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1226, ctx.r31.u8);
	// stb r11,1227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1227, ctx.r11.u8);
	// stb r31,1228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1228, ctx.r31.u8);
	// stb r31,1229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1229, ctx.r31.u8);
	// stb r31,1230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1230, ctx.r31.u8);
	// stb r31,1231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1231, ctx.r31.u8);
	// stb r7,1232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1232, ctx.r7.u8);
	// stb r8,1233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1233, ctx.r8.u8);
	// stb r31,1234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1234, ctx.r31.u8);
	// stb r31,1235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1235, ctx.r31.u8);
	// stb r31,1236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1236, ctx.r31.u8);
	// stb r31,1237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1237, ctx.r31.u8);
	// stb r5,1238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1238, ctx.r5.u8);
	// stb r6,1239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1239, ctx.r6.u8);
	// stb r31,1240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1240, ctx.r31.u8);
	// stb r31,1241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1241, ctx.r31.u8);
	// stb r31,1242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1242, ctx.r31.u8);
	// stb r31,1243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1243, ctx.r31.u8);
	// stb r31,1244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1244, ctx.r31.u8);
	// stb r31,1245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1245, ctx.r31.u8);
	// stb r31,1248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1248, ctx.r31.u8);
	// stb r31,1249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1249, ctx.r31.u8);
	// stb r31,1250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1250, ctx.r31.u8);
	// stb r31,1251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1251, ctx.r31.u8);
	// stb r31,1252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1252, ctx.r31.u8);
	// stb r31,1253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1253, ctx.r31.u8);
	// stb r31,1254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1254, ctx.r31.u8);
	// stb r11,1255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1255, ctx.r11.u8);
	// stb r31,1256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1256, ctx.r31.u8);
	// stb r31,1257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1257, ctx.r31.u8);
	// stb r31,1258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1258, ctx.r31.u8);
	// stb r31,1259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1259, ctx.r31.u8);
	// stb r7,1260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1260, ctx.r7.u8);
	// stb r8,1261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1261, ctx.r8.u8);
	// stb r31,1262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1262, ctx.r31.u8);
	// stb r31,1263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1263, ctx.r31.u8);
	// stb r31,1264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1264, ctx.r31.u8);
	// stb r31,1265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1265, ctx.r31.u8);
	// stb r28,1266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1266, ctx.r28.u8);
	// stb r29,1267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1267, ctx.r29.u8);
	// stb r31,1268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1268, ctx.r31.u8);
	// stb r31,1269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1269, ctx.r31.u8);
	// stb r31,1270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1270, ctx.r31.u8);
	// stb r31,1271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1271, ctx.r31.u8);
	// stb r31,1272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1272, ctx.r31.u8);
	// stb r31,1273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1273, ctx.r31.u8);
	// stb r10,1274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1274, ctx.r10.u8);
	// stb r31,1276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1276, ctx.r31.u8);
	// stb r31,1277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1277, ctx.r31.u8);
	// stb r31,1278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1278, ctx.r31.u8);
	// stb r31,1279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1279, ctx.r31.u8);
	// stb r31,1280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1280, ctx.r31.u8);
	// stb r31,1281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1281, ctx.r31.u8);
	// stb r8,1282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1282, ctx.r8.u8);
	// stb r15,1283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1283, ctx.r15.u8);
	// stb r31,1284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1284, ctx.r31.u8);
	// stb r31,1285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1285, ctx.r31.u8);
	// stb r31,1286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1286, ctx.r31.u8);
	// stb r31,1287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1287, ctx.r31.u8);
	// stb r31,1288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1288, ctx.r31.u8);
	// stb r31,1289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1289, ctx.r31.u8);
	// stb r31,1290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1290, ctx.r31.u8);
	// stb r9,1291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1291, ctx.r9.u8);
	// stb r31,1292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1292, ctx.r31.u8);
	// stb r31,1293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1293, ctx.r31.u8);
	// stb r31,1294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1294, ctx.r31.u8);
	// stb r31,1295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1295, ctx.r31.u8);
	// stb r31,1296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1296, ctx.r31.u8);
	// stb r31,1297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1297, ctx.r31.u8);
	// stb r10,1311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1311, ctx.r10.u8);
	// li r10,47
	ctx.r10.s64 = 47;
	// li r9,6
	ctx.r9.s64 = 6;
	// stb r31,1298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1298, ctx.r31.u8);
	// li r7,99
	ctx.r7.s64 = 99;
	// stb r31,1300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1300, ctx.r31.u8);
	// stb r31,1301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1301, ctx.r31.u8);
	// stb r27,1302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1302, ctx.r27.u8);
	// stb r10,1315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1315, ctx.r10.u8);
	// li r10,49
	ctx.r10.s64 = 49;
	// stb r9,1299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1299, ctx.r9.u8);
	// li r9,51
	ctx.r9.s64 = 51;
	// stb r31,1304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1304, ctx.r31.u8);
	// stb r31,1305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1305, ctx.r31.u8);
	// stb r27,1306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1306, ctx.r27.u8);
	// stb r10,1319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1319, ctx.r10.u8);
	// li r10,52
	ctx.r10.s64 = 52;
	// stb r9,1303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1303, ctx.r9.u8);
	// li r9,50
	ctx.r9.s64 = 50;
	// stb r31,1308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1308, ctx.r31.u8);
	// stb r31,1309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1309, ctx.r31.u8);
	// stb r27,1310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1310, ctx.r27.u8);
	// stb r10,1323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1323, ctx.r10.u8);
	// li r10,100
	ctx.r10.s64 = 100;
	// stb r9,1307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1307, ctx.r9.u8);
	// li r9,83
	ctx.r9.s64 = 83;
	// stb r31,1312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1312, ctx.r31.u8);
	// stb r31,1313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1313, ctx.r31.u8);
	// stb r27,1314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1314, ctx.r27.u8);
	// stb r10,1327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1327, ctx.r10.u8);
	// li r10,2
	ctx.r10.s64 = 2;
	// stb r31,1316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1316, ctx.r31.u8);
	// stb r31,1317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1317, ctx.r31.u8);
	// stb r27,1318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1318, ctx.r27.u8);
	// stb r31,1320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1320, ctx.r31.u8);
	// stb r31,1321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1321, ctx.r31.u8);
	// stb r27,1322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1322, ctx.r27.u8);
	// stb r31,1324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1324, ctx.r31.u8);
	// stb r31,1325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1325, ctx.r31.u8);
	// stb r18,1326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1326, ctx.r18.u8);
	// stb r31,1328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1328, ctx.r31.u8);
	// stb r31,1329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1329, ctx.r31.u8);
	// stb r31,1330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1330, ctx.r31.u8);
	// stb r31,1331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1331, ctx.r31.u8);
	// stb r31,1332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1332, ctx.r31.u8);
	// stb r31,1333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1333, ctx.r31.u8);
	// stb r30,1334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1334, ctx.r30.u8);
	// stb r10,1335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1335, ctx.r10.u8);
	// stb r31,1336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1336, ctx.r31.u8);
	// stb r31,1337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1337, ctx.r31.u8);
	// stb r31,1338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1338, ctx.r31.u8);
	// stb r31,1339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1339, ctx.r31.u8);
	// stb r31,1340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1340, ctx.r31.u8);
	// stb r31,1341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1341, ctx.r31.u8);
	// stb r31,1342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1342, ctx.r31.u8);
	// stb r8,1343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1343, ctx.r8.u8);
	// stb r31,1344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1344, ctx.r31.u8);
	// stb r31,1345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1345, ctx.r31.u8);
	// stb r31,1346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1346, ctx.r31.u8);
	// stb r31,1347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1347, ctx.r31.u8);
	// stb r31,1348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1348, ctx.r31.u8);
	// stb r31,1349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1349, ctx.r31.u8);
	// stb r31,1350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1350, ctx.r31.u8);
	// stb r11,1351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1351, ctx.r11.u8);
	// stb r9,1352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1352, ctx.r9.u8);
	// stb r9,1353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1353, ctx.r9.u8);
	// stb r4,1354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1354, ctx.r4.u8);
	// stb r31,1355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1355, ctx.r31.u8);
	// stb r31,1356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1356, ctx.r31.u8);
	// stb r31,1357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1357, ctx.r31.u8);
	// stb r18,1358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1358, ctx.r18.u8);
	// stb r7,1359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1359, ctx.r7.u8);
	// stb r31,1360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1360, ctx.r31.u8);
	// stb r31,1361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1361, ctx.r31.u8);
	// stb r31,1362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1362, ctx.r31.u8);
	// stb r31,1363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1363, ctx.r31.u8);
	// stb r31,1364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1364, ctx.r31.u8);
	// stb r31,1365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1365, ctx.r31.u8);
	// stb r30,1366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1366, ctx.r30.u8);
	// stb r10,1367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1367, ctx.r10.u8);
	// stb r31,1368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1368, ctx.r31.u8);
	// stb r11,1383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1383, ctx.r11.u8);
	// li r11,71
	ctx.r11.s64 = 71;
	// stb r9,1386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1386, ctx.r9.u8);
	// li r26,110
	ctx.r26.s64 = 110;
	// li r27,105
	ctx.r27.s64 = 105;
	// stb r31,1369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1369, ctx.r31.u8);
	// li r7,116
	ctx.r7.s64 = 116;
	// stb r31,1370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1370, ctx.r31.u8);
	// li r24,115
	ctx.r24.s64 = 115;
	// stb r31,1371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1371, ctx.r31.u8);
	// stb r11,1384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1384, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// li r19,68
	ctx.r19.s64 = 68;
	// stb r31,1372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1372, ctx.r31.u8);
	// li r18,22
	ctx.r18.s64 = 22;
	// stb r31,1373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1373, ctx.r31.u8);
	// li r22,118
	ctx.r22.s64 = 118;
	// stb r31,1374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1374, ctx.r31.u8);
	// li r14,111
	ctx.r14.s64 = 111;
	// stb r8,1375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1375, ctx.r8.u8);
	// stb r11,1385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1385, ctx.r11.u8);
	// li r11,166
	ctx.r11.s64 = 166;
	// li r23,32
	ctx.r23.s64 = 32;
	// stb r31,1376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1376, ctx.r31.u8);
	// li r9,109
	ctx.r9.s64 = 109;
	// stb r31,1377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1377, ctx.r31.u8);
	// stb r31,1378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1378, ctx.r31.u8);
	// stb r31,1379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1379, ctx.r31.u8);
	// stb r11,1391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1391, ctx.r11.u8);
	// li r11,103
	ctx.r11.s64 = 103;
	// stb r31,1380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1380, ctx.r31.u8);
	// stb r31,1381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1381, ctx.r31.u8);
	// stb r31,1382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1382, ctx.r31.u8);
	// stb r31,1387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1387, ctx.r31.u8);
	// stb r11,1420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1420, ctx.r11.u8);
	// li r11,121
	ctx.r11.s64 = 121;
	// stb r31,1388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1388, ctx.r31.u8);
	// stb r31,1389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1389, ctx.r31.u8);
	// stb r19,1390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1390, ctx.r19.u8);
	// stb r31,1392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1392, ctx.r31.u8);
	// stb r11,1428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1428, ctx.r11.u8);
	// li r11,101
	ctx.r11.s64 = 101;
	// stb r31,1393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1393, ctx.r31.u8);
	// stb r31,1394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1394, ctx.r31.u8);
	// stb r31,1395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1395, ctx.r31.u8);
	// stb r31,1396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1396, ctx.r31.u8);
	// stb r31,1397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1397, ctx.r31.u8);
	// stb r30,1398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1398, ctx.r30.u8);
	// stb r10,1399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1399, ctx.r10.u8);
	// stb r31,1400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1400, ctx.r31.u8);
	// stb r31,1401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1401, ctx.r31.u8);
	// stb r31,1402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1402, ctx.r31.u8);
	// stb r31,1403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1403, ctx.r31.u8);
	// stb r31,1404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1404, ctx.r31.u8);
	// stb r31,1405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1405, ctx.r31.u8);
	// stb r31,1406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1406, ctx.r31.u8);
	// stb r18,1407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1407, ctx.r18.u8);
	// stb r31,1408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1408, ctx.r31.u8);
	// stb r31,1409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1409, ctx.r31.u8);
	// stb r31,1410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1410, ctx.r31.u8);
	// stb r31,1411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1411, ctx.r31.u8);
	// stb r31,1412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1412, ctx.r31.u8);
	// stb r31,1413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1413, ctx.r31.u8);
	// stb r31,1414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1414, ctx.r31.u8);
	// stb r6,1415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1415, ctx.r6.u8);
	// stb r26,1416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1416, ctx.r26.u8);
	// stb r5,1417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1417, ctx.r5.u8);
	// stb r22,1418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1418, ctx.r22.u8);
	// stb r27,1419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1419, ctx.r27.u8);
	// stb r5,1421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1421, ctx.r5.u8);
	// stb r7,1422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1422, ctx.r7.u8);
	// stb r27,1423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1423, ctx.r27.u8);
	// stb r14,1424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1424, ctx.r14.u8);
	// stb r26,1425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1425, ctx.r26.u8);
	// stb r23,1426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1426, ctx.r23.u8);
	// stb r24,1427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1427, ctx.r24.u8);
	// stb r24,1429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1429, ctx.r24.u8);
	// stb r7,1430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1430, ctx.r7.u8);
	// stb r11,1431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1431, ctx.r11.u8);
	// stb r9,1432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1432, ctx.r9.u8);
	// stb r31,1433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1433, ctx.r31.u8);
	// stb r24,1465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1465, ctx.r24.u8);
	// li r24,56
	ctx.r24.s64 = 56;
	// li r25,180
	ctx.r25.s64 = 180;
	// stb r5,1474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1474, ctx.r5.u8);
	// li r9,96
	ctx.r9.s64 = 96;
	// stb r10,1445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1445, ctx.r10.u8);
	// li r5,119
	ctx.r5.s64 = 119;
	// stb r10,1487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1487, ctx.r10.u8);
	// stb r31,1434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1434, ctx.r31.u8);
	// li r10,117
	ctx.r10.s64 = 117;
	// stb r24,1470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1470, ctx.r24.u8);
	// li r24,49
	ctx.r24.s64 = 49;
	// stb r25,1437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1437, ctx.r25.u8);
	// li r25,14
	ctx.r25.s64 = 14;
	// stb r31,1435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1435, ctx.r31.u8);
	// stb r9,1436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1436, ctx.r9.u8);
	// stb r31,1438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1438, ctx.r31.u8);
	// stb r24,1471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1471, ctx.r24.u8);
	// li r24,55
	ctx.r24.s64 = 55;
	// stb r25,1461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1461, ctx.r25.u8);
	// li r25,114
	ctx.r25.s64 = 114;
	// stb r31,1439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1439, ctx.r31.u8);
	// stb r31,1440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1440, ctx.r31.u8);
	// stb r31,1441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1441, ctx.r31.u8);
	// stb r24,1472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1472, ctx.r24.u8);
	// li r24,50
	ctx.r24.s64 = 50;
	// stb r31,1442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1442, ctx.r31.u8);
	// stb r31,1443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1443, ctx.r31.u8);
	// stb r30,1444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1444, ctx.r30.u8);
	// stb r31,1446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1446, ctx.r31.u8);
	// stb r31,1447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1447, ctx.r31.u8);
	// stb r31,1448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1448, ctx.r31.u8);
	// stb r31,1449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1449, ctx.r31.u8);
	// stb r31,1450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1450, ctx.r31.u8);
	// stb r31,1451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1451, ctx.r31.u8);
	// stb r31,1452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1452, ctx.r31.u8);
	// stb r6,1453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1453, ctx.r6.u8);
	// stb r31,1454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1454, ctx.r31.u8);
	// stb r31,1455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1455, ctx.r31.u8);
	// stb r31,1456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1456, ctx.r31.u8);
	// stb r31,1457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1457, ctx.r31.u8);
	// stb r31,1458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1458, ctx.r31.u8);
	// stb r31,1459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1459, ctx.r31.u8);
	// stb r31,1460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1460, ctx.r31.u8);
	// stb r22,1462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1462, ctx.r22.u8);
	// stb r11,1463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1463, ctx.r11.u8);
	// stb r25,1464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1464, ctx.r25.u8);
	// stb r27,1466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1466, ctx.r27.u8);
	// stb r14,1467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1467, ctx.r14.u8);
	// stb r26,1468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1468, ctx.r26.u8);
	// stb r23,1469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1469, ctx.r23.u8);
	// stb r24,1473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1473, ctx.r24.u8);
	// stb r31,1475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1475, ctx.r31.u8);
	// stb r31,1476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1476, ctx.r31.u8);
	// stb r31,1477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1477, ctx.r31.u8);
	// stb r21,1478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1478, ctx.r21.u8);
	// stb r5,1479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1479, ctx.r5.u8);
	// stb r31,1480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1480, ctx.r31.u8);
	// stb r31,1481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1481, ctx.r31.u8);
	// stb r31,1482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1482, ctx.r31.u8);
	// stb r31,1483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1483, ctx.r31.u8);
	// stb r31,1484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1484, ctx.r31.u8);
	// stb r31,1485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1485, ctx.r31.u8);
	// stb r30,1486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1486, ctx.r30.u8);
	// stb r31,1488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1488, ctx.r31.u8);
	// stb r31,1489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1489, ctx.r31.u8);
	// stb r31,1490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1490, ctx.r31.u8);
	// stb r31,1491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1491, ctx.r31.u8);
	// stb r31,1492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1492, ctx.r31.u8);
	// stb r31,1493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1493, ctx.r31.u8);
	// stb r31,1494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1494, ctx.r31.u8);
	// stb r18,1495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1495, ctx.r18.u8);
	// stb r31,1496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1496, ctx.r31.u8);
	// stb r31,1497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1497, ctx.r31.u8);
	// stb r31,1498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1498, ctx.r31.u8);
	// stb r31,1499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1499, ctx.r31.u8);
	// stb r31,1500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1500, ctx.r31.u8);
	// stb r31,1501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1501, ctx.r31.u8);
	// stb r31,1502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1502, ctx.r31.u8);
	// stb r6,1503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1503, ctx.r6.u8);
	// stb r4,1504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1504, ctx.r4.u8);
	// stb r10,1505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1505, ctx.r10.u8);
	// li r10,79
	ctx.r10.s64 = 79;
	// stb r11,1508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1508, ctx.r11.u8);
	// li r6,9
	ctx.r6.s64 = 9;
	// stb r11,1515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1515, ctx.r11.u8);
	// stb r11,1520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1520, ctx.r11.u8);
	// li r11,127
	ctx.r11.s64 = 127;
	// stb r7,1510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1510, ctx.r7.u8);
	// stb r10,1512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1512, ctx.r10.u8);
	// li r10,98
	ctx.r10.s64 = 98;
	// stb r7,1517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1517, ctx.r7.u8);
	// li r7,63
	ctx.r7.s64 = 63;
	// stb r25,1506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1506, ctx.r25.u8);
	// stb r11,1525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1525, ctx.r11.u8);
	// li r11,205
	ctx.r11.s64 = 205;
	// stb r25,1507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1507, ctx.r25.u8);
	// stb r10,1513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1513, ctx.r10.u8);
	// li r10,106
	ctx.r10.s64 = 106;
	// stb r26,1509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1509, ctx.r26.u8);
	// stb r23,1511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1511, ctx.r23.u8);
	// stb r27,1518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1518, ctx.r27.u8);
	// stb r22,1519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1519, ctx.r22.u8);
	// stb r10,1514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1514, ctx.r10.u8);
	// li r10,99
	ctx.r10.s64 = 99;
	// stb r31,1521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1521, ctx.r31.u8);
	// stb r31,1522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1522, ctx.r31.u8);
	// stb r31,1523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1523, ctx.r31.u8);
	// stb r21,1524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1524, ctx.r21.u8);
	// stb r10,1516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1516, ctx.r10.u8);
	// li r10,204
	ctx.r10.s64 = 204;
	// stb r31,1526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1526, ctx.r31.u8);
	// stb r31,1527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1527, ctx.r31.u8);
	// stb r31,1528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1528, ctx.r31.u8);
	// stb r31,1529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1529, ctx.r31.u8);
	// stb r31,1530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1530, ctx.r31.u8);
	// stb r31,1531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1531, ctx.r31.u8);
	// stb r30,1532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1532, ctx.r30.u8);
	// stb r17,1533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1533, ctx.r17.u8);
	// stb r31,1534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1534, ctx.r31.u8);
	// stb r31,1535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1535, ctx.r31.u8);
	// stb r31,1536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1536, ctx.r31.u8);
	// stb r31,1537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1537, ctx.r31.u8);
	// stb r31,1538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1538, ctx.r31.u8);
	// stb r31,1539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1539, ctx.r31.u8);
	// stb r31,1540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1540, ctx.r31.u8);
	// stb r8,1541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1541, ctx.r8.u8);
	// stb r31,1542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1542, ctx.r31.u8);
	// stb r31,1543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1543, ctx.r31.u8);
	// stb r31,1544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1544, ctx.r31.u8);
	// stb r31,1545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1545, ctx.r31.u8);
	// stb r31,1546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1546, ctx.r31.u8);
	// stb r31,1547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1547, ctx.r31.u8);
	// stb r9,1548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1548, ctx.r9.u8);
	// stb r6,1549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1549, ctx.r6.u8);
	// stb r31,1550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1550, ctx.r31.u8);
	// stb r31,1551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1551, ctx.r31.u8);
	// stb r31,1552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1552, ctx.r31.u8);
	// stb r31,1553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1553, ctx.r31.u8);
	// stb r7,1554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1554, ctx.r7.u8);
	// stb r31,1555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1555, ctx.r31.u8);
	// stb r31,1556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1556, ctx.r31.u8);
	// stb r31,1557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1557, ctx.r31.u8);
	// stb r7,1558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1558, ctx.r7.u8);
	// stb r3,1559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1559, ctx.r3.u8);
	// stb r10,1560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1560, ctx.r10.u8);
	// stb r11,1561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1561, ctx.r11.u8);
	// stb r31,1562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1562, ctx.r31.u8);
	// stb r31,1563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1563, ctx.r31.u8);
	// stb r21,1564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1564, ctx.r21.u8);
	// stb r16,1565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1565, ctx.r16.u8);
	// stb r31,1566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1566, ctx.r31.u8);
	// stb r31,1567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1567, ctx.r31.u8);
	// stb r31,1568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1568, ctx.r31.u8);
	// stb r31,1569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1569, ctx.r31.u8);
	// stb r31,1570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1570, ctx.r31.u8);
	// stb r31,1571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1571, ctx.r31.u8);
	// stb r30,1572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1572, ctx.r30.u8);
	// stb r17,1573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1573, ctx.r17.u8);
	// stb r31,1574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1574, ctx.r31.u8);
	// stb r31,1575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1575, ctx.r31.u8);
	// stb r31,1576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1576, ctx.r31.u8);
	// stb r7,1594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1594, ctx.r7.u8);
	// li r7,64
	ctx.r7.s64 = 64;
	// stb r11,1637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1637, ctx.r11.u8);
	// stb r11,1641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1641, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r9,1588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1588, ctx.r9.u8);
	// stb r9,1628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1628, ctx.r9.u8);
	// li r9,61
	ctx.r9.s64 = 61;
	// stb r7,1595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1595, ctx.r7.u8);
	// li r7,62
	ctx.r7.s64 = 62;
	// stb r31,1577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1577, ctx.r31.u8);
	// stb r11,1644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1644, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,1578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1578, ctx.r31.u8);
	// stb r31,1579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1579, ctx.r31.u8);
	// stb r7,1598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1598, ctx.r7.u8);
	// li r7,153
	ctx.r7.s64 = 153;
	// stb r31,1580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1580, ctx.r31.u8);
	// stb r8,1581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1581, ctx.r8.u8);
	// stb r31,1582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1582, ctx.r31.u8);
	// stb r31,1583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1583, ctx.r31.u8);
	// stb r7,1599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1599, ctx.r7.u8);
	// stb r7,1600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1600, ctx.r7.u8);
	// li r7,154
	ctx.r7.s64 = 154;
	// stb r31,1584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1584, ctx.r31.u8);
	// stb r31,1585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1585, ctx.r31.u8);
	// stb r31,1586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1586, ctx.r31.u8);
	// stb r31,1587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1587, ctx.r31.u8);
	// stb r7,1601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1601, ctx.r7.u8);
	// li r7,126
	ctx.r7.s64 = 126;
	// stb r6,1589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1589, ctx.r6.u8);
	// stb r31,1590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1590, ctx.r31.u8);
	// stb r31,1591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1591, ctx.r31.u8);
	// stb r31,1592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1592, ctx.r31.u8);
	// stb r31,1593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1593, ctx.r31.u8);
	// stb r31,1596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1596, ctx.r31.u8);
	// stb r31,1597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1597, ctx.r31.u8);
	// stb r31,1602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1602, ctx.r31.u8);
	// stb r31,1603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1603, ctx.r31.u8);
	// stb r21,1604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1604, ctx.r21.u8);
	// stb r7,1605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1605, ctx.r7.u8);
	// stb r31,1606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1606, ctx.r31.u8);
	// stb r31,1607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1607, ctx.r31.u8);
	// stb r31,1608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1608, ctx.r31.u8);
	// stb r31,1609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1609, ctx.r31.u8);
	// stb r31,1610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1610, ctx.r31.u8);
	// stb r31,1611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1611, ctx.r31.u8);
	// stb r30,1612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1612, ctx.r30.u8);
	// stb r17,1613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1613, ctx.r17.u8);
	// stb r31,1614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1614, ctx.r31.u8);
	// stb r31,1615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1615, ctx.r31.u8);
	// stb r31,1616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1616, ctx.r31.u8);
	// stb r31,1617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1617, ctx.r31.u8);
	// stb r31,1618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1618, ctx.r31.u8);
	// stb r31,1619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1619, ctx.r31.u8);
	// stb r31,1620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1620, ctx.r31.u8);
	// stb r8,1621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1621, ctx.r8.u8);
	// stb r31,1622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1622, ctx.r31.u8);
	// stb r31,1623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1623, ctx.r31.u8);
	// stb r31,1624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1624, ctx.r31.u8);
	// stb r31,1625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1625, ctx.r31.u8);
	// stb r31,1626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1626, ctx.r31.u8);
	// stb r31,1627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1627, ctx.r31.u8);
	// stb r6,1629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1629, ctx.r6.u8);
	// stb r31,1630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1630, ctx.r31.u8);
	// stb r31,1631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1631, ctx.r31.u8);
	// stb r31,1632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1632, ctx.r31.u8);
	// stb r31,1633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1633, ctx.r31.u8);
	// stb r9,1634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1634, ctx.r9.u8);
	// stb r3,1635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1635, ctx.r3.u8);
	// stb r10,1636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1636, ctx.r10.u8);
	// stb r9,1638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1638, ctx.r9.u8);
	// stb r3,1639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1639, ctx.r3.u8);
	// stb r10,1640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1640, ctx.r10.u8);
	// stb r31,1642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1642, ctx.r31.u8);
	// stb r31,1643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1643, ctx.r31.u8);
	// stb r11,1645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1645, ctx.r11.u8);
	// stb r31,1646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1646, ctx.r31.u8);
	// stb r31,1647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1647, ctx.r31.u8);
	// stb r31,1648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1648, ctx.r31.u8);
	// stb r31,1649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1649, ctx.r31.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r31,1650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1650, ctx.r31.u8);
	// addi r30,r20,24
	ctx.r30.s64 = ctx.r20.s64 + 24;
	// stb r31,1651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1651, ctx.r31.u8);
	// li r5,1631
	ctx.r5.s64 = 1631;
	// stb r8,1652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1652, ctx.r8.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r15,1653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1653, ctx.r15.u8);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stb r31,1654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1654, ctx.r31.u8);
	// stb r11,1661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1661, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,1655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1655, ctx.r31.u8);
	// stb r31,1656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1656, ctx.r31.u8);
	// stb r31,1657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1657, ctx.r31.u8);
	// stb r31,1658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1658, ctx.r31.u8);
	// stb r11,1669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1669, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r31,1659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1659, ctx.r31.u8);
	// stb r31,1660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1660, ctx.r31.u8);
	// stb r31,1662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1662, ctx.r31.u8);
	// stb r31,1663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1663, ctx.r31.u8);
	// stb r11,1670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1670, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,1664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1664, ctx.r31.u8);
	// stb r31,1665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1665, ctx.r31.u8);
	// stb r31,1666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1666, ctx.r31.u8);
	// stb r31,1667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1667, ctx.r31.u8);
	// stb r11,1673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1673, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,1668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1668, ctx.r31.u8);
	// stb r31,1671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1671, ctx.r31.u8);
	// stb r31,1672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1672, ctx.r31.u8);
	// stb r31,1675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1675, ctx.r31.u8);
	// stb r11,1674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1674, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,1676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1676, ctx.r31.u8);
	// stb r31,1677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1677, ctx.r31.u8);
	// stb r31,1678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1678, ctx.r31.u8);
	// stb r31,1679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1679, ctx.r31.u8);
	// stb r31,1680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1680, ctx.r31.u8);
	// stb r19,1681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1681, ctx.r19.u8);
	// stb r11,1682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1682, ctx.r11.u8);
	// stb r31,1683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1683, ctx.r31.u8);
	// stb r31,1684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1684, ctx.r31.u8);
	// stb r31,1685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1685, ctx.r31.u8);
	// stb r31,1686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1686, ctx.r31.u8);
	// stb r31,1687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1687, ctx.r31.u8);
	// stb r31,1688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1688, ctx.r31.u8);
	// stb r31,1689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1689, ctx.r31.u8);
	// stb r8,1690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1690, ctx.r8.u8);
	// stb r31,1691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1691, ctx.r31.u8);
	// stb r31,1692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1692, ctx.r31.u8);
	// stb r31,1693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1693, ctx.r31.u8);
	// stb r31,1694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1694, ctx.r31.u8);
	// stb r31,1695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1695, ctx.r31.u8);
	// stb r31,1696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1696, ctx.r31.u8);
	// stb r19,1697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1697, ctx.r19.u8);
	// stb r8,1698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1698, ctx.r8.u8);
	// stb r31,1699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1699, ctx.r31.u8);
	// stb r31,1700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1700, ctx.r31.u8);
	// stb r31,1701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1701, ctx.r31.u8);
	// stb r31,1702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1702, ctx.r31.u8);
	// stb r31,1703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1703, ctx.r31.u8);
	// stb r31,1704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1704, ctx.r31.u8);
	// stb r28,1705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1705, ctx.r28.u8);
	// stb r29,1706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1706, ctx.r29.u8);
	// stb r31,1707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1707, ctx.r31.u8);
	// stb r31,1708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1708, ctx.r31.u8);
	// stb r31,1709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1709, ctx.r31.u8);
	// stb r31,1710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1710, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B9750;
	sub_82B06418(ctx, base);
	// mr r3,r20
	ctx.r3.u64 = ctx.r20.u64;
	// stw r30,20(r20)
	PPC_STORE_U32(ctx.r20.u32 + 20, ctx.r30.u32);
	// addi r1,r1,1872
	ctx.r1.s64 = ctx.r1.s64 + 1872;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B9760"))) PPC_WEAK_FUNC(sub_824B9760);
PPC_FUNC_IMPL(__imp__sub_824B9760) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B9768;
	__savegprlr_29(ctx, base);
	// stwu r1,-496(r1)
	ea = -496 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,371
	ctx.r9.s64 = 371;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31012
	ctx.r4.s64 = ctx.r10.s64 + 31012;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B97A4;
	sub_822E0818(ctx, base);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r7,223
	ctx.r7.s64 = 223;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,34
	ctx.r8.s64 = 34;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,70
	ctx.r9.s64 = 70;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r10,130
	ctx.r10.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,150
	ctx.r11.s64 = 150;
	// stb r7,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r7.u8);
	// li r6,159
	ctx.r6.s64 = 159;
	// stb r7,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r7.u8);
	// li r5,21
	ctx.r5.s64 = 21;
	// li r7,1
	ctx.r7.s64 = 1;
	// stb r8,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r8.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r6,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r6.u8);
	// stb r5,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r5.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r9,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r9.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r7,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r7.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r6,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r6.u8);
	// li r6,22
	ctx.r6.s64 = 22;
	// li r4,30
	ctx.r4.s64 = 30;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r5,129
	ctx.r5.s64 = 129;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r3,28
	ctx.r3.s64 = 28;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r6,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r6.u8);
	// li r6,172
	ctx.r6.s64 = 172;
	// stb r4,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r4.u8);
	// stb r5,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r5.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r6,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r6.u8);
	// stb r6,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r6.u8);
	// li r6,29
	ctx.r6.s64 = 29;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// stb r6,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r6.u8);
	// li r6,239
	ctx.r6.s64 = 239;
	// stb r10,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r10.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r3,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r3.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r4,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r4.u8);
	// stb r5,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r5.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r7,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r7.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r8,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r8.u8);
	// stb r6,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r6.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r9,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r9.u8);
	// stb r10,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r10.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// li r6,148
	ctx.r6.s64 = 148;
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// li r11,174
	ctx.r11.s64 = 174;
	// stb r8,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r8.u8);
	// li r8,216
	ctx.r8.s64 = 216;
	// stb r9,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r9.u8);
	// li r5,175
	ctx.r5.s64 = 175;
	// stb r10,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r10.u8);
	// li r9,155
	ctx.r9.s64 = 155;
	// stb r6,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r6.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r11,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r11.u8);
	// li r11,127
	ctx.r11.s64 = 127;
	// stb r8,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r8.u8);
	// li r8,18
	ctx.r8.s64 = 18;
	// stb r6,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r6.u8);
	// li r6,141
	ctx.r6.s64 = 141;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r5,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r5.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r8,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r8.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r10,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r10.u8);
	// stb r9,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r9.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r11,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r11.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r8,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r8.u8);
	// stb r6,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r6.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r8,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r8.u8);
	// li r6,122
	ctx.r6.s64 = 122;
	// stb r8,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r8.u8);
	// li r8,123
	ctx.r8.s64 = 123;
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r6,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r6.u8);
	// li r6,16
	ctx.r6.s64 = 16;
	// stb r8,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r8.u8);
	// li r8,82
	ctx.r8.s64 = 82;
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r6,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r6.u8);
	// li r6,202
	ctx.r6.s64 = 202;
	// stb r8,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r8.u8);
	// stb r8,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r8.u8);
	// li r8,17
	ctx.r8.s64 = 17;
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r8,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r8.u8);
	// li r8,71
	ctx.r8.s64 = 71;
	// stb r10,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r10.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r11,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r11.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r10,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r10.u8);
	// stb r9,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r9.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r11,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r11.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r8,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r8.u8);
	// stb r6,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r6.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r8,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r8.u8);
	// li r8,196
	ctx.r8.s64 = 196;
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// li r5,371
	ctx.r5.s64 = 371;
	// stb r10,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r10.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r9.u8);
	// stb r8,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r8.u8);
	// li r8,33
	ctx.r8.s64 = 33;
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r8,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r8.u8);
	// li r8,15
	ctx.r8.s64 = 15;
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r11,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r11.u8);
	// stb r8,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r8.u8);
	// li r8,143
	ctx.r8.s64 = 143;
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r8,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r8.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r8,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r8.u8);
	// li r8,3
	ctx.r8.s64 = 3;
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r8,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r8.u8);
	// li r8,11
	ctx.r8.s64 = 11;
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r8,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r8.u8);
	// li r8,12
	ctx.r8.s64 = 12;
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r11,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r11.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r8,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r8.u8);
	// li r8,54
	ctx.r8.s64 = 54;
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r8,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r8.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r7,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r7.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r8,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r8.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r10,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r10.u8);
	// stb r9,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r9.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r11,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r11,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r11,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r10,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r10.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r11,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r11.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824B9E40;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,496
	ctx.r1.s64 = ctx.r1.s64 + 496;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824B9E50"))) PPC_WEAK_FUNC(sub_824B9E50);
PPC_FUNC_IMPL(__imp__sub_824B9E50) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824B9E58;
	__savegprlr_29(ctx, base);
	// stwu r1,-304(r1)
	ea = -304 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,187
	ctx.r9.s64 = 187;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31044
	ctx.r4.s64 = ctx.r10.s64 + 31044;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824B9E94;
	sub_822E0818(ctx, base);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,45
	ctx.r10.s64 = 45;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r5,67
	ctx.r5.s64 = 67;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r6,70
	ctx.r6.s64 = 70;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r7,130
	ctx.r7.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,179
	ctx.r11.s64 = 179;
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r5,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r5.u8);
	// li r9,171
	ctx.r9.s64 = 171;
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r5,228
	ctx.r5.s64 = 228;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r6,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r6.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// stb r7,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r7.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r5,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r5.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r6,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r6.u8);
	// stb r7,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r7.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r8,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r8.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r9,143
	ctx.r9.s64 = 143;
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// li r10,33
	ctx.r10.s64 = 33;
	// li r8,12
	ctx.r8.s64 = 12;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r6,8
	ctx.r6.s64 = 8;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r7,11
	ctx.r7.s64 = 11;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// li r9,7
	ctx.r9.s64 = 7;
	// stb r10,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r10.u8);
	// li r10,15
	ctx.r10.s64 = 15;
	// stb r8,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r8.u8);
	// li r5,1
	ctx.r5.s64 = 1;
	// stb r8,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r8.u8);
	// li r8,213
	ctx.r8.s64 = 213;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r9,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r9.u8);
	// li r9,3
	ctx.r9.s64 = 3;
	// stb r10,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r10.u8);
	// stb r10,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r10.u8);
	// li r10,38
	ctx.r10.s64 = 38;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r9,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r9.u8);
	// li r9,16
	ctx.r9.s64 = 16;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// li r9,14
	ctx.r9.s64 = 14;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r6,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r6.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r9,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r9.u8);
	// stb r10,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r10.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r5,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r5.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r8,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r8.u8);
	// stb r10,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r10.u8);
	// li r10,54
	ctx.r10.s64 = 54;
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r11,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// li r5,187
	ctx.r5.s64 = 187;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r10,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r10.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r10,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r9,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r9.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r10,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r10.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r6,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r6.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r7,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r7.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r11,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r11.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BA20C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,304
	ctx.r1.s64 = ctx.r1.s64 + 304;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BA220"))) PPC_WEAK_FUNC(sub_824BA220);
PPC_FUNC_IMPL(__imp__sub_824BA220) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824BA228;
	__savegprlr_14(ctx, base);
	// stwu r1,-1120(r1)
	ea = -1120 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r22,r3
	ctx.r22.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r22,4
	ctx.r3.s64 = ctx.r22.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,880
	ctx.r9.s64 = 880;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31080
	ctx.r4.s64 = ctx.r10.s64 + 31080;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r22)
	PPC_STORE_U32(ctx.r22.u32 + 0, ctx.r11.u32);
	// stw r9,16(r22)
	PPC_STORE_U32(ctx.r22.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BA264;
	sub_822E0818(ctx, base);
	// li r11,81
	ctx.r11.s64 = 81;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,16
	ctx.r9.s64 = 16;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r18,112
	ctx.r18.s64 = 112;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r30,110
	ctx.r30.s64 = 110;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,89
	ctx.r8.s64 = 89;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r9,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r9.u8);
	// li r5,2
	ctx.r5.s64 = 2;
	// li r27,79
	ctx.r27.s64 = 79;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r23,111
	ctx.r23.s64 = 111;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r10,116
	ctx.r10.s64 = 116;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,71
	ctx.r11.s64 = 71;
	// li r9,236
	ctx.r9.s64 = 236;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r8,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r8.u8);
	// stb r5,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r5.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,251
	ctx.r11.s64 = 251;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,13
	ctx.r11.s64 = 13;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,9
	ctx.r11.s64 = 9;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,101
	ctx.r11.s64 = 101;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r27,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r27.u8);
	// stb r18,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r18.u8);
	// stb r18,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r18.u8);
	// stb r23,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r23.u8);
	// stb r30,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r30.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r30,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r30.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r9,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r9.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// li r9,17
	ctx.r9.s64 = 17;
	// stb r8,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r8.u8);
	// li r7,104
	ctx.r7.s64 = 104;
	// stb r5,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r5.u8);
	// li r28,114
	ctx.r28.s64 = 114;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r3,97
	ctx.r3.s64 = 97;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r4,115
	ctx.r4.s64 = 115;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r9,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r9.u8);
	// li r9,80
	ctx.r9.s64 = 80;
	// stb r7,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r7.u8);
	// li r7,87
	ctx.r7.s64 = 87;
	// li r21,21
	ctx.r21.s64 = 21;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r6,32
	ctx.r6.s64 = 32;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r15,22
	ctx.r15.s64 = 22;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r9,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r9.u8);
	// li r9,117
	ctx.r9.s64 = 117;
	// stb r7,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r7.u8);
	// li r16,18
	ctx.r16.s64 = 18;
	// li r7,35
	ctx.r7.s64 = 35;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// li r24,98
	ctx.r24.s64 = 98;
	// stb r21,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r21.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r25,106
	ctx.r25.s64 = 106;
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// li r9,99
	ctx.r9.s64 = 99;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r28,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r28.u8);
	// stb r9,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r9.u8);
	// stb r3,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r3.u8);
	// stb r4,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r4.u8);
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// stb r6,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r6.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r3,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r3.u8);
	// stb r18,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r18.u8);
	// stb r23,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r23.u8);
	// stb r30,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r30.u8);
	// stb r4,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r4.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r28,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r28.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r8,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r8.u8);
	// stb r5,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r5.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r15,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r15.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r16,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r16.u8);
	// stb r27,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r27.u8);
	// stb r24,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r24.u8);
	// li r20,69
	ctx.r20.s64 = 69;
	// stb r25,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r25.u8);
	// li r14,31
	ctx.r14.s64 = 31;
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// li r7,105
	ctx.r7.s64 = 105;
	// stb r9,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r9.u8);
	// li r26,118
	ctx.r26.s64 = 118;
	// stb r10,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r10.u8);
	// li r29,58
	ctx.r29.s64 = 58;
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r20,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r20.u8);
	// li r20,166
	ctx.r20.s64 = 166;
	// li r19,8
	ctx.r19.s64 = 8;
	// stb r14,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r14.u8);
	// li r17,65
	ctx.r17.s64 = 65;
	// stb r7,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r7.u8);
	// stb r26,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r26.u8);
	// li r14,27
	ctx.r14.s64 = 27;
	// stb r29,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r29.u8);
	// stb r20,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r20.u8);
	// li r20,27
	ctx.r20.s64 = 27;
	// stb r6,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r6.u8);
	// stb r4,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r4.u8);
	// stb r9,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r9.u8);
	// stb r23,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r23.u8);
	// stb r20,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r20.u8);
	// li r20,23
	ctx.r20.s64 = 23;
	// stb r28,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r28.u8);
	// stb r10,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r10.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r19,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r19.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r8,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r8.u8);
	// stb r5,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r5.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r20,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r20.u8);
	// stb r27,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r27.u8);
	// stb r24,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r24.u8);
	// stb r25,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r25.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r9,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r9.u8);
	// stb r10,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r10.u8);
	// stb r7,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r7.u8);
	// stb r26,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r26.u8);
	// stb r11,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r11.u8);
	// stb r29,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r29.u8);
	// stb r6,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r6.u8);
	// stb r17,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r17.u8);
	// stb r4,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r4.u8);
	// stb r4,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r4.u8);
	// stb r3,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r3.u8);
	// stb r4,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r4.u8);
	// stb r4,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r4.u8);
	// stb r7,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r7.u8);
	// stb r30,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r30.u8);
	// stb r3,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r3.u8);
	// stb r10,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r10.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r21,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r21.u8);
	// li r21,17
	ctx.r21.s64 = 17;
	// stb r14,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r14.u8);
	// li r14,121
	ctx.r14.s64 = 121;
	// stb r20,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r20.u8);
	// li r20,19
	ctx.r20.s64 = 19;
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r21,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r21.u8);
	// li r21,69
	ctx.r21.s64 = 69;
	// stb r14,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r14.u8);
	// li r14,37
	ctx.r14.s64 = 37;
	// stb r20,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r20.u8);
	// li r20,68
	ctx.r20.s64 = 68;
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r21,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r21.u8);
	// li r21,120
	ctx.r21.s64 = 120;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r8,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r8.u8);
	// stb r5,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r5.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r27,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r27.u8);
	// stb r24,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r24.u8);
	// stb r25,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r25.u8);
	// stb r11,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r11.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r10,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r10.u8);
	// stb r7,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r7.u8);
	// stb r26,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r26.u8);
	// stb r11,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r11.u8);
	// stb r29,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r29.u8);
	// stb r6,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r6.u8);
	// stb r20,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r20.u8);
	// stb r11,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r11.u8);
	// stb r4,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r4.u8);
	// stb r10,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r10.u8);
	// stb r28,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r28.u8);
	// stb r23,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r23.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r14,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r14.u8);
	// stb r30,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r30.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r8,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r8.u8);
	// stb r5,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r5.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r21,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r21.u8);
	// li r14,80
	ctx.r14.s64 = 80;
	// stb r10,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r10.u8);
	// stb r28,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r28.u8);
	// stb r3,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r3.u8);
	// stb r9,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r9.u8);
	// stb r10,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r10.u8);
	// stb r14,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r14.u8);
	// li r14,30
	ctx.r14.s64 = 30;
	// stb r7,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r7.u8);
	// stb r23,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r23.u8);
	// stb r30,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r30.u8);
	// stb r6,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r6.u8);
	// stb r14,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r14.u8);
	// li r14,160
	ctx.r14.s64 = 160;
	// stb r23,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r23.u8);
	// stb r7,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r7.u8);
	// stb r30,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r30.u8);
	// stb r10,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r10.u8);
	// stb r14,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r14,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r14.u8);
	// li r14,100
	ctx.r14.s64 = 100;
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r14,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r14.u8);
	// li r14,131
	ctx.r14.s64 = 131;
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r8,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r8.u8);
	// stb r5,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r5.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r15,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r15.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r16,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r16.u8);
	// stb r27,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r27.u8);
	// stb r24,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r24.u8);
	// stb r25,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r25.u8);
	// stb r11,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r11.u8);
	// stb r9,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r9.u8);
	// stb r10,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r10.u8);
	// stb r7,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r7.u8);
	// stb r26,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r26.u8);
	// stb r11,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r11.u8);
	// stb r29,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r29.u8);
	// stb r6,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r6.u8);
	// stb r20,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r20.u8);
	// stb r11,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r11.u8);
	// stb r11,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r11.u8);
	// stb r30,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r30.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r3,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r3.u8);
	// stb r14,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r14.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r8,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r8.u8);
	// stb r5,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r5.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// li r14,13
	ctx.r14.s64 = 13;
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r14,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r14.u8);
	// li r14,9
	ctx.r14.s64 = 9;
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r14,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r14.u8);
	// li r14,87
	ctx.r14.s64 = 87;
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r3,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r3.u8);
	// stb r14,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r14.u8);
	// li r14,121
	ctx.r14.s64 = 121;
	// stb r18,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r18.u8);
	// stb r23,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r23.u8);
	// stb r7,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r7.u8);
	// stb r30,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r30.u8);
	// stb r14,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r14.u8);
	// li r14,55
	ctx.r14.s64 = 55;
	// stb r10,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r10.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r14,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r14.u8);
	// li r14,109
	ctx.r14.s64 = 109;
	// stb r9,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r9.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r14,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r14.u8);
	// li r14,247
	ctx.r14.s64 = 247;
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r8,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r8.u8);
	// stb r5,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r5.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r15,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r15.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r16,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r16.u8);
	// stb r27,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r27.u8);
	// stb r24,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r24.u8);
	// stb r25,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r25.u8);
	// stb r11,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r11.u8);
	// stb r9,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r9.u8);
	// stb r10,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r10.u8);
	// stb r7,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r7.u8);
	// stb r26,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r26.u8);
	// stb r11,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r11.u8);
	// stb r29,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r29.u8);
	// stb r6,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r6.u8);
	// stb r20,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r20.u8);
	// stb r7,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r7.u8);
	// stb r4,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r4.u8);
	// stb r3,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r3.u8);
	// stb r28,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r28.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r9,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r9.u8);
	// stb r14,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r14.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// li r14,30
	ctx.r14.s64 = 30;
	// stb r3,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r3.u8);
	// stb r30,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r30.u8);
	// li r30,100
	ctx.r30.s64 = 100;
	// stb r3,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r3.u8);
	// stb r3,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r3.u8);
	// li r3,29
	ctx.r3.s64 = 29;
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r14,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r14.u8);
	// li r14,26
	ctx.r14.s64 = 26;
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r14,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r14.u8);
	// li r14,84
	ctx.r14.s64 = 84;
	// stb r8,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r8.u8);
	// stb r5,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r5.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r27,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r27.u8);
	// stb r24,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r24.u8);
	// stb r25,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r25.u8);
	// stb r11,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r11.u8);
	// stb r9,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r9.u8);
	// stb r10,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r10.u8);
	// stb r7,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r7.u8);
	// stb r26,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r26.u8);
	// stb r11,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r11.u8);
	// stb r29,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r29.u8);
	// stb r6,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r6.u8);
	// stb r14,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r14.u8);
	// stb r28,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r28.u8);
	// stb r4,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r4.u8);
	// stb r18,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r18.u8);
	// stb r23,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r23.u8);
	// stb r28,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r28.u8);
	// stb r10,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r10.u8);
	// stb r6,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r6.u8);
	// stb r30,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r30.u8);
	// stb r10,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r10.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r9,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r9.u8);
	// stb r3,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r3.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r8,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r8.u8);
	// stb r5,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r5.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r15,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r15.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r10,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r10.u8);
	// li r3,109
	ctx.r3.s64 = 109;
	// stb r5,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r5.u8);
	// li r5,25
	ctx.r5.s64 = 25;
	// stb r10,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r10.u8);
	// li r10,102
	ctx.r10.s64 = 102;
	// stb r11,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r11.u8);
	// li r30,67
	ctx.r30.s64 = 67;
	// stb r11,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r11.u8);
	// stb r28,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r28.u8);
	// li r28,53
	ctx.r28.s64 = 53;
	// stb r3,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r3.u8);
	// li r3,52
	ctx.r3.s64 = 52;
	// stb r5,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r5.u8);
	// li r5,21
	ctx.r5.s64 = 21;
	// stb r11,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r11.u8);
	// stb r11,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r11.u8);
	// stb r11,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r11.u8);
	// stb r10,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r10.u8);
	// li r10,117
	ctx.r10.s64 = 117;
	// stb r11,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r16,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r16.u8);
	// stb r27,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r27.u8);
	// stb r24,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r24.u8);
	// stb r25,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r25.u8);
	// stb r9,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r9.u8);
	// stb r7,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r7.u8);
	// stb r26,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r26.u8);
	// stb r29,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r29.u8);
	// stb r6,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r6.u8);
	// stb r17,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r17.u8);
	// stb r6,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r6.u8);
	// stb r30,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r30.u8);
	// stb r3,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r3.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r9,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r9.u8);
	// stb r28,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r28.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r8,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r8.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r5,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r5.u8);
	// stb r27,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r27.u8);
	// stb r24,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r24.u8);
	// stb r25,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r25.u8);
	// stb r9,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r9.u8);
	// stb r7,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r7.u8);
	// stb r26,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r26.u8);
	// stb r29,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r29.u8);
	// stb r6,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r6.u8);
	// stb r20,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r20.u8);
	// stb r10,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r10.u8);
	// stb r4,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r4.u8);
	// stb r6,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r6.u8);
	// stb r30,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r30.u8);
	// stb r3,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r3.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r11,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r11.u8);
	// stb r8,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r8.u8);
	// li r7,128
	ctx.r7.s64 = 128;
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// li r3,66
	ctx.r3.s64 = 66;
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// li r4,3
	ctx.r4.s64 = 3;
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r7,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r7.u8);
	// li r7,86
	ctx.r7.s64 = 86;
	// li r6,12
	ctx.r6.s64 = 12;
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// li r28,96
	ctx.r28.s64 = 96;
	// stb r9,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r9.u8);
	// stb r21,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r21.u8);
	// li r5,87
	ctx.r5.s64 = 87;
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r7,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r7.u8);
	// li r7,240
	ctx.r7.s64 = 240;
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r10,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r10.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r3,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r3.u8);
	// stb r31,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r31.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r11,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r11.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r8,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r8.u8);
	// stb r4,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r4.u8);
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r31,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r31.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r6,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r6.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r31,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r31.u8);
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r28,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r28.u8);
	// stb r19,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r19.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r17,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r17.u8);
	// stb r7,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r7.u8);
	// stb r31,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r31.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r11,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r11.u8);
	// stb r11,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r11.u8);
	// li r11,85
	ctx.r11.s64 = 85;
	// stb r5,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r5.u8);
	// li r30,63
	ctx.r30.s64 = 63;
	// li r5,34
	ctx.r5.s64 = 34;
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// li r27,199
	ctx.r27.s64 = 199;
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r31,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r31.u8);
	// stb r11,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r11.u8);
	// li r11,51
	ctx.r11.s64 = 51;
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r9,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r9.u8);
	// stb r21,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r21.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r10,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r10.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r3,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r3.u8);
	// stb r7,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r7.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r31,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r31.u8);
	// stb r31,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r9,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r9.u8);
	// stb r21,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r21.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r31,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r31.u8);
	// stb r31,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r31.u8);
	// stb r31,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r31.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// stb r10,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r10.u8);
	// stb r31,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r31.u8);
	// stb r31,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r31.u8);
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// stb r31,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r31.u8);
	// stb r30,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r30.u8);
	// stb r11,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r11.u8);
	// stb r11,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r11.u8);
	// stb r11,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r11.u8);
	// stb r31,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r31.u8);
	// stb r31,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r31.u8);
	// stb r5,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r5.u8);
	// stb r27,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r27.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r31,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r31.u8);
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r8,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r8.u8);
	// stb r4,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r4.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r31,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r31.u8);
	// stb r31,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r31.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r31,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r31.u8);
	// stb r6,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r6.u8);
	// stb r31,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r31.u8);
	// stb r31,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r31.u8);
	// stb r31,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r31.u8);
	// li r8,200
	ctx.r8.s64 = 200;
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r28,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r28.u8);
	// stb r19,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r19.u8);
	// stb r8,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r8.u8);
	// li r8,198
	ctx.r8.s64 = 198;
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r31,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r31.u8);
	// stb r31,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r31.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r17,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r17.u8);
	// stb r7,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r7.u8);
	// stb r31,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r31.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r5,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r5.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r31,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r31.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r9,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r9.u8);
	// stb r21,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r21.u8);
	// stb r31,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r31.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r31,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r31.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r31,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r31.u8);
	// stb r31,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r31.u8);
	// stb r31,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r31.u8);
	// stb r10,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r10.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r31,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r31.u8);
	// stb r31,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r31.u8);
	// stb r3,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r3.u8);
	// stb r7,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r7.u8);
	// stb r31,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r31.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r5,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r5.u8);
	// stb r8,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r8.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r31,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r31.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r9,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r9.u8);
	// stb r21,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r21.u8);
	// stb r31,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r31.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r31,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r31.u8);
	// stb r31,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r31.u8);
	// stb r31,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r31.u8);
	// stb r31,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r31.u8);
	// stb r31,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r31.u8);
	// stb r10,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r10.u8);
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r30,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r30.u8);
	// stb r11,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r11.u8);
	// stb r11,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r11.u8);
	// stb r11,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r11.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r31,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r31.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r31,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r31.u8);
	// stb r31,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r31.u8);
	// stb r31,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r31.u8);
	// stb r31,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r31.u8);
	// stb r11,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r31.u8);
	// stb r19,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r19.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r11,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r31,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r31.u8);
	// stb r31,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r31.u8);
	// stb r31,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r31.u8);
	// stb r31,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r31.u8);
	// stb r11,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r31,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r31.u8);
	// stb r31,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r31.u8);
	// stb r31,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r31.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r11,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r31.u8);
	// stb r31,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r31.u8);
	// stb r31,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r31.u8);
	// stb r31,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r31.u8);
	// stb r11,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r4,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r4.u8);
	// stb r6,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r6.u8);
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r11,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r6,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r6.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r31,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r31.u8);
	// stb r31,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r31.u8);
	// stb r11,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r31.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r29,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r29.u8);
	// stb r11,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r31,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r31.u8);
	// stb r11,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r31.u8);
	// stb r31,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r31.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r11,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r31.u8);
	// stb r31,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r31.u8);
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r31,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r31.u8);
	// stb r31,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r31.u8);
	// stb r31,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r31.u8);
	// stb r31,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r31.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r31,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r31.u8);
	// stb r31,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r31.u8);
	// stb r31,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r31.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// stb r20,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r20.u8);
	// stb r11,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r11.u8);
	// stb r31,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r31.u8);
	// li r11,36
	ctx.r11.s64 = 36;
	// stb r31,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r31.u8);
	// addi r30,r22,24
	ctx.r30.s64 = ctx.r22.s64 + 24;
	// stb r31,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r31.u8);
	// li r5,880
	ctx.r5.s64 = 880;
	// stb r31,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r31.u8);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stb r31,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r31.u8);
	// stb r11,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r31.u8);
	// stb r19,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r19.u8);
	// stb r31,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r11,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r31.u8);
	// stb r31,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r31.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r20,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r20.u8);
	// stb r31,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r31.u8);
	// stb r31,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r31.u8);
	// stb r31,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r31.u8);
	// stb r31,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r31.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r31,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r31.u8);
	// stb r11,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r11.u8);
	// stb r31,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r31.u8);
	// stb r31,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r31.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r31,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BB1E8;
	sub_82B06418(ctx, base);
	// mr r3,r22
	ctx.r3.u64 = ctx.r22.u64;
	// stw r30,20(r22)
	PPC_STORE_U32(ctx.r22.u32 + 20, ctx.r30.u32);
	// addi r1,r1,1120
	ctx.r1.s64 = ctx.r1.s64 + 1120;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BB1F8"))) PPC_WEAK_FUNC(sub_824BB1F8);
PPC_FUNC_IMPL(__imp__sub_824BB1F8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BB200;
	__savegprlr_29(ctx, base);
	// stwu r1,-368(r1)
	ea = -368 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,255
	ctx.r9.s64 = 255;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31112
	ctx.r4.s64 = ctx.r10.s64 + 31112;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BB23C;
	sub_822E0818(ctx, base);
	// li r10,81
	ctx.r10.s64 = 81;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,162
	ctx.r11.s64 = 162;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,130
	ctx.r9.s64 = 130;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r4,88
	ctx.r4.s64 = 88;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r10.u8);
	// li r5,3
	ctx.r5.s64 = 3;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r9,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r9.u8);
	// li r9,172
	ctx.r9.s64 = 172;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,124
	ctx.r10.s64 = 124;
	// stb r4,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r4.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,89
	ctx.r10.s64 = 89;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// stb r5,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r5.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r10,96
	ctx.r10.s64 = 96;
	// stb r4,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r4.u8);
	// li r7,205
	ctx.r7.s64 = 205;
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// li r6,63
	ctx.r6.s64 = 63;
	// stb r11,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r11.u8);
	// li r4,193
	ctx.r4.s64 = 193;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r7,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r7.u8);
	// stb r6,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r6.u8);
	// li r6,12
	ctx.r6.s64 = 12;
	// stb r7,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r7.u8);
	// li r7,39
	ctx.r7.s64 = 39;
	// stb r4,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r4.u8);
	// li r4,32
	ctx.r4.s64 = 32;
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// li r10,61
	ctx.r10.s64 = 61;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// li r10,204
	ctx.r10.s64 = 204;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r6,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r6.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r10,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r10.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r10,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r10.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r7,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r7.u8);
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r8,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r8.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r4,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r4.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r7,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r7.u8);
	// stb r10,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r10.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r8,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r8.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// li r10,17
	ctx.r10.s64 = 17;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// stb r10,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r10.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r8,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r8.u8);
	// li r8,213
	ctx.r8.s64 = 213;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r9,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r9.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r11,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r11,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r11,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r5,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r5.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// stb r11,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r10,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r10.u8);
	// stb r11,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r6,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r6.u8);
	// stb r8,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r8.u8);
	// stb r11,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r10,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// li r5,255
	ctx.r5.s64 = 255;
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r11,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r11,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r11,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r11.u8);
	// stb r11,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r11,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r11,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r10,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r10.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r9,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r9.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r11,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r11.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BB700;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,368
	ctx.r1.s64 = ctx.r1.s64 + 368;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BB710"))) PPC_WEAK_FUNC(sub_824BB710);
PPC_FUNC_IMPL(__imp__sub_824BB710) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BB718;
	__savegprlr_29(ctx, base);
	// stwu r1,-336(r1)
	ea = -336 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,214
	ctx.r9.s64 = 214;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31148
	ctx.r4.s64 = ctx.r10.s64 + 31148;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BB754;
	sub_822E0818(ctx, base);
	// li r7,254
	ctx.r7.s64 = 254;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,81
	ctx.r11.s64 = 81;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,79
	ctx.r8.s64 = 79;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r7,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r7.u8);
	// li r6,66
	ctx.r6.s64 = 66;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,199
	ctx.r11.s64 = 199;
	// stb r7,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r7.u8);
	// li r7,255
	ctx.r7.s64 = 255;
	// stb r8,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r8.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r7,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r7.u8);
	// li r7,67
	ctx.r7.s64 = 67;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r6,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r6.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r9,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r9.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r7,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r7.u8);
	// stb r10,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r10.u8);
	// li r10,55
	ctx.r10.s64 = 55;
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// li r6,27
	ctx.r6.s64 = 27;
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// li r10,252
	ctx.r10.s64 = 252;
	// stb r6,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r6.u8);
	// li r6,80
	ctx.r6.s64 = 80;
	// stb r11,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// li r10,70
	ctx.r10.s64 = 70;
	// stb r6,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r6.u8);
	// stb r11,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r10,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r10.u8);
	// li r10,130
	ctx.r10.s64 = 130;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r7,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r7.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r8,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r8.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r11,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r11.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r10,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r10.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// li r9,155
	ctx.r9.s64 = 155;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// li r5,214
	ctx.r5.s64 = 214;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r11,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r11,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r11,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r11,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r11,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r11,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r9,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r9.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r11,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r11.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r11,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r11.u8);
	// li r11,56
	ctx.r11.s64 = 56;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r10,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r10.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r11,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r11,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r11,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r11.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BBB54;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,336
	ctx.r1.s64 = ctx.r1.s64 + 336;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BBB68"))) PPC_WEAK_FUNC(sub_824BBB68);
PPC_FUNC_IMPL(__imp__sub_824BBB68) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824BBB70;
	__savegprlr_14(ctx, base);
	// stwu r1,-2224(r1)
	ea = -2224 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r23,r3
	ctx.r23.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r23,4
	ctx.r3.s64 = ctx.r23.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,1979
	ctx.r9.s64 = 1979;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31180
	ctx.r4.s64 = ctx.r10.s64 + 31180;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r23)
	PPC_STORE_U32(ctx.r23.u32 + 0, ctx.r11.u32);
	// stw r9,16(r23)
	PPC_STORE_U32(ctx.r23.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BBBAC;
	sub_822E0818(ctx, base);
	// li r11,81
	ctx.r11.s64 = 81;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,254
	ctx.r10.s64 = 254;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r6,69
	ctx.r6.s64 = 69;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r15,171
	ctx.r15.s64 = 171;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r18,34
	ctx.r18.s64 = 34;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,226
	ctx.r11.s64 = 226;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r21,8
	ctx.r21.s64 = 8;
	// li r10,206
	ctx.r10.s64 = 206;
	// stb r6,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r6.u8);
	// li r20,143
	ctx.r20.s64 = 143;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r22,1
	ctx.r22.s64 = 1;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,231
	ctx.r11.s64 = 231;
	// li r7,228
	ctx.r7.s64 = 228;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r15,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r15.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r18,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r18.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r21,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r21.u8);
	// stb r20,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r20.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r22,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r22.u8);
	// stb r7,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r7.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// li r10,120
	ctx.r10.s64 = 120;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r24,93
	ctx.r24.s64 = 93;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r25,170
	ctx.r25.s64 = 170;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r26,95
	ctx.r26.s64 = 95;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r27,186
	ctx.r27.s64 = 186;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r28,94
	ctx.r28.s64 = 94;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// li r29,76
	ctx.r29.s64 = 76;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r24,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r24.u8);
	// stb r25,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r25.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// stb r10,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r10.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r26,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r26.u8);
	// stb r27,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r27.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r28,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r28.u8);
	// stb r29,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r29.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// li r8,66
	ctx.r8.s64 = 66;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// li r5,128
	ctx.r5.s64 = 128;
	// stb r9,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r9.u8);
	// li r3,97
	ctx.r3.s64 = 97;
	// stb r10,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r10.u8);
	// li r4,18
	ctx.r4.s64 = 18;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// li r30,77
	ctx.r30.s64 = 77;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r8,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r8.u8);
	// stb r5,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r5.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r3,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r3.u8);
	// stb r4,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r4.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r9,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r9.u8);
	// stb r10,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r10.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r8,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r8.u8);
	// stb r5,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r5.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r6,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r6.u8);
	// stb r30,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r30.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r24,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r24.u8);
	// stb r25,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r25.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r9,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r9.u8);
	// stb r10,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r10.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r26,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r26.u8);
	// stb r27,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r27.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r9,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r9.u8);
	// stb r10,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r10.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r8,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r8.u8);
	// stb r5,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r5.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r28,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r28.u8);
	// stb r29,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r29.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r9,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r9.u8);
	// stb r10,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r10.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r11,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r11.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r8,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r8.u8);
	// stb r5,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r5.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r3,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r3.u8);
	// stb r4,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r4.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r9,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r9.u8);
	// stb r10,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r10.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// li r19,67
	ctx.r19.s64 = 67;
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r11,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r11.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r8,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r8.u8);
	// stb r5,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r5.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r6,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r6.u8);
	// stb r30,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r30.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r24,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r24.u8);
	// stb r25,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r25.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r9,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r9.u8);
	// stb r10,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r10.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r11,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r11.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r26,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r26.u8);
	// stb r27,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r27.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r9,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r9.u8);
	// stb r10,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r10.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r11,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r11.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r19,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r19.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r28,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r28.u8);
	// stb r29,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r29.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r9,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r9.u8);
	// stb r10,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r10.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r11,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r11.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r8,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r8.u8);
	// stb r5,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r5.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r3,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r3.u8);
	// stb r4,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r4.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r9,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r9.u8);
	// stb r10,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r10.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r11,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r11.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r8,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r8.u8);
	// stb r5,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r5.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r6,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r6.u8);
	// stb r30,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r30.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r24,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r24.u8);
	// stb r25,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r25.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r9,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r9.u8);
	// stb r10,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r10.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r11,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r11.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// li r14,64
	ctx.r14.s64 = 64;
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r26,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r26.u8);
	// stb r27,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r27.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r9,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r9.u8);
	// stb r10,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r10.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r11,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r11.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r19,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r19.u8);
	// stb r14,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r14.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r28,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r28.u8);
	// stb r29,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r29.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r9,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r9.u8);
	// stb r10,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r10.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r11,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r11.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r31,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r31.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r8,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r8.u8);
	// stb r5,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r5.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r3,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r3.u8);
	// stb r4,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r4.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r9,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r9.u8);
	// stb r10,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r10.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r18,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r18.u8);
	// li r18,197
	ctx.r18.s64 = 197;
	// stb r11,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r11.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r8,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r8.u8);
	// stb r5,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r5.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r6,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r6.u8);
	// stb r30,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r30.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r31,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r31.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r18,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r18.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r31,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r31.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r21,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r21.u8);
	// stb r20,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r20.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r22,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r22.u8);
	// stb r7,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r7.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r11,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r11.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r24,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r24.u8);
	// stb r25,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r25.u8);
	// stb r31,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r31.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r9,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r9.u8);
	// stb r10,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r10.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r31,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r31.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// stb r11,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r11.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r8,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r8.u8);
	// stb r5,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r5.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r31,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r31.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r26,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r26.u8);
	// stb r27,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r27.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// li r7,44
	ctx.r7.s64 = 44;
	// stb r31,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r31.u8);
	// li r17,16
	ctx.r17.s64 = 16;
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r9,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r9.u8);
	// stb r10,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r10.u8);
	// stb r7,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r7.u8);
	// li r7,65
	ctx.r7.s64 = 65;
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r11,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r11.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r31,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r31.u8);
	// stb r31,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r31.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r28,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r28.u8);
	// stb r29,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r29.u8);
	// stb r31,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r31.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r31,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r31.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r9,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r9.u8);
	// stb r10,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r10.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r11,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r11.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r8,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r8.u8);
	// stb r31,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r31.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r3,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r3.u8);
	// stb r4,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r4.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r31,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r31.u8);
	// stb r31,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r9,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r9.u8);
	// stb r10,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r10.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r31,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r31.u8);
	// stb r31,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r31.u8);
	// stb r31,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r31.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r11,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r11.u8);
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r31,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r31.u8);
	// stb r31,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r31.u8);
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// stb r7,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r7.u8);
	// stb r17,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r17.u8);
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r31,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r31.u8);
	// stb r31,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r31.u8);
	// stb r6,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r6.u8);
	// stb r30,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r30.u8);
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r31,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r31.u8);
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r24,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r24.u8);
	// stb r25,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r25.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r31,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r31.u8);
	// stb r31,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r31.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r9,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r9.u8);
	// stb r10,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r10.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r31,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r31.u8);
	// stb r31,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r31.u8);
	// stb r31,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r31.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r11,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r11.u8);
	// stb r31,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r31.u8);
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r8,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r8.u8);
	// stb r5,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r5.u8);
	// stb r31,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r31.u8);
	// stb r31,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r31.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r26,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r26.u8);
	// stb r27,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r27.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r31,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r31.u8);
	// stb r31,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r31.u8);
	// stb r31,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r31.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r9,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r9.u8);
	// stb r10,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r10.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r31,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r31.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r11,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r11.u8);
	// stb r31,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r31.u8);
	// stb r31,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r31.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r31,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r31.u8);
	// stb r8,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r8.u8);
	// stb r5,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r5.u8);
	// stb r31,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r31.u8);
	// stb r31,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r31.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r28,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r28.u8);
	// stb r29,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r29.u8);
	// stb r31,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r31.u8);
	// stb r31,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r31.u8);
	// stb r31,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r31.u8);
	// stb r31,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r31.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r9,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r9.u8);
	// stb r10,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r10.u8);
	// stb r31,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r31.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r31,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r31.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// li r18,104
	ctx.r18.s64 = 104;
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r11,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r11.u8);
	// stb r31,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r31.u8);
	// stb r31,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r31.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r31,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r31.u8);
	// stb r8,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r8.u8);
	// stb r18,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r18.u8);
	// stb r31,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r31.u8);
	// stb r31,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r31.u8);
	// stb r31,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r31.u8);
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r3,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r3.u8);
	// stb r4,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r4.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r31,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r31.u8);
	// stb r31,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r31.u8);
	// stb r31,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r31.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r9,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r9.u8);
	// stb r10,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r10.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r31,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r31.u8);
	// stb r31,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r31.u8);
	// stb r31,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r31.u8);
	// stb r31,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r31.u8);
	// stb r31,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r31.u8);
	// stb r11,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r11.u8);
	// stb r31,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r31.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r31,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r31.u8);
	// stb r7,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r7.u8);
	// stb r31,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r31.u8);
	// stb r31,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r31.u8);
	// stb r31,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r31.u8);
	// stb r31,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r31.u8);
	// stb r31,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r31.u8);
	// stb r6,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r6.u8);
	// stb r30,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r30.u8);
	// stb r31,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r31.u8);
	// stb r31,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r31.u8);
	// stb r31,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r31.u8);
	// stb r31,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r31.u8);
	// stb r31,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r31.u8);
	// stb r31,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r31.u8);
	// stb r24,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r24.u8);
	// stb r25,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r25.u8);
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r31,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r31.u8);
	// stb r31,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r31.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r31,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r31.u8);
	// stb r9,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r9.u8);
	// stb r10,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r10.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r31,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r31.u8);
	// stb r31,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r31.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r11,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r11.u8);
	// stb r31,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r31.u8);
	// stb r31,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r31.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r8,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r8.u8);
	// stb r5,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r5.u8);
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r31,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r31.u8);
	// stb r31,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r31.u8);
	// stb r26,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r26.u8);
	// stb r27,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r27.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// li r16,156
	ctx.r16.s64 = 156;
	// stb r31,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r31.u8);
	// stb r31,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r31.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r31,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r31.u8);
	// stb r9,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r9.u8);
	// stb r10,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r10.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// stb r31,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r31.u8);
	// stb r31,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r31.u8);
	// stb r31,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r31.u8);
	// stb r31,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r31.u8);
	// stb r11,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r11.u8);
	// stb r31,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r31.u8);
	// stb r31,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r31.u8);
	// stb r31,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r31.u8);
	// stb r31,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r31.u8);
	// stb r19,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r19.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r31,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r31.u8);
	// stb r31,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r31.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r28,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r28.u8);
	// stb r29,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r29.u8);
	// stb r31,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r31.u8);
	// stb r31,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r31.u8);
	// stb r31,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r31.u8);
	// stb r31,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r31.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r31,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r31.u8);
	// stb r9,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r9.u8);
	// stb r10,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r10.u8);
	// stb r31,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r31.u8);
	// stb r31,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r31.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r31,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r31.u8);
	// stb r31,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r31.u8);
	// stb r31,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r31.u8);
	// stb r31,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r31.u8);
	// stb r11,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r11.u8);
	// stb r31,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r31.u8);
	// stb r31,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r31.u8);
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r31.u8);
	// stb r8,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r8.u8);
	// stb r16,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r16.u8);
	// stb r31,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r31.u8);
	// stb r31,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r31.u8);
	// stb r31,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r31.u8);
	// stb r31,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r31.u8);
	// stb r3,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r3.u8);
	// stb r4,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r4.u8);
	// stb r31,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r31.u8);
	// stb r31,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r31.u8);
	// stb r31,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r31.u8);
	// stb r31,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r31.u8);
	// stb r31,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r31.u8);
	// stb r31,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r31.u8);
	// stb r9,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r9.u8);
	// stb r10,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r10.u8);
	// stb r31,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r31.u8);
	// stb r31,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r31.u8);
	// stb r31,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r31.u8);
	// stb r31,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r31.u8);
	// stb r31,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r31.u8);
	// stb r31,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r31.u8);
	// stb r31,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r31.u8);
	// stb r11,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r11.u8);
	// stb r31,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r31.u8);
	// stb r31,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r31.u8);
	// stb r31,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r31.u8);
	// stb r31,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r31.u8);
	// stb r7,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r7.u8);
	// stb r17,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r17.u8);
	// stb r31,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r31.u8);
	// stb r31,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r31.u8);
	// stb r31,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r31.u8);
	// stb r31,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r31.u8);
	// stb r6,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r6.u8);
	// stb r30,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r30.u8);
	// stb r31,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r31.u8);
	// stb r31,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r31.u8);
	// stb r31,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r31.u8);
	// stb r31,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r31.u8);
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// stb r31,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r31.u8);
	// stb r24,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r24.u8);
	// stb r25,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r25.u8);
	// stb r31,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r31.u8);
	// stb r31,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r31.u8);
	// stb r31,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r31.u8);
	// stb r31,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r31.u8);
	// stb r31,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r31.u8);
	// stb r31,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r31.u8);
	// stb r9,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r9.u8);
	// stb r10,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r10.u8);
	// stb r31,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r31.u8);
	// stb r31,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r31.u8);
	// stb r31,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r31.u8);
	// stb r31,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r31.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r31,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r31.u8);
	// stb r11,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r11.u8);
	// stb r31,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r31.u8);
	// stb r31,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r31.u8);
	// stb r31,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r31.u8);
	// stb r31,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r31.u8);
	// stb r8,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r8.u8);
	// stb r5,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r5.u8);
	// stb r31,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r31.u8);
	// stb r31,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r31.u8);
	// stb r31,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r31.u8);
	// stb r31,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r31.u8);
	// stb r26,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r26.u8);
	// stb r27,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r27.u8);
	// stb r31,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r31.u8);
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r31,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r31.u8);
	// stb r31,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r31.u8);
	// stb r31,1044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1044, ctx.r31.u8);
	// stb r31,1045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1045, ctx.r31.u8);
	// stb r9,1046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1046, ctx.r9.u8);
	// stb r10,1047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1047, ctx.r10.u8);
	// stb r31,1048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1048, ctx.r31.u8);
	// stb r31,1049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1049, ctx.r31.u8);
	// stb r31,1050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1050, ctx.r31.u8);
	// stb r31,1051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1051, ctx.r31.u8);
	// stb r31,1052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1052, ctx.r31.u8);
	// stb r31,1053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1053, ctx.r31.u8);
	// stb r31,1054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1054, ctx.r31.u8);
	// stb r11,1055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1055, ctx.r11.u8);
	// stb r31,1056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1056, ctx.r31.u8);
	// stb r31,1057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1057, ctx.r31.u8);
	// stb r31,1058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1058, ctx.r31.u8);
	// stb r31,1059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1059, ctx.r31.u8);
	// stb r19,1060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1060, ctx.r19.u8);
	// stb r14,1061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1061, ctx.r14.u8);
	// stb r31,1062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1062, ctx.r31.u8);
	// stb r31,1063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1063, ctx.r31.u8);
	// stb r31,1064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1064, ctx.r31.u8);
	// stb r31,1065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1065, ctx.r31.u8);
	// stb r28,1066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1066, ctx.r28.u8);
	// stb r29,1067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1067, ctx.r29.u8);
	// stb r31,1068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1068, ctx.r31.u8);
	// stb r31,1069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1069, ctx.r31.u8);
	// stb r31,1070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1070, ctx.r31.u8);
	// stb r31,1071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1071, ctx.r31.u8);
	// stb r31,1072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1072, ctx.r31.u8);
	// stb r31,1073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1073, ctx.r31.u8);
	// stb r9,1074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1074, ctx.r9.u8);
	// stb r10,1075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1075, ctx.r10.u8);
	// stb r31,1076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1076, ctx.r31.u8);
	// stb r31,1077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1077, ctx.r31.u8);
	// stb r31,1078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1078, ctx.r31.u8);
	// stb r31,1079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1079, ctx.r31.u8);
	// stb r31,1080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1080, ctx.r31.u8);
	// stb r31,1081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1081, ctx.r31.u8);
	// stb r31,1082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1082, ctx.r31.u8);
	// stb r16,1089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1089, ctx.r16.u8);
	// li r16,90
	ctx.r16.s64 = 90;
	// li r19,96
	ctx.r19.s64 = 96;
	// stb r11,1083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1083, ctx.r11.u8);
	// stb r31,1084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1084, ctx.r31.u8);
	// stb r31,1085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1085, ctx.r31.u8);
	// stb r31,1086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1086, ctx.r31.u8);
	// stb r16,1131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1131, ctx.r16.u8);
	// li r16,70
	ctx.r16.s64 = 70;
	// stb r31,1087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1087, ctx.r31.u8);
	// stb r8,1088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1088, ctx.r8.u8);
	// stb r31,1090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1090, ctx.r31.u8);
	// stb r31,1091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1091, ctx.r31.u8);
	// stb r16,1138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1138, ctx.r16.u8);
	// li r16,130
	ctx.r16.s64 = 130;
	// stb r31,1092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1092, ctx.r31.u8);
	// stb r31,1093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1093, ctx.r31.u8);
	// stb r3,1094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1094, ctx.r3.u8);
	// stb r4,1095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1095, ctx.r4.u8);
	// stb r16,1139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1139, ctx.r16.u8);
	// li r16,255
	ctx.r16.s64 = 255;
	// stb r31,1096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1096, ctx.r31.u8);
	// stb r31,1097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1097, ctx.r31.u8);
	// stb r31,1098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1098, ctx.r31.u8);
	// stb r31,1099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1099, ctx.r31.u8);
	// stb r31,1100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1100, ctx.r31.u8);
	// stb r31,1101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1101, ctx.r31.u8);
	// stb r9,1102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1102, ctx.r9.u8);
	// stb r10,1103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1103, ctx.r10.u8);
	// stb r31,1104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1104, ctx.r31.u8);
	// stb r31,1105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1105, ctx.r31.u8);
	// stb r31,1106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1106, ctx.r31.u8);
	// stb r31,1107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1107, ctx.r31.u8);
	// stb r31,1108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1108, ctx.r31.u8);
	// stb r31,1109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1109, ctx.r31.u8);
	// stb r31,1110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1110, ctx.r31.u8);
	// stb r11,1111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1111, ctx.r11.u8);
	// stb r31,1112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1112, ctx.r31.u8);
	// stb r31,1113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1113, ctx.r31.u8);
	// stb r31,1114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1114, ctx.r31.u8);
	// stb r31,1115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1115, ctx.r31.u8);
	// stb r7,1116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1116, ctx.r7.u8);
	// stb r17,1117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1117, ctx.r17.u8);
	// stb r31,1118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1118, ctx.r31.u8);
	// stb r31,1119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1119, ctx.r31.u8);
	// stb r31,1120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1120, ctx.r31.u8);
	// stb r31,1121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1121, ctx.r31.u8);
	// stb r6,1122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1122, ctx.r6.u8);
	// stb r30,1123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1123, ctx.r30.u8);
	// stb r31,1124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1124, ctx.r31.u8);
	// stb r31,1125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1125, ctx.r31.u8);
	// stb r31,1126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1126, ctx.r31.u8);
	// stb r31,1127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1127, ctx.r31.u8);
	// stb r31,1128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1128, ctx.r31.u8);
	// stb r31,1129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1129, ctx.r31.u8);
	// stb r19,1130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1130, ctx.r19.u8);
	// stb r31,1132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1132, ctx.r31.u8);
	// stb r31,1133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1133, ctx.r31.u8);
	// stb r31,1134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1134, ctx.r31.u8);
	// stb r31,1135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1135, ctx.r31.u8);
	// stb r31,1136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1136, ctx.r31.u8);
	// stb r31,1137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1137, ctx.r31.u8);
	// stb r31,1140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1140, ctx.r31.u8);
	// stb r31,1141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1141, ctx.r31.u8);
	// stb r31,1142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1142, ctx.r31.u8);
	// stb r31,1143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1143, ctx.r31.u8);
	// stb r31,1144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1144, ctx.r31.u8);
	// stb r31,1145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1145, ctx.r31.u8);
	// stb r31,1146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1146, ctx.r31.u8);
	// stb r11,1147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1147, ctx.r11.u8);
	// stb r31,1148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1148, ctx.r31.u8);
	// stb r31,1149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1149, ctx.r31.u8);
	// stb r31,1150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1150, ctx.r31.u8);
	// stb r31,1151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1151, ctx.r31.u8);
	// stb r31,1152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1152, ctx.r31.u8);
	// stb r31,1153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1153, ctx.r31.u8);
	// stb r15,1154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1154, ctx.r15.u8);
	// stb r16,1155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1155, ctx.r16.u8);
	// stb r31,1156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1156, ctx.r31.u8);
	// stb r31,1157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1157, ctx.r31.u8);
	// stb r19,1158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1158, ctx.r19.u8);
	// li r16,125
	ctx.r16.s64 = 125;
	// stb r31,1160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1160, ctx.r31.u8);
	// stb r31,1161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1161, ctx.r31.u8);
	// stb r31,1162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1162, ctx.r31.u8);
	// stb r31,1163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1163, ctx.r31.u8);
	// stb r31,1164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1164, ctx.r31.u8);
	// stb r16,1159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1159, ctx.r16.u8);
	// li r16,108
	ctx.r16.s64 = 108;
	// stb r31,1165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1165, ctx.r31.u8);
	// stb r21,1166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1166, ctx.r21.u8);
	// stb r20,1167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1167, ctx.r20.u8);
	// stb r31,1168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1168, ctx.r31.u8);
	// stb r16,1175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1175, ctx.r16.u8);
	// li r16,3
	ctx.r16.s64 = 3;
	// stb r31,1169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1169, ctx.r31.u8);
	// stb r31,1170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1170, ctx.r31.u8);
	// stb r31,1171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1171, ctx.r31.u8);
	// stb r31,1172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1172, ctx.r31.u8);
	// stb r31,1173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1173, ctx.r31.u8);
	// stb r22,1174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1174, ctx.r22.u8);
	// stb r31,1176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1176, ctx.r31.u8);
	// stb r31,1177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1177, ctx.r31.u8);
	// stb r31,1178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1178, ctx.r31.u8);
	// stb r31,1179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1179, ctx.r31.u8);
	// stb r31,1180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1180, ctx.r31.u8);
	// stb r31,1181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1181, ctx.r31.u8);
	// stb r31,1182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1182, ctx.r31.u8);
	// stb r16,1183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1183, ctx.r16.u8);
	// stb r31,1184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1184, ctx.r31.u8);
	// stb r31,1185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1185, ctx.r31.u8);
	// stb r24,1186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1186, ctx.r24.u8);
	// stb r25,1187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1187, ctx.r25.u8);
	// stb r31,1188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1188, ctx.r31.u8);
	// stb r31,1189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1189, ctx.r31.u8);
	// stb r31,1190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1190, ctx.r31.u8);
	// stb r31,1191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1191, ctx.r31.u8);
	// stb r31,1192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1192, ctx.r31.u8);
	// stb r31,1193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1193, ctx.r31.u8);
	// stb r9,1194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1194, ctx.r9.u8);
	// stb r10,1195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1195, ctx.r10.u8);
	// stb r31,1196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1196, ctx.r31.u8);
	// stb r31,1197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1197, ctx.r31.u8);
	// stb r31,1198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1198, ctx.r31.u8);
	// stb r31,1199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1199, ctx.r31.u8);
	// stb r31,1200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1200, ctx.r31.u8);
	// stb r31,1201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1201, ctx.r31.u8);
	// stb r31,1202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1202, ctx.r31.u8);
	// stb r11,1203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1203, ctx.r11.u8);
	// stb r31,1204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1204, ctx.r31.u8);
	// stb r31,1205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1205, ctx.r31.u8);
	// stb r31,1206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1206, ctx.r31.u8);
	// stb r31,1207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1207, ctx.r31.u8);
	// stb r7,1208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1208, ctx.r7.u8);
	// stb r5,1209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1209, ctx.r5.u8);
	// stb r31,1210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1210, ctx.r31.u8);
	// stb r31,1211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1211, ctx.r31.u8);
	// stb r31,1212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1212, ctx.r31.u8);
	// stb r31,1213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1213, ctx.r31.u8);
	// stb r26,1214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1214, ctx.r26.u8);
	// stb r27,1215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1215, ctx.r27.u8);
	// stb r31,1216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1216, ctx.r31.u8);
	// stb r31,1217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1217, ctx.r31.u8);
	// stb r31,1218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1218, ctx.r31.u8);
	// stb r31,1219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1219, ctx.r31.u8);
	// stb r31,1220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1220, ctx.r31.u8);
	// stb r31,1221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1221, ctx.r31.u8);
	// stb r9,1222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1222, ctx.r9.u8);
	// stb r10,1223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1223, ctx.r10.u8);
	// stb r31,1224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1224, ctx.r31.u8);
	// stb r31,1225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1225, ctx.r31.u8);
	// stb r31,1226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1226, ctx.r31.u8);
	// stb r31,1227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1227, ctx.r31.u8);
	// stb r31,1228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1228, ctx.r31.u8);
	// stb r31,1229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1229, ctx.r31.u8);
	// stb r31,1230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1230, ctx.r31.u8);
	// stb r11,1231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1231, ctx.r11.u8);
	// stb r31,1232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1232, ctx.r31.u8);
	// stb r31,1233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1233, ctx.r31.u8);
	// stb r31,1234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1234, ctx.r31.u8);
	// stb r31,1235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1235, ctx.r31.u8);
	// stb r7,1236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1236, ctx.r7.u8);
	// li r15,240
	ctx.r15.s64 = 240;
	// stb r31,1237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1237, ctx.r31.u8);
	// li r16,224
	ctx.r16.s64 = 224;
	// stb r31,1238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1238, ctx.r31.u8);
	// stb r31,1239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1239, ctx.r31.u8);
	// stb r31,1240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1240, ctx.r31.u8);
	// stb r31,1241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1241, ctx.r31.u8);
	// stb r28,1242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1242, ctx.r28.u8);
	// stb r29,1243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1243, ctx.r29.u8);
	// stb r31,1244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1244, ctx.r31.u8);
	// stb r31,1245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1245, ctx.r31.u8);
	// stb r31,1246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1246, ctx.r31.u8);
	// stb r31,1247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1247, ctx.r31.u8);
	// stb r31,1248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1248, ctx.r31.u8);
	// stb r31,1249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1249, ctx.r31.u8);
	// stb r9,1250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1250, ctx.r9.u8);
	// stb r10,1251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1251, ctx.r10.u8);
	// stb r31,1252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1252, ctx.r31.u8);
	// stb r31,1253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1253, ctx.r31.u8);
	// stb r31,1254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1254, ctx.r31.u8);
	// stb r31,1255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1255, ctx.r31.u8);
	// stb r31,1256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1256, ctx.r31.u8);
	// stb r31,1257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1257, ctx.r31.u8);
	// stb r31,1258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1258, ctx.r31.u8);
	// stb r11,1259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1259, ctx.r11.u8);
	// stb r31,1260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1260, ctx.r31.u8);
	// stb r31,1261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1261, ctx.r31.u8);
	// stb r31,1262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1262, ctx.r31.u8);
	// stb r31,1263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1263, ctx.r31.u8);
	// stb r7,1264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1264, ctx.r7.u8);
	// stb r15,1265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1265, ctx.r15.u8);
	// stb r31,1266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1266, ctx.r31.u8);
	// stb r31,1267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1267, ctx.r31.u8);
	// stb r31,1268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1268, ctx.r31.u8);
	// stb r31,1269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1269, ctx.r31.u8);
	// stb r3,1270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1270, ctx.r3.u8);
	// stb r4,1271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1271, ctx.r4.u8);
	// stb r31,1272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1272, ctx.r31.u8);
	// stb r31,1273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1273, ctx.r31.u8);
	// stb r31,1274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1274, ctx.r31.u8);
	// stb r31,1275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1275, ctx.r31.u8);
	// stb r31,1276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1276, ctx.r31.u8);
	// stb r31,1277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1277, ctx.r31.u8);
	// stb r9,1278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1278, ctx.r9.u8);
	// stb r10,1279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1279, ctx.r10.u8);
	// stb r31,1280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1280, ctx.r31.u8);
	// stb r31,1281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1281, ctx.r31.u8);
	// stb r31,1282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1282, ctx.r31.u8);
	// stb r31,1283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1283, ctx.r31.u8);
	// stb r31,1284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1284, ctx.r31.u8);
	// stb r31,1285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1285, ctx.r31.u8);
	// stb r31,1286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1286, ctx.r31.u8);
	// stb r11,1287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1287, ctx.r11.u8);
	// stb r31,1288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1288, ctx.r31.u8);
	// stb r31,1289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1289, ctx.r31.u8);
	// stb r31,1290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1290, ctx.r31.u8);
	// stb r31,1291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1291, ctx.r31.u8);
	// stb r7,1292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1292, ctx.r7.u8);
	// stb r16,1293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1293, ctx.r16.u8);
	// stb r31,1294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1294, ctx.r31.u8);
	// stb r31,1295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1295, ctx.r31.u8);
	// stb r31,1296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1296, ctx.r31.u8);
	// stb r31,1297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1297, ctx.r31.u8);
	// stb r6,1298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1298, ctx.r6.u8);
	// stb r30,1299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1299, ctx.r30.u8);
	// stb r31,1300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1300, ctx.r31.u8);
	// stb r31,1301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1301, ctx.r31.u8);
	// stb r31,1302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1302, ctx.r31.u8);
	// stb r31,1303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1303, ctx.r31.u8);
	// stb r31,1304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1304, ctx.r31.u8);
	// stb r31,1305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1305, ctx.r31.u8);
	// stb r24,1306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1306, ctx.r24.u8);
	// stb r25,1307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1307, ctx.r25.u8);
	// stb r31,1308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1308, ctx.r31.u8);
	// stb r31,1309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1309, ctx.r31.u8);
	// stb r31,1310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1310, ctx.r31.u8);
	// stb r31,1311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1311, ctx.r31.u8);
	// stb r31,1312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1312, ctx.r31.u8);
	// stb r31,1313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1313, ctx.r31.u8);
	// stb r9,1314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1314, ctx.r9.u8);
	// stb r10,1315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1315, ctx.r10.u8);
	// std r23,2064(r1)
	PPC_STORE_U64(ctx.r1.u32 + 2064, ctx.r23.u64);
	// li r23,136
	ctx.r23.s64 = 136;
	// stb r31,1316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1316, ctx.r31.u8);
	// stb r31,1317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1317, ctx.r31.u8);
	// stb r31,1318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1318, ctx.r31.u8);
	// stb r31,1319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1319, ctx.r31.u8);
	// stb r31,1320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1320, ctx.r31.u8);
	// stb r31,1321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1321, ctx.r31.u8);
	// stb r31,1322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1322, ctx.r31.u8);
	// stb r11,1323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1323, ctx.r11.u8);
	// stb r31,1324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1324, ctx.r31.u8);
	// stb r31,1325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1325, ctx.r31.u8);
	// stb r31,1326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1326, ctx.r31.u8);
	// stb r31,1327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1327, ctx.r31.u8);
	// stb r7,1328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1328, ctx.r7.u8);
	// stb r23,1329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1329, ctx.r23.u8);
	// stb r31,1330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1330, ctx.r31.u8);
	// stb r31,1331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1331, ctx.r31.u8);
	// stb r31,1332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1332, ctx.r31.u8);
	// stb r31,1333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1333, ctx.r31.u8);
	// stb r26,1334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1334, ctx.r26.u8);
	// stb r27,1335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1335, ctx.r27.u8);
	// stb r31,1336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1336, ctx.r31.u8);
	// stb r31,1337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1337, ctx.r31.u8);
	// stb r31,1338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1338, ctx.r31.u8);
	// stb r31,1339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1339, ctx.r31.u8);
	// stb r31,1340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1340, ctx.r31.u8);
	// stb r31,1341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1341, ctx.r31.u8);
	// stb r9,1342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1342, ctx.r9.u8);
	// stb r10,1343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1343, ctx.r10.u8);
	// stb r31,1344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1344, ctx.r31.u8);
	// stb r31,1345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1345, ctx.r31.u8);
	// stb r31,1346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1346, ctx.r31.u8);
	// stb r31,1347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1347, ctx.r31.u8);
	// stb r31,1348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1348, ctx.r31.u8);
	// stb r31,1349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1349, ctx.r31.u8);
	// stb r31,1350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1350, ctx.r31.u8);
	// stb r11,1351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1351, ctx.r11.u8);
	// stb r31,1352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1352, ctx.r31.u8);
	// stb r31,1353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1353, ctx.r31.u8);
	// stb r31,1354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1354, ctx.r31.u8);
	// stb r31,1355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1355, ctx.r31.u8);
	// stb r8,1356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1356, ctx.r8.u8);
	// stb r14,1357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1357, ctx.r14.u8);
	// stb r31,1358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1358, ctx.r31.u8);
	// stb r31,1359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1359, ctx.r31.u8);
	// stb r31,1360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1360, ctx.r31.u8);
	// stb r31,1361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1361, ctx.r31.u8);
	// stb r28,1362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1362, ctx.r28.u8);
	// stb r29,1363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1363, ctx.r29.u8);
	// stb r31,1364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1364, ctx.r31.u8);
	// stb r31,1365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1365, ctx.r31.u8);
	// stb r31,1366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1366, ctx.r31.u8);
	// stb r31,1367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1367, ctx.r31.u8);
	// stb r31,1368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1368, ctx.r31.u8);
	// stb r31,1369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1369, ctx.r31.u8);
	// stb r9,1370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1370, ctx.r9.u8);
	// stb r10,1371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1371, ctx.r10.u8);
	// stb r31,1372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1372, ctx.r31.u8);
	// stb r31,1373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1373, ctx.r31.u8);
	// stb r31,1374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1374, ctx.r31.u8);
	// stb r31,1375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1375, ctx.r31.u8);
	// stb r31,1376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1376, ctx.r31.u8);
	// stb r31,1377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1377, ctx.r31.u8);
	// stb r31,1378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1378, ctx.r31.u8);
	// stb r11,1379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1379, ctx.r11.u8);
	// stb r31,1380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1380, ctx.r31.u8);
	// stb r31,1381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1381, ctx.r31.u8);
	// stb r31,1382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1382, ctx.r31.u8);
	// stb r31,1383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1383, ctx.r31.u8);
	// stb r7,1384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1384, ctx.r7.u8);
	// stb r15,1385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1385, ctx.r15.u8);
	// stb r31,1386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1386, ctx.r31.u8);
	// stb r31,1387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1387, ctx.r31.u8);
	// stb r31,1388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1388, ctx.r31.u8);
	// stb r31,1389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1389, ctx.r31.u8);
	// stb r3,1390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1390, ctx.r3.u8);
	// stb r4,1391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1391, ctx.r4.u8);
	// stb r31,1392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1392, ctx.r31.u8);
	// stb r31,1393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1393, ctx.r31.u8);
	// stb r31,1394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1394, ctx.r31.u8);
	// li r14,136
	ctx.r14.s64 = 136;
	// stb r31,1395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1395, ctx.r31.u8);
	// stb r31,1396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1396, ctx.r31.u8);
	// stb r31,1397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1397, ctx.r31.u8);
	// stb r9,1398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1398, ctx.r9.u8);
	// stb r10,1399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1399, ctx.r10.u8);
	// stb r31,1400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1400, ctx.r31.u8);
	// stb r31,1401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1401, ctx.r31.u8);
	// stb r31,1402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1402, ctx.r31.u8);
	// stb r31,1403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1403, ctx.r31.u8);
	// stb r31,1404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1404, ctx.r31.u8);
	// stb r31,1405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1405, ctx.r31.u8);
	// stb r31,1406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1406, ctx.r31.u8);
	// stb r11,1407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1407, ctx.r11.u8);
	// stb r31,1408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1408, ctx.r31.u8);
	// stb r31,1409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1409, ctx.r31.u8);
	// stb r31,1410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1410, ctx.r31.u8);
	// stb r31,1411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1411, ctx.r31.u8);
	// stb r7,1412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1412, ctx.r7.u8);
	// stb r16,1413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1413, ctx.r16.u8);
	// stb r31,1414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1414, ctx.r31.u8);
	// stb r31,1415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1415, ctx.r31.u8);
	// stb r31,1416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1416, ctx.r31.u8);
	// stb r31,1417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1417, ctx.r31.u8);
	// stb r6,1418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1418, ctx.r6.u8);
	// stb r30,1419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1419, ctx.r30.u8);
	// stb r31,1420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1420, ctx.r31.u8);
	// stb r31,1421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1421, ctx.r31.u8);
	// stb r31,1422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1422, ctx.r31.u8);
	// stb r31,1423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1423, ctx.r31.u8);
	// stb r31,1424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1424, ctx.r31.u8);
	// stb r31,1425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1425, ctx.r31.u8);
	// stb r24,1426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1426, ctx.r24.u8);
	// stb r25,1427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1427, ctx.r25.u8);
	// stb r31,1428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1428, ctx.r31.u8);
	// stb r31,1429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1429, ctx.r31.u8);
	// stb r31,1430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1430, ctx.r31.u8);
	// stb r31,1431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1431, ctx.r31.u8);
	// stb r31,1432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1432, ctx.r31.u8);
	// stb r31,1433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1433, ctx.r31.u8);
	// stb r9,1434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1434, ctx.r9.u8);
	// stb r10,1435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1435, ctx.r10.u8);
	// stb r31,1436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1436, ctx.r31.u8);
	// stb r31,1437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1437, ctx.r31.u8);
	// stb r31,1438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1438, ctx.r31.u8);
	// stb r31,1439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1439, ctx.r31.u8);
	// stb r31,1440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1440, ctx.r31.u8);
	// stb r31,1441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1441, ctx.r31.u8);
	// stb r31,1442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1442, ctx.r31.u8);
	// stb r11,1443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1443, ctx.r11.u8);
	// stb r31,1444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1444, ctx.r31.u8);
	// stb r31,1445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1445, ctx.r31.u8);
	// stb r31,1446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1446, ctx.r31.u8);
	// stb r31,1447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1447, ctx.r31.u8);
	// stb r7,1448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1448, ctx.r7.u8);
	// stb r14,1449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1449, ctx.r14.u8);
	// stb r31,1450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1450, ctx.r31.u8);
	// stb r31,1451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1451, ctx.r31.u8);
	// stb r31,1452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1452, ctx.r31.u8);
	// stb r31,1453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1453, ctx.r31.u8);
	// stb r26,1454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1454, ctx.r26.u8);
	// stb r27,1455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1455, ctx.r27.u8);
	// stb r31,1456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1456, ctx.r31.u8);
	// stb r31,1457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1457, ctx.r31.u8);
	// stb r31,1458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1458, ctx.r31.u8);
	// stb r31,1459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1459, ctx.r31.u8);
	// stb r31,1460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1460, ctx.r31.u8);
	// stb r31,1461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1461, ctx.r31.u8);
	// stb r9,1462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1462, ctx.r9.u8);
	// stb r10,1463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1463, ctx.r10.u8);
	// stb r31,1464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1464, ctx.r31.u8);
	// stb r31,1465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1465, ctx.r31.u8);
	// stb r31,1466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1466, ctx.r31.u8);
	// stb r31,1467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1467, ctx.r31.u8);
	// stb r31,1468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1468, ctx.r31.u8);
	// stb r31,1469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1469, ctx.r31.u8);
	// stb r31,1470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1470, ctx.r31.u8);
	// stb r11,1471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1471, ctx.r11.u8);
	// stb r31,1472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1472, ctx.r31.u8);
	// stb r31,1473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1473, ctx.r31.u8);
	// stb r31,1474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1474, ctx.r31.u8);
	// stb r16,1533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1533, ctx.r16.u8);
	// li r14,176
	ctx.r14.s64 = 176;
	// li r16,122
	ctx.r16.s64 = 122;
	// stb r31,1475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1475, ctx.r31.u8);
	// stb r8,1476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1476, ctx.r8.u8);
	// stb r31,1478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1478, ctx.r31.u8);
	// stb r31,1479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1479, ctx.r31.u8);
	// stb r14,1477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1477, ctx.r14.u8);
	// stb r31,1480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1480, ctx.r31.u8);
	// stb r31,1481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1481, ctx.r31.u8);
	// stb r28,1482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1482, ctx.r28.u8);
	// stb r29,1483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1483, ctx.r29.u8);
	// stb r31,1484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1484, ctx.r31.u8);
	// stb r31,1485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1485, ctx.r31.u8);
	// stb r31,1486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1486, ctx.r31.u8);
	// stb r31,1487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1487, ctx.r31.u8);
	// stb r31,1488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1488, ctx.r31.u8);
	// stb r31,1489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1489, ctx.r31.u8);
	// stb r9,1490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1490, ctx.r9.u8);
	// stb r10,1491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1491, ctx.r10.u8);
	// stb r31,1492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1492, ctx.r31.u8);
	// stb r31,1493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1493, ctx.r31.u8);
	// stb r31,1494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1494, ctx.r31.u8);
	// stb r31,1495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1495, ctx.r31.u8);
	// stb r31,1496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1496, ctx.r31.u8);
	// stb r31,1497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1497, ctx.r31.u8);
	// stb r31,1498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1498, ctx.r31.u8);
	// stb r11,1499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1499, ctx.r11.u8);
	// stb r31,1500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1500, ctx.r31.u8);
	// stb r31,1501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1501, ctx.r31.u8);
	// stb r31,1502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1502, ctx.r31.u8);
	// stb r31,1503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1503, ctx.r31.u8);
	// stb r7,1504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1504, ctx.r7.u8);
	// stb r15,1505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1505, ctx.r15.u8);
	// stb r31,1506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1506, ctx.r31.u8);
	// stb r31,1507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1507, ctx.r31.u8);
	// stb r31,1508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1508, ctx.r31.u8);
	// stb r31,1509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1509, ctx.r31.u8);
	// stb r3,1510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1510, ctx.r3.u8);
	// stb r4,1511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1511, ctx.r4.u8);
	// stb r31,1512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1512, ctx.r31.u8);
	// stb r31,1513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1513, ctx.r31.u8);
	// stb r31,1514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1514, ctx.r31.u8);
	// stb r31,1515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1515, ctx.r31.u8);
	// stb r31,1516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1516, ctx.r31.u8);
	// stb r31,1517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1517, ctx.r31.u8);
	// stb r9,1518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1518, ctx.r9.u8);
	// stb r10,1519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1519, ctx.r10.u8);
	// stb r31,1520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1520, ctx.r31.u8);
	// stb r31,1521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1521, ctx.r31.u8);
	// stb r31,1522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1522, ctx.r31.u8);
	// stb r31,1523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1523, ctx.r31.u8);
	// stb r31,1524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1524, ctx.r31.u8);
	// stb r31,1525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1525, ctx.r31.u8);
	// stb r31,1526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1526, ctx.r31.u8);
	// stb r11,1527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1527, ctx.r11.u8);
	// stb r31,1528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1528, ctx.r31.u8);
	// stb r31,1529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1529, ctx.r31.u8);
	// stb r31,1530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1530, ctx.r31.u8);
	// stb r31,1531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1531, ctx.r31.u8);
	// stb r7,1532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1532, ctx.r7.u8);
	// stb r31,1534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1534, ctx.r31.u8);
	// stb r31,1535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1535, ctx.r31.u8);
	// stb r31,1536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1536, ctx.r31.u8);
	// stb r31,1537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1537, ctx.r31.u8);
	// stb r6,1538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1538, ctx.r6.u8);
	// stb r30,1539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1539, ctx.r30.u8);
	// stb r31,1540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1540, ctx.r31.u8);
	// stb r31,1541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1541, ctx.r31.u8);
	// stb r31,1542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1542, ctx.r31.u8);
	// stb r31,1543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1543, ctx.r31.u8);
	// stb r31,1544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1544, ctx.r31.u8);
	// stb r31,1545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1545, ctx.r31.u8);
	// stb r19,1546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1546, ctx.r19.u8);
	// stb r16,1547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1547, ctx.r16.u8);
	// stb r31,1548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1548, ctx.r31.u8);
	// stb r31,1549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1549, ctx.r31.u8);
	// stb r31,1550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1550, ctx.r31.u8);
	// stb r31,1551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1551, ctx.r31.u8);
	// stb r31,1552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1552, ctx.r31.u8);
	// stb r31,1553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1553, ctx.r31.u8);
	// li r16,108
	ctx.r16.s64 = 108;
	// stb r21,1554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1554, ctx.r21.u8);
	// li r15,3
	ctx.r15.s64 = 3;
	// stb r20,1555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1555, ctx.r20.u8);
	// stb r31,1556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1556, ctx.r31.u8);
	// stb r31,1557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1557, ctx.r31.u8);
	// stb r31,1558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1558, ctx.r31.u8);
	// stb r16,1563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1563, ctx.r16.u8);
	// li r16,100
	ctx.r16.s64 = 100;
	// stb r31,1559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1559, ctx.r31.u8);
	// stb r31,1560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1560, ctx.r31.u8);
	// stb r31,1561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1561, ctx.r31.u8);
	// stb r22,1562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1562, ctx.r22.u8);
	// stb r31,1564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1564, ctx.r31.u8);
	// stb r31,1565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1565, ctx.r31.u8);
	// stb r31,1566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1566, ctx.r31.u8);
	// stb r31,1567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1567, ctx.r31.u8);
	// stb r31,1568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1568, ctx.r31.u8);
	// stb r31,1569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1569, ctx.r31.u8);
	// stb r31,1570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1570, ctx.r31.u8);
	// stb r15,1571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1571, ctx.r15.u8);
	// stb r31,1572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1572, ctx.r31.u8);
	// stb r31,1573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1573, ctx.r31.u8);
	// stb r24,1574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1574, ctx.r24.u8);
	// stb r25,1575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1575, ctx.r25.u8);
	// stb r31,1576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1576, ctx.r31.u8);
	// stb r31,1577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1577, ctx.r31.u8);
	// stb r31,1578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1578, ctx.r31.u8);
	// stb r31,1579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1579, ctx.r31.u8);
	// stb r31,1580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1580, ctx.r31.u8);
	// stb r31,1581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1581, ctx.r31.u8);
	// stb r9,1582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1582, ctx.r9.u8);
	// stb r10,1583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1583, ctx.r10.u8);
	// stb r31,1584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1584, ctx.r31.u8);
	// stb r31,1585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1585, ctx.r31.u8);
	// stb r31,1586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1586, ctx.r31.u8);
	// stb r31,1587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1587, ctx.r31.u8);
	// stb r31,1588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1588, ctx.r31.u8);
	// stb r31,1589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1589, ctx.r31.u8);
	// stb r31,1590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1590, ctx.r31.u8);
	// stb r11,1591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1591, ctx.r11.u8);
	// stb r31,1592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1592, ctx.r31.u8);
	// stb r31,1593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1593, ctx.r31.u8);
	// stb r31,1594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1594, ctx.r31.u8);
	// stb r31,1595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1595, ctx.r31.u8);
	// stb r8,1596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1596, ctx.r8.u8);
	// stb r16,1597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1597, ctx.r16.u8);
	// stb r31,1598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1598, ctx.r31.u8);
	// stb r31,1599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1599, ctx.r31.u8);
	// stb r31,1600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1600, ctx.r31.u8);
	// stb r31,1601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1601, ctx.r31.u8);
	// stb r26,1602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1602, ctx.r26.u8);
	// stb r27,1603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1603, ctx.r27.u8);
	// stb r31,1604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1604, ctx.r31.u8);
	// stb r31,1605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1605, ctx.r31.u8);
	// stb r31,1606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1606, ctx.r31.u8);
	// stb r31,1607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1607, ctx.r31.u8);
	// stb r31,1608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1608, ctx.r31.u8);
	// stb r31,1609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1609, ctx.r31.u8);
	// stb r9,1610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1610, ctx.r9.u8);
	// stb r10,1611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1611, ctx.r10.u8);
	// stb r31,1612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1612, ctx.r31.u8);
	// stb r31,1613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1613, ctx.r31.u8);
	// stb r31,1614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1614, ctx.r31.u8);
	// stb r31,1615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1615, ctx.r31.u8);
	// stb r31,1616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1616, ctx.r31.u8);
	// stb r31,1617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1617, ctx.r31.u8);
	// stb r31,1618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1618, ctx.r31.u8);
	// stb r11,1619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1619, ctx.r11.u8);
	// stb r31,1620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1620, ctx.r31.u8);
	// stb r31,1621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1621, ctx.r31.u8);
	// stb r31,1622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1622, ctx.r31.u8);
	// stb r31,1623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1623, ctx.r31.u8);
	// stb r7,1624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1624, ctx.r7.u8);
	// stb r5,1625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1625, ctx.r5.u8);
	// stb r31,1626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1626, ctx.r31.u8);
	// stb r31,1627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1627, ctx.r31.u8);
	// stb r31,1628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1628, ctx.r31.u8);
	// stb r31,1629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1629, ctx.r31.u8);
	// stb r28,1630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1630, ctx.r28.u8);
	// stb r29,1631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1631, ctx.r29.u8);
	// stb r31,1632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1632, ctx.r31.u8);
	// stb r31,1633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1633, ctx.r31.u8);
	// stb r31,1634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1634, ctx.r31.u8);
	// stb r31,1635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1635, ctx.r31.u8);
	// stb r31,1636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1636, ctx.r31.u8);
	// stb r31,1637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1637, ctx.r31.u8);
	// stb r9,1638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1638, ctx.r9.u8);
	// stb r10,1639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1639, ctx.r10.u8);
	// stb r31,1640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1640, ctx.r31.u8);
	// stb r31,1641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1641, ctx.r31.u8);
	// stb r31,1642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1642, ctx.r31.u8);
	// stb r31,1643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1643, ctx.r31.u8);
	// stb r31,1644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1644, ctx.r31.u8);
	// stb r31,1645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1645, ctx.r31.u8);
	// stb r31,1646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1646, ctx.r31.u8);
	// stb r11,1647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1647, ctx.r11.u8);
	// stb r31,1648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1648, ctx.r31.u8);
	// stb r31,1649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1649, ctx.r31.u8);
	// stb r31,1650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1650, ctx.r31.u8);
	// stb r31,1651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1651, ctx.r31.u8);
	// stb r8,1652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1652, ctx.r8.u8);
	// stb r18,1653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1653, ctx.r18.u8);
	// stb r31,1654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1654, ctx.r31.u8);
	// stb r31,1655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1655, ctx.r31.u8);
	// stb r31,1656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1656, ctx.r31.u8);
	// stb r31,1657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1657, ctx.r31.u8);
	// stb r3,1658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1658, ctx.r3.u8);
	// stb r4,1659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1659, ctx.r4.u8);
	// stb r31,1660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1660, ctx.r31.u8);
	// stb r31,1661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1661, ctx.r31.u8);
	// stb r31,1662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1662, ctx.r31.u8);
	// stb r31,1663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1663, ctx.r31.u8);
	// stb r31,1664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1664, ctx.r31.u8);
	// stb r31,1665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1665, ctx.r31.u8);
	// stb r9,1666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1666, ctx.r9.u8);
	// stb r10,1667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1667, ctx.r10.u8);
	// stb r31,1668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1668, ctx.r31.u8);
	// stb r31,1669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1669, ctx.r31.u8);
	// stb r31,1670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1670, ctx.r31.u8);
	// stb r31,1671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1671, ctx.r31.u8);
	// stb r31,1672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1672, ctx.r31.u8);
	// stb r31,1673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1673, ctx.r31.u8);
	// stb r31,1674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1674, ctx.r31.u8);
	// stb r11,1675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1675, ctx.r11.u8);
	// stb r31,1676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1676, ctx.r31.u8);
	// stb r31,1677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1677, ctx.r31.u8);
	// stb r31,1678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1678, ctx.r31.u8);
	// stb r31,1679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1679, ctx.r31.u8);
	// stb r7,1680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1680, ctx.r7.u8);
	// stb r31,1681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1681, ctx.r31.u8);
	// stb r31,1682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1682, ctx.r31.u8);
	// stb r31,1683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1683, ctx.r31.u8);
	// stb r31,1684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1684, ctx.r31.u8);
	// stb r31,1685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1685, ctx.r31.u8);
	// stb r6,1686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1686, ctx.r6.u8);
	// stb r30,1687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1687, ctx.r30.u8);
	// stb r31,1688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1688, ctx.r31.u8);
	// stb r31,1689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1689, ctx.r31.u8);
	// stb r31,1690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1690, ctx.r31.u8);
	// stb r31,1691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1691, ctx.r31.u8);
	// stb r31,1692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1692, ctx.r31.u8);
	// stb r31,1693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1693, ctx.r31.u8);
	// stb r24,1694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1694, ctx.r24.u8);
	// stb r25,1695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1695, ctx.r25.u8);
	// stb r31,1696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1696, ctx.r31.u8);
	// stb r31,1697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1697, ctx.r31.u8);
	// stb r31,1698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1698, ctx.r31.u8);
	// stb r31,1699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1699, ctx.r31.u8);
	// stb r31,1700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1700, ctx.r31.u8);
	// stb r31,1701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1701, ctx.r31.u8);
	// stb r9,1702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1702, ctx.r9.u8);
	// stb r10,1703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1703, ctx.r10.u8);
	// stb r31,1704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1704, ctx.r31.u8);
	// stb r31,1705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1705, ctx.r31.u8);
	// stb r31,1706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1706, ctx.r31.u8);
	// stb r31,1707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1707, ctx.r31.u8);
	// stb r31,1708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1708, ctx.r31.u8);
	// stb r31,1709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1709, ctx.r31.u8);
	// stb r31,1710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1710, ctx.r31.u8);
	// stb r11,1711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1711, ctx.r11.u8);
	// stb r31,1712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1712, ctx.r31.u8);
	// stb r31,1713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1713, ctx.r31.u8);
	// stb r31,1714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1714, ctx.r31.u8);
	// stb r31,1715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1715, ctx.r31.u8);
	// stb r8,1716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1716, ctx.r8.u8);
	// stb r16,1717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1717, ctx.r16.u8);
	// stb r31,1718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1718, ctx.r31.u8);
	// stb r31,1719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1719, ctx.r31.u8);
	// stb r31,1720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1720, ctx.r31.u8);
	// stb r31,1721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1721, ctx.r31.u8);
	// stb r26,1722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1722, ctx.r26.u8);
	// stb r27,1723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1723, ctx.r27.u8);
	// stb r31,1724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1724, ctx.r31.u8);
	// stb r31,1725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1725, ctx.r31.u8);
	// stb r31,1726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1726, ctx.r31.u8);
	// stb r31,1727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1727, ctx.r31.u8);
	// stb r31,1728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1728, ctx.r31.u8);
	// stb r31,1729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1729, ctx.r31.u8);
	// stb r9,1730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1730, ctx.r9.u8);
	// stb r10,1731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1731, ctx.r10.u8);
	// stb r31,1732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1732, ctx.r31.u8);
	// stb r31,1733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1733, ctx.r31.u8);
	// stb r31,1734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1734, ctx.r31.u8);
	// stb r31,1735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1735, ctx.r31.u8);
	// stb r31,1736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1736, ctx.r31.u8);
	// stb r31,1737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1737, ctx.r31.u8);
	// stb r31,1738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1738, ctx.r31.u8);
	// stb r11,1739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1739, ctx.r11.u8);
	// stb r31,1740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1740, ctx.r31.u8);
	// stb r31,1741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1741, ctx.r31.u8);
	// stb r31,1742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1742, ctx.r31.u8);
	// stb r31,1743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1743, ctx.r31.u8);
	// stb r8,1744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1744, ctx.r8.u8);
	// stb r19,1745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1745, ctx.r19.u8);
	// stb r31,1746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1746, ctx.r31.u8);
	// stb r31,1747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1747, ctx.r31.u8);
	// stb r31,1748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1748, ctx.r31.u8);
	// stb r31,1749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1749, ctx.r31.u8);
	// stb r28,1750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1750, ctx.r28.u8);
	// stb r29,1751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1751, ctx.r29.u8);
	// stb r31,1752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1752, ctx.r31.u8);
	// stb r31,1753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1753, ctx.r31.u8);
	// stb r31,1754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1754, ctx.r31.u8);
	// stb r31,1755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1755, ctx.r31.u8);
	// stb r31,1756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1756, ctx.r31.u8);
	// stb r31,1757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1757, ctx.r31.u8);
	// stb r9,1758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1758, ctx.r9.u8);
	// stb r10,1759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1759, ctx.r10.u8);
	// stb r31,1760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1760, ctx.r31.u8);
	// stb r31,1761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1761, ctx.r31.u8);
	// stb r31,1762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1762, ctx.r31.u8);
	// stb r31,1763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1763, ctx.r31.u8);
	// stb r31,1764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1764, ctx.r31.u8);
	// stb r31,1765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1765, ctx.r31.u8);
	// stb r31,1766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1766, ctx.r31.u8);
	// stb r11,1767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1767, ctx.r11.u8);
	// stb r31,1768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1768, ctx.r31.u8);
	// stb r31,1769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1769, ctx.r31.u8);
	// stb r31,1770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1770, ctx.r31.u8);
	// stb r31,1771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1771, ctx.r31.u8);
	// stb r8,1772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1772, ctx.r8.u8);
	// stb r18,1773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1773, ctx.r18.u8);
	// stb r31,1774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1774, ctx.r31.u8);
	// stb r31,1775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1775, ctx.r31.u8);
	// stb r31,1776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1776, ctx.r31.u8);
	// stb r31,1777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1777, ctx.r31.u8);
	// stb r3,1778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1778, ctx.r3.u8);
	// stb r4,1779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1779, ctx.r4.u8);
	// stb r31,1780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1780, ctx.r31.u8);
	// stb r31,1781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1781, ctx.r31.u8);
	// stb r31,1782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1782, ctx.r31.u8);
	// stb r31,1783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1783, ctx.r31.u8);
	// stb r31,1784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1784, ctx.r31.u8);
	// stb r31,1785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1785, ctx.r31.u8);
	// stb r9,1786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1786, ctx.r9.u8);
	// stb r10,1787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1787, ctx.r10.u8);
	// stb r31,1788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1788, ctx.r31.u8);
	// stb r31,1789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1789, ctx.r31.u8);
	// stb r31,1790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1790, ctx.r31.u8);
	// stb r31,1791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1791, ctx.r31.u8);
	// stb r31,1792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1792, ctx.r31.u8);
	// stb r31,1793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1793, ctx.r31.u8);
	// li r5,192
	ctx.r5.s64 = 192;
	// stb r31,1794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1794, ctx.r31.u8);
	// stb r11,1795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1795, ctx.r11.u8);
	// stb r31,1796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1796, ctx.r31.u8);
	// stb r31,1797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1797, ctx.r31.u8);
	// stb r31,1798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1798, ctx.r31.u8);
	// stb r31,1799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1799, ctx.r31.u8);
	// stb r7,1800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1800, ctx.r7.u8);
	// stb r31,1801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1801, ctx.r31.u8);
	// stb r31,1802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1802, ctx.r31.u8);
	// stb r31,1803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1803, ctx.r31.u8);
	// stb r31,1804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1804, ctx.r31.u8);
	// stb r31,1805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1805, ctx.r31.u8);
	// stb r6,1806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1806, ctx.r6.u8);
	// stb r30,1807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1807, ctx.r30.u8);
	// stb r31,1808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1808, ctx.r31.u8);
	// stb r31,1809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1809, ctx.r31.u8);
	// stb r31,1810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1810, ctx.r31.u8);
	// stb r31,1811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1811, ctx.r31.u8);
	// stb r31,1812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1812, ctx.r31.u8);
	// stb r31,1813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1813, ctx.r31.u8);
	// stb r24,1814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1814, ctx.r24.u8);
	// stb r25,1815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1815, ctx.r25.u8);
	// stb r31,1816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1816, ctx.r31.u8);
	// stb r31,1817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1817, ctx.r31.u8);
	// stb r31,1818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1818, ctx.r31.u8);
	// stb r31,1819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1819, ctx.r31.u8);
	// stb r31,1820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1820, ctx.r31.u8);
	// stb r31,1821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1821, ctx.r31.u8);
	// stb r9,1822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1822, ctx.r9.u8);
	// stb r10,1823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1823, ctx.r10.u8);
	// stb r31,1824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1824, ctx.r31.u8);
	// stb r31,1825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1825, ctx.r31.u8);
	// stb r31,1826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1826, ctx.r31.u8);
	// stb r31,1827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1827, ctx.r31.u8);
	// stb r31,1828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1828, ctx.r31.u8);
	// stb r31,1829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1829, ctx.r31.u8);
	// stb r31,1830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1830, ctx.r31.u8);
	// stb r11,1831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1831, ctx.r11.u8);
	// stb r31,1832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1832, ctx.r31.u8);
	// stb r31,1833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1833, ctx.r31.u8);
	// stb r31,1834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1834, ctx.r31.u8);
	// stb r31,1835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1835, ctx.r31.u8);
	// stb r8,1836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1836, ctx.r8.u8);
	// stb r16,1837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1837, ctx.r16.u8);
	// stb r31,1838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1838, ctx.r31.u8);
	// stb r31,1839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1839, ctx.r31.u8);
	// stb r31,1840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1840, ctx.r31.u8);
	// stb r31,1841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1841, ctx.r31.u8);
	// stb r26,1842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1842, ctx.r26.u8);
	// stb r27,1843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1843, ctx.r27.u8);
	// stb r31,1844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1844, ctx.r31.u8);
	// stb r31,1845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1845, ctx.r31.u8);
	// stb r31,1846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1846, ctx.r31.u8);
	// stb r31,1847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1847, ctx.r31.u8);
	// stb r31,1848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1848, ctx.r31.u8);
	// stb r31,1849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1849, ctx.r31.u8);
	// stb r9,1850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1850, ctx.r9.u8);
	// stb r10,1851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1851, ctx.r10.u8);
	// stb r31,1852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1852, ctx.r31.u8);
	// stb r31,1853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1853, ctx.r31.u8);
	// stb r31,1854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1854, ctx.r31.u8);
	// stb r31,1855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1855, ctx.r31.u8);
	// stb r31,1856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1856, ctx.r31.u8);
	// stb r31,1857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1857, ctx.r31.u8);
	// stb r31,1858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1858, ctx.r31.u8);
	// stb r11,1859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1859, ctx.r11.u8);
	// stb r31,1860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1860, ctx.r31.u8);
	// stb r31,1861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1861, ctx.r31.u8);
	// stb r31,1862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1862, ctx.r31.u8);
	// stb r31,1863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1863, ctx.r31.u8);
	// stb r8,1864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1864, ctx.r8.u8);
	// stb r5,1865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1865, ctx.r5.u8);
	// stb r31,1866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1866, ctx.r31.u8);
	// stb r31,1867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1867, ctx.r31.u8);
	// stb r31,1868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1868, ctx.r31.u8);
	// stb r31,1869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1869, ctx.r31.u8);
	// stb r28,1870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1870, ctx.r28.u8);
	// stb r29,1871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1871, ctx.r29.u8);
	// stb r31,1872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1872, ctx.r31.u8);
	// stb r31,1873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1873, ctx.r31.u8);
	// stb r11,1887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1887, ctx.r11.u8);
	// stb r11,1915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1915, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,1874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1874, ctx.r31.u8);
	// stb r31,1875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1875, ctx.r31.u8);
	// stb r31,1876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1876, ctx.r31.u8);
	// stb r31,1877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1877, ctx.r31.u8);
	// stb r11,1934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1934, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r9,1878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1878, ctx.r9.u8);
	// stb r10,1879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1879, ctx.r10.u8);
	// stb r31,1880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1880, ctx.r31.u8);
	// stb r31,1881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1881, ctx.r31.u8);
	// stb r11,1935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1935, ctx.r11.u8);
	// li r11,7
	ctx.r11.s64 = 7;
	// stb r31,1882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1882, ctx.r31.u8);
	// stb r31,1883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1883, ctx.r31.u8);
	// stb r31,1884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1884, ctx.r31.u8);
	// stb r31,1885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1885, ctx.r31.u8);
	// stb r31,1886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1886, ctx.r31.u8);
	// stb r31,1888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1888, ctx.r31.u8);
	// stb r31,1889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1889, ctx.r31.u8);
	// stb r31,1890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1890, ctx.r31.u8);
	// stb r31,1891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1891, ctx.r31.u8);
	// stb r8,1892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1892, ctx.r8.u8);
	// stb r18,1893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1893, ctx.r18.u8);
	// stb r31,1894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1894, ctx.r31.u8);
	// stb r31,1895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1895, ctx.r31.u8);
	// stb r31,1896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1896, ctx.r31.u8);
	// stb r31,1897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1897, ctx.r31.u8);
	// stb r3,1898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1898, ctx.r3.u8);
	// stb r4,1899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1899, ctx.r4.u8);
	// stb r31,1900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1900, ctx.r31.u8);
	// stb r31,1901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1901, ctx.r31.u8);
	// stb r31,1902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1902, ctx.r31.u8);
	// stb r31,1903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1903, ctx.r31.u8);
	// stb r31,1904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1904, ctx.r31.u8);
	// stb r31,1905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1905, ctx.r31.u8);
	// stb r9,1906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1906, ctx.r9.u8);
	// stb r10,1907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1907, ctx.r10.u8);
	// stb r31,1908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1908, ctx.r31.u8);
	// stb r31,1909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1909, ctx.r31.u8);
	// stb r31,1910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1910, ctx.r31.u8);
	// stb r31,1911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1911, ctx.r31.u8);
	// stb r31,1912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1912, ctx.r31.u8);
	// stb r31,1913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1913, ctx.r31.u8);
	// stb r31,1914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1914, ctx.r31.u8);
	// stb r31,1916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1916, ctx.r31.u8);
	// stb r31,1917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1917, ctx.r31.u8);
	// stb r31,1918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1918, ctx.r31.u8);
	// stb r31,1919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1919, ctx.r31.u8);
	// stb r7,1920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1920, ctx.r7.u8);
	// stb r31,1921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1921, ctx.r31.u8);
	// stb r31,1922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1922, ctx.r31.u8);
	// stb r31,1923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1923, ctx.r31.u8);
	// stb r31,1924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1924, ctx.r31.u8);
	// stb r31,1925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1925, ctx.r31.u8);
	// stb r6,1926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1926, ctx.r6.u8);
	// stb r30,1927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1927, ctx.r30.u8);
	// stb r31,1928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1928, ctx.r31.u8);
	// stb r31,1929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1929, ctx.r31.u8);
	// stb r31,1930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1930, ctx.r31.u8);
	// stb r31,1931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1931, ctx.r31.u8);
	// stb r31,1932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1932, ctx.r31.u8);
	// stb r31,1933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1933, ctx.r31.u8);
	// stb r31,1936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1936, ctx.r31.u8);
	// stb r31,1937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1937, ctx.r31.u8);
	// stb r31,1938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1938, ctx.r31.u8);
	// stb r31,1939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1939, ctx.r31.u8);
	// stb r31,1940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1940, ctx.r31.u8);
	// stb r31,1941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1941, ctx.r31.u8);
	// stb r21,1942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1942, ctx.r21.u8);
	// stb r20,1943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1943, ctx.r20.u8);
	// stb r31,1944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1944, ctx.r31.u8);
	// stb r31,1945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1945, ctx.r31.u8);
	// stb r31,1946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1946, ctx.r31.u8);
	// stb r31,1947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1947, ctx.r31.u8);
	// stb r31,1948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1948, ctx.r31.u8);
	// stb r31,1949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1949, ctx.r31.u8);
	// stb r31,1950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1950, ctx.r31.u8);
	// stb r11,1951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1951, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// ld r23,2064(r1)
	ctx.r23.u64 = PPC_LOAD_U64(ctx.r1.u32 + 2064);
	// li r9,12
	ctx.r9.s64 = 12;
	// stb r31,1952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1952, ctx.r31.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r31,1953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1953, ctx.r31.u8);
	// stb r31,1954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1954, ctx.r31.u8);
	// addi r29,r23,24
	ctx.r29.s64 = ctx.r23.s64 + 24;
	// stb r31,1955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1955, ctx.r31.u8);
	// li r5,1979
	ctx.r5.s64 = 1979;
	// stb r11,1961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1961, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r9,1962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1962, ctx.r9.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,1993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1993, ctx.r9.u8);
	// li r9,213
	ctx.r9.s64 = 213;
	// stb r31,1956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1956, ctx.r31.u8);
	// stb r31,1957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1957, ctx.r31.u8);
	// stb r11,1966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1966, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,1958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1958, ctx.r31.u8);
	// stb r15,1959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1959, ctx.r15.u8);
	// stb r22,1960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1960, ctx.r22.u8);
	// stb r31,1963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1963, ctx.r31.u8);
	// stb r11,1974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1974, ctx.r11.u8);
	// stb r11,2002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2002, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,1964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1964, ctx.r31.u8);
	// stb r17,1965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1965, ctx.r17.u8);
	// stb r31,1967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1967, ctx.r31.u8);
	// stb r31,1968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1968, ctx.r31.u8);
	// stb r31,1969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1969, ctx.r31.u8);
	// stb r31,1970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1970, ctx.r31.u8);
	// stb r31,1971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1971, ctx.r31.u8);
	// stb r31,1972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1972, ctx.r31.u8);
	// stb r10,1973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1973, ctx.r10.u8);
	// stb r31,1975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1975, ctx.r31.u8);
	// stb r31,1976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1976, ctx.r31.u8);
	// stb r31,1977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1977, ctx.r31.u8);
	// stb r31,1978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1978, ctx.r31.u8);
	// stb r31,1979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1979, ctx.r31.u8);
	// stb r31,1980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1980, ctx.r31.u8);
	// stb r31,1981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1981, ctx.r31.u8);
	// stb r31,1982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1982, ctx.r31.u8);
	// stb r31,1983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1983, ctx.r31.u8);
	// stb r31,1984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1984, ctx.r31.u8);
	// stb r31,1985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1985, ctx.r31.u8);
	// stb r31,1986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1986, ctx.r31.u8);
	// stb r31,1987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1987, ctx.r31.u8);
	// stb r31,1988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1988, ctx.r31.u8);
	// stb r31,1989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1989, ctx.r31.u8);
	// stb r22,1990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1990, ctx.r22.u8);
	// stb r31,1991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1991, ctx.r31.u8);
	// stb r31,1992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1992, ctx.r31.u8);
	// stb r9,1994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1994, ctx.r9.u8);
	// stb r31,1995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1995, ctx.r31.u8);
	// stb r31,1996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1996, ctx.r31.u8);
	// stb r31,1997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1997, ctx.r31.u8);
	// stb r31,1998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1998, ctx.r31.u8);
	// stb r31,1999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1999, ctx.r31.u8);
	// stb r31,2000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2000, ctx.r31.u8);
	// stb r10,2001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2001, ctx.r10.u8);
	// stb r31,2003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2003, ctx.r31.u8);
	// stb r31,2004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2004, ctx.r31.u8);
	// stb r31,2005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2005, ctx.r31.u8);
	// stb r31,2006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2006, ctx.r31.u8);
	// stb r31,2007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2007, ctx.r31.u8);
	// stb r31,2008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2008, ctx.r31.u8);
	// stb r31,2009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2009, ctx.r31.u8);
	// stb r31,2010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2010, ctx.r31.u8);
	// stb r31,2011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2011, ctx.r31.u8);
	// stb r31,2012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2012, ctx.r31.u8);
	// stb r31,2013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2013, ctx.r31.u8);
	// stb r31,2014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2014, ctx.r31.u8);
	// stb r31,2015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2015, ctx.r31.u8);
	// stb r31,2016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2016, ctx.r31.u8);
	// stb r31,2017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2017, ctx.r31.u8);
	// stb r31,2018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2018, ctx.r31.u8);
	// stb r31,2019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2019, ctx.r31.u8);
	// stb r31,2020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2020, ctx.r31.u8);
	// stb r11,2021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2021, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,2023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2023, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,2024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2024, ctx.r31.u8);
	// stb r31,2025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2025, ctx.r31.u8);
	// stb r31,2026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2026, ctx.r31.u8);
	// stb r31,2027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2027, ctx.r31.u8);
	// stb r11,2022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2022, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,2028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2028, ctx.r31.u8);
	// stb r31,2031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2031, ctx.r31.u8);
	// stb r31,2032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2032, ctx.r31.u8);
	// stb r31,2033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2033, ctx.r31.u8);
	// stb r11,2029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2029, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,2034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2034, ctx.r31.u8);
	// stb r31,2035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2035, ctx.r31.u8);
	// stb r31,2036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2036, ctx.r31.u8);
	// stb r31,2037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2037, ctx.r31.u8);
	// stb r11,2030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2030, ctx.r11.u8);
	// li r11,202
	ctx.r11.s64 = 202;
	// stb r21,2038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2038, ctx.r21.u8);
	// stb r31,2039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2039, ctx.r31.u8);
	// stb r31,2040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2040, ctx.r31.u8);
	// stb r31,2041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2041, ctx.r31.u8);
	// stb r31,2042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2042, ctx.r31.u8);
	// stb r31,2043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2043, ctx.r31.u8);
	// stb r31,2044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2044, ctx.r31.u8);
	// stb r6,2045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2045, ctx.r6.u8);
	// stb r11,2046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2046, ctx.r11.u8);
	// stb r31,2047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2047, ctx.r31.u8);
	// stb r31,2048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2048, ctx.r31.u8);
	// stb r31,2049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2049, ctx.r31.u8);
	// stb r31,2050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2050, ctx.r31.u8);
	// stb r31,2051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2051, ctx.r31.u8);
	// stb r31,2052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2052, ctx.r31.u8);
	// stb r6,2053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2053, ctx.r6.u8);
	// stb r30,2054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2054, ctx.r30.u8);
	// stb r31,2055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2055, ctx.r31.u8);
	// stb r31,2056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2056, ctx.r31.u8);
	// stb r31,2057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2057, ctx.r31.u8);
	// stb r31,2058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2058, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BDBC4;
	sub_82B06418(ctx, base);
	// mr r3,r23
	ctx.r3.u64 = ctx.r23.u64;
	// stw r29,20(r23)
	PPC_STORE_U32(ctx.r23.u32 + 20, ctx.r29.u32);
	// addi r1,r1,2224
	ctx.r1.s64 = ctx.r1.s64 + 2224;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BDBD8"))) PPC_WEAK_FUNC(sub_824BDBD8);
PPC_FUNC_IMPL(__imp__sub_824BDBD8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BDBE0;
	__savegprlr_29(ctx, base);
	// stwu r1,-192(r1)
	ea = -192 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,79
	ctx.r9.s64 = 79;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31212
	ctx.r4.s64 = ctx.r10.s64 + 31212;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BDC1C;
	sub_822E0818(ctx, base);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// stb r8,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r8.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r9,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r9.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r8,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r8.u8);
	// li r8,2
	ctx.r8.s64 = 2;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,143
	ctx.r11.s64 = 143;
	// stb r8,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r8.u8);
	// li r8,6
	ctx.r8.s64 = 6;
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// li r8,9
	ctx.r8.s64 = 9;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// li r8,13
	ctx.r8.s64 = 13;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r8,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r8.u8);
	// stb r9,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r9.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// li r5,79
	ctx.r5.s64 = 79;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// li r11,118
	ctx.r11.s64 = 118;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r11,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BDDC0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,192
	ctx.r1.s64 = ctx.r1.s64 + 192;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BDDD0"))) PPC_WEAK_FUNC(sub_824BDDD0);
PPC_FUNC_IMPL(__imp__sub_824BDDD0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BDDD8;
	__savegprlr_29(ctx, base);
	// stwu r1,-368(r1)
	ea = -368 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,253
	ctx.r9.s64 = 253;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31248
	ctx.r4.s64 = ctx.r10.s64 + 31248;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BDE14;
	sub_822E0818(ctx, base);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r8,148
	ctx.r8.s64 = 148;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r9,70
	ctx.r9.s64 = 70;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,35
	ctx.r11.s64 = 35;
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// li r8,178
	ctx.r8.s64 = 178;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// stb r8,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r8.u8);
	// li r8,67
	ctx.r8.s64 = 67;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,45
	ctx.r11.s64 = 45;
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// li r8,228
	ctx.r8.s64 = 228;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r9,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r9.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r9,145
	ctx.r9.s64 = 145;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r5,116
	ctx.r5.s64 = 116;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r6,114
	ctx.r6.s64 = 114;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r11,171
	ctx.r11.s64 = 171;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r3,73
	ctx.r3.s64 = 73;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r9,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r9.u8);
	// li r9,89
	ctx.r9.s64 = 89;
	// stb r5,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r5.u8);
	// li r5,110
	ctx.r5.s64 = 110;
	// stb r6,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r6.u8);
	// li r7,12
	ctx.r7.s64 = 12;
	// stb r6,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r6.u8);
	// li r6,56
	ctx.r6.s64 = 56;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r5,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r5.u8);
	// li r5,101
	ctx.r5.s64 = 101;
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r3,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r3.u8);
	// stb r6,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r6.u8);
	// li r6,53
	ctx.r6.s64 = 53;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r9,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r9.u8);
	// li r9,80
	ctx.r9.s64 = 80;
	// stb r5,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r5.u8);
	// li r5,22
	ctx.r5.s64 = 22;
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r9,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r9.u8);
	// li r9,97
	ctx.r9.s64 = 97;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r8,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r8.u8);
	// stb r9,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r9.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r5,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r5.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r6,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r6.u8);
	// stb r9,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r9.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r11,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r11.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r11,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r11.u8);
	// stb r11,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r11.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// stb r11,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r11.u8);
	// stb r11,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r10,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r10.u8);
	// li r10,143
	ctx.r10.s64 = 143;
	// stb r5,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r5.u8);
	// li r5,55
	ctx.r5.s64 = 55;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r11,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r10,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r5,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r5.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r11,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r11.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r10,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r10.u8);
	// li r10,5
	ctx.r10.s64 = 5;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r11.u8);
	// li r11,16
	ctx.r11.s64 = 16;
	// stb r10,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r10.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r6,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r6.u8);
	// stb r9,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r9.u8);
	// stb r11,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r8,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r8.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r10,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r10.u8);
	// stb r7,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r7.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r7,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r7.u8);
	// stb r11,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r11.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r3,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r3.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// li r5,253
	ctx.r5.s64 = 253;
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r11,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r11,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r11,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r11,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r11,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r11,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r11.u8);
	// li r11,150
	ctx.r11.s64 = 150;
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r11,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r11,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r8,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r8.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r11,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r11.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BE2D8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,368
	ctx.r1.s64 = ctx.r1.s64 + 368;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BE2E8"))) PPC_WEAK_FUNC(sub_824BE2E8);
PPC_FUNC_IMPL(__imp__sub_824BE2E8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BE2F0;
	__savegprlr_29(ctx, base);
	// stwu r1,-256(r1)
	ea = -256 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,131
	ctx.r9.s64 = 131;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31284
	ctx.r4.s64 = ctx.r10.s64 + 31284;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BE32C;
	sub_822E0818(ctx, base);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,143
	ctx.r10.s64 = 143;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,84
	ctx.r11.s64 = 84;
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,7
	ctx.r10.s64 = 7;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// li r10,3
	ctx.r10.s64 = 3;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r8,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r8.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,6
	ctx.r10.s64 = 6;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,38
	ctx.r11.s64 = 38;
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r9.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r10,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r10.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r9,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r9.u8);
	// li r9,12
	ctx.r9.s64 = 12;
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r5,131
	ctx.r5.s64 = 131;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r9,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r9.u8);
	// li r9,213
	ctx.r9.s64 = 213;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r11,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r9,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r9.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r11,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r11.u8);
	// li r11,74
	ctx.r11.s64 = 74;
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r10,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r10.u8);
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// li r11,57
	ctx.r11.s64 = 57;
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r8,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r8.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BE5A8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,256
	ctx.r1.s64 = ctx.r1.s64 + 256;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BE5B8"))) PPC_WEAK_FUNC(sub_824BE5B8);
PPC_FUNC_IMPL(__imp__sub_824BE5B8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BE5C0;
	__savegprlr_29(ctx, base);
	// stwu r1,-368(r1)
	ea = -368 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,246
	ctx.r9.s64 = 246;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31320
	ctx.r4.s64 = ctx.r10.s64 + 31320;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BE5FC;
	sub_822E0818(ctx, base);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r4,70
	ctx.r4.s64 = 70;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r5,130
	ctx.r5.s64 = 130;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r6,122
	ctx.r6.s64 = 122;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,121
	ctx.r11.s64 = 121;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r4,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r4.u8);
	// stb r5,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r5.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,78
	ctx.r11.s64 = 78;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,140
	ctx.r11.s64 = 140;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,52
	ctx.r11.s64 = 52;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,115
	ctx.r11.s64 = 115;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r6,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r6.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,89
	ctx.r11.s64 = 89;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r11,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r3,37
	ctx.r3.s64 = 37;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r8,36
	ctx.r8.s64 = 36;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r7,143
	ctx.r7.s64 = 143;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r11,110
	ctx.r11.s64 = 110;
	// stb r3,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r3.u8);
	// li r3,38
	ctx.r3.s64 = 38;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r3,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r3.u8);
	// li r3,39
	ctx.r3.s64 = 39;
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// li r11,81
	ctx.r11.s64 = 81;
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// li r11,160
	ctx.r11.s64 = 160;
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// li r11,24
	ctx.r11.s64 = 24;
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// li r11,159
	ctx.r11.s64 = 159;
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r8,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r8.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r11,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r11.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// stb r11,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r11.u8);
	// stb r11,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r3,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r3.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r8,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r8.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r11,88
	ctx.r11.s64 = 88;
	// stb r9,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r9.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r11,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r11.u8);
	// li r11,172
	ctx.r11.s64 = 172;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r4,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r4.u8);
	// stb r5,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r5.u8);
	// stb r11,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r11,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r11.u8);
	// li r11,10
	ctx.r11.s64 = 10;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r11,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r6,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r6.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r11,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r11.u8);
	// li r11,13
	ctx.r11.s64 = 13;
	// stb r9,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r9.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r11,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r10,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r10.u8);
	// stb r11,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r7,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r7.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r11,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r11.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// li r11,213
	ctx.r11.s64 = 213;
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r10,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r10.u8);
	// stb r9,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r9.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r11,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r10,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r10.u8);
	// li r9,155
	ctx.r9.s64 = 155;
	// li r10,86
	ctx.r10.s64 = 86;
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// li r5,246
	ctx.r5.s64 = 246;
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r11,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r11,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r11,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r11,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r11.u8);
	// stb r11,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r11,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r9,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r9.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r10,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r10.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r11,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r11.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BEAAC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,368
	ctx.r1.s64 = ctx.r1.s64 + 368;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BEAC0"))) PPC_WEAK_FUNC(sub_824BEAC0);
PPC_FUNC_IMPL(__imp__sub_824BEAC0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e34
	ctx.lr = 0x824BEAC8;
	__savegprlr_15(ctx, base);
	// stwu r1,-976(r1)
	ea = -976 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,739
	ctx.r9.s64 = 739;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31356
	ctx.r4.s64 = ctx.r10.s64 + 31356;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BEB04;
	sub_822E0818(ctx, base);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r7,90
	ctx.r7.s64 = 90;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r4,130
	ctx.r4.s64 = 130;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r10,4
	ctx.r10.s64 = 4;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r19,89
	ctx.r19.s64 = 89;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,174
	ctx.r11.s64 = 174;
	// li r5,3
	ctx.r5.s64 = 3;
	// stb r7,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r7.u8);
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,209
	ctx.r11.s64 = 209;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r4,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r4.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r11,172
	ctx.r11.s64 = 172;
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,63
	ctx.r11.s64 = 63;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r11.u8);
	// li r11,210
	ctx.r11.s64 = 210;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r7,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r7.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,120
	ctx.r11.s64 = 120;
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r19,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r19.u8);
	// stb r5,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r5.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// li r9,39
	ctx.r9.s64 = 39;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r20,91
	ctx.r20.s64 = 91;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r21,79
	ctx.r21.s64 = 79;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r22,93
	ctx.r22.s64 = 93;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r23,170
	ctx.r23.s64 = 170;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r24,95
	ctx.r24.s64 = 95;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r25,186
	ctx.r25.s64 = 186;
	// stb r20,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r20.u8);
	// li r8,66
	ctx.r8.s64 = 66;
	// stb r21,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r21.u8);
	// li r16,160
	ctx.r16.s64 = 160;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// li r26,94
	ctx.r26.s64 = 94;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// li r27,76
	ctx.r27.s64 = 76;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r22,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r22.u8);
	// stb r23,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r23.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// stb r11,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r11.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r24,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r24.u8);
	// stb r25,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r25.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r9,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r9.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r10,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r10.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r8,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r8.u8);
	// stb r16,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r16.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r26,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r26.u8);
	// stb r27,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r27.u8);
	// li r6,44
	ctx.r6.s64 = 44;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// li r18,67
	ctx.r18.s64 = 67;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// li r28,97
	ctx.r28.s64 = 97;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// li r29,18
	ctx.r29.s64 = 18;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// li r3,69
	ctx.r3.s64 = 69;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r6,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r6.u8);
	// li r6,22
	ctx.r6.s64 = 22;
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r9,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r9.u8);
	// stb r11,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r11.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r6,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r6.u8);
	// li r6,77
	ctx.r6.s64 = 77;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r10,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r10.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r18,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r18.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r28,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r28.u8);
	// stb r29,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r29.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r9,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r9.u8);
	// stb r11,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r11.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r10,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r10.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r18,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r18.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r3,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r3.u8);
	// stb r6,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r6.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r7,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r7.u8);
	// stb r17,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r17.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r19,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r19.u8);
	// stb r5,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r5.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// li r15,140
	ctx.r15.s64 = 140;
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r11,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r11.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r20,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r20.u8);
	// stb r21,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r21.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r22,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r22.u8);
	// stb r23,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r23.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r9,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r9.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r10,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r10.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r8,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r8.u8);
	// stb r15,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r15.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r24,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r24.u8);
	// stb r25,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r25.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r9,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r9.u8);
	// stb r11,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r11.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r10,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r10.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r26,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r26.u8);
	// stb r27,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r27.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// li r15,211
	ctx.r15.s64 = 211;
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r9,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r9.u8);
	// stb r11,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r11.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r10,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r10.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r8,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r8.u8);
	// stb r4,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r4.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r28,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r28.u8);
	// stb r29,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r29.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r9,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r9.u8);
	// stb r11,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r11.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r10,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r10.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r8,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r8.u8);
	// stb r4,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r4.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r3,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r3.u8);
	// stb r6,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r6.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r7,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r7.u8);
	// stb r15,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r15.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r19,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r19.u8);
	// stb r5,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r5.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r11,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r11.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r20,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r20.u8);
	// stb r21,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r21.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r22,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r22.u8);
	// stb r23,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r23.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r9,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r9.u8);
	// stb r11,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r11.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r10,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r10.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r24,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r24.u8);
	// stb r25,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r25.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r9,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r9.u8);
	// stb r11,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r11.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r10,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r10.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r26,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r26.u8);
	// stb r27,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r27.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r9,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r9.u8);
	// stb r11,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r11.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r4,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r4.u8);
	// stb r4,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r4.u8);
	// li r4,212
	ctx.r4.s64 = 212;
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r10,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r10.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r8,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r8.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r28,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r28.u8);
	// stb r29,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r29.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r9,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r9.u8);
	// stb r11,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r11.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r10,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r10.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r8,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r8.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r3,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r3.u8);
	// stb r6,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r6.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r31,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r31.u8);
	// stb r31,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r31.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r7,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r7.u8);
	// stb r4,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r4.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r19,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r19.u8);
	// stb r5,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r5.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r11,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r11.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r20,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r20.u8);
	// stb r21,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r21.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// li r4,12
	ctx.r4.s64 = 12;
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r22,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r22.u8);
	// stb r23,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r23.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r9,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r9.u8);
	// stb r11,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r11.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r31,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r31.u8);
	// stb r10,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r10.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r31,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r31.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r18,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r18.u8);
	// stb r4,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r4.u8);
	// stb r31,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r31.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r24,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r24.u8);
	// stb r25,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r25.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r9,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r9.u8);
	// stb r11,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r11.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r31,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r31.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r10,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r10.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r31,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r31.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r26,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r26.u8);
	// stb r27,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r27.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r31,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r31.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r9,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r9.u8);
	// stb r11,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r11.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r10,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r10.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r10,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r10.u8);
	// li r10,143
	ctx.r10.s64 = 143;
	// stb r11,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// li r27,180
	ctx.r27.s64 = 180;
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r8,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r8.u8);
	// stb r10,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r10.u8);
	// li r10,7
	ctx.r10.s64 = 7;
	// stb r11,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r11.u8);
	// li r11,15
	ctx.r11.s64 = 15;
	// stb r27,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r27.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r31,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r31.u8);
	// stb r10,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r10.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r11,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r11.u8);
	// li r11,8
	ctx.r11.s64 = 8;
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r28,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r28.u8);
	// stb r10,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r29,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r29.u8);
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r9,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r9.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r31,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r31.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r8,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r8.u8);
	// stb r16,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r16.u8);
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r31,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r31.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r3,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r3.u8);
	// stb r6,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r6.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r31,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r31.u8);
	// stb r11,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r11.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r31,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r31.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r31,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r31,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r31.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r31,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r31.u8);
	// stb r5,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r5.u8);
	// stb r10,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r10.u8);
	// stb r4,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r4.u8);
	// li r10,14
	ctx.r10.s64 = 14;
	// stb r11,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r11.u8);
	// li r11,208
	ctx.r11.s64 = 208;
	// stb r4,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r4.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r3,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r3.u8);
	// li r5,739
	ctx.r5.s64 = 739;
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r10,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r17,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r17.u8);
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// stb r31,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r31.u8);
	// stb r31,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r31.u8);
	// stb r10,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r10.u8);
	// li r10,54
	ctx.r10.s64 = 54;
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r31,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r31.u8);
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r10,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r10.u8);
	// li r10,233
	ctx.r10.s64 = 233;
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r31,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r31.u8);
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r10,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r10.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r10,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r10.u8);
	// li r10,155
	ctx.r10.s64 = 155;
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r31,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r31.u8);
	// stb r31,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r31.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r31,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r31.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r31,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r31.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r31,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r31.u8);
	// stb r31,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r31.u8);
	// stb r10,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r10.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r31,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r31.u8);
	// stb r31,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r31.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r31,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r31.u8);
	// stb r31,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r31.u8);
	// stb r31,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r31.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r7,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r7.u8);
	// stb r11,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r11.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r31,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r31.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r6,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r6.u8);
	// stb r31,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r31.u8);
	// stb r31,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r31.u8);
	// stb r31,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r31.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BF770;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,976
	ctx.r1.s64 = ctx.r1.s64 + 976;
	// b 0x82e28e84
	__restgprlr_15(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BF780"))) PPC_WEAK_FUNC(sub_824BF780);
PPC_FUNC_IMPL(__imp__sub_824BF780) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824BF788;
	__savegprlr_29(ctx, base);
	// stwu r1,-256(r1)
	ea = -256 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,135
	ctx.r9.s64 = 135;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31388
	ctx.r4.s64 = ctx.r10.s64 + 31388;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BF7C4;
	sub_822E0818(ctx, base);
	// li r10,88
	ctx.r10.s64 = 88;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r11,82
	ctx.r11.s64 = 82;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,4
	ctx.r7.s64 = 4;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// li r10,70
	ctx.r10.s64 = 70;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,202
	ctx.r11.s64 = 202;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// li r10,130
	ctx.r10.s64 = 130;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,9
	ctx.r11.s64 = 9;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,172
	ctx.r10.s64 = 172;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r10,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r7,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r7.u8);
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r10,86
	ctx.r10.s64 = 86;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// li r10,17
	ctx.r10.s64 = 17;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// li r10,36
	ctx.r10.s64 = 36;
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r8,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r8.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r11,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// li r10,75
	ctx.r10.s64 = 75;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// li r6,143
	ctx.r6.s64 = 143;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// addi r29,r30,24
	ctx.r29.s64 = ctx.r30.s64 + 24;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// li r11,5
	ctx.r11.s64 = 5;
	// stb r10,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r10.u8);
	// li r10,33
	ctx.r10.s64 = 33;
	// stb r6,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r6.u8);
	// li r6,14
	ctx.r6.s64 = 14;
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// li r5,135
	ctx.r5.s64 = 135;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r11.u8);
	// li r11,3
	ctx.r11.s64 = 3;
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r6,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r6.u8);
	// li r6,10
	ctx.r6.s64 = 10;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r11,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r11.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r10,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r10.u8);
	// stb r11,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r11.u8);
	// li r11,19
	ctx.r11.s64 = 19;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r11,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r11,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r11.u8);
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r6,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r6.u8);
	// stb r9,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r9.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// li r11,68
	ctx.r11.s64 = 68;
	// stb r7,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r7.u8);
	// stb r8,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r8.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r11,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// li r11,93
	ctx.r11.s64 = 93;
	// stb r10,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r10.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// li r11,44
	ctx.r11.s64 = 44;
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r11,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824BFA7C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,256
	ctx.r1.s64 = ctx.r1.s64 + 256;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824BFA90"))) PPC_WEAK_FUNC(sub_824BFA90);
PPC_FUNC_IMPL(__imp__sub_824BFA90) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e38
	ctx.lr = 0x824BFA98;
	__savegprlr_16(ctx, base);
	// stwu r1,-1808(r1)
	ea = -1808 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r26,r3
	ctx.r26.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r26,4
	ctx.r3.s64 = ctx.r26.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,1584
	ctx.r9.s64 = 1584;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31420
	ctx.r4.s64 = ctx.r10.s64 + 31420;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r26)
	PPC_STORE_U32(ctx.r26.u32 + 0, ctx.r11.u32);
	// stw r9,16(r26)
	PPC_STORE_U32(ctx.r26.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824BFAD4;
	sub_822E0818(ctx, base);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r31.u8);
	// li r10,8
	ctx.r10.s64 = 8;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,3
	ctx.r7.s64 = 3;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r17,143
	ctx.r17.s64 = 143;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// li r21,48
	ctx.r21.s64 = 48;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// li r18,7
	ctx.r18.s64 = 7;
	// stb r10,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r10.u8);
	// li r22,152
	ctx.r22.s64 = 152;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r4,89
	ctx.r4.s64 = 89;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,55
	ctx.r11.s64 = 55;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// stb r17,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r17.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,70
	ctx.r11.s64 = 70;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r7,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r7.u8);
	// stb r21,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r21.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r18,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r18.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r22,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r22.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r4,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r4.u8);
	// stb r7,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r7.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r5,96
	ctx.r5.s64 = 96;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// li r6,9
	ctx.r6.s64 = 9;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// li r23,85
	ctx.r23.s64 = 85;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// li r24,160
	ctx.r24.s64 = 160;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// li r27,33
	ctx.r27.s64 = 33;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// li r25,25
	ctx.r25.s64 = 25;
	// stb r5,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r5.u8);
	// li r8,130
	ctx.r8.s64 = 130;
	// stb r6,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r6.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r23,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r23.u8);
	// stb r24,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r24.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r4,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r4.u8);
	// stb r7,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r7.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r5,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r5.u8);
	// stb r6,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r6.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r27,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r27.u8);
	// stb r25,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r25.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r8,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r8.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// li r20,194
	ctx.r20.s64 = 194;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// li r30,128
	ctx.r30.s64 = 128;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// li r28,69
	ctx.r28.s64 = 69;
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// li r29,77
	ctx.r29.s64 = 77;
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r9,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r9.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r28,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r28.u8);
	// stb r29,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r29.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r11,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r11.u8);
	// stb r22,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r22.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r4,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r4.u8);
	// stb r7,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r7.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r10,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r10.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r5,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r5.u8);
	// stb r6,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r6.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r20,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r20.u8);
	// stb r30,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r30.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r20,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r20.u8);
	// stb r30,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r30.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r23,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r23.u8);
	// stb r24,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r24.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r4,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r4.u8);
	// stb r7,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r7.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// li r3,67
	ctx.r3.s64 = 67;
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r10,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r10.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r5,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r5.u8);
	// stb r6,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r6.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r3,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r3.u8);
	// stb r30,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r30.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r3,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r3.u8);
	// stb r30,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r30.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r27,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r27.u8);
	// stb r25,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r25.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r11,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r11.u8);
	// stb r8,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r8.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r9,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r9.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r28,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r28.u8);
	// stb r29,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r29.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r11,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r11.u8);
	// stb r22,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r22.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r4,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r4.u8);
	// stb r7,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r7.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r10,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r10.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r5,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r5.u8);
	// stb r6,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r6.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r23,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r23.u8);
	// stb r24,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r24.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r4,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r4.u8);
	// stb r7,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r7.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r10,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r10.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r5,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r5.u8);
	// stb r6,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r6.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r3,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r3.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r3,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r3.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r27,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r27.u8);
	// stb r25,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r25.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r11,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r11.u8);
	// stb r8,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r8.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r9,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r9.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r28,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r28.u8);
	// stb r29,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r29.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r11,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r11.u8);
	// stb r22,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r22.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r4,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r4.u8);
	// stb r7,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r7.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r10,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r10.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r5,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r5.u8);
	// stb r6,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r6.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r23,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r23.u8);
	// stb r24,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r24.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r4,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r4.u8);
	// stb r7,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r7.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r10,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r10.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r5,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r5.u8);
	// stb r6,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r6.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// li r19,192
	ctx.r19.s64 = 192;
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r3,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r3.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r3,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r3.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r27,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r27.u8);
	// stb r25,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r25.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r11,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r11.u8);
	// stb r8,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r8.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r9,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r9.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r31,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r31.u8);
	// stb r31,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r31.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r28,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r28.u8);
	// stb r29,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r29.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r11,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r11.u8);
	// stb r22,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r22.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r4,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r4.u8);
	// stb r7,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r7.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r31,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r31.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r10,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r10.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r5,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r5.u8);
	// stb r6,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r6.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// li r16,64
	ctx.r16.s64 = 64;
	// stb r19,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r19.u8);
	// stb r30,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r30.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r30,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r30.u8);
	// stb r16,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r16.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r23,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r23.u8);
	// stb r24,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r24.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r31,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r31.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r4,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r4.u8);
	// stb r7,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r7.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r10,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r10.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r5,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r5.u8);
	// stb r6,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r6.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r3,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r3.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r3,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r3.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r27,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r27.u8);
	// stb r25,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r25.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r31,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r31.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r11,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r11.u8);
	// stb r8,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r8.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// stb r31,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r31.u8);
	// stb r31,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r31.u8);
	// stb r9,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r9.u8);
	// stb r31,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r31.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r31,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r31.u8);
	// stb r31,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r31.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r31,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r31.u8);
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r28,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r28.u8);
	// stb r29,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r29.u8);
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r11,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r11.u8);
	// stb r22,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r22.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r31,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r31.u8);
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r4,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r4.u8);
	// stb r7,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r7.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r31,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r31.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r10,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r10.u8);
	// stb r31,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r31.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r5,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r5.u8);
	// stb r6,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r6.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r19,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r19.u8);
	// stb r30,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r30.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r31,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r31.u8);
	// stb r16,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r16.u8);
	// stb r30,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r30.u8);
	// stb r31,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r31.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r23,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r23.u8);
	// stb r24,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r24.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r31,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r31.u8);
	// stb r31,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r4,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r4.u8);
	// stb r7,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r7.u8);
	// stb r31,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r31.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// stb r31,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r31.u8);
	// stb r31,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r31.u8);
	// stb r31,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r31.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r10,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r10.u8);
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r31,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r31.u8);
	// stb r31,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r31.u8);
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// stb r31,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r31.u8);
	// stb r31,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r31.u8);
	// stb r5,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r5.u8);
	// stb r6,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r6.u8);
	// stb r31,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r31.u8);
	// stb r31,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r31.u8);
	// stb r31,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r31.u8);
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r3,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r3.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r31,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r31.u8);
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r3,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r3.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r27,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r27.u8);
	// stb r25,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r25.u8);
	// stb r31,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r31.u8);
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r31,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r31.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r31,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r31.u8);
	// stb r11,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r11.u8);
	// stb r8,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r8.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r31,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r31.u8);
	// stb r31,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r31.u8);
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r9,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r9.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r31,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r31.u8);
	// stb r31,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r31.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r31,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r31.u8);
	// stb r28,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r28.u8);
	// stb r29,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r29.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r11,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r11.u8);
	// stb r22,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r22.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r31,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r31.u8);
	// stb r31,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r31.u8);
	// stb r31,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r31.u8);
	// stb r4,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r4.u8);
	// stb r7,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r7.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r31,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r31.u8);
	// stb r31,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r31.u8);
	// stb r31,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r31.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r10,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r10.u8);
	// stb r31,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r31.u8);
	// stb r31,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r31.u8);
	// stb r31,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r31.u8);
	// stb r31,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r31.u8);
	// stb r31,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r31.u8);
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r5,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r5.u8);
	// stb r6,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r6.u8);
	// stb r31,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r31.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r31,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r31.u8);
	// stb r20,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r20.u8);
	// stb r30,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r30.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r31,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r31.u8);
	// stb r20,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r20.u8);
	// stb r30,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r30.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r31,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r31.u8);
	// stb r31,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r31.u8);
	// stb r31,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r31.u8);
	// stb r5,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r5.u8);
	// li r5,10
	ctx.r5.s64 = 10;
	// stb r25,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r25.u8);
	// li r25,54
	ctx.r25.s64 = 54;
	// stb r23,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r23.u8);
	// stb r24,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r24.u8);
	// stb r31,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r31.u8);
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r31,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r31.u8);
	// stb r31,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r31.u8);
	// stb r4,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r4.u8);
	// stb r7,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r7.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r31,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r31.u8);
	// stb r31,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r31.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r31,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r31.u8);
	// stb r31,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r31.u8);
	// stb r10,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r10.u8);
	// stb r31,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r31.u8);
	// stb r31,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r31.u8);
	// stb r31,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r31.u8);
	// stb r31,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r31.u8);
	// stb r31,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r31.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r6,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r6.u8);
	// stb r31,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r31.u8);
	// stb r31,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r31.u8);
	// stb r31,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r31.u8);
	// stb r31,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r31.u8);
	// stb r3,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r3.u8);
	// stb r30,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r30.u8);
	// stb r31,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r31.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r3,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r3.u8);
	// stb r30,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r30.u8);
	// stb r31,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r31.u8);
	// stb r31,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r31.u8);
	// stb r31,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r31.u8);
	// stb r31,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r31.u8);
	// stb r27,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r27.u8);
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r31,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r31.u8);
	// stb r31,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r31.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r31,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r31.u8);
	// stb r11,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r11.u8);
	// stb r8,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r8.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r31,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r31.u8);
	// stb r31,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r31.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r9,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r9.u8);
	// stb r31,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r31.u8);
	// stb r31,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r31.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r31,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r31.u8);
	// stb r31,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r31.u8);
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r31,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r31.u8);
	// stb r31,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r31.u8);
	// stb r28,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r28.u8);
	// stb r29,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r29.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r31,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r31.u8);
	// stb r31,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r31.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r31,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r31.u8);
	// stb r5,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r5.u8);
	// stb r25,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r25.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// li r7,193
	ctx.r7.s64 = 193;
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// li r6,148
	ctx.r6.s64 = 148;
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// li r30,98
	ctx.r30.s64 = 98;
	// stb r31,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r31.u8);
	// li r16,14
	ctx.r16.s64 = 14;
	// stb r31,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r31.u8);
	// stb r31,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r31.u8);
	// stb r7,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r7.u8);
	// li r7,191
	ctx.r7.s64 = 191;
	// stb r11,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r11.u8);
	// stb r8,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r8.u8);
	// stb r31,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r31.u8);
	// stb r31,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r31.u8);
	// stb r31,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r31.u8);
	// stb r31,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r31.u8);
	// stb r31,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r31,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r31.u8);
	// stb r9,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r9.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r31,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r31.u8);
	// stb r31,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r31.u8);
	// stb r31,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r31.u8);
	// stb r31,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r31.u8);
	// stb r6,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r6.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r31,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r31.u8);
	// stb r5,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r5.u8);
	// stb r5,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r5.u8);
	// stb r31,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r31.u8);
	// stb r31,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r31.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r31,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r31.u8);
	// stb r31,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r31.u8);
	// stb r31,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r31.u8);
	// stb r11,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r11.u8);
	// stb r8,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r8.u8);
	// stb r31,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r31.u8);
	// stb r31,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r31.u8);
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r31.u8);
	// stb r31,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r31.u8);
	// stb r31,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r31.u8);
	// stb r31,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r31.u8);
	// stb r9,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r9.u8);
	// stb r31,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r31.u8);
	// stb r31,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r31.u8);
	// stb r31,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r31.u8);
	// stb r31,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r31.u8);
	// stb r31,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r31.u8);
	// stb r31,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r31.u8);
	// stb r6,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r6.u8);
	// stb r7,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r7.u8);
	// stb r31,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r31.u8);
	// stb r31,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r31.u8);
	// stb r30,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r30.u8);
	// stb r16,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r16.u8);
	// stb r31,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r31.u8);
	// stb r31,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r31.u8);
	// stb r31,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r31.u8);
	// stb r31,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r31.u8);
	// stb r31,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r31.u8);
	// stb r31,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r31.u8);
	// stb r11,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r11.u8);
	// stb r8,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r8.u8);
	// stb r31,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r31.u8);
	// stb r31,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r31.u8);
	// stb r31,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r31.u8);
	// stb r31,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r31.u8);
	// stb r31,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r31.u8);
	// stb r31,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r31.u8);
	// stb r31,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r31.u8);
	// stb r9,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r9.u8);
	// stb r31,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r31.u8);
	// stb r31,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r31.u8);
	// stb r31,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r31.u8);
	// stb r31,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r31.u8);
	// stb r31,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r31.u8);
	// li r4,135
	ctx.r4.s64 = 135;
	// stb r5,1066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1066, ctx.r5.u8);
	// li r3,16
	ctx.r3.s64 = 16;
	// stb r31,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r31.u8);
	// li r7,172
	ctx.r7.s64 = 172;
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// li r22,136
	ctx.r22.s64 = 136;
	// stb r31,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r31.u8);
	// li r5,46
	ctx.r5.s64 = 46;
	// stb r30,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r30.u8);
	// stb r4,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r4.u8);
	// li r4,15
	ctx.r4.s64 = 15;
	// stb r3,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r3.u8);
	// li r3,142
	ctx.r3.s64 = 142;
	// stb r7,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r7.u8);
	// stb r31,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r31.u8);
	// stb r31,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r31.u8);
	// stb r4,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r4.u8);
	// stb r31,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r31.u8);
	// stb r31,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r31.u8);
	// stb r31,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r31.u8);
	// stb r31,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r31.u8);
	// stb r11,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r11.u8);
	// stb r8,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r8.u8);
	// stb r31,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r31.u8);
	// stb r31,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r31.u8);
	// stb r31,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r31.u8);
	// stb r31,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r31.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r31,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r31.u8);
	// stb r9,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r9.u8);
	// stb r31,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r31.u8);
	// stb r31,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r31.u8);
	// stb r31,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r31.u8);
	// stb r31,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r31.u8);
	// stb r31,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r31.u8);
	// stb r31,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r31.u8);
	// stb r7,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r7.u8);
	// stb r22,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r22.u8);
	// stb r31,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r31.u8);
	// stb r31,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r31.u8);
	// stb r30,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r30.u8);
	// stb r31,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r31.u8);
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r31,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r31.u8);
	// stb r31,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r31.u8);
	// stb r31,1044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1044, ctx.r31.u8);
	// stb r31,1045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1045, ctx.r31.u8);
	// stb r11,1046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1046, ctx.r11.u8);
	// stb r8,1047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1047, ctx.r8.u8);
	// stb r31,1048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1048, ctx.r31.u8);
	// stb r31,1049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1049, ctx.r31.u8);
	// stb r31,1050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1050, ctx.r31.u8);
	// stb r31,1051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1051, ctx.r31.u8);
	// stb r31,1052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1052, ctx.r31.u8);
	// stb r31,1053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1053, ctx.r31.u8);
	// stb r31,1054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1054, ctx.r31.u8);
	// stb r9,1055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1055, ctx.r9.u8);
	// stb r31,1056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1056, ctx.r31.u8);
	// stb r31,1057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1057, ctx.r31.u8);
	// stb r31,1058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1058, ctx.r31.u8);
	// stb r31,1059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1059, ctx.r31.u8);
	// stb r31,1060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1060, ctx.r31.u8);
	// stb r31,1061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1061, ctx.r31.u8);
	// stb r7,1062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1062, ctx.r7.u8);
	// stb r3,1063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1063, ctx.r3.u8);
	// stb r31,1064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1064, ctx.r31.u8);
	// stb r31,1065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1065, ctx.r31.u8);
	// stb r5,1067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1067, ctx.r5.u8);
	// stb r31,1068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1068, ctx.r31.u8);
	// stb r31,1069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1069, ctx.r31.u8);
	// stb r31,1070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1070, ctx.r31.u8);
	// stb r31,1071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1071, ctx.r31.u8);
	// stb r31,1072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1072, ctx.r31.u8);
	// stb r31,1073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1073, ctx.r31.u8);
	// stb r10,1074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1074, ctx.r10.u8);
	// stb r17,1075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1075, ctx.r17.u8);
	// stb r31,1076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1076, ctx.r31.u8);
	// stb r31,1077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1077, ctx.r31.u8);
	// stb r31,1078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1078, ctx.r31.u8);
	// li r5,32
	ctx.r5.s64 = 32;
	// stb r6,1098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1098, ctx.r6.u8);
	// stb r6,1102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1102, ctx.r6.u8);
	// li r3,68
	ctx.r3.s64 = 68;
	// stb r6,1106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1106, ctx.r6.u8);
	// li r24,86
	ctx.r24.s64 = 86;
	// stb r6,1110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1110, ctx.r6.u8);
	// stb r6,1114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1114, ctx.r6.u8);
	// stb r5,1083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1083, ctx.r5.u8);
	// li r5,196
	ctx.r5.s64 = 196;
	// stb r6,1118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1118, ctx.r6.u8);
	// li r6,197
	ctx.r6.s64 = 197;
	// stb r31,1079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1079, ctx.r31.u8);
	// stb r31,1080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1080, ctx.r31.u8);
	// stb r31,1081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1081, ctx.r31.u8);
	// stb r5,1103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1103, ctx.r5.u8);
	// li r5,195
	ctx.r5.s64 = 195;
	// stb r6,1119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1119, ctx.r6.u8);
	// li r6,34
	ctx.r6.s64 = 34;
	// stb r31,1082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1082, ctx.r31.u8);
	// stb r31,1084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1084, ctx.r31.u8);
	// stb r31,1085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1085, ctx.r31.u8);
	// stb r5,1107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1107, ctx.r5.u8);
	// li r5,65
	ctx.r5.s64 = 65;
	// stb r6,1123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1123, ctx.r6.u8);
	// li r6,155
	ctx.r6.s64 = 155;
	// stb r31,1086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1086, ctx.r31.u8);
	// stb r31,1087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1087, ctx.r31.u8);
	// stb r31,1088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1088, ctx.r31.u8);
	// stb r31,1089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1089, ctx.r31.u8);
	// stb r31,1090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1090, ctx.r31.u8);
	// stb r18,1091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1091, ctx.r18.u8);
	// stb r31,1092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1092, ctx.r31.u8);
	// stb r31,1093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1093, ctx.r31.u8);
	// stb r31,1094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1094, ctx.r31.u8);
	// stb r31,1095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1095, ctx.r31.u8);
	// stb r31,1096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1096, ctx.r31.u8);
	// stb r31,1097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1097, ctx.r31.u8);
	// stb r19,1099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1099, ctx.r19.u8);
	// stb r31,1100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1100, ctx.r31.u8);
	// stb r31,1101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1101, ctx.r31.u8);
	// stb r31,1104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1104, ctx.r31.u8);
	// stb r31,1105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1105, ctx.r31.u8);
	// stb r31,1108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1108, ctx.r31.u8);
	// stb r31,1109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1109, ctx.r31.u8);
	// stb r20,1111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1111, ctx.r20.u8);
	// stb r31,1112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1112, ctx.r31.u8);
	// stb r31,1113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1113, ctx.r31.u8);
	// stb r20,1115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1115, ctx.r20.u8);
	// stb r31,1116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1116, ctx.r31.u8);
	// stb r31,1117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1117, ctx.r31.u8);
	// stb r31,1120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1120, ctx.r31.u8);
	// stb r31,1121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1121, ctx.r31.u8);
	// stb r5,1122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1122, ctx.r5.u8);
	// stb r31,1124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1124, ctx.r31.u8);
	// stb r31,1125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1125, ctx.r31.u8);
	// stb r31,1126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1126, ctx.r31.u8);
	// stb r31,1127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1127, ctx.r31.u8);
	// stb r31,1128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1128, ctx.r31.u8);
	// stb r31,1129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1129, ctx.r31.u8);
	// stb r3,1130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1130, ctx.r3.u8);
	// stb r6,1131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1131, ctx.r6.u8);
	// stb r31,1132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1132, ctx.r31.u8);
	// stb r31,1133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1133, ctx.r31.u8);
	// stb r31,1134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1134, ctx.r31.u8);
	// stb r31,1135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1135, ctx.r31.u8);
	// stb r31,1136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1136, ctx.r31.u8);
	// stb r31,1137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1137, ctx.r31.u8);
	// stb r31,1138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1138, ctx.r31.u8);
	// stb r10,1139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1139, ctx.r10.u8);
	// stb r31,1140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1140, ctx.r31.u8);
	// stb r31,1141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1141, ctx.r31.u8);
	// stb r31,1142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1142, ctx.r31.u8);
	// stb r31,1143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1143, ctx.r31.u8);
	// stb r31,1144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1144, ctx.r31.u8);
	// stb r31,1145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1145, ctx.r31.u8);
	// stb r21,1146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1146, ctx.r21.u8);
	// stb r24,1147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1147, ctx.r24.u8);
	// stb r31,1148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1148, ctx.r31.u8);
	// stb r31,1149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1149, ctx.r31.u8);
	// stb r31,1150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1150, ctx.r31.u8);
	// li r24,21
	ctx.r24.s64 = 21;
	// stb r31,1151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1151, ctx.r31.u8);
	// li r20,187
	ctx.r20.s64 = 187;
	// stb r31,1152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1152, ctx.r31.u8);
	// li r23,28
	ctx.r23.s64 = 28;
	// stb r31,1153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1153, ctx.r31.u8);
	// stb r5,1154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1154, ctx.r5.u8);
	// stb r31,1156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1156, ctx.r31.u8);
	// stb r24,1178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1178, ctx.r24.u8);
	// stb r24,1210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1210, ctx.r24.u8);
	// li r24,184
	ctx.r24.s64 = 184;
	// stb r20,1179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1179, ctx.r20.u8);
	// li r20,27
	ctx.r20.s64 = 27;
	// stb r23,1155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1155, ctx.r23.u8);
	// stb r31,1157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1157, ctx.r31.u8);
	// stb r31,1158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1158, ctx.r31.u8);
	// stb r24,1211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1211, ctx.r24.u8);
	// li r24,36
	ctx.r24.s64 = 36;
	// stb r31,1159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1159, ctx.r31.u8);
	// stb r31,1160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1160, ctx.r31.u8);
	// stb r31,1161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1161, ctx.r31.u8);
	// stb r3,1162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1162, ctx.r3.u8);
	// stb r6,1163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1163, ctx.r6.u8);
	// stb r31,1164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1164, ctx.r31.u8);
	// stb r31,1165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1165, ctx.r31.u8);
	// stb r31,1166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1166, ctx.r31.u8);
	// stb r31,1167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1167, ctx.r31.u8);
	// stb r31,1168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1168, ctx.r31.u8);
	// stb r31,1169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1169, ctx.r31.u8);
	// stb r31,1170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1170, ctx.r31.u8);
	// stb r10,1171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1171, ctx.r10.u8);
	// stb r31,1172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1172, ctx.r31.u8);
	// stb r31,1173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1173, ctx.r31.u8);
	// stb r31,1174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1174, ctx.r31.u8);
	// stb r31,1175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1175, ctx.r31.u8);
	// stb r31,1176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1176, ctx.r31.u8);
	// stb r31,1177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1177, ctx.r31.u8);
	// stb r31,1180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1180, ctx.r31.u8);
	// stb r31,1181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1181, ctx.r31.u8);
	// stb r31,1182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1182, ctx.r31.u8);
	// stb r31,1183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1183, ctx.r31.u8);
	// stb r31,1184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1184, ctx.r31.u8);
	// stb r31,1185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1185, ctx.r31.u8);
	// stb r5,1186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1186, ctx.r5.u8);
	// stb r20,1187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1187, ctx.r20.u8);
	// stb r31,1188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1188, ctx.r31.u8);
	// stb r31,1189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1189, ctx.r31.u8);
	// stb r31,1190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1190, ctx.r31.u8);
	// stb r31,1191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1191, ctx.r31.u8);
	// stb r31,1192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1192, ctx.r31.u8);
	// stb r31,1193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1193, ctx.r31.u8);
	// stb r3,1194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1194, ctx.r3.u8);
	// stb r6,1195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1195, ctx.r6.u8);
	// stb r31,1196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1196, ctx.r31.u8);
	// stb r31,1197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1197, ctx.r31.u8);
	// stb r31,1198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1198, ctx.r31.u8);
	// stb r31,1199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1199, ctx.r31.u8);
	// stb r31,1200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1200, ctx.r31.u8);
	// stb r31,1201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1201, ctx.r31.u8);
	// stb r31,1202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1202, ctx.r31.u8);
	// stb r10,1203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1203, ctx.r10.u8);
	// stb r31,1204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1204, ctx.r31.u8);
	// stb r31,1205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1205, ctx.r31.u8);
	// stb r31,1206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1206, ctx.r31.u8);
	// stb r31,1207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1207, ctx.r31.u8);
	// stb r31,1208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1208, ctx.r31.u8);
	// stb r31,1209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1209, ctx.r31.u8);
	// stb r31,1212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1212, ctx.r31.u8);
	// stb r31,1213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1213, ctx.r31.u8);
	// stb r31,1214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1214, ctx.r31.u8);
	// stb r31,1215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1215, ctx.r31.u8);
	// stb r31,1216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1216, ctx.r31.u8);
	// stb r31,1217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1217, ctx.r31.u8);
	// stb r5,1218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1218, ctx.r5.u8);
	// stb r24,1219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1219, ctx.r24.u8);
	// stb r31,1220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1220, ctx.r31.u8);
	// stb r31,1221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1221, ctx.r31.u8);
	// stb r31,1222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1222, ctx.r31.u8);
	// stb r31,1223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1223, ctx.r31.u8);
	// stb r31,1224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1224, ctx.r31.u8);
	// stb r31,1225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1225, ctx.r31.u8);
	// li r24,116
	ctx.r24.s64 = 116;
	// stb r5,1250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1250, ctx.r5.u8);
	// stb r5,1282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1282, ctx.r5.u8);
	// li r5,42
	ctx.r5.s64 = 42;
	// stb r3,1226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1226, ctx.r3.u8);
	// stb r6,1227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1227, ctx.r6.u8);
	// stb r31,1228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1228, ctx.r31.u8);
	// stb r24,1243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1243, ctx.r24.u8);
	// li r24,35
	ctx.r24.s64 = 35;
	// stb r31,1229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1229, ctx.r31.u8);
	// stb r31,1230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1230, ctx.r31.u8);
	// stb r31,1231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1231, ctx.r31.u8);
	// stb r31,1232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1232, ctx.r31.u8);
	// stb r24,1251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1251, ctx.r24.u8);
	// li r24,103
	ctx.r24.s64 = 103;
	// stb r31,1233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1233, ctx.r31.u8);
	// stb r31,1234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1234, ctx.r31.u8);
	// stb r10,1235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1235, ctx.r10.u8);
	// stb r31,1236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1236, ctx.r31.u8);
	// stb r31,1237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1237, ctx.r31.u8);
	// stb r31,1238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1238, ctx.r31.u8);
	// stb r31,1239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1239, ctx.r31.u8);
	// stb r31,1240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1240, ctx.r31.u8);
	// stb r31,1241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1241, ctx.r31.u8);
	// stb r21,1242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1242, ctx.r21.u8);
	// stb r31,1244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1244, ctx.r31.u8);
	// stb r31,1245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1245, ctx.r31.u8);
	// stb r31,1246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1246, ctx.r31.u8);
	// stb r31,1247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1247, ctx.r31.u8);
	// stb r31,1248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1248, ctx.r31.u8);
	// stb r31,1249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1249, ctx.r31.u8);
	// stb r31,1252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1252, ctx.r31.u8);
	// stb r31,1253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1253, ctx.r31.u8);
	// stb r31,1254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1254, ctx.r31.u8);
	// stb r31,1255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1255, ctx.r31.u8);
	// stb r31,1256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1256, ctx.r31.u8);
	// stb r31,1257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1257, ctx.r31.u8);
	// stb r3,1258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1258, ctx.r3.u8);
	// stb r6,1259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1259, ctx.r6.u8);
	// stb r31,1260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1260, ctx.r31.u8);
	// stb r31,1261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1261, ctx.r31.u8);
	// stb r31,1262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1262, ctx.r31.u8);
	// stb r31,1263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1263, ctx.r31.u8);
	// stb r31,1264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1264, ctx.r31.u8);
	// stb r31,1265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1265, ctx.r31.u8);
	// stb r31,1266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1266, ctx.r31.u8);
	// stb r10,1267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1267, ctx.r10.u8);
	// stb r31,1268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1268, ctx.r31.u8);
	// stb r31,1269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1269, ctx.r31.u8);
	// stb r31,1270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1270, ctx.r31.u8);
	// stb r31,1271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1271, ctx.r31.u8);
	// stb r31,1272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1272, ctx.r31.u8);
	// stb r31,1273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1273, ctx.r31.u8);
	// stb r21,1274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1274, ctx.r21.u8);
	// stb r24,1275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1275, ctx.r24.u8);
	// stb r31,1276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1276, ctx.r31.u8);
	// stb r31,1277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1277, ctx.r31.u8);
	// stb r31,1278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1278, ctx.r31.u8);
	// stb r31,1279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1279, ctx.r31.u8);
	// stb r31,1280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1280, ctx.r31.u8);
	// stb r31,1281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1281, ctx.r31.u8);
	// stb r5,1283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1283, ctx.r5.u8);
	// stb r31,1284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1284, ctx.r31.u8);
	// stb r31,1285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1285, ctx.r31.u8);
	// stb r31,1286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1286, ctx.r31.u8);
	// stb r31,1287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1287, ctx.r31.u8);
	// stb r31,1288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1288, ctx.r31.u8);
	// stb r31,1289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1289, ctx.r31.u8);
	// stb r3,1290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1290, ctx.r3.u8);
	// stb r6,1291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1291, ctx.r6.u8);
	// stb r31,1292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1292, ctx.r31.u8);
	// stb r31,1293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1293, ctx.r31.u8);
	// stb r31,1294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1294, ctx.r31.u8);
	// stb r31,1295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1295, ctx.r31.u8);
	// stb r31,1296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1296, ctx.r31.u8);
	// stb r31,1297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1297, ctx.r31.u8);
	// stb r31,1298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1298, ctx.r31.u8);
	// stb r10,1299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1299, ctx.r10.u8);
	// stb r31,1300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1300, ctx.r31.u8);
	// stb r31,1301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1301, ctx.r31.u8);
	// stb r31,1302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1302, ctx.r31.u8);
	// li r24,37
	ctx.r24.s64 = 37;
	// stb r31,1303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1303, ctx.r31.u8);
	// li r5,137
	ctx.r5.s64 = 137;
	// stb r31,1304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1304, ctx.r31.u8);
	// li r20,140
	ctx.r20.s64 = 140;
	// stb r31,1305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1305, ctx.r31.u8);
	// stb r30,1306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1306, ctx.r30.u8);
	// stb r18,1307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1307, ctx.r18.u8);
	// stb r24,1314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1314, ctx.r24.u8);
	// stb r24,1342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1342, ctx.r24.u8);
	// li r24,139
	ctx.r24.s64 = 139;
	// stb r31,1308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1308, ctx.r31.u8);
	// stb r31,1309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1309, ctx.r31.u8);
	// stb r31,1310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1310, ctx.r31.u8);
	// stb r31,1311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1311, ctx.r31.u8);
	// stb r24,1367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1367, ctx.r24.u8);
	// li r24,115
	ctx.r24.s64 = 115;
	// stb r31,1312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1312, ctx.r31.u8);
	// stb r31,1313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1313, ctx.r31.u8);
	// stb r5,1315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1315, ctx.r5.u8);
	// stb r31,1316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1316, ctx.r31.u8);
	// stb r31,1317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1317, ctx.r31.u8);
	// stb r31,1318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1318, ctx.r31.u8);
	// stb r31,1319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1319, ctx.r31.u8);
	// stb r31,1320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1320, ctx.r31.u8);
	// stb r31,1321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1321, ctx.r31.u8);
	// stb r11,1322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1322, ctx.r11.u8);
	// stb r8,1323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1323, ctx.r8.u8);
	// stb r31,1324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1324, ctx.r31.u8);
	// stb r31,1325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1325, ctx.r31.u8);
	// stb r31,1326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1326, ctx.r31.u8);
	// stb r31,1327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1327, ctx.r31.u8);
	// stb r31,1328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1328, ctx.r31.u8);
	// stb r31,1329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1329, ctx.r31.u8);
	// stb r31,1330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1330, ctx.r31.u8);
	// stb r9,1331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1331, ctx.r9.u8);
	// stb r31,1332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1332, ctx.r31.u8);
	// stb r31,1333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1333, ctx.r31.u8);
	// stb r31,1334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1334, ctx.r31.u8);
	// stb r31,1335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1335, ctx.r31.u8);
	// stb r31,1336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1336, ctx.r31.u8);
	// stb r31,1337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1337, ctx.r31.u8);
	// stb r7,1338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1338, ctx.r7.u8);
	// stb r20,1339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1339, ctx.r20.u8);
	// stb r31,1340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1340, ctx.r31.u8);
	// stb r31,1341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1341, ctx.r31.u8);
	// stb r22,1343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1343, ctx.r22.u8);
	// stb r31,1344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1344, ctx.r31.u8);
	// stb r31,1345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1345, ctx.r31.u8);
	// stb r31,1346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1346, ctx.r31.u8);
	// stb r31,1347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1347, ctx.r31.u8);
	// stb r31,1348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1348, ctx.r31.u8);
	// stb r31,1349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1349, ctx.r31.u8);
	// stb r11,1350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1350, ctx.r11.u8);
	// stb r8,1351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1351, ctx.r8.u8);
	// stb r31,1352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1352, ctx.r31.u8);
	// stb r31,1353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1353, ctx.r31.u8);
	// stb r31,1354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1354, ctx.r31.u8);
	// stb r31,1355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1355, ctx.r31.u8);
	// stb r31,1356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1356, ctx.r31.u8);
	// stb r31,1357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1357, ctx.r31.u8);
	// stb r31,1358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1358, ctx.r31.u8);
	// stb r9,1359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1359, ctx.r9.u8);
	// stb r31,1360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1360, ctx.r31.u8);
	// stb r31,1361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1361, ctx.r31.u8);
	// stb r31,1362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1362, ctx.r31.u8);
	// stb r31,1363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1363, ctx.r31.u8);
	// stb r31,1364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1364, ctx.r31.u8);
	// stb r31,1365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1365, ctx.r31.u8);
	// stb r7,1366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1366, ctx.r7.u8);
	// stb r31,1368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1368, ctx.r31.u8);
	// stb r31,1369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1369, ctx.r31.u8);
	// stb r21,1370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1370, ctx.r21.u8);
	// stb r24,1371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1371, ctx.r24.u8);
	// stb r31,1372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1372, ctx.r31.u8);
	// stb r31,1373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1373, ctx.r31.u8);
	// stb r31,1374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1374, ctx.r31.u8);
	// stb r31,1375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1375, ctx.r31.u8);
	// stb r31,1376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1376, ctx.r31.u8);
	// stb r31,1377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1377, ctx.r31.u8);
	// stb r11,1378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1378, ctx.r11.u8);
	// stb r5,1423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1423, ctx.r5.u8);
	// li r5,113
	ctx.r5.s64 = 113;
	// li r24,138
	ctx.r24.s64 = 138;
	// stb r8,1379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1379, ctx.r8.u8);
	// stb r31,1380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1380, ctx.r31.u8);
	// stb r31,1381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1381, ctx.r31.u8);
	// stb r31,1382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1382, ctx.r31.u8);
	// stb r5,1427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1427, ctx.r5.u8);
	// li r5,141
	ctx.r5.s64 = 141;
	// stb r24,1395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1395, ctx.r24.u8);
	// li r24,112
	ctx.r24.s64 = 112;
	// stb r31,1383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1383, ctx.r31.u8);
	// stb r31,1384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1384, ctx.r31.u8);
	// stb r31,1385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1385, ctx.r31.u8);
	// stb r5,1451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1451, ctx.r5.u8);
	// li r5,40
	ctx.r5.s64 = 40;
	// stb r31,1386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1386, ctx.r31.u8);
	// stb r9,1387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1387, ctx.r9.u8);
	// stb r31,1388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1388, ctx.r31.u8);
	// stb r31,1389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1389, ctx.r31.u8);
	// stb r31,1390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1390, ctx.r31.u8);
	// stb r31,1391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1391, ctx.r31.u8);
	// stb r31,1392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1392, ctx.r31.u8);
	// stb r31,1393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1393, ctx.r31.u8);
	// stb r7,1394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1394, ctx.r7.u8);
	// stb r31,1396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1396, ctx.r31.u8);
	// stb r31,1397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1397, ctx.r31.u8);
	// stb r21,1398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1398, ctx.r21.u8);
	// stb r24,1399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1399, ctx.r24.u8);
	// stb r31,1400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1400, ctx.r31.u8);
	// stb r31,1401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1401, ctx.r31.u8);
	// stb r31,1402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1402, ctx.r31.u8);
	// stb r31,1403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1403, ctx.r31.u8);
	// stb r31,1404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1404, ctx.r31.u8);
	// stb r31,1405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1405, ctx.r31.u8);
	// stb r11,1406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1406, ctx.r11.u8);
	// stb r8,1407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1407, ctx.r8.u8);
	// stb r31,1408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1408, ctx.r31.u8);
	// stb r31,1409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1409, ctx.r31.u8);
	// stb r31,1410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1410, ctx.r31.u8);
	// stb r31,1411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1411, ctx.r31.u8);
	// stb r31,1412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1412, ctx.r31.u8);
	// stb r31,1413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1413, ctx.r31.u8);
	// stb r31,1414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1414, ctx.r31.u8);
	// stb r9,1415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1415, ctx.r9.u8);
	// stb r31,1416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1416, ctx.r31.u8);
	// stb r31,1417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1417, ctx.r31.u8);
	// stb r31,1418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1418, ctx.r31.u8);
	// stb r31,1419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1419, ctx.r31.u8);
	// stb r31,1420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1420, ctx.r31.u8);
	// stb r31,1421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1421, ctx.r31.u8);
	// stb r7,1422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1422, ctx.r7.u8);
	// stb r31,1424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1424, ctx.r31.u8);
	// stb r31,1425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1425, ctx.r31.u8);
	// stb r21,1426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1426, ctx.r21.u8);
	// stb r31,1428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1428, ctx.r31.u8);
	// stb r31,1429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1429, ctx.r31.u8);
	// stb r31,1430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1430, ctx.r31.u8);
	// stb r31,1431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1431, ctx.r31.u8);
	// stb r31,1432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1432, ctx.r31.u8);
	// stb r31,1433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1433, ctx.r31.u8);
	// stb r11,1434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1434, ctx.r11.u8);
	// stb r8,1435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1435, ctx.r8.u8);
	// stb r31,1436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1436, ctx.r31.u8);
	// stb r31,1437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1437, ctx.r31.u8);
	// stb r31,1438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1438, ctx.r31.u8);
	// stb r31,1439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1439, ctx.r31.u8);
	// stb r31,1440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1440, ctx.r31.u8);
	// stb r31,1441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1441, ctx.r31.u8);
	// stb r31,1442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1442, ctx.r31.u8);
	// stb r9,1443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1443, ctx.r9.u8);
	// stb r31,1444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1444, ctx.r31.u8);
	// stb r31,1445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1445, ctx.r31.u8);
	// stb r31,1446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1446, ctx.r31.u8);
	// stb r31,1447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1447, ctx.r31.u8);
	// stb r31,1448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1448, ctx.r31.u8);
	// stb r31,1449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1449, ctx.r31.u8);
	// stb r7,1450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1450, ctx.r7.u8);
	// stb r31,1452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1452, ctx.r31.u8);
	// stb r31,1453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1453, ctx.r31.u8);
	// stb r5,1454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1454, ctx.r5.u8);
	// li r5,214
	ctx.r5.s64 = 214;
	// stb r8,1463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1463, ctx.r8.u8);
	// stb r7,1478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1478, ctx.r7.u8);
	// stb r8,1491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1491, ctx.r8.u8);
	// stb r7,1506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1506, ctx.r7.u8);
	// li r7,97
	ctx.r7.s64 = 97;
	// stb r8,1507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1507, ctx.r8.u8);
	// li r8,53
	ctx.r8.s64 = 53;
	// stb r5,1455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1455, ctx.r5.u8);
	// li r5,145
	ctx.r5.s64 = 145;
	// stb r31,1456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1456, ctx.r31.u8);
	// stb r31,1457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1457, ctx.r31.u8);
	// stb r31,1458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1458, ctx.r31.u8);
	// stb r31,1459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1459, ctx.r31.u8);
	// stb r5,1479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1479, ctx.r5.u8);
	// li r5,91
	ctx.r5.s64 = 91;
	// stb r31,1460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1460, ctx.r31.u8);
	// stb r31,1461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1461, ctx.r31.u8);
	// stb r11,1462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1462, ctx.r11.u8);
	// stb r31,1464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1464, ctx.r31.u8);
	// stb r5,1482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1482, ctx.r5.u8);
	// li r5,82
	ctx.r5.s64 = 82;
	// stb r31,1465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1465, ctx.r31.u8);
	// stb r31,1466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1466, ctx.r31.u8);
	// stb r31,1467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1467, ctx.r31.u8);
	// stb r31,1468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1468, ctx.r31.u8);
	// stb r31,1469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1469, ctx.r31.u8);
	// stb r31,1470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1470, ctx.r31.u8);
	// stb r9,1471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1471, ctx.r9.u8);
	// stb r31,1472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1472, ctx.r31.u8);
	// stb r31,1473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1473, ctx.r31.u8);
	// stb r31,1474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1474, ctx.r31.u8);
	// stb r31,1475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1475, ctx.r31.u8);
	// stb r31,1476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1476, ctx.r31.u8);
	// stb r31,1477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1477, ctx.r31.u8);
	// stb r31,1480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1480, ctx.r31.u8);
	// stb r31,1481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1481, ctx.r31.u8);
	// stb r11,1483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1483, ctx.r11.u8);
	// stb r31,1484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1484, ctx.r31.u8);
	// stb r31,1485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1485, ctx.r31.u8);
	// stb r31,1486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1486, ctx.r31.u8);
	// stb r31,1487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1487, ctx.r31.u8);
	// stb r31,1488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1488, ctx.r31.u8);
	// stb r31,1489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1489, ctx.r31.u8);
	// stb r11,1490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1490, ctx.r11.u8);
	// stb r31,1492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1492, ctx.r31.u8);
	// stb r31,1493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1493, ctx.r31.u8);
	// stb r31,1494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1494, ctx.r31.u8);
	// stb r31,1495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1495, ctx.r31.u8);
	// stb r31,1496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1496, ctx.r31.u8);
	// stb r31,1497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1497, ctx.r31.u8);
	// stb r31,1498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1498, ctx.r31.u8);
	// stb r9,1499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1499, ctx.r9.u8);
	// stb r31,1500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1500, ctx.r31.u8);
	// stb r31,1501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1501, ctx.r31.u8);
	// stb r31,1502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1502, ctx.r31.u8);
	// stb r31,1503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1503, ctx.r31.u8);
	// stb r31,1504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1504, ctx.r31.u8);
	// stb r31,1505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1505, ctx.r31.u8);
	// stb r31,1508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1508, ctx.r31.u8);
	// stb r31,1509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1509, ctx.r31.u8);
	// stb r5,1510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1510, ctx.r5.u8);
	// stb r25,1511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1511, ctx.r25.u8);
	// stb r31,1512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1512, ctx.r31.u8);
	// stb r31,1513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1513, ctx.r31.u8);
	// stb r31,1514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1514, ctx.r31.u8);
	// stb r31,1515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1515, ctx.r31.u8);
	// stb r31,1516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1516, ctx.r31.u8);
	// stb r31,1517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1517, ctx.r31.u8);
	// stb r8,1518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1518, ctx.r8.u8);
	// stb r7,1519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1519, ctx.r7.u8);
	// stb r31,1520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1520, ctx.r31.u8);
	// stb r31,1521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1521, ctx.r31.u8);
	// stb r31,1522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1522, ctx.r31.u8);
	// stb r31,1523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1523, ctx.r31.u8);
	// stb r31,1524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1524, ctx.r31.u8);
	// stb r31,1525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1525, ctx.r31.u8);
	// stb r31,1526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1526, ctx.r31.u8);
	// stb r9,1527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1527, ctx.r9.u8);
	// stb r31,1528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1528, ctx.r31.u8);
	// stb r31,1529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1529, ctx.r31.u8);
	// stb r9,1555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1555, ctx.r9.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r9,1591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1591, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// stb r5,1538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1538, ctx.r5.u8);
	// li r5,1584
	ctx.r5.s64 = 1584;
	// stb r27,1566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1566, ctx.r27.u8);
	// addi r27,r26,24
	ctx.r27.s64 = ctx.r26.s64 + 24;
	// stb r4,1567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1567, ctx.r4.u8);
	// stb r11,1532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1532, ctx.r11.u8);
	// stb r9,1594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1594, ctx.r9.u8);
	// li r9,12
	ctx.r9.s64 = 12;
	// stb r11,1533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1533, ctx.r11.u8);
	// stb r11,1534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1534, ctx.r11.u8);
	// stb r11,1535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1535, ctx.r11.u8);
	// stb r11,1560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1560, ctx.r11.u8);
	// stb r11,1561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1561, ctx.r11.u8);
	// stb r11,1562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1562, ctx.r11.u8);
	// stb r11,1563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1563, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r9,1595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1595, ctx.r9.u8);
	// li r9,38
	ctx.r9.s64 = 38;
	// stb r4,1593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1593, ctx.r4.u8);
	// stb r4,1598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1598, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,1530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1530, ctx.r31.u8);
	// stb r31,1531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1531, ctx.r31.u8);
	// stb r31,1536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1536, ctx.r31.u8);
	// stb r31,1537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1537, ctx.r31.u8);
	// stb r8,1539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1539, ctx.r8.u8);
	// stb r31,1540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1540, ctx.r31.u8);
	// stb r31,1541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1541, ctx.r31.u8);
	// stb r31,1542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1542, ctx.r31.u8);
	// stb r31,1543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1543, ctx.r31.u8);
	// stb r31,1544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1544, ctx.r31.u8);
	// stb r31,1545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1545, ctx.r31.u8);
	// stb r8,1546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1546, ctx.r8.u8);
	// stb r7,1547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1547, ctx.r7.u8);
	// stb r31,1548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1548, ctx.r31.u8);
	// stb r31,1549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1549, ctx.r31.u8);
	// stb r31,1550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1550, ctx.r31.u8);
	// stb r31,1551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1551, ctx.r31.u8);
	// stb r31,1552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1552, ctx.r31.u8);
	// stb r31,1553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1553, ctx.r31.u8);
	// stb r31,1554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1554, ctx.r31.u8);
	// stb r31,1556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1556, ctx.r31.u8);
	// stb r31,1557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1557, ctx.r31.u8);
	// stb r31,1558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1558, ctx.r31.u8);
	// stb r31,1559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1559, ctx.r31.u8);
	// stb r31,1564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1564, ctx.r31.u8);
	// stb r31,1565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1565, ctx.r31.u8);
	// stb r31,1568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1568, ctx.r31.u8);
	// stb r31,1569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1569, ctx.r31.u8);
	// stb r31,1570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1570, ctx.r31.u8);
	// stb r31,1571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1571, ctx.r31.u8);
	// stb r31,1572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1572, ctx.r31.u8);
	// stb r31,1573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1573, ctx.r31.u8);
	// stb r10,1574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1574, ctx.r10.u8);
	// stb r17,1575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1575, ctx.r17.u8);
	// stb r31,1576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1576, ctx.r31.u8);
	// stb r31,1577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1577, ctx.r31.u8);
	// stb r31,1578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1578, ctx.r31.u8);
	// stb r31,1579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1579, ctx.r31.u8);
	// stb r31,1580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1580, ctx.r31.u8);
	// stb r31,1581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1581, ctx.r31.u8);
	// stb r31,1582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1582, ctx.r31.u8);
	// stb r10,1583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1583, ctx.r10.u8);
	// stb r31,1584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1584, ctx.r31.u8);
	// stb r31,1585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1585, ctx.r31.u8);
	// stb r31,1586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1586, ctx.r31.u8);
	// stb r31,1587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1587, ctx.r31.u8);
	// stb r31,1588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1588, ctx.r31.u8);
	// stb r31,1589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1589, ctx.r31.u8);
	// stb r31,1590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1590, ctx.r31.u8);
	// stb r11,1592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1592, ctx.r11.u8);
	// stb r31,1596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1596, ctx.r31.u8);
	// stb r31,1597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1597, ctx.r31.u8);
	// stb r9,1599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1599, ctx.r9.u8);
	// stb r31,1600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1600, ctx.r31.u8);
	// stb r31,1601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1601, ctx.r31.u8);
	// stb r31,1602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1602, ctx.r31.u8);
	// stb r11,1623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1623, ctx.r11.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// li r11,233
	ctx.r11.s64 = 233;
	// stb r3,1634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1634, ctx.r3.u8);
	// mr r3,r27
	ctx.r3.u64 = ctx.r27.u64;
	// stb r31,1603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1603, ctx.r31.u8);
	// stb r31,1604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1604, ctx.r31.u8);
	// stb r31,1605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1605, ctx.r31.u8);
	// stb r16,1606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1606, ctx.r16.u8);
	// stb r9,1607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1607, ctx.r9.u8);
	// stb r31,1608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1608, ctx.r31.u8);
	// stb r31,1609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1609, ctx.r31.u8);
	// stb r31,1610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1610, ctx.r31.u8);
	// stb r31,1611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1611, ctx.r31.u8);
	// stb r31,1612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1612, ctx.r31.u8);
	// stb r31,1613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1613, ctx.r31.u8);
	// stb r31,1614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1614, ctx.r31.u8);
	// stb r31,1615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1615, ctx.r31.u8);
	// stb r31,1616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1616, ctx.r31.u8);
	// stb r31,1617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1617, ctx.r31.u8);
	// stb r31,1618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1618, ctx.r31.u8);
	// stb r31,1619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1619, ctx.r31.u8);
	// stb r31,1620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1620, ctx.r31.u8);
	// stb r31,1621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1621, ctx.r31.u8);
	// stb r31,1622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1622, ctx.r31.u8);
	// stb r31,1624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1624, ctx.r31.u8);
	// stb r31,1625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1625, ctx.r31.u8);
	// stb r25,1626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1626, ctx.r25.u8);
	// stb r11,1627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1627, ctx.r11.u8);
	// stb r31,1628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1628, ctx.r31.u8);
	// stb r31,1629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1629, ctx.r31.u8);
	// stb r31,1630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1630, ctx.r31.u8);
	// stb r31,1631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1631, ctx.r31.u8);
	// stb r31,1632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1632, ctx.r31.u8);
	// stb r31,1633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1633, ctx.r31.u8);
	// stb r6,1635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1635, ctx.r6.u8);
	// stb r31,1636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1636, ctx.r31.u8);
	// stb r31,1637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1637, ctx.r31.u8);
	// stb r31,1638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1638, ctx.r31.u8);
	// stb r31,1639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1639, ctx.r31.u8);
	// stb r31,1640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1640, ctx.r31.u8);
	// stb r31,1641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1641, ctx.r31.u8);
	// stb r31,1642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1642, ctx.r31.u8);
	// stb r10,1643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1643, ctx.r10.u8);
	// stb r31,1644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1644, ctx.r31.u8);
	// stb r31,1645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1645, ctx.r31.u8);
	// stb r31,1646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1646, ctx.r31.u8);
	// stb r31,1647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1647, ctx.r31.u8);
	// stb r31,1648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1648, ctx.r31.u8);
	// stb r31,1649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1649, ctx.r31.u8);
	// stb r30,1650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1650, ctx.r30.u8);
	// stb r23,1651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1651, ctx.r23.u8);
	// stb r31,1652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1652, ctx.r31.u8);
	// stb r31,1653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1653, ctx.r31.u8);
	// stb r31,1654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1654, ctx.r31.u8);
	// stb r31,1655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1655, ctx.r31.u8);
	// stb r31,1656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1656, ctx.r31.u8);
	// stb r31,1657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1657, ctx.r31.u8);
	// stb r28,1658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1658, ctx.r28.u8);
	// stb r29,1659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1659, ctx.r29.u8);
	// stb r31,1660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1660, ctx.r31.u8);
	// stb r31,1661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1661, ctx.r31.u8);
	// stb r31,1662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1662, ctx.r31.u8);
	// stb r31,1663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1663, ctx.r31.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C14F0;
	sub_82B06418(ctx, base);
	// mr r3,r26
	ctx.r3.u64 = ctx.r26.u64;
	// stw r27,20(r26)
	PPC_STORE_U32(ctx.r26.u32 + 20, ctx.r27.u32);
	// addi r1,r1,1808
	ctx.r1.s64 = ctx.r1.s64 + 1808;
	// b 0x82e28e88
	__restgprlr_16(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C1500"))) PPC_WEAK_FUNC(sub_824C1500);
PPC_FUNC_IMPL(__imp__sub_824C1500) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C1508;
	__savegprlr_14(ctx, base);
	// stwu r1,-656(r1)
	ea = -656 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,409
	ctx.r9.s64 = 409;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31460
	ctx.r4.s64 = ctx.r10.s64 + 31460;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C1544;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31452
	ctx.r4.s64 = ctx.r11.s64 + 31452;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,496
	ctx.r3.s64 = ctx.r1.s64 + 496;
	// bl 0x8243b750
	ctx.lr = 0x824C155C;
	sub_8243B750(ctx, base);
	// li r10,125
	ctx.r10.s64 = 125;
	// li r11,1
	ctx.r11.s64 = 1;
	// lwz r8,496(r1)
	ctx.r8.u64 = PPC_LOAD_U32(ctx.r1.u32 + 496);
	// li r7,20
	ctx.r7.s64 = 20;
	// lwz r24,500(r1)
	ctx.r24.u64 = PPC_LOAD_U32(ctx.r1.u32 + 500);
	// li r9,25
	ctx.r9.s64 = 25;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r10,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r10.u8);
	// li r28,7
	ctx.r28.s64 = 7;
	// li r3,150
	ctx.r3.s64 = 150;
	// stb r11,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r11.u8);
	// li r4,5
	ctx.r4.s64 = 5;
	// stb r11,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r11.u8);
	// li r29,96
	ctx.r29.s64 = 96;
	// stb r9,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r9.u8);
	// li r25,119
	ctx.r25.s64 = 119;
	// stb r7,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r7.u8);
	// li r23,42
	ctx.r23.s64 = 42;
	// stb r28,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r28.u8);
	// li r10,22
	ctx.r10.s64 = 22;
	// stb r3,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r3.u8);
	// li r26,110
	ctx.r26.s64 = 110;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r27,11
	ctx.r27.s64 = 11;
	// stb r4,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r4.u8);
	// li r5,27
	ctx.r5.s64 = 27;
	// stb r25,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r25.u8);
	// stb r6,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r6.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r7,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r7.u8);
	// stb r29,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r29.u8);
	// stb r23,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r23.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// stb r28,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r28.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r26,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r26.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// stb r9,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r9.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r7,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r7.u8);
	// stb r3,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r3.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r4,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r4.u8);
	// stb r6,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r6.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r7,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r7.u8);
	// stb r29,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r29.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r27,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r27.u8);
	// stb r6,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r6.u8);
	// stb r5,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r5.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stw r8,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r8.u32);
	// li r8,78
	ctx.r8.s64 = 78;
	// stb r26,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r26.u8);
	// li r26,29
	ctx.r26.s64 = 29;
	// li r22,85
	ctx.r22.s64 = 85;
	// stw r24,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r24.u32);
	// li r20,239
	ctx.r20.s64 = 239;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// li r24,248
	ctx.r24.s64 = 248;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r8,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r8.u8);
	// li r8,15
	ctx.r8.s64 = 15;
	// stb r26,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r26.u8);
	// li r26,152
	ctx.r26.s64 = 152;
	// stb r22,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r22.u8);
	// li r22,26
	ctx.r22.s64 = 26;
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r8,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r8.u8);
	// li r8,255
	ctx.r8.s64 = 255;
	// stb r26,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r26.u8);
	// li r26,127
	ctx.r26.s64 = 127;
	// stb r22,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r22.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// stb r9,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r9.u8);
	// stb r9,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r9.u8);
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r7,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r7.u8);
	// stb r3,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r3.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r4,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r4.u8);
	// stb r6,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r6.u8);
	// stb r11,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r11.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r7,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r7.u8);
	// stb r29,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r29.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r27,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r27.u8);
	// stb r6,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r6.u8);
	// stb r5,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r5.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r20,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r20.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r10,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r10.u8);
	// stb r9,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r9.u8);
	// stb r9,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r9.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r7,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r7.u8);
	// stb r3,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r3.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r4,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r4.u8);
	// stb r6,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r6.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r7,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r7.u8);
	// stb r29,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r29.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r4,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r4.u8);
	// stb r6,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r6.u8);
	// stb r11,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r11.u8);
	// stb r8,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r8.u8);
	// stb r8,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r8.u8);
	// stb r24,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r24.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r3,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r3.u8);
	// stb r26,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r26.u8);
	// stb r5,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r5.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// li r26,94
	ctx.r26.s64 = 94;
	// stb r25,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r25.u8);
	// li r25,54
	ctx.r25.s64 = 54;
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// li r24,8
	ctx.r24.s64 = 8;
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// li r21,13
	ctx.r21.s64 = 13;
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// li r14,154
	ctx.r14.s64 = 154;
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r26,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r26.u8);
	// li r26,184
	ctx.r26.s64 = 184;
	// stb r25,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r25.u8);
	// li r25,187
	ctx.r25.s64 = 187;
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r10,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r10.u8);
	// stb r28,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r28.u8);
	// stb r26,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r26.u8);
	// li r26,153
	ctx.r26.s64 = 153;
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r24,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r24.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r26,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r26.u8);
	// stb r26,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r26.u8);
	// li r26,87
	ctx.r26.s64 = 87;
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r7,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r7.u8);
	// stb r23,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r23.u8);
	// stb r10,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r10.u8);
	// stb r26,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r26.u8);
	// li r26,176
	ctx.r26.s64 = 176;
	// stb r28,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r28.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// stb r24,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r24.u8);
	// stb r5,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r5.u8);
	// stb r26,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r26.u8);
	// li r26,36
	ctx.r26.s64 = 36;
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r25,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r25.u8);
	// stb r26,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r26.u8);
	// li r26,219
	ctx.r26.s64 = 219;
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r11,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r11.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r7,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r7.u8);
	// stb r10,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r10.u8);
	// stb r9,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r9.u8);
	// stb r11,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r11.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r7,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r7.u8);
	// stb r3,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r3.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r21,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r21.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r5,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r5.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r10,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r10.u8);
	// stb r28,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r28.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r26,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r26.u8);
	// stb r14,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r14.u8);
	// stb r9,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r9.u8);
	// stb r9,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r9.u8);
	// stb r11,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r11.u8);
	// stb r8,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r8.u8);
	// stb r8,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r8.u8);
	// li r25,247
	ctx.r25.s64 = 247;
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// li r26,97
	ctx.r26.s64 = 97;
	// stb r4,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r4.u8);
	// li r17,145
	ctx.r17.s64 = 145;
	// stb r6,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r6.u8);
	// li r15,226
	ctx.r15.s64 = 226;
	// stb r11,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r11.u8);
	// li r22,245
	ctx.r22.s64 = 245;
	// stb r8,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r8.u8);
	// li r16,38
	ctx.r16.s64 = 38;
	// stb r25,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r25.u8);
	// li r18,6
	ctx.r18.s64 = 6;
	// stb r8,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r8.u8);
	// li r19,174
	ctx.r19.s64 = 174;
	// stb r25,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r25.u8);
	// stb r15,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r15.u8);
	// stb r3,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r3.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r4,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r4.u8);
	// stb r6,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r6.u8);
	// stb r11,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r11.u8);
	// stb r8,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r8.u8);
	// stb r8,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r8.u8);
	// stb r22,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r22.u8);
	// stb r20,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r20.u8);
	// stb r16,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r16.u8);
	// stb r10,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r10.u8);
	// stb r26,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r26.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r5,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r5.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r23,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r23.u8);
	// stb r17,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r17.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r10,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r10.u8);
	// stb r10,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r10.u8);
	// stb r18,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r18.u8);
	// stb r11,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r11.u8);
	// stb r24,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r24.u8);
	// stb r26,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r26.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r19,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r19.u8);
	// stb r5,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r5.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r23,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r23.u8);
	// stb r17,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r17.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r10,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r10.u8);
	// stb r9,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r9.u8);
	// stb r9,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r9.u8);
	// stb r11,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r11.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r7,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r7.u8);
	// stb r3,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r3.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r4,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r4.u8);
	// stb r6,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r6.u8);
	// stb r11,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r11.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r7,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r7.u8);
	// stb r29,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r29.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r27,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r27.u8);
	// stb r6,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r6.u8);
	// stb r5,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r5.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r28,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r28.u8);
	// li r17,232
	ctx.r17.s64 = 232;
	// li r28,70
	ctx.r28.s64 = 70;
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// li r23,44
	ctx.r23.s64 = 44;
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r17,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r17.u8);
	// li r17,88
	ctx.r17.s64 = 88;
	// stb r28,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r28.u8);
	// li r28,30
	ctx.r28.s64 = 30;
	// stb r23,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r23.u8);
	// stb r10,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r10.u8);
	// stb r10,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r10.u8);
	// stb r17,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r17.u8);
	// li r17,202
	ctx.r17.s64 = 202;
	// stb r28,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r28.u8);
	// li r28,63
	ctx.r28.s64 = 63;
	// stb r10,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r10.u8);
	// stb r9,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r9.u8);
	// stb r11,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r11.u8);
	// stb r17,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r17.u8);
	// li r17,36
	ctx.r17.s64 = 36;
	// stb r28,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r28.u8);
	// li r28,115
	ctx.r28.s64 = 115;
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r7,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r7.u8);
	// stb r3,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r3.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r21,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r21.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r5,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r5.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r17,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r17.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r10,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r10.u8);
	// stb r11,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r11.u8);
	// stb r14,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r14.u8);
	// stb r9,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r9.u8);
	// stb r9,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r9.u8);
	// stb r11,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r11.u8);
	// stb r8,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r8.u8);
	// stb r8,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r8.u8);
	// stb r25,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r25.u8);
	// stb r15,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r15.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r4,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r4.u8);
	// stb r6,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r6.u8);
	// stb r11,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r11.u8);
	// stb r8,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r8.u8);
	// stb r8,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r8.u8);
	// stb r25,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r25.u8);
	// stb r3,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r3.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r4,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r4.u8);
	// stb r6,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r6.u8);
	// stb r11,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r11.u8);
	// stb r8,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r8.u8);
	// stb r8,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r8.u8);
	// stb r22,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r22.u8);
	// stb r20,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r20.u8);
	// stb r16,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r16.u8);
	// stb r10,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r10.u8);
	// stb r26,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r26.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r10,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r10.u8);
	// stb r18,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r18.u8);
	// stb r11,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r11.u8);
	// stb r28,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r28.u8);
	// stb r26,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r26.u8);
	// stb r11,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r11.u8);
	// li r28,43
	ctx.r28.s64 = 43;
	// stb r11,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r10,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r10.u8);
	// stb r9,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r9.u8);
	// stb r9,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r9.u8);
	// li r9,12
	ctx.r9.s64 = 12;
	// stb r28,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r28.u8);
	// li r28,129
	ctx.r28.s64 = 129;
	// stb r11,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r11.u8);
	// li r11,161
	ctx.r11.s64 = 161;
	// stb r10,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r10.u8);
	// stb r10,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r10.u8);
	// stb r10,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r10.u8);
	// li r10,84
	ctx.r10.s64 = 84;
	// stb r5,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r5.u8);
	// stb r4,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r29,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r5,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r5.u8);
	// li r5,409
	ctx.r5.s64 = 409;
	// stb r11,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r11.u8);
	// stb r11,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r19,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r19.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r28,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r28.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r7,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r7.u8);
	// stb r3,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r3.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r6,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r6.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r7,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r7.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r27,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r27.u8);
	// stb r6,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r6.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r23,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r23.u8);
	// stb r22,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r22.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r21,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r21.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r10,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r10.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r24,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r24.u8);
	// stb r27,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r27.u8);
	// stb r9,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r9.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r10,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r10.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r11,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r11,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r8,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r8.u8);
	// stb r8,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r8.u8);
	// stb r11,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C1CE0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,656
	ctx.r1.s64 = ctx.r1.s64 + 656;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C1CF0"))) PPC_WEAK_FUNC(sub_824C1CF0);
PPC_FUNC_IMPL(__imp__sub_824C1CF0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e44
	ctx.lr = 0x824C1CF8;
	__savegprlr_19(ctx, base);
	// stwu r1,-448(r1)
	ea = -448 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,237
	ctx.r9.s64 = 237;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31508
	ctx.r4.s64 = ctx.r10.s64 + 31508;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C1D34;
	sub_822E0818(ctx, base);
	// lis r11,-32255
	ctx.r11.s64 = -2113863680;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,-12560
	ctx.r4.s64 = ctx.r11.s64 + -12560;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,320
	ctx.r3.s64 = ctx.r1.s64 + 320;
	// bl 0x8243b750
	ctx.lr = 0x824C1D4C;
	sub_8243B750(ctx, base);
	// li r9,139
	ctx.r9.s64 = 139;
	// li r23,245
	ctx.r23.s64 = 245;
	// lwz r26,320(r1)
	ctx.r26.u64 = PPC_LOAD_U32(ctx.r1.u32 + 320);
	// li r11,1
	ctx.r11.s64 = 1;
	// lwz r25,324(r1)
	ctx.r25.u64 = PPC_LOAD_U32(ctx.r1.u32 + 324);
	// li r3,7
	ctx.r3.s64 = 7;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r4,150
	ctx.r4.s64 = 150;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r9,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r9.u8);
	// li r9,154
	ctx.r9.s64 = 154;
	// stb r23,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r23.u8);
	// li r23,239
	ctx.r23.s64 = 239;
	// li r7,22
	ctx.r7.s64 = 22;
	// stb r11,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r11.u8);
	// li r8,25
	ctx.r8.s64 = 25;
	// stb r3,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r3.u8);
	// li r29,247
	ctx.r29.s64 = 247;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// li r9,255
	ctx.r9.s64 = 255;
	// stb r23,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r23.u8);
	// li r5,5
	ctx.r5.s64 = 5;
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r4,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r4.u8);
	// li r24,234
	ctx.r24.s64 = 234;
	// stb r7,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r7.u8);
	// li r27,119
	ctx.r27.s64 = 119;
	// stb r3,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r3.u8);
	// li r10,20
	ctx.r10.s64 = 20;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// li r28,42
	ctx.r28.s64 = 42;
	// stb r8,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r8.u8);
	// li r20,226
	ctx.r20.s64 = 226;
	// stb r8,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r8.u8);
	// li r23,38
	ctx.r23.s64 = 38;
	// stb r24,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r24.u8);
	// stb r27,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r27.u8);
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// stb r28,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r28.u8);
	// stb r11,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r11.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// stb r29,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r29.u8);
	// stb r20,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r20.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r5,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r5.u8);
	// stb r6,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r6.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r9,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r9.u8);
	// stb r29,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r29.u8);
	// stb r4,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r4.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r5,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r5.u8);
	// stb r6,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r6.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// stb r23,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r23.u8);
	// stb r7,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r7.u8);
	// stw r25,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r25.u32);
	// li r25,12
	ctx.r25.s64 = 12;
	// stw r26,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r26.u32);
	// li r26,24
	ctx.r26.s64 = 24;
	// li r23,136
	ctx.r23.s64 = 136;
	// stb r3,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r3.u8);
	// li r21,153
	ctx.r21.s64 = 153;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// li r22,15
	ctx.r22.s64 = 15;
	// stb r27,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r27.u8);
	// stb r25,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r25.u8);
	// li r25,246
	ctx.r25.s64 = 246;
	// stb r26,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r26.u8);
	// li r26,18
	ctx.r26.s64 = 18;
	// stb r23,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r23.u8);
	// li r23,130
	ctx.r23.s64 = 130;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r25,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r25.u8);
	// li r25,89
	ctx.r25.s64 = 89;
	// stb r26,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r26.u8);
	// li r26,99
	ctx.r26.s64 = 99;
	// stb r23,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r23.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r10,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r10.u8);
	// stb r25,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r25.u8);
	// li r25,233
	ctx.r25.s64 = 233;
	// stb r21,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r21.u8);
	// stb r28,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r28.u8);
	// stb r7,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r7.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r25,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r25.u8);
	// li r25,61
	ctx.r25.s64 = 61;
	// stb r27,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r27.u8);
	// stb r8,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r8.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r10,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r10.u8);
	// stb r4,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r4.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r5,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r5.u8);
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r10,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r10.u8);
	// stb r26,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r26.u8);
	// stb r28,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r28.u8);
	// stb r7,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r7.u8);
	// stb r7,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r7.u8);
	// stb r22,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r22.u8);
	// stb r8,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r8.u8);
	// stb r8,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r8.u8);
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// stb r4,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r4.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r5,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r5.u8);
	// stb r6,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r6.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r10,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r10.u8);
	// stb r26,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r26.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r5,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r5.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r9,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r9.u8);
	// stb r9,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r9.u8);
	// stb r11,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r11.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r25,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r25.u8);
	// stb r8,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r8.u8);
	// stb r8,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r8.u8);
	// stb r11,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r11.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r26,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r26.u8);
	// li r26,16
	ctx.r26.s64 = 16;
	// li r19,169
	ctx.r19.s64 = 169;
	// stb r22,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r22.u8);
	// li r25,27
	ctx.r25.s64 = 27;
	// stb r10,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r10.u8);
	// li r23,6
	ctx.r23.s64 = 6;
	// stb r4,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r4.u8);
	// li r22,46
	ctx.r22.s64 = 46;
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r26,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r26.u8);
	// li r26,53
	ctx.r26.s64 = 53;
	// stb r19,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r19.u8);
	// li r19,21
	ctx.r19.s64 = 21;
	// stb r5,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r5.u8);
	// stb r6,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r6.u8);
	// stb r11,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r11.u8);
	// stb r26,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r26.u8);
	// li r26,86
	ctx.r26.s64 = 86;
	// stb r19,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r19.u8);
	// li r19,94
	ctx.r19.s64 = 94;
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// stb r26,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r26.u8);
	// li r26,188
	ctx.r26.s64 = 188;
	// stb r19,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r19.u8);
	// li r19,185
	ctx.r19.s64 = 185;
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r25,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r25.u8);
	// stb r26,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r26.u8);
	// stb r26,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r26.u8);
	// li r26,187
	ctx.r26.s64 = 187;
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r7,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r7.u8);
	// stb r23,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r23.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r8,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r8.u8);
	// stb r11,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r11.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r10,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r10.u8);
	// stb r4,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r4.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r25,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r25.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r19,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r19.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r10,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r10.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r10,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r10.u8);
	// stb r21,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r21.u8);
	// stb r7,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r7.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r10,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r10.u8);
	// stb r26,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r26.u8);
	// stb r22,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r22.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// li r22,67
	ctx.r22.s64 = 67;
	// stb r11,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r11.u8);
	// stb r11,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r11.u8);
	// li r11,66
	ctx.r11.s64 = 66;
	// stb r10,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r10.u8);
	// stb r10,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r10.u8);
	// li r10,45
	ctx.r10.s64 = 45;
	// stb r29,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r29.u8);
	// stb r29,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r11,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r11.u8);
	// li r11,121
	ctx.r11.s64 = 121;
	// stb r5,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r5.u8);
	// stb r5,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r5.u8);
	// li r5,237
	ctx.r5.s64 = 237;
	// stb r4,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r3,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r3.u8);
	// stb r11,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r11.u8);
	// li r11,85
	ctx.r11.s64 = 85;
	// stb r3,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r22,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r22.u8);
	// stb r11,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r11.u8);
	// li r11,59
	ctx.r11.s64 = 59;
	// stb r8,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r8.u8);
	// stb r9,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r9.u8);
	// stb r9,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r9.u8);
	// stb r20,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r20.u8);
	// stb r11,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r6,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r6.u8);
	// stb r9,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r9.u8);
	// stb r9,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r9.u8);
	// stb r11,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r24,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r24.u8);
	// stb r27,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r27.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r26,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r26.u8);
	// stb r28,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r28.u8);
	// stb r7,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r7.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r24,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r24.u8);
	// stb r8,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r8.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r26,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r26.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r23,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r23.u8);
	// stb r6,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r6.u8);
	// stb r10,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r10.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r25,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r25.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r7,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r7.u8);
	// stb r6,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r6.u8);
	// stb r11,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C21F0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,448
	ctx.r1.s64 = ctx.r1.s64 + 448;
	// b 0x82e28e94
	__restgprlr_19(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C2200"))) PPC_WEAK_FUNC(sub_824C2200);
PPC_FUNC_IMPL(__imp__sub_824C2200) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e44
	ctx.lr = 0x824C2208;
	__savegprlr_19(ctx, base);
	// stwu r1,-464(r1)
	ea = -464 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,250
	ctx.r9.s64 = 250;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31588
	ctx.r4.s64 = ctx.r10.s64 + 31588;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C2244;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31560
	ctx.r4.s64 = ctx.r11.s64 + 31560;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,336
	ctx.r3.s64 = ctx.r1.s64 + 336;
	// bl 0x8243b750
	ctx.lr = 0x824C225C;
	sub_8243B750(ctx, base);
	// li r10,24
	ctx.r10.s64 = 24;
	// li r11,130
	ctx.r11.s64 = 130;
	// lwz r6,336(r1)
	ctx.r6.u64 = PPC_LOAD_U32(ctx.r1.u32 + 336);
	// li r28,119
	ctx.r28.s64 = 119;
	// lwz r26,340(r1)
	ctx.r26.u64 = PPC_LOAD_U32(ctx.r1.u32 + 340);
	// li r29,42
	ctx.r29.s64 = 42;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,22
	ctx.r7.s64 = 22;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r10,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r10.u8);
	// li r10,9
	ctx.r10.s64 = 9;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// li r3,7
	ctx.r3.s64 = 7;
	// stb r28,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r28.u8);
	// li r27,236
	ctx.r27.s64 = 236;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r4,150
	ctx.r4.s64 = 150;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// li r20,179
	ctx.r20.s64 = 179;
	// stb r11,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r11.u8);
	// li r9,25
	ctx.r9.s64 = 25;
	// stb r3,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r3.u8);
	// li r5,5
	ctx.r5.s64 = 5;
	// stb r27,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r27.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r29,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r29.u8);
	// li r24,96
	ctx.r24.s64 = 96;
	// stb r7,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r7.u8);
	// stb r20,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r20.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r28,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r28.u8);
	// stb r10,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r10.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// stb r4,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r4.u8);
	// stb r29,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r29.u8);
	// stb r7,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r7.u8);
	// stb r7,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r7.u8);
	// stb r3,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r3.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r27,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r27.u8);
	// stb r28,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r28.u8);
	// stb r9,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r9.u8);
	// stb r10,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r10.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r11.u8);
	// stb r4,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r4.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r5,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r5.u8);
	// stb r8,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r8.u8);
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r11,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r11.u8);
	// stb r24,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r24.u8);
	// stb r29,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r29.u8);
	// stw r26,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r26.u32);
	// li r26,247
	ctx.r26.s64 = 247;
	// li r25,87
	ctx.r25.s64 = 87;
	// stw r6,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r6.u32);
	// li r23,30
	ctx.r23.s64 = 30;
	// stb r7,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r7.u8);
	// li r6,154
	ctx.r6.s64 = 154;
	// stb r3,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r3.u8);
	// li r21,32
	ctx.r21.s64 = 32;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r26,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r26.u8);
	// li r22,6
	ctx.r22.s64 = 6;
	// stb r26,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r26.u8);
	// li r26,245
	ctx.r26.s64 = 245;
	// stb r25,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r25.u8);
	// li r25,226
	ctx.r25.s64 = 226;
	// stb r23,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r23.u8);
	// li r23,65
	ctx.r23.s64 = 65;
	// stb r6,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r6.u8);
	// li r6,255
	ctx.r6.s64 = 255;
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// stb r26,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r26.u8);
	// li r26,239
	ctx.r26.s64 = 239;
	// stb r25,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r25.u8);
	// li r25,177
	ctx.r25.s64 = 177;
	// stb r23,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r23.u8);
	// li r23,136
	ctx.r23.s64 = 136;
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// stb r26,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r26.u8);
	// li r26,38
	ctx.r26.s64 = 38;
	// stb r6,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r6.u8);
	// stb r6,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r6.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r5,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r5.u8);
	// stb r26,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r26.u8);
	// li r26,15
	ctx.r26.s64 = 15;
	// stb r8,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r8.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// stb r6,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r6.u8);
	// stb r6,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r6.u8);
	// stb r4,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r4.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r5,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r5.u8);
	// stb r8,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r8.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r6,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r6.u8);
	// stb r6,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r6.u8);
	// stb r7,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r7.u8);
	// stb r26,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r26.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r25,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r25.u8);
	// stb r21,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r21.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r22,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r22.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r23,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r23.u8);
	// stb r26,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r26.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r11,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r11.u8);
	// stb r25,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r25.u8);
	// stb r9,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r9.u8);
	// stb r9,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r9.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r4,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r4.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// stb r8,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r8.u8);
	// stb r10,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r10.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// stb r3,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r3.u8);
	// li r3,18
	ctx.r3.s64 = 18;
	// stb r21,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r21.u8);
	// li r21,173
	ctx.r21.s64 = 173;
	// stb r6,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r6.u8);
	// li r19,192
	ctx.r19.s64 = 192;
	// stb r6,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r6.u8);
	// li r6,246
	ctx.r6.s64 = 246;
	// li r26,27
	ctx.r26.s64 = 27;
	// stb r24,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r24.u8);
	// stb r3,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r3.u8);
	// li r23,43
	ctx.r23.s64 = 43;
	// stb r3,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r3.u8);
	// stb r21,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r21.u8);
	// li r21,77
	ctx.r21.s64 = 77;
	// stb r3,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r3.u8);
	// li r3,156
	ctx.r3.s64 = 156;
	// stb r19,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r19.u8);
	// li r19,89
	ctx.r19.s64 = 89;
	// stb r6,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r6.u8);
	// li r6,135
	ctx.r6.s64 = 135;
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r21,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r21.u8);
	// li r21,28
	ctx.r21.s64 = 28;
	// stb r3,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r3.u8);
	// li r3,12
	ctx.r3.s64 = 12;
	// stb r9,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r9.u8);
	// stb r8,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r8.u8);
	// stb r26,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r26.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r23,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r23.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r9,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r9.u8);
	// stb r10,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r10.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// stb r4,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r4.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r5,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r5.u8);
	// stb r8,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r8.u8);
	// stb r10,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r10.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// stb r19,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r19.u8);
	// stb r7,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r7.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r27,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r27.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r8,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r8.u8);
	// stb r21,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r21.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r9,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r9.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// stb r20,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r20.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r5,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r5.u8);
	// stb r3,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r3.u8);
	// stb r10,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r10.u8);
	// stb r6,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r6.u8);
	// stb r9,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r9.u8);
	// stb r9,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r9.u8);
	// stb r10,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r10.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r11,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r11.u8);
	// stb r4,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r4.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r5,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r5.u8);
	// li r6,11
	ctx.r6.s64 = 11;
	// stb r10,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r10.u8);
	// stb r10,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r10.u8);
	// li r10,80
	ctx.r10.s64 = 80;
	// stb r7,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r7.u8);
	// li r5,250
	ctx.r5.s64 = 250;
	// stb r9,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r9.u8);
	// li r9,45
	ctx.r9.s64 = 45;
	// stb r7,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r7.u8);
	// stb r6,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r6.u8);
	// li r6,33
	ctx.r6.s64 = 33;
	// stb r10,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r10.u8);
	// li r10,176
	ctx.r10.s64 = 176;
	// stb r7,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r7.u8);
	// li r7,39
	ctx.r7.s64 = 39;
	// stb r4,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r29,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r6,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r6.u8);
	// li r6,56
	ctx.r6.s64 = 56;
	// stb r10,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r10.u8);
	// stb r10,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r10.u8);
	// li r10,58
	ctx.r10.s64 = 58;
	// stb r8,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r8.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r6,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r6.u8);
	// li r6,57
	ctx.r6.s64 = 57;
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// stb r24,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r24.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r3,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r3.u8);
	// stb r26,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r26.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r23,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r23.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r6,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r6.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r11,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r11.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r3,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r3.u8);
	// stb r3,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r3.u8);
	// stb r26,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r26.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r28,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r28.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r11,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r11.u8);
	// stb r25,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r25.u8);
	// stb r11,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r11.u8);
	// stb r9,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r9.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r11,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r11.u8);
	// stb r7,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r7.u8);
	// stb r22,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r22.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r27,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r27.u8);
	// stb r8,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r8.u8);
	// stb r9,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r9.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r11,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r11.u8);
	// stb r8,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r8.u8);
	// stb r10,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r10.u8);
	// stb r11,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r11.u8);
	// li r11,178
	ctx.r11.s64 = 178;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r11,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C2740;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,464
	ctx.r1.s64 = ctx.r1.s64 + 464;
	// b 0x82e28e94
	__restgprlr_19(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C2750"))) PPC_WEAK_FUNC(sub_824C2750);
PPC_FUNC_IMPL(__imp__sub_824C2750) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C2758;
	__savegprlr_14(ctx, base);
	// stwu r1,-624(r1)
	ea = -624 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,370
	ctx.r9.s64 = 370;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31668
	ctx.r4.s64 = ctx.r10.s64 + 31668;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C2794;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31652
	ctx.r4.s64 = ctx.r11.s64 + 31652;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,456
	ctx.r3.s64 = ctx.r1.s64 + 456;
	// bl 0x8243b750
	ctx.lr = 0x824C27AC;
	sub_8243B750(ctx, base);
	// li r10,46
	ctx.r10.s64 = 46;
	// li r8,111
	ctx.r8.s64 = 111;
	// lwz r6,456(r1)
	ctx.r6.u64 = PPC_LOAD_U32(ctx.r1.u32 + 456);
	// li r11,51
	ctx.r11.s64 = 51;
	// lwz r5,460(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 460);
	// li r9,201
	ctx.r9.s64 = 201;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r28,27
	ctx.r28.s64 = 27;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// li r10,97
	ctx.r10.s64 = 97;
	// stb r8,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r8.u8);
	// li r25,42
	ctx.r25.s64 = 42;
	// li r29,15
	ctx.r29.s64 = 15;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// li r4,7
	ctx.r4.s64 = 7;
	// stb r11,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r11.u8);
	// li r7,1
	ctx.r7.s64 = 1;
	// stb r9,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r9.u8);
	// stb r10,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r10.u8);
	// li r10,26
	ctx.r10.s64 = 26;
	// li r21,119
	ctx.r21.s64 = 119;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// li r8,25
	ctx.r8.s64 = 25;
	// stb r29,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r29.u8);
	// li r22,11
	ctx.r22.s64 = 11;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r28,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r28.u8);
	// stb r10,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r10.u8);
	// li r10,197
	ctx.r10.s64 = 197;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r25,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r25.u8);
	// stb r10,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r10.u8);
	// li r10,22
	ctx.r10.s64 = 22;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r10,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r10.u8);
	// stb r4,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r4.u8);
	// stb r7,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r7.u8);
	// stb r21,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r21.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r11.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// stb r25,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r25.u8);
	// stb r10,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r10.u8);
	// stb r8,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r8.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r22,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r22.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r28,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r28.u8);
	// li r3,45
	ctx.r3.s64 = 45;
	// stw r6,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r6.u32);
	// stw r5,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r5.u32);
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r29,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r29.u8);
	// li r5,5
	ctx.r5.s64 = 5;
	// li r27,87
	ctx.r27.s64 = 87;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// li r23,33
	ctx.r23.s64 = 33;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r3,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r3.u8);
	// li r3,80
	ctx.r3.s64 = 80;
	// li r29,200
	ctx.r29.s64 = 200;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// li r19,28
	ctx.r19.s64 = 28;
	// stb r6,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r6.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r3,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r3.u8);
	// stb r3,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r3.u8);
	// li r3,9
	ctx.r3.s64 = 9;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r10,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r10.u8);
	// stb r4,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r4.u8);
	// stb r3,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r3.u8);
	// li r3,56
	ctx.r3.s64 = 56;
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// stb r23,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r23.u8);
	// stb r21,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r21.u8);
	// stb r8,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r8.u8);
	// stb r3,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r3.u8);
	// li r3,129
	ctx.r3.s64 = 129;
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r11,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r11.u8);
	// stb r3,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r3.u8);
	// li r3,40
	ctx.r3.s64 = 40;
	// stb r9,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r9.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r5,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r5.u8);
	// stb r6,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r6.u8);
	// stb r3,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r3.u8);
	// li r3,31
	ctx.r3.s64 = 31;
	// stb r7,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r7.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r27,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r27.u8);
	// stb r3,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r3.u8);
	// li r3,202
	ctx.r3.s64 = 202;
	// stb r25,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r25.u8);
	// stb r10,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r10.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r29,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r29.u8);
	// stb r8,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r8.u8);
	// stb r8,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r8.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r9,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r9.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r5,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r5.u8);
	// stb r6,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r6.u8);
	// stb r7,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r7.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r27,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r27.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r6,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r6.u8);
	// stb r19,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r19.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r10,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r10.u8);
	// stb r4,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r4.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// li r26,176
	ctx.r26.s64 = 176;
	// stb r3,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r3.u8);
	// li r3,44
	ctx.r3.s64 = 44;
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// li r24,78
	ctx.r24.s64 = 78;
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// li r20,154
	ctx.r20.s64 = 154;
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// li r15,82
	ctx.r15.s64 = 82;
	// stb r11,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r11.u8);
	// stb r26,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r26.u8);
	// li r16,213
	ctx.r16.s64 = 213;
	// li r26,20
	ctx.r26.s64 = 20;
	// stb r29,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r29.u8);
	// stb r3,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r3.u8);
	// stb r20,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r20.u8);
	// stb r5,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r5.u8);
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// stb r4,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r4.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r21,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r21.u8);
	// stb r8,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r8.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// stb r9,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r9.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r5,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r5.u8);
	// stb r6,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r6.u8);
	// stb r7,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r7.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r27,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r27.u8);
	// stb r24,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r24.u8);
	// stb r25,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r25.u8);
	// stb r10,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r10.u8);
	// stb r8,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r8.u8);
	// stb r8,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r8.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r11,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r11.u8);
	// stb r9,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r9.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r5,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r5.u8);
	// stb r6,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r6.u8);
	// stb r7,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r7.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r27,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r27.u8);
	// stb r24,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r24.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r26,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r26.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r28,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r28.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r15,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r15.u8);
	// stb r16,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r16.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r11,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r11.u8);
	// stb r9,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r9.u8);
	// stb r3,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r3.u8);
	// stb r5,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r5.u8);
	// stb r3,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r3.u8);
	// stb r29,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r29.u8);
	// stb r10,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r10.u8);
	// stb r8,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r8.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// stb r9,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r9.u8);
	// li r26,14
	ctx.r26.s64 = 14;
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r31,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r31.u8);
	// li r17,83
	ctx.r17.s64 = 83;
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// li r18,76
	ctx.r18.s64 = 76;
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r26,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r26.u8);
	// li r26,8
	ctx.r26.s64 = 8;
	// stb r14,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r14.u8);
	// li r14,24
	ctx.r14.s64 = 24;
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r17,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r17.u8);
	// stb r18,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r18.u8);
	// stb r26,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r26.u8);
	// li r26,39
	ctx.r26.s64 = 39;
	// stb r14,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r14.u8);
	// li r14,10
	ctx.r14.s64 = 10;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r26,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r26.u8);
	// li r26,6
	ctx.r26.s64 = 6;
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r3,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r3.u8);
	// stb r10,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r10.u8);
	// stb r7,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r7.u8);
	// stb r26,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r26.u8);
	// stb r23,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r23.u8);
	// stb r4,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r4.u8);
	// stb r7,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r7.u8);
	// stb r23,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r23.u8);
	// stb r20,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r20.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r11,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r11.u8);
	// stb r29,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r29.u8);
	// stb r3,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r3.u8);
	// stb r26,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r26.u8);
	// stb r10,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r10.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r14,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r14.u8);
	// stb r20,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r20.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r11,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r11.u8);
	// stb r29,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r29.u8);
	// stb r3,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r3.u8);
	// stb r4,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r4.u8);
	// stb r10,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r10.u8);
	// stb r10,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r10.u8);
	// stb r4,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r4.u8);
	// stb r7,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r7.u8);
	// stb r23,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r23.u8);
	// stb r21,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r21.u8);
	// stb r8,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r8.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r11,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r11.u8);
	// stb r9,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r9.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r5,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r5.u8);
	// stb r6,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r6.u8);
	// stb r7,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r7.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r27,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r27.u8);
	// stb r24,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r24.u8);
	// stb r25,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r25.u8);
	// stb r10,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r10.u8);
	// stb r8,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r8.u8);
	// stb r8,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r8.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r11,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r11.u8);
	// stb r5,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r5.u8);
	// li r5,23
	ctx.r5.s64 = 23;
	// stb r3,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r3.u8);
	// li r3,235
	ctx.r3.s64 = 235;
	// stb r27,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r27.u8);
	// li r25,89
	ctx.r25.s64 = 89;
	// li r27,77
	ctx.r27.s64 = 77;
	// stb r29,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r29.u8);
	// stb r29,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r5,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r5.u8);
	// li r5,129
	ctx.r5.s64 = 129;
	// stb r3,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r3.u8);
	// li r3,81
	ctx.r3.s64 = 81;
	// stb r4,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r9,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r9.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r5,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r5.u8);
	// li r5,370
	ctx.r5.s64 = 370;
	// stb r6,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r6.u8);
	// stb r7,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r7.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r24,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r24.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r28,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r28.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r15,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r15.u8);
	// stb r16,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r16.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r11,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r11.u8);
	// stb r9,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r9.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r11,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r11.u8);
	// stb r10,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r10.u8);
	// stb r7,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r7.u8);
	// stb r18,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r18.u8);
	// stb r8,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r8.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r11,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r11.u8);
	// stb r9,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r9.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r26,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r26.u8);
	// stb r6,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r6.u8);
	// stb r19,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r19.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r25,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r25.u8);
	// stb r10,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r10.u8);
	// stb r10,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r10.u8);
	// stb r8,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r8.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r11,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r11.u8);
	// stb r9,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r9.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r22,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r22.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r28,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r28.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r3,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r3.u8);
	// stb r27,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r27.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r7,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r7.u8);
	// li r7,111
	ctx.r7.s64 = 111;
	// stb r11,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r11.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r11,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r11.u8);
	// li r11,241
	ctx.r11.s64 = 241;
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r7,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r7.u8);
	// li r7,68
	ctx.r7.s64 = 68;
	// stb r10,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r10.u8);
	// stb r26,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r26.u8);
	// stb r8,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r8.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r9,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r9.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r22,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r22.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r28,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r28.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r27,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r27.u8);
	// stb r7,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r7.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r10,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r10.u8);
	// stb r8,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r8.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r9,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r9.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r26,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r26.u8);
	// stb r6,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r6.u8);
	// stb r19,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r19.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r25,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r25.u8);
	// stb r11,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r11.u8);
	// stb r10,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r10.u8);
	// stb r6,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r6.u8);
	// stb r22,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r22.u8);
	// stb r17,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r17.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C2E74;
	sub_82B06418(ctx, base);
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// addi r1,r1,624
	ctx.r1.s64 = ctx.r1.s64 + 624;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C2E88"))) PPC_WEAK_FUNC(sub_824C2E88);
PPC_FUNC_IMPL(__imp__sub_824C2E88) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C2E90;
	__savegprlr_14(ctx, base);
	// stwu r1,-1120(r1)
	ea = -1120 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r28,r3
	ctx.r28.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r28,4
	ctx.r3.s64 = ctx.r28.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,858
	ctx.r9.s64 = 858;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31716
	ctx.r4.s64 = ctx.r10.s64 + 31716;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r28)
	PPC_STORE_U32(ctx.r28.u32 + 0, ctx.r11.u32);
	// stw r9,16(r28)
	PPC_STORE_U32(ctx.r28.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C2ECC;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31704
	ctx.r4.s64 = ctx.r11.s64 + 31704;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,944
	ctx.r3.s64 = ctx.r1.s64 + 944;
	// bl 0x8243b750
	ctx.lr = 0x824C2EE4;
	sub_8243B750(ctx, base);
	// li r11,11
	ctx.r11.s64 = 11;
	// li r10,9
	ctx.r10.s64 = 9;
	// lwz r27,944(r1)
	ctx.r27.u64 = PPC_LOAD_U32(ctx.r1.u32 + 944);
	// li r9,1
	ctx.r9.s64 = 1;
	// lwz r24,948(r1)
	ctx.r24.u64 = PPC_LOAD_U32(ctx.r1.u32 + 948);
	// li r17,130
	ctx.r17.s64 = 130;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r11.u8);
	// li r6,247
	ctx.r6.s64 = 247;
	// stb r11,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r11.u8);
	// li r11,85
	ctx.r11.s64 = 85;
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// li r10,114
	ctx.r10.s64 = 114;
	// li r30,4
	ctx.r30.s64 = 4;
	// stb r17,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r17.u8);
	// li r5,7
	ctx.r5.s64 = 7;
	// stb r17,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r17.u8);
	// li r18,226
	ctx.r18.s64 = 226;
	// stb r7,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r7.u8);
	// stb r11,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r25,5
	ctx.r25.s64 = 5;
	// li r19,150
	ctx.r19.s64 = 150;
	// stb r7,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r7.u8);
	// li r4,6
	ctx.r4.s64 = 6;
	// stb r5,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r5.u8);
	// li r3,45
	ctx.r3.s64 = 45;
	// stb r9,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r9.u8);
	// li r20,67
	ctx.r20.s64 = 67;
	// stb r11,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r11.u8);
	// li r26,24
	ctx.r26.s64 = 24;
	// stb r11,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r11.u8);
	// li r10,49
	ctx.r10.s64 = 49;
	// stb r6,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r6.u8);
	// stb r18,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r18.u8);
	// li r29,237
	ctx.r29.s64 = 237;
	// stb r25,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r25.u8);
	// stb r30,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r30.u8);
	// stb r9,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r9.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// stb r6,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r6.u8);
	// stb r19,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r19.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r4,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r4.u8);
	// stb r30,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r30.u8);
	// stb r3,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r3.u8);
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// stb r11,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r11.u8);
	// stb r11,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r11.u8);
	// stb r20,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r20.u8);
	// stb r26,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r26.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stw r27,24(r28)
	PPC_STORE_U32(ctx.r28.u32 + 24, ctx.r27.u32);
	// li r27,254
	ctx.r27.s64 = 254;
	// li r22,14
	ctx.r22.s64 = 14;
	// stw r24,28(r28)
	PPC_STORE_U32(ctx.r28.u32 + 28, ctx.r24.u32);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r29,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r29.u8);
	// li r23,42
	ctx.r23.s64 = 42;
	// stb r26,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r26.u8);
	// li r14,46
	ctx.r14.s64 = 46;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r27,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r27.u8);
	// li r24,231
	ctx.r24.s64 = 231;
	// stb r27,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r27.u8);
	// li r27,246
	ctx.r27.s64 = 246;
	// stb r22,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r22.u8);
	// li r22,144
	ctx.r22.s64 = 144;
	// li r16,119
	ctx.r16.s64 = 119;
	// stb r23,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r23.u8);
	// li r21,15
	ctx.r21.s64 = 15;
	// stb r8,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r8.u8);
	// stb r8,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r8.u8);
	// stb r27,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r27.u8);
	// li r27,169
	ctx.r27.s64 = 169;
	// stb r14,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r14.u8);
	// stb r16,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r16.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// stb r22,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r22.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r10,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r10.u8);
	// stb r24,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r24.u8);
	// stb r23,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r23.u8);
	// stb r8,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r8.u8);
	// stb r8,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r8.u8);
	// stb r21,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r21.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// stb r29,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r29.u8);
	// stb r7,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r7.u8);
	// stb r14,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r14.u8);
	// stb r11,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r11.u8);
	// stb r11,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r11.u8);
	// stb r22,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r22.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r10,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r10.u8);
	// stb r24,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r24.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r25,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r25.u8);
	// stb r30,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r30.u8);
	// stb r9,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r9.u8);
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// stb r11,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r11.u8);
	// stb r6,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r6.u8);
	// stb r5,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r5.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r27,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r27.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r7,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r7.u8);
	// stb r9,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r9.u8);
	// stb r11,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r11.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r6,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r6.u8);
	// stb r18,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r18.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r25,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r25.u8);
	// stb r30,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r30.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r11,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r11.u8);
	// stb r11,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r11.u8);
	// stb r6,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r6.u8);
	// stb r19,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r19.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r4,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r4.u8);
	// stb r30,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r30.u8);
	// stb r3,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r3.u8);
	// stb r27,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r27.u8);
	// li r27,37
	ctx.r27.s64 = 37;
	// std r28,952(r1)
	PPC_STORE_U64(ctx.r1.u32 + 952, ctx.r28.u64);
	// li r15,27
	ctx.r15.s64 = 27;
	// li r21,238
	ctx.r21.s64 = 238;
	// stb r9,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r9.u8);
	// li r22,235
	ctx.r22.s64 = 235;
	// stb r11,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r11.u8);
	// li r28,33
	ctx.r28.s64 = 33;
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// stb r27,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r27.u8);
	// li r27,68
	ctx.r27.s64 = 68;
	// stb r11,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r11.u8);
	// stb r20,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r20.u8);
	// stb r5,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r5.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r27,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r27.u8);
	// li r27,39
	ctx.r27.s64 = 39;
	// stb r16,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r16.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r27,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r27.u8);
	// li r27,23
	ctx.r27.s64 = 23;
	// stb r10,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r10.u8);
	// stb r29,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r29.u8);
	// stb r23,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r23.u8);
	// stb r8,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r8.u8);
	// stb r27,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r27.u8);
	// li r27,234
	ctx.r27.s64 = 234;
	// stb r7,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r7.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r27,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r27.u8);
	// li r27,233
	ctx.r27.s64 = 233;
	// stb r10,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r10.u8);
	// stb r29,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r29.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r15,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r15.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r24,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r24.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r10,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r10.u8);
	// stb r21,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r21.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r10,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r10.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r10,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r10.u8);
	// stb r22,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r22.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r10,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r10.u8);
	// stb r27,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r27.u8);
	// stb r8,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r8.u8);
	// stb r5,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r5.u8);
	// stb r9,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r9.u8);
	// stb r28,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r28.u8);
	// stb r17,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r17.u8);
	// stb r17,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r17.u8);
	// stb r7,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r7.u8);
	// stb r7,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r7.u8);
	// stb r9,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r9.u8);
	// li r17,28
	ctx.r17.s64 = 28;
	// stb r11,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r11.u8);
	// stb r11,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r11.u8);
	// stb r6,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r6.u8);
	// stb r18,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r18.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r17,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r17.u8);
	// li r17,32
	ctx.r17.s64 = 32;
	// stb r25,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r25.u8);
	// stb r30,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r30.u8);
	// stb r9,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r9.u8);
	// stb r11,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r11.u8);
	// stb r17,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r17.u8);
	// li r17,131
	ctx.r17.s64 = 131;
	// stb r11,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r11.u8);
	// stb r6,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r6.u8);
	// stb r19,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r19.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r17,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r17.u8);
	// li r17,132
	ctx.r17.s64 = 132;
	// stb r4,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r4.u8);
	// stb r30,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r30.u8);
	// stb r3,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r3.u8);
	// stb r9,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r9.u8);
	// stb r17,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r17.u8);
	// li r17,31
	ctx.r17.s64 = 31;
	// stb r11,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r11.u8);
	// stb r11,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r11.u8);
	// stb r11,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r11.u8);
	// stb r20,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r20.u8);
	// stb r17,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r17.u8);
	// li r17,43
	ctx.r17.s64 = 43;
	// stb r26,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r26.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r5,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r5.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r17,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r17.u8);
	// li r17,14
	ctx.r17.s64 = 14;
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r8,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r8.u8);
	// stb r8,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r8.u8);
	// stb r26,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r26.u8);
	// stb r17,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r17.u8);
	// li r17,97
	ctx.r17.s64 = 97;
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r7,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r7.u8);
	// stb r3,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r3.u8);
	// stb r9,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r9.u8);
	// stb r17,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r17.u8);
	// li r17,33
	ctx.r17.s64 = 33;
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r31,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r31.u8);
	// stb r26,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r26.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r17,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r17.u8);
	// li r17,94
	ctx.r17.s64 = 94;
	// stb r7,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r7.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r17,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r17.u8);
	// li r17,81
	ctx.r17.s64 = 81;
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r8,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r8.u8);
	// stb r17,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r17.u8);
	// li r17,39
	ctx.r17.s64 = 39;
	// stb r8,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r8.u8);
	// stb r8,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r8.u8);
	// stb r5,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r5.u8);
	// stb r9,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r9.u8);
	// stb r17,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r17.u8);
	// li r17,31
	ctx.r17.s64 = 31;
	// stb r16,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r16.u8);
	// stb r14,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r14.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r17,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r17.u8);
	// li r17,132
	ctx.r17.s64 = 132;
	// stb r17,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r17.u8);
	// li r17,16
	ctx.r17.s64 = 16;
	// stb r16,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r16.u8);
	// li r16,20
	ctx.r16.s64 = 20;
	// stb r7,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r7.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r17,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r17.u8);
	// li r17,105
	ctx.r17.s64 = 105;
	// stb r10,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r10.u8);
	// stb r29,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r29.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r25,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r25.u8);
	// stb r17,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r17.u8);
	// li r17,219
	ctx.r17.s64 = 219;
	// stb r30,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r30.u8);
	// stb r9,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r9.u8);
	// stb r11,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r11.u8);
	// stb r11,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r11.u8);
	// stb r17,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r17.u8);
	// li r17,14
	ctx.r17.s64 = 14;
	// stb r6,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r6.u8);
	// stb r23,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r23.u8);
	// stb r8,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r8.u8);
	// stb r26,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r26.u8);
	// stb r17,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r17.u8);
	// li r17,254
	ctx.r17.s64 = 254;
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r14,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r14.u8);
	// stb r11,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r11.u8);
	// stb r11,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r11.u8);
	// stb r17,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r17.u8);
	// li r17,144
	ctx.r17.s64 = 144;
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r10,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r10.u8);
	// stb r17,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r17.u8);
	// li r17,35
	ctx.r17.s64 = 35;
	// stb r24,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r24.u8);
	// stb r23,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r23.u8);
	// stb r8,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r8.u8);
	// stb r8,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r8.u8);
	// stb r17,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r17.u8);
	// li r17,175
	ctx.r17.s64 = 175;
	// stb r16,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r16.u8);
	// stb r3,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r3.u8);
	// stb r9,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r9.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r17,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r17.u8);
	// li r17,39
	ctx.r17.s64 = 39;
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r30,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r30.u8);
	// stb r5,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r5.u8);
	// stb r9,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r9.u8);
	// stb r17,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r17.u8);
	// li r17,11
	ctx.r17.s64 = 11;
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r10,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r10.u8);
	// stb r17,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r17.u8);
	// li r17,55
	ctx.r17.s64 = 55;
	// stb r27,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r27.u8);
	// stb r23,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r23.u8);
	// stb r8,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r8.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r17,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r17.u8);
	// li r17,114
	ctx.r17.s64 = 114;
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r10,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r10.u8);
	// stb r27,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r27.u8);
	// stb r17,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r17.u8);
	// li r17,15
	ctx.r17.s64 = 15;
	// stb r11,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r11.u8);
	// stb r11,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r11.u8);
	// stb r17,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r17.u8);
	// li r17,32
	ctx.r17.s64 = 32;
	// stb r17,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r17.u8);
	// li r17,253
	ctx.r17.s64 = 253;
	// stb r17,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r17.u8);
	// li r17,251
	ctx.r17.s64 = 251;
	// li r14,234
	ctx.r14.s64 = 234;
	// stb r5,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r5.u8);
	// stb r9,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r9.u8);
	// stb r7,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r7.u8);
	// stb r7,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r7.u8);
	// stb r17,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r17.u8);
	// li r17,133
	ctx.r17.s64 = 133;
	// stb r14,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r14.u8);
	// li r14,232
	ctx.r14.s64 = 232;
	// stb r9,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r9.u8);
	// stb r11,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r11.u8);
	// stb r11,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r11.u8);
	// stb r17,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r17.u8);
	// li r17,90
	ctx.r17.s64 = 90;
	// stb r6,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r6.u8);
	// stb r18,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r18.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r25,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r25.u8);
	// stb r17,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r17.u8);
	// li r17,121
	ctx.r17.s64 = 121;
	// stb r30,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r30.u8);
	// stb r9,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r9.u8);
	// stb r11,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r11.u8);
	// stb r11,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r11.u8);
	// stb r17,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r17.u8);
	// li r17,236
	ctx.r17.s64 = 236;
	// stb r6,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r6.u8);
	// stb r19,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r19.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r4,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r4.u8);
	// stb r30,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r30.u8);
	// stb r3,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r3.u8);
	// stb r9,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r9.u8);
	// stb r11,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r11.u8);
	// stb r11,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r11.u8);
	// stb r11,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r11.u8);
	// stb r20,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r20.u8);
	// stb r15,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r15.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r10,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r10.u8);
	// stb r21,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r21.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r10,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r10.u8);
	// stb r29,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r29.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r10,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r10.u8);
	// stb r17,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r17.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r10,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r10.u8);
	// stb r22,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r22.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r10,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r10.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r10,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r10.u8);
	// stb r27,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r27.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r10,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r10.u8);
	// stb r14,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r14.u8);
	// li r14,192
	ctx.r14.s64 = 192;
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// stb r10,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r10.u8);
	// stb r24,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r24.u8);
	// stb r14,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r14.u8);
	// li r14,119
	ctx.r14.s64 = 119;
	// stb r8,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r8.u8);
	// stb r5,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r5.u8);
	// stb r9,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r9.u8);
	// stb r9,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r9.u8);
	// stb r14,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r14.u8);
	// li r14,199
	ctx.r14.s64 = 199;
	// stb r11,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r11.u8);
	// stb r11,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r11.u8);
	// stb r6,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r6.u8);
	// stb r23,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r23.u8);
	// stb r14,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r14.u8);
	// stb r14,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r14.u8);
	// li r14,36
	ctx.r14.s64 = 36;
	// stb r8,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r8.u8);
	// stb r7,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r7.u8);
	// stb r9,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r9.u8);
	// stb r11,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r11.u8);
	// stb r14,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r14.u8);
	// li r14,69
	ctx.r14.s64 = 69;
	// stb r11,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r11.u8);
	// stb r6,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r6.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r14,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r14.u8);
	// li r14,184
	ctx.r14.s64 = 184;
	// stb r15,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r15.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r14,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r14.u8);
	// li r14,249
	ctx.r14.s64 = 249;
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r14,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r14.u8);
	// stb r14,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r14.u8);
	// li r14,119
	ctx.r14.s64 = 119;
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r10,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r10.u8);
	// stb r29,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r29.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r10,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r10.u8);
	// stb r17,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r17.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r31,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r31.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r10,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r10.u8);
	// stb r21,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r21.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r10,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r10.u8);
	// stb r27,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r27.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r10,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r10.u8);
	// stb r22,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r22.u8);
	// stb r8,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r8.u8);
	// stb r4,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r4.u8);
	// stb r9,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r9.u8);
	// stb r5,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r5.u8);
	// stb r9,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r9.u8);
	// stb r14,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r14.u8);
	// stb r9,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r9.u8);
	// stb r11,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r11.u8);
	// stb r11,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r11.u8);
	// stb r6,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r6.u8);
	// stb r23,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r23.u8);
	// li r23,69
	ctx.r23.s64 = 69;
	// li r14,198
	ctx.r14.s64 = 198;
	// stb r8,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r8.u8);
	// stb r7,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r7.u8);
	// stb r9,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r9.u8);
	// stb r11,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r11.u8);
	// stb r23,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r23.u8);
	// li r23,153
	ctx.r23.s64 = 153;
	// stb r14,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r14.u8);
	// stb r14,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r14.u8);
	// li r14,37
	ctx.r14.s64 = 37;
	// stb r11,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r11.u8);
	// stb r6,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r6.u8);
	// stb r23,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r23.u8);
	// li r23,23
	ctx.r23.s64 = 23;
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r14,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r14.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r15,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r15.u8);
	// stb r23,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r23.u8);
	// li r23,2
	ctx.r23.s64 = 2;
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r23,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r23.u8);
	// li r23,73
	ctx.r23.s64 = 73;
	// stb r31,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r23,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r23.u8);
	// li r23,129
	ctx.r23.s64 = 129;
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r31,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r31.u8);
	// stb r10,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r10.u8);
	// stb r29,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r29.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r31,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r31.u8);
	// stb r10,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r10.u8);
	// stb r17,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r17.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r10,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r10.u8);
	// stb r21,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r21.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r10,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r10.u8);
	// stb r27,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r27.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r10,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r10.u8);
	// stb r22,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r22.u8);
	// stb r8,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r8.u8);
	// stb r5,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r5.u8);
	// stb r23,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r23.u8);
	// stb r7,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r7.u8);
	// stb r7,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r7.u8);
	// stb r9,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r9.u8);
	// stb r11,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r11.u8);
	// stb r11,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r11.u8);
	// stb r6,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r6.u8);
	// stb r18,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r18.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r25,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r25.u8);
	// stb r30,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r30.u8);
	// stb r9,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r9.u8);
	// stb r11,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r11.u8);
	// stb r11,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r11.u8);
	// stb r6,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r6.u8);
	// stb r19,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r19.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r4,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r4.u8);
	// stb r30,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r30.u8);
	// stb r3,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r3.u8);
	// stb r9,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r9.u8);
	// li r23,90
	ctx.r23.s64 = 90;
	// stb r11,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r11.u8);
	// stb r11,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r11.u8);
	// stb r11,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r11.u8);
	// stb r20,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r20.u8);
	// stb r8,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r8.u8);
	// stb r23,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r23.u8);
	// li r23,121
	ctx.r23.s64 = 121;
	// stb r15,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r15.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r23,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r23.u8);
	// li r23,234
	ctx.r23.s64 = 234;
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r31,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r31.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r23,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r23.u8);
	// li r23,232
	ctx.r23.s64 = 232;
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r31,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r31.u8);
	// stb r10,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r10.u8);
	// stb r23,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r23.u8);
	// li r23,230
	ctx.r23.s64 = 230;
	// stb r21,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r21.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r23,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r23.u8);
	// li r23,40
	ctx.r23.s64 = 40;
	// stb r10,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r10.u8);
	// stb r29,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r29.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r23,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r23.u8);
	// li r23,2
	ctx.r23.s64 = 2;
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r10,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r10.u8);
	// stb r17,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r17.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r23,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r23.u8);
	// li r23,209
	ctx.r23.s64 = 209;
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r10,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r10.u8);
	// stb r22,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r22.u8);
	// stb r23,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r23.u8);
	// li r23,151
	ctx.r23.s64 = 151;
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r10,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r10.u8);
	// stb r23,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r23.u8);
	// li r23,248
	ctx.r23.s64 = 248;
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r31,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r31.u8);
	// stb r10,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r10.u8);
	// stb r27,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r27.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r10,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r10.u8);
	// stb r31,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r31.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r10,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r10.u8);
	// stb r24,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r24.u8);
	// stb r8,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r8.u8);
	// stb r16,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r16.u8);
	// stb r3,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r3.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r31,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r31.u8);
	// stb r31,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r31.u8);
	// stb r10,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r10.u8);
	// stb r5,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r5.u8);
	// stb r9,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r9.u8);
	// stb r11,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r11.u8);
	// stb r11,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r11.u8);
	// stb r14,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r14.u8);
	// li r14,28
	ctx.r14.s64 = 28;
	// stb r23,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r23.u8);
	// li r23,72
	ctx.r23.s64 = 72;
	// stb r8,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r8.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r14,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r14.u8);
	// li r14,173
	ctx.r14.s64 = 173;
	// stb r23,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r23.u8);
	// stb r10,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r10.u8);
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r14,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r14.u8);
	// li r14,234
	ctx.r14.s64 = 234;
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r10,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r10.u8);
	// stb r21,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r21.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r14,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r14.u8);
	// li r14,232
	ctx.r14.s64 = 232;
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r10,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r10.u8);
	// stb r29,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r29.u8);
	// stb r14,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r31,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r31.u8);
	// stb r31,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r31.u8);
	// stb r31,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r31.u8);
	// stb r10,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r10.u8);
	// stb r14,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r14.u8);
	// li r14,194
	ctx.r14.s64 = 194;
	// stb r17,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r17.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r31,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r31.u8);
	// stb r31,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r31.u8);
	// stb r14,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r14.u8);
	// li r14,130
	ctx.r14.s64 = 130;
	// stb r10,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r10.u8);
	// stb r22,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r22.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r31,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r31.u8);
	// stb r31,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r31.u8);
	// stb r10,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r10.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r10,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r10.u8);
	// stb r27,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r27.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r10,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r10.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r10,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r10.u8);
	// stb r24,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r24.u8);
	// stb r8,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r8.u8);
	// stb r5,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r5.u8);
	// stb r14,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r14.u8);
	// stb r7,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r7.u8);
	// stb r7,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r7.u8);
	// stb r9,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r9.u8);
	// stb r11,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r11.u8);
	// stb r11,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r11.u8);
	// stb r6,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r6.u8);
	// stb r18,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r18.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r25,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r25.u8);
	// stb r30,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r30.u8);
	// stb r9,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r9.u8);
	// stb r11,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r11.u8);
	// stb r11,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r11.u8);
	// stb r6,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r6.u8);
	// stb r19,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r19.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r4,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r4.u8);
	// stb r30,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r30.u8);
	// stb r3,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r3.u8);
	// li r28,38
	ctx.r28.s64 = 38;
	// stb r9,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r9.u8);
	// li r14,31
	ctx.r14.s64 = 31;
	// stb r11,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r11.u8);
	// stb r11,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r11.u8);
	// stb r11,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r11.u8);
	// stb r20,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r20.u8);
	// stb r28,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r28.u8);
	// li r28,2
	ctx.r28.s64 = 2;
	// stb r14,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r14.u8);
	// li r14,90
	ctx.r14.s64 = 90;
	// stb r26,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r26.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r5,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r5.u8);
	// stb r28,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r28.u8);
	// li r28,209
	ctx.r28.s64 = 209;
	// stb r14,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r14.u8);
	// li r14,230
	ctx.r14.s64 = 230;
	// stb r3,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r3.u8);
	// stb r9,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r9.u8);
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r28,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r28.u8);
	// li r28,230
	ctx.r28.s64 = 230;
	// stb r14,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r14.u8);
	// li r14,152
	ctx.r14.s64 = 152;
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r8,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r8.u8);
	// stb r16,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r16.u8);
	// stb r28,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r28.u8);
	// li r28,152
	ctx.r28.s64 = 152;
	// stb r14,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r14.u8);
	// li r14,248
	ctx.r14.s64 = 248;
	// stb r3,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r3.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r28,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r28.u8);
	// li r28,37
	ctx.r28.s64 = 37;
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r10,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r10.u8);
	// stb r9,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r9.u8);
	// stb r11,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r11.u8);
	// stb r28,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r28.u8);
	// li r28,3
	ctx.r28.s64 = 3;
	// stb r11,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r11.u8);
	// stb r14,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r14.u8);
	// stb r23,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r23.u8);
	// stb r8,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r8.u8);
	// stb r28,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r28.u8);
	// li r28,9
	ctx.r28.s64 = 9;
	// stb r4,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r4.u8);
	// stb r16,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r16.u8);
	// stb r3,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r3.u8);
	// stb r31,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r31.u8);
	// stb r28,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r28.u8);
	// li r28,130
	ctx.r28.s64 = 130;
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r10,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r10.u8);
	// stb r9,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r9.u8);
	// stb r11,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r11.u8);
	// stb r11,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r11.u8);
	// stb r14,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r14.u8);
	// stb r23,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r23.u8);
	// stb r8,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r8.u8);
	// stb r5,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r5.u8);
	// stb r28,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r28.u8);
	// stb r7,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r7.u8);
	// stb r7,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r7.u8);
	// stb r9,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r9.u8);
	// stb r11,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r11.u8);
	// stb r11,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r11.u8);
	// stb r6,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r6.u8);
	// stb r18,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r18.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r25,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r25.u8);
	// stb r30,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r30.u8);
	// stb r9,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r9.u8);
	// stb r11,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r11.u8);
	// stb r11,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r11.u8);
	// stb r6,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r6.u8);
	// stb r19,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r19.u8);
	// stb r5,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r5.u8);
	// li r5,38
	ctx.r5.s64 = 38;
	// stb r11,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r11.u8);
	// li r7,31
	ctx.r7.s64 = 31;
	// stb r11,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r11.u8);
	// li r6,90
	ctx.r6.s64 = 90;
	// stb r11,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r11.u8);
	// li r25,152
	ctx.r25.s64 = 152;
	// stb r11,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r11.u8);
	// stb r11,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r11.u8);
	// stb r11,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r11.u8);
	// stb r11,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r5,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r5.u8);
	// li r5,3
	ctx.r5.s64 = 3;
	// stb r7,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r7.u8);
	// li r7,229
	ctx.r7.s64 = 229;
	// ld r28,952(r1)
	ctx.r28.u64 = PPC_LOAD_U64(ctx.r1.u32 + 952);
	// stb r4,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r4.u8);
	// stb r11,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r11.u8);
	// li r11,122
	ctx.r11.s64 = 122;
	// stb r26,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r26.u8);
	// stb r4,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r5,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r5.u8);
	// li r5,858
	ctx.r5.s64 = 858;
	// stb r26,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r26.u8);
	// addi r26,r28,32
	ctx.r26.s64 = ctx.r28.s64 + 32;
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r30,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r30.u8);
	// stb r3,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r3.u8);
	// stb r9,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r9.u8);
	// stb r20,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r20.u8);
	// stb r31,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r31.u8);
	// stb r3,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r3.u8);
	// stb r9,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r9.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r6,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r6.u8);
	// stb r8,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r8.u8);
	// stb r16,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r16.u8);
	// stb r3,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r3.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r31,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r31.u8);
	// stb r31,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r31.u8);
	// stb r10,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r10.u8);
	// stb r7,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r7.u8);
	// stb r25,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r25.u8);
	// stb r9,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r9.u8);
	// stb r14,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r14.u8);
	// stb r23,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r23.u8);
	// stb r8,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r8.u8);
	// stb r16,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r16.u8);
	// stb r3,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r3.u8);
	// stb r31,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r31.u8);
	// stb r31,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r31.u8);
	// stb r31,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r31.u8);
	// stb r10,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r10.u8);
	// stb r7,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r7.u8);
	// stb r25,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r25.u8);
	// stb r9,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r9.u8);
	// stb r14,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r14.u8);
	// stb r23,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r23.u8);
	// stb r8,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r8.u8);
	// stb r15,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r15.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r31,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r31.u8);
	// stb r6,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r6.u8);
	// stb r11,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r11.u8);
	// stb r31,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r31.u8);
	// stb r31,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r31.u8);
	// stb r31,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r31.u8);
	// stb r31,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r31.u8);
	// stb r3,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r3.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r31,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r31.u8);
	// stb r31,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r31.u8);
	// stb r10,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r10.u8);
	// stb r7,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r7.u8);
	// stb r3,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r3.u8);
	// li r11,230
	ctx.r11.s64 = 230;
	// stb r31,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r31.u8);
	// mr r3,r26
	ctx.r3.u64 = ctx.r26.u64;
	// stb r31,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r31.u8);
	// stb r31,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r31.u8);
	// stb r10,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r10.u8);
	// stb r31,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r31.u8);
	// stb r11,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r11.u8);
	// li r11,234
	ctx.r11.s64 = 234;
	// stb r31,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r31.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r10,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r10.u8);
	// stb r21,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r21.u8);
	// stb r11,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r31.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r10,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r10.u8);
	// stb r11,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r29,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r29.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r11,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r10,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r10.u8);
	// stb r17,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r17.u8);
	// stb r31,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r31.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r31,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r31.u8);
	// stb r10,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r10.u8);
	// stb r22,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r22.u8);
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r31,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r31.u8);
	// stb r10,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r10.u8);
	// stb r31,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r31.u8);
	// stb r31,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r31.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r10,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r10.u8);
	// stb r27,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r27.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r31,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r31.u8);
	// stb r31,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r31.u8);
	// stb r10,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r10.u8);
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// stb r31,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r31.u8);
	// stb r10,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r10.u8);
	// stb r24,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r24.u8);
	// stb r8,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r8.u8);
	// stb r30,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r30.u8);
	// stb r11,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C3EA4;
	sub_82B06418(ctx, base);
	// mr r3,r28
	ctx.r3.u64 = ctx.r28.u64;
	// stw r26,20(r28)
	PPC_STORE_U32(ctx.r28.u32 + 20, ctx.r26.u32);
	// addi r1,r1,1120
	ctx.r1.s64 = ctx.r1.s64 + 1120;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C3EB8"))) PPC_WEAK_FUNC(sub_824C3EB8);
PPC_FUNC_IMPL(__imp__sub_824C3EB8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C3EC0;
	__savegprlr_14(ctx, base);
	// stwu r1,-2880(r1)
	ea = -2880 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,2617
	ctx.r9.s64 = 2617;
	// stw r30,2900(r1)
	PPC_STORE_U32(ctx.r1.u32 + 2900, ctx.r30.u32);
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31776
	ctx.r4.s64 = ctx.r10.s64 + 31776;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C3F00;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31748
	ctx.r4.s64 = ctx.r11.s64 + 31748;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,2720
	ctx.r3.s64 = ctx.r1.s64 + 2720;
	// bl 0x8243b750
	ctx.lr = 0x824C3F18;
	sub_8243B750(ctx, base);
	// li r11,186
	ctx.r11.s64 = 186;
	// li r10,49
	ctx.r10.s64 = 49;
	// lwz r8,2720(r1)
	ctx.r8.u64 = PPC_LOAD_U32(ctx.r1.u32 + 2720);
	// li r28,42
	ctx.r28.s64 = 42;
	// lwz r7,2724(r1)
	ctx.r7.u64 = PPC_LOAD_U32(ctx.r1.u32 + 2724);
	// li r27,15
	ctx.r27.s64 = 15;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// li r18,27
	ctx.r18.s64 = 27;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r11,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r11.u8);
	// li r11,197
	ctx.r11.s64 = 197;
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// li r26,45
	ctx.r26.s64 = 45;
	// stb r10,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r10.u8);
	// li r3,191
	ctx.r3.s64 = 191;
	// stb r27,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r27.u8);
	// li r4,7
	ctx.r4.s64 = 7;
	// stb r18,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r18.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,20
	ctx.r11.s64 = 20;
	// li r25,119
	ctx.r25.s64 = 119;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// li r23,206
	ctx.r23.s64 = 206;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r28,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r28.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// li r11,188
	ctx.r11.s64 = 188;
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,40
	ctx.r11.s64 = 40;
	// stb r9,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r9.u8);
	// stb r26,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r26.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r11,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r11.u8);
	// li r11,111
	ctx.r11.s64 = 111;
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r27,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r27.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r10,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r10.u8);
	// stb r3,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r3.u8);
	// stb r28,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r28.u8);
	// stb r4,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r4.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r25,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r25.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r10,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r10.u8);
	// stb r23,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r23.u8);
	// stb r28,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r28.u8);
	// stw r7,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r7.u32);
	// li r7,57
	ctx.r7.s64 = 57;
	// stw r8,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r8.u32);
	// li r30,250
	ctx.r30.s64 = 250;
	// li r8,192
	ctx.r8.s64 = 192;
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// li r6,217
	ctx.r6.s64 = 217;
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r5,46
	ctx.r5.s64 = 46;
	// stb r27,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r27.u8);
	// stb r7,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r7.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r7,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r7.u8);
	// li r7,51
	ctx.r7.s64 = 51;
	// stb r30,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r30.u8);
	// li r30,242
	ctx.r30.s64 = 242;
	// stb r8,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r8.u8);
	// li r15,28
	ctx.r15.s64 = 28;
	// stb r8,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r8.u8);
	// stb r8,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r8.u8);
	// li r8,11
	ctx.r8.s64 = 11;
	// stb r7,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r7.u8);
	// li r7,253
	ctx.r7.s64 = 253;
	// stb r6,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r6.u8);
	// stb r30,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r30.u8);
	// li r30,82
	ctx.r30.s64 = 82;
	// stb r6,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r6.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r8,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r8.u8);
	// li r8,220
	ctx.r8.s64 = 220;
	// stb r7,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r7.u8);
	// li r7,81
	ctx.r7.s64 = 81;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r10,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r10.u8);
	// stb r7,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r7.u8);
	// li r7,4
	ctx.r7.s64 = 4;
	// stb r5,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r5.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r10,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r10.u8);
	// stb r23,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r23.u8);
	// stb r4,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r4.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r15,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r15.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r11,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r11.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r30,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r30.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r28,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r28.u8);
	// stb r9,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r9.u8);
	// stb r27,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r27.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r3,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r3.u8);
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r6,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r6.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r10,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r10.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r7,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r7.u8);
	// stb r18,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r18.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// li r5,181
	ctx.r5.s64 = 181;
	// stb r8,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r8.u8);
	// li r22,198
	ctx.r22.s64 = 198;
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// li r21,59
	ctx.r21.s64 = 59;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// li r24,130
	ctx.r24.s64 = 130;
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r5,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r5.u8);
	// li r5,56
	ctx.r5.s64 = 56;
	// stb r22,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r22.u8);
	// li r29,24
	ctx.r29.s64 = 24;
	// li r30,129
	ctx.r30.s64 = 129;
	// stb r9,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r9.u8);
	// li r20,9
	ctx.r20.s64 = 9;
	// stb r4,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r4.u8);
	// li r17,114
	ctx.r17.s64 = 114;
	// stb r8,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r8.u8);
	// stb r5,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r5.u8);
	// li r5,63
	ctx.r5.s64 = 63;
	// li r22,32
	ctx.r22.s64 = 32;
	// stb r21,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r21.u8);
	// li r19,131
	ctx.r19.s64 = 131;
	// stb r24,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r24.u8);
	// stb r24,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r24.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r5,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r5.u8);
	// li r5,207
	ctx.r5.s64 = 207;
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r10,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r10.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r5,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r5.u8);
	// li r5,30
	ctx.r5.s64 = 30;
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r9,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r9.u8);
	// stb r5,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r5.u8);
	// li r5,14
	ctx.r5.s64 = 14;
	// stb r29,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r29.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r30,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r30.u8);
	// stb r18,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r18.u8);
	// stb r5,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r5.u8);
	// li r5,52
	ctx.r5.s64 = 52;
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r5,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r5.u8);
	// li r5,116
	ctx.r5.s64 = 116;
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r9,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r9.u8);
	// stb r5,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r5.u8);
	// li r5,247
	ctx.r5.s64 = 247;
	// stb r9,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r9.u8);
	// stb r9,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r9.u8);
	// stb r29,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r29.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r20,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r20.u8);
	// stb r17,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r17.u8);
	// stb r8,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r8.u8);
	// stb r11,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r11.u8);
	// stb r11,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r11.u8);
	// stb r5,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r5.u8);
	// stb r28,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r28.u8);
	// stb r9,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r9.u8);
	// stb r9,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r9.u8);
	// stb r4,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r4.u8);
	// stb r8,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r8.u8);
	// stb r21,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r21.u8);
	// stb r15,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r15.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r22,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r22.u8);
	// stb r19,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r19.u8);
	// stb r22,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r22.u8);
	// li r19,224
	ctx.r19.s64 = 224;
	// stb r22,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r22.u8);
	// li r22,254
	ctx.r22.s64 = 254;
	// std r23,80(r1)
	PPC_STORE_U64(ctx.r1.u32 + 80, ctx.r23.u64);
	// li r23,254
	ctx.r23.s64 = 254;
	// li r16,97
	ctx.r16.s64 = 97;
	// stb r9,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r9.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r4,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r4.u8);
	// stb r19,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r19.u8);
	// li r19,132
	ctx.r19.s64 = 132;
	// stb r22,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r22.u8);
	// li r22,53
	ctx.r22.s64 = 53;
	// stb r23,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r23.u8);
	// li r23,154
	ctx.r23.s64 = 154;
	// stb r16,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r16.u8);
	// stb r16,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r16.u8);
	// li r16,150
	ctx.r16.s64 = 150;
	// stb r19,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r19.u8);
	// li r19,202
	ctx.r19.s64 = 202;
	// stb r22,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r22.u8);
	// li r22,251
	ctx.r22.s64 = 251;
	// stb r23,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r23.u8);
	// li r23,14
	ctx.r23.s64 = 14;
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r14,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r14.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r22,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r22.u8);
	// li r22,216
	ctx.r22.s64 = 216;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r10,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r10.u8);
	// stb r19,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r19.u8);
	// stb r22,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r22.u8);
	// li r22,48
	ctx.r22.s64 = 48;
	// stb r11,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r11.u8);
	// stb r11,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r11.u8);
	// stb r9,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r9.u8);
	// stb r29,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r29.u8);
	// stb r22,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r22.u8);
	// li r22,204
	ctx.r22.s64 = 204;
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r23,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r23.u8);
	// stb r14,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r14.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r22,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r22.u8);
	// li r22,30
	ctx.r22.s64 = 30;
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r10,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r10.u8);
	// stb r19,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r19.u8);
	// stb r11,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r11.u8);
	// stb r11,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r11.u8);
	// stb r16,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r16.u8);
	// stb r9,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r9.u8);
	// stb r9,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r9.u8);
	// stb r27,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r27.u8);
	// stb r11,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r11.u8);
	// stb r11,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r11.u8);
	// stb r11,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r11.u8);
	// stb r11,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r11.u8);
	// stb r5,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r5.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r8,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r8.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r10,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r10.u8);
	// stb r22,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r22.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r4,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r4.u8);
	// stb r8,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r8.u8);
	// stb r21,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r21.u8);
	// stb r24,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r24.u8);
	// stb r24,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r24.u8);
	// stb r30,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r30.u8);
	// stb r6,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r6.u8);
	// li r23,67
	ctx.r23.s64 = 67;
	// stb r3,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r3.u8);
	// stb r3,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r3.u8);
	// li r21,226
	ctx.r21.s64 = 226;
	// stb r3,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r3.u8);
	// li r3,30
	ctx.r3.s64 = 30;
	// li r30,5
	ctx.r30.s64 = 5;
	// stb r6,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r6.u8);
	// li r22,6
	ctx.r22.s64 = 6;
	// stb r8,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r8.u8);
	// stb r23,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r23.u8);
	// li r23,26
	ctx.r23.s64 = 26;
	// stb r11,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r11.u8);
	// stb r3,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r3.u8);
	// li r3,93
	ctx.r3.s64 = 93;
	// stb r11,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r11.u8);
	// stb r5,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r5.u8);
	// stb r23,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r23.u8);
	// li r23,132
	ctx.r23.s64 = 132;
	// stb r21,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r21.u8);
	// stb r3,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r3.u8);
	// li r3,204
	ctx.r3.s64 = 204;
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r30,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r30.u8);
	// stb r23,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r23.u8);
	// li r23,23
	ctx.r23.s64 = 23;
	// stb r7,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r7.u8);
	// stb r8,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r8.u8);
	// stb r11,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r11.u8);
	// stb r11,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r11.u8);
	// stb r23,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r23.u8);
	// li r23,13
	ctx.r23.s64 = 13;
	// stb r5,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r5.u8);
	// stb r16,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r16.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r22,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r22.u8);
	// stb r7,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r7.u8);
	// stb r26,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r26.u8);
	// stb r8,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r8.u8);
	// stb r11,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r11.u8);
	// stb r11,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r11.u8);
	// stb r11,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r11.u8);
	// stb r9,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r9.u8);
	// stb r29,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r29.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r20,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r20.u8);
	// stb r25,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r25.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r10,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r10.u8);
	// stb r28,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r28.u8);
	// stb r9,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r9.u8);
	// stb r9,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r9.u8);
	// stb r29,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r29.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r17,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r17.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r10,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r10.u8);
	// stb r9,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r9.u8);
	// stb r29,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r29.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r23,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r23.u8);
	// stb r17,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r17.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r10,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r10.u8);
	// stb r8,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r8.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r9,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r9.u8);
	// stb r9,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r9.u8);
	// stb r9,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r9.u8);
	// stb r27,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r27.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r10,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r10.u8);
	// li r17,196
	ctx.r17.s64 = 196;
	// stb r3,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r3.u8);
	// li r23,232
	ctx.r23.s64 = 232;
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// li r3,35
	ctx.r3.s64 = 35;
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r17,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r17.u8);
	// li r17,46
	ctx.r17.s64 = 46;
	// stb r23,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r23.u8);
	// li r23,113
	ctx.r23.s64 = 113;
	// stb r3,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r3.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r17,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r17.u8);
	// li r17,254
	ctx.r17.s64 = 254;
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r31,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r31.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r17,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r17.u8);
	// li r17,126
	ctx.r17.s64 = 126;
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r27,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r27.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r17,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r17.u8);
	// li r17,200
	ctx.r17.s64 = 200;
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r10,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r10.u8);
	// stb r11,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r11.u8);
	// stb r17,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r17.u8);
	// li r17,195
	ctx.r17.s64 = 195;
	// stb r11,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r11.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r17,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r17.u8);
	// li r17,46
	ctx.r17.s64 = 46;
	// stb r10,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r10.u8);
	// stb r27,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r27.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r17,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r17.u8);
	// li r17,16
	ctx.r17.s64 = 16;
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r10,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r10.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r17,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r17.u8);
	// li r17,105
	ctx.r17.s64 = 105;
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r10,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r10.u8);
	// stb r17,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r17.u8);
	// li r17,200
	ctx.r17.s64 = 200;
	// stb r27,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r27.u8);
	// stb r8,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r8.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r17,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r17.u8);
	// stb r17,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r17.u8);
	// li r17,185
	ctx.r17.s64 = 185;
	// stb r23,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r23.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r10,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r10.u8);
	// stb r4,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r4.u8);
	// stb r8,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r8.u8);
	// stb r17,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r17.u8);
	// stb r24,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r24.u8);
	// stb r24,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r24.u8);
	// stb r6,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r6.u8);
	// stb r6,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r6.u8);
	// stb r8,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r8.u8);
	// stb r11,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r11.u8);
	// stb r11,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r11.u8);
	// li r17,67
	ctx.r17.s64 = 67;
	// stb r5,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r5.u8);
	// stb r21,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r21.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r30,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r30.u8);
	// stb r7,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r7.u8);
	// stb r17,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r17.u8);
	// li r17,32
	ctx.r17.s64 = 32;
	// stb r8,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r8.u8);
	// stb r11,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r11.u8);
	// stb r11,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r11.u8);
	// stb r5,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r5.u8);
	// stb r17,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r17.u8);
	// li r17,131
	ctx.r17.s64 = 131;
	// stb r16,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r16.u8);
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r22,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r22.u8);
	// stb r7,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r7.u8);
	// stb r17,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r17.u8);
	// li r17,14
	ctx.r17.s64 = 14;
	// stb r26,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r26.u8);
	// stb r8,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r8.u8);
	// stb r11,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r11.u8);
	// stb r11,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r11.u8);
	// stb r17,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r17.u8);
	// li r17,97
	ctx.r17.s64 = 97;
	// stb r11,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r11.u8);
	// stb r29,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r29.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r4,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r4.u8);
	// stb r17,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r17.u8);
	// li r17,33
	ctx.r17.s64 = 33;
	// stb r15,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r15.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r9,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r9.u8);
	// stb r17,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r17.u8);
	// li r17,94
	ctx.r17.s64 = 94;
	// stb r9,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r9.u8);
	// stb r29,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r29.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r6,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r6.u8);
	// stb r17,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r17.u8);
	// li r17,81
	ctx.r17.s64 = 81;
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r17,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r17.u8);
	// li r17,39
	ctx.r17.s64 = 39;
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r9,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r9.u8);
	// stb r9,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r9.u8);
	// stb r17,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r17.u8);
	// li r17,37
	ctx.r17.s64 = 37;
	// stb r15,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r15.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r25,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r25.u8);
	// stb r17,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r17.u8);
	// li r17,205
	ctx.r17.s64 = 205;
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r31,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r31.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r10,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r10.u8);
	// stb r17,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r17.u8);
	// li r17,212
	ctx.r17.s64 = 212;
	// stb r21,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r21.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r17,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r17.u8);
	// li r17,204
	ctx.r17.s64 = 204;
	// stb r10,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r10.u8);
	// stb r9,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r9.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r17,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r17.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r10,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r10.u8);
	// li r17,203
	ctx.r17.s64 = 203;
	// ld r23,80(r1)
	ctx.r23.u64 = PPC_LOAD_U64(ctx.r1.u32 + 80);
	// stb r18,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r18.u8);
	// std r18,80(r1)
	PPC_STORE_U64(ctx.r1.u32 + 80, ctx.r18.u64);
	// li r18,20
	ctx.r18.s64 = 20;
	// stb r9,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r9.u8);
	// stb r9,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r9.u8);
	// stb r17,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r17.u8);
	// li r17,11
	ctx.r17.s64 = 11;
	// stb r7,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r7.u8);
	// stb r18,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r18.u8);
	// li r18,198
	ctx.r18.s64 = 198;
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r17,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r17.u8);
	// li r17,243
	ctx.r17.s64 = 243;
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r26,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r26.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r31,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r31.u8);
	// stb r17,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r17.u8);
	// li r17,207
	ctx.r17.s64 = 207;
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r17,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r17.u8);
	// li r17,3
	ctx.r17.s64 = 3;
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r10,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r10.u8);
	// stb r31,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r31.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r17,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r17.u8);
	// li r17,208
	ctx.r17.s64 = 208;
	// stb r31,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r31.u8);
	// stb r10,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r10.u8);
	// stb r23,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r23.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r17,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r17.u8);
	// li r17,198
	ctx.r17.s64 = 198;
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r31,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r31.u8);
	// stb r10,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r10.u8);
	// stb r19,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r19.u8);
	// stb r17,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r17.u8);
	// li r17,46
	ctx.r17.s64 = 46;
	// stb r9,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r9.u8);
	// stb r4,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r4.u8);
	// stb r24,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r24.u8);
	// stb r26,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r26.u8);
	// stb r17,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r17.u8);
	// li r17,253
	ctx.r17.s64 = 253;
	// stb r31,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r31.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r31,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r31.u8);
	// stb r10,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r10.u8);
	// stb r17,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r17.u8);
	// li r17,121
	ctx.r17.s64 = 121;
	// stb r27,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r27.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r17,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r17.u8);
	// li r17,199
	ctx.r17.s64 = 199;
	// stb r10,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r10.u8);
	// stb r11,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r11.u8);
	// stb r11,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r11.u8);
	// stb r8,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r8.u8);
	// stb r11,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r11.u8);
	// stb r11,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r11.u8);
	// stb r5,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r5.u8);
	// stb r17,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r17.u8);
	// stb r4,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r4.u8);
	// stb r14,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r14.u8);
	// stb r25,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r25.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r10,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r10.u8);
	// stb r18,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r18.u8);
	// stb r28,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r28.u8);
	// stb r14,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r14.u8);
	// stb r14,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r14.u8);
	// li r14,95
	ctx.r14.s64 = 95;
	// stb r18,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r18.u8);
	// li r18,20
	ctx.r18.s64 = 20;
	// stb r9,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r9.u8);
	// stb r6,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r6.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r14,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r14.u8);
	// li r14,18
	ctx.r14.s64 = 18;
	// stb r18,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r18.u8);
	// li r18,249
	ctx.r18.s64 = 249;
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r10,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r10.u8);
	// stb r14,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r18,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r18.u8);
	// li r18,208
	ctx.r18.s64 = 208;
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r31,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r31.u8);
	// stb r15,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r15.u8);
	// stb r14,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r14.u8);
	// li r14,77
	ctx.r14.s64 = 77;
	// stb r18,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r18.u8);
	// li r18,18
	ctx.r18.s64 = 18;
	// stb r11,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r11.u8);
	// stb r11,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r11.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r14,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r14.u8);
	// li r14,26
	ctx.r14.s64 = 26;
	// stb r18,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r18.u8);
	// li r18,216
	ctx.r18.s64 = 216;
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r10,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r10.u8);
	// stb r14,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r18,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r18.u8);
	// li r18,13
	ctx.r18.s64 = 13;
	// stb r19,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r19.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r30,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r30.u8);
	// stb r14,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r14.u8);
	// li r14,114
	ctx.r14.s64 = 114;
	// stb r7,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r7.u8);
	// stb r11,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r11.u8);
	// stb r11,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r11.u8);
	// stb r5,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r5.u8);
	// stb r9,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r9.u8);
	// stb r4,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r4.u8);
	// stb r24,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r24.u8);
	// stb r24,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r24.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r10,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r10.u8);
	// stb r19,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r19.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r22,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r22.u8);
	// stb r7,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r7.u8);
	// stb r26,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r26.u8);
	// stb r11,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r11.u8);
	// stb r11,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r11.u8);
	// stb r11,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r11.u8);
	// stb r29,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r29.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r14,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r14.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r10,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r10.u8);
	// stb r23,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r23.u8);
	// stb r28,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r28.u8);
	// stb r9,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r9.u8);
	// stb r29,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r29.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r18,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r18.u8);
	// stb r14,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r14.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// li r18,197
	ctx.r18.s64 = 197;
	// stb r10,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r10.u8);
	// stb r23,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r23.u8);
	// stb r8,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r8.u8);
	// stb r11,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r11.u8);
	// stb r14,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r14.u8);
	// stb r14,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r18,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r18.u8);
	// li r18,2
	ctx.r18.s64 = 2;
	// stb r11,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r11.u8);
	// stb r5,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r5.u8);
	// stb r17,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r17.u8);
	// stb r14,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r14.u8);
	// li r14,117
	ctx.r14.s64 = 117;
	// stb r9,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r9.u8);
	// stb r9,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r9.u8);
	// stb r9,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r9.u8);
	// stb r29,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r29.u8);
	// stb r14,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r14.u8);
	// stb r14,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r14.u8);
	// li r14,197
	ctx.r14.s64 = 197;
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r20,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r20.u8);
	// stb r25,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r25.u8);
	// stb r8,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r8.u8);
	// stb r14,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r14.u8);
	// li r14,246
	ctx.r14.s64 = 246;
	// stb r11,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r11.u8);
	// stb r11,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r11.u8);
	// stb r5,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r5.u8);
	// stb r28,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r28.u8);
	// stb r14,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r14.u8);
	// li r14,109
	ctx.r14.s64 = 109;
	// stb r9,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r9.u8);
	// stb r9,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r9.u8);
	// stb r27,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r27.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r14,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r14.u8);
	// li r14,204
	ctx.r14.s64 = 204;
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r10,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r10.u8);
	// stb r8,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r8.u8);
	// stb r14,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r11,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r11.u8);
	// stb r11,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r11.u8);
	// stb r5,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r5.u8);
	// stb r22,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r22.u8);
	// stb r4,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r4.u8);
	// stb r18,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r18.u8);
	// stb r25,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r25.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r31,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r31.u8);
	// stb r31,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r31.u8);
	// stb r10,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r10.u8);
	// stb r23,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r23.u8);
	// stb r28,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r28.u8);
	// stb r9,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r9.u8);
	// stb r27,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r27.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r31,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r31.u8);
	// stb r10,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r10.u8);
	// stb r31,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r31.u8);
	// stb r31,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r31.u8);
	// stb r31,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r31.u8);
	// stb r10,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r10.u8);
	// stb r23,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r23.u8);
	// stb r27,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r27.u8);
	// stb r8,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r8.u8);
	// stb r11,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r11.u8);
	// stb r11,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r11.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r31,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r31.u8);
	// stb r31,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r31.u8);
	// stb r10,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r10.u8);
	// stb r4,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r4.u8);
	// stb r14,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r14.u8);
	// li r14,182
	ctx.r14.s64 = 182;
	// li r18,164
	ctx.r18.s64 = 164;
	// stb r25,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r25.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r14,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r14.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r18,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r18.u8);
	// li r18,250
	ctx.r18.s64 = 250;
	// stb r10,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r10.u8);
	// stb r28,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r28.u8);
	// stb r9,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r9.u8);
	// stb r14,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r14.u8);
	// stb r14,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r14.u8);
	// li r14,251
	ctx.r14.s64 = 251;
	// stb r18,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r18.u8);
	// li r18,229
	ctx.r18.s64 = 229;
	// stb r27,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r27.u8);
	// stb r8,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r8.u8);
	// stb r31,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r31.u8);
	// stb r14,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r14.u8);
	// li r14,236
	ctx.r14.s64 = 236;
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r3,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r3.u8);
	// stb r15,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r15.u8);
	// stb r11,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r11.u8);
	// stb r14,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r14.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r11,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r11.u8);
	// stb r18,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r18.u8);
	// stb r6,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r6.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r14,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r14.u8);
	// li r14,251
	ctx.r14.s64 = 251;
	// stb r31,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r31.u8);
	// stb r31,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r31.u8);
	// stb r10,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r10.u8);
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r14,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r14.u8);
	// li r14,237
	ctx.r14.s64 = 237;
	// stb r30,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r30.u8);
	// stb r7,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r7.u8);
	// stb r8,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r8.u8);
	// stb r11,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r11.u8);
	// stb r14,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r11,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r11.u8);
	// stb r6,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r6.u8);
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r31,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r31.u8);
	// stb r14,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r14.u8);
	// li r14,193
	ctx.r14.s64 = 193;
	// stb r31,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r31.u8);
	// stb r10,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r10.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r30,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r30.u8);
	// stb r14,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r14.u8);
	// li r14,164
	ctx.r14.s64 = 164;
	// stb r7,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r7.u8);
	// stb r8,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r8.u8);
	// stb r11,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r11.u8);
	// stb r11,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r11.u8);
	// stb r14,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r14.u8);
	// li r14,30
	ctx.r14.s64 = 30;
	// stb r9,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r9.u8);
	// stb r22,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r22.u8);
	// stb r27,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r27.u8);
	// stb r8,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r8.u8);
	// stb r14,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r14.u8);
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r3,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r3.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r14,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r14.u8);
	// li r14,128
	ctx.r14.s64 = 128;
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r4,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r4.u8);
	// stb r14,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r14.u8);
	// li r14,3
	ctx.r14.s64 = 3;
	// stb r24,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r24.u8);
	// li r18,97
	ctx.r18.s64 = 97;
	// stb r24,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r24.u8);
	// stb r6,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r6.u8);
	// stb r6,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r6.u8);
	// stb r8,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r8.u8);
	// stb r14,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r14.u8);
	// li r14,99
	ctx.r14.s64 = 99;
	// stb r18,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r18.u8);
	// li r18,26
	ctx.r18.s64 = 26;
	// stb r11,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r11.u8);
	// stb r11,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r11.u8);
	// stb r5,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r5.u8);
	// stb r14,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r14.u8);
	// li r14,154
	ctx.r14.s64 = 154;
	// stb r18,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r18.u8);
	// li r18,197
	ctx.r18.s64 = 197;
	// stb r21,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r21.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r30,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r30.u8);
	// stb r14,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r14.u8);
	// li r14,245
	ctx.r14.s64 = 245;
	// stb r18,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r18.u8);
	// li r18,86
	ctx.r18.s64 = 86;
	// stb r7,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r7.u8);
	// stb r8,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r8.u8);
	// stb r11,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r11.u8);
	// stb r14,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r18,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r18.u8);
	// li r18,127
	ctx.r18.s64 = 127;
	// stb r11,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r11.u8);
	// stb r5,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r5.u8);
	// stb r16,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r16.u8);
	// stb r14,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r14.u8);
	// li r14,38
	ctx.r14.s64 = 38;
	// stb r31,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r31.u8);
	// stb r30,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r30.u8);
	// stb r7,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r7.u8);
	// stb r8,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r8.u8);
	// stb r14,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r14.u8);
	// li r14,129
	ctx.r14.s64 = 129;
	// stb r11,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r11.u8);
	// stb r11,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r11.u8);
	// stb r9,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r9.u8);
	// stb r29,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r29.u8);
	// stb r14,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r31,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r31.u8);
	// stb r20,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r20.u8);
	// stb r15,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r15.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r14,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r14.u8);
	// li r14,131
	ctx.r14.s64 = 131;
	// stb r31,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r31.u8);
	// stb r9,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r9.u8);
	// stb r9,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r9.u8);
	// stb r9,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r9.u8);
	// stb r14,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r14.u8);
	// li r14,14
	ctx.r14.s64 = 14;
	// stb r29,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r29.u8);
	// stb r31,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r31.u8);
	// stb r25,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r25.u8);
	// stb r31,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r31.u8);
	// stb r14,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r14.u8);
	// li r14,46
	ctx.r14.s64 = 46;
	// stb r31,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r31.u8);
	// stb r31,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r31.u8);
	// stb r31,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r31.u8);
	// stb r31,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r31.u8);
	// stb r14,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r14.u8);
	// stb r10,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r10.u8);
	// stb r28,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r28.u8);
	// stb r9,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r9.u8);
	// stb r9,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r9.u8);
	// stb r6,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r6.u8);
	// stb r14,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r14.u8);
	// stb r31,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r31.u8);
	// stb r31,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r31.u8);
	// stb r18,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r18.u8);
	// stb r14,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r14.u8);
	// stb r14,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// ld r18,80(r1)
	ctx.r18.u64 = PPC_LOAD_U64(ctx.r1.u32 + 80);
	// stb r3,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r3.u8);
	// std r3,80(r1)
	PPC_STORE_U64(ctx.r1.u32 + 80, ctx.r3.u64);
	// li r3,99
	ctx.r3.s64 = 99;
	// stb r6,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r6.u8);
	// stb r14,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r14.u8);
	// li r14,26
	ctx.r14.s64 = 26;
	// stb r8,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r8.u8);
	// stb r11,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r11.u8);
	// stb r3,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r3.u8);
	// li r3,237
	ctx.r3.s64 = 237;
	// stb r11,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r11.u8);
	// stb r14,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r14.u8);
	// li r14,197
	ctx.r14.s64 = 197;
	// stb r5,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r5.u8);
	// stb r21,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r21.u8);
	// stb r3,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r3.u8);
	// li r3,51
	ctx.r3.s64 = 51;
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r14,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r14.u8);
	// li r14,87
	ctx.r14.s64 = 87;
	// stb r30,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r30.u8);
	// stb r7,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r7.u8);
	// stb r3,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r3.u8);
	// li r3,253
	ctx.r3.s64 = 253;
	// stb r8,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r8.u8);
	// stb r14,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r14.u8);
	// li r14,68
	ctx.r14.s64 = 68;
	// stb r11,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r11.u8);
	// stb r11,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r11.u8);
	// stb r5,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r5.u8);
	// stb r16,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r16.u8);
	// stb r14,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r14.u8);
	// li r14,46
	ctx.r14.s64 = 46;
	// stb r31,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r31.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r18,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r18.u8);
	// stb r31,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r31.u8);
	// stb r14,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r14.u8);
	// li r14,86
	ctx.r14.s64 = 86;
	// stb r31,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r31.u8);
	// stb r31,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r31.u8);
	// stb r31,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r31.u8);
	// stb r31,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r31.u8);
	// stb r14,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r14.u8);
	// li r14,127
	ctx.r14.s64 = 127;
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r31,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r31.u8);
	// stb r31,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r31.u8);
	// stb r3,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r3.u8);
	// stb r6,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r6.u8);
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r31,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r31,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r31.u8);
	// stb r31,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r31.u8);
	// stb r10,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r10.u8);
	// stb r31,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r31.u8);
	// stb r30,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r30.u8);
	// stb r7,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r7.u8);
	// stb r8,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r8.u8);
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r9,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r9.u8);
	// stb r6,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r6.u8);
	// stb r31,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r31.u8);
	// stb r31,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r31.u8);
	// stb r14,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r14.u8);
	// stb r6,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r6.u8);
	// stb r8,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r8.u8);
	// stb r11,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r11.u8);
	// stb r11,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r11.u8);
	// stb r5,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r5.u8);
	// stb r21,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r21.u8);
	// stb r31,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r31.u8);
	// stb r30,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r30.u8);
	// stb r7,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r7.u8);
	// li r14,21
	ctx.r14.s64 = 21;
	// stb r8,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r8.u8);
	// li r3,84
	ctx.r3.s64 = 84;
	// stb r11,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r11.u8);
	// stb r11,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r11.u8);
	// stb r5,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r5.u8);
	// stb r16,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r16.u8);
	// stb r14,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r14.u8);
	// li r14,74
	ctx.r14.s64 = 74;
	// stb r3,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r3.u8);
	// li r3,30
	ctx.r3.s64 = 30;
	// stb r31,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r18,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r18.u8);
	// stb r14,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r14.u8);
	// li r14,250
	ctx.r14.s64 = 250;
	// stb r31,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r31.u8);
	// stb r31,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r31.u8);
	// stb r31,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r31.u8);
	// stb r31,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r31.u8);
	// stb r14,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r14.u8);
	// li r14,37
	ctx.r14.s64 = 37;
	// stb r31,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r31.u8);
	// stb r31,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r31.u8);
	// stb r31,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r31.u8);
	// stb r3,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r3.u8);
	// stb r14,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r14.u8);
	// li r14,36
	ctx.r14.s64 = 36;
	// stb r31,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r31.u8);
	// stb r31,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r31.u8);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r31,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r31.u8);
	// stb r14,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r14.u8);
	// stb r14,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r14.u8);
	// li r14,84
	ctx.r14.s64 = 84;
	// stb r9,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r9.u8);
	// stb r18,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r18.u8);
	// stb r31,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r31.u8);
	// stb r31,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r31.u8);
	// stb r14,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r14.u8);
	// li r14,31
	ctx.r14.s64 = 31;
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r31.u8);
	// stb r31,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r31.u8);
	// stb r31,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r31.u8);
	// stb r14,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r14.u8);
	// li r14,67
	ctx.r14.s64 = 67;
	// stb r31,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r31.u8);
	// stb r31,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r31.u8);
	// stb r31,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r31.u8);
	// stb r31,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r31.u8);
	// stb r14,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r14.u8);
	// li r14,197
	ctx.r14.s64 = 197;
	// stb r10,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r10.u8);
	// stb r31,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r31.u8);
	// stb r31,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r31.u8);
	// stb r31,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r31.u8);
	// stb r14,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r14.u8);
	// li r14,205
	ctx.r14.s64 = 205;
	// stb r10,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r10.u8);
	// stb r19,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r19.u8);
	// stb r31,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r31.u8);
	// stb r31,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r31.u8);
	// stb r14,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r14.u8);
	// li r14,203
	ctx.r14.s64 = 203;
	// stb r31,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r31.u8);
	// stb r10,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r10.u8);
	// stb r31,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r31.u8);
	// stb r31,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r31.u8);
	// stb r14,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r14.u8);
	// li r14,3
	ctx.r14.s64 = 3;
	// stb r31,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r31.u8);
	// stb r10,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r10.u8);
	// stb r9,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r9.u8);
	// stb r4,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r4.u8);
	// stb r14,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r14.u8);
	// li r14,175
	ctx.r14.s64 = 175;
	// stb r6,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r6.u8);
	// stb r6,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r6.u8);
	// stb r8,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r8.u8);
	// stb r14,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r14.u8);
	// li r3,152
	ctx.r3.s64 = 152;
	// stb r11,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r11.u8);
	// li r14,67
	ctx.r14.s64 = 67;
	// stb r11,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r11.u8);
	// stb r5,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r5.u8);
	// stb r21,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r21.u8);
	// stb r31,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r31.u8);
	// stb r3,1028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1028, ctx.r3.u8);
	// li r3,248
	ctx.r3.s64 = 248;
	// stb r14,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r30,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r30.u8);
	// stb r7,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r7.u8);
	// stb r8,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r8.u8);
	// stb r3,1032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1032, ctx.r3.u8);
	// li r3,72
	ctx.r3.s64 = 72;
	// stb r14,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r14.u8);
	// li r14,209
	ctx.r14.s64 = 209;
	// stb r11,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r11.u8);
	// stb r11,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r11.u8);
	// stb r5,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r5.u8);
	// stb r3,1033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1033, ctx.r3.u8);
	// li r3,38
	ctx.r3.s64 = 38;
	// stb r16,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r16.u8);
	// stb r31,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r31.u8);
	// stb r22,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r22.u8);
	// stb r7,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r7.u8);
	// stb r3,1034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1034, ctx.r3.u8);
	// li r3,3
	ctx.r3.s64 = 3;
	// stb r26,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r26.u8);
	// stb r8,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r8.u8);
	// stb r11,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r11.u8);
	// stb r11,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r11.u8);
	// stb r3,1037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1037, ctx.r3.u8);
	// li r3,190
	ctx.r3.s64 = 190;
	// stb r11,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r11.u8);
	// stb r26,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r26.u8);
	// stb r31,1023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1023, ctx.r31.u8);
	// stb r31,1024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1024, ctx.r31.u8);
	// stb r3,1038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1038, ctx.r3.u8);
	// li r3,20
	ctx.r3.s64 = 20;
	// stb r31,1025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1025, ctx.r31.u8);
	// stb r10,1026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1026, ctx.r10.u8);
	// stb r14,1027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1027, ctx.r14.u8);
	// stb r8,1029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1029, ctx.r8.u8);
	// stb r3,1039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1039, ctx.r3.u8);
	// li r3,152
	ctx.r3.s64 = 152;
	// stb r11,1030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1030, ctx.r11.u8);
	// stb r11,1031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1031, ctx.r11.u8);
	// stb r9,1035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1035, ctx.r9.u8);
	// stb r22,1036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1036, ctx.r22.u8);
	// stb r3,1046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1046, ctx.r3.u8);
	// li r3,248
	ctx.r3.s64 = 248;
	// stb r26,1040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1040, ctx.r26.u8);
	// stb r31,1041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1041, ctx.r31.u8);
	// stb r31,1042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1042, ctx.r31.u8);
	// stb r31,1043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1043, ctx.r31.u8);
	// stb r3,1050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1050, ctx.r3.u8);
	// li r3,72
	ctx.r3.s64 = 72;
	// stb r10,1044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1044, ctx.r10.u8);
	// stb r14,1045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1045, ctx.r14.u8);
	// stb r8,1047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1047, ctx.r8.u8);
	// stb r11,1048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1048, ctx.r11.u8);
	// stb r3,1051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1051, ctx.r3.u8);
	// li r3,37
	ctx.r3.s64 = 37;
	// stb r11,1049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1049, ctx.r11.u8);
	// stb r9,1053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1053, ctx.r9.u8);
	// stb r4,1054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1054, ctx.r4.u8);
	// stb r20,1055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1055, ctx.r20.u8);
	// stb r3,1052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1052, ctx.r3.u8);
	// li r3,216
	ctx.r3.s64 = 216;
	// stb r26,1059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1059, ctx.r26.u8);
	// stb r31,1060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1060, ctx.r31.u8);
	// stb r31,1061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1061, ctx.r31.u8);
	// stb r31,1062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1062, ctx.r31.u8);
	// stb r3,1056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1056, ctx.r3.u8);
	// li r3,132
	ctx.r3.s64 = 132;
	// stb r10,1063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1063, ctx.r10.u8);
	// stb r3,1057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1057, ctx.r3.u8);
	// li r3,129
	ctx.r3.s64 = 129;
	// stb r3,1058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1058, ctx.r3.u8);
	// li r3,67
	ctx.r3.s64 = 67;
	// stb r14,1064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1064, ctx.r14.u8);
	// li r14,188
	ctx.r14.s64 = 188;
	// stb r9,1065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1065, ctx.r9.u8);
	// stb r29,1066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1066, ctx.r29.u8);
	// stb r31,1067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1067, ctx.r31.u8);
	// stb r4,1068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1068, ctx.r4.u8);
	// stb r3,1102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1102, ctx.r3.u8);
	// li r3,39
	ctx.r3.s64 = 39;
	// stb r14,1074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1074, ctx.r14.u8);
	// li r14,96
	ctx.r14.s64 = 96;
	// stb r26,1069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1069, ctx.r26.u8);
	// stb r31,1070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1070, ctx.r31.u8);
	// stb r31,1071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1071, ctx.r31.u8);
	// stb r3,1105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1105, ctx.r3.u8);
	// li r3,36
	ctx.r3.s64 = 36;
	// stb r31,1072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1072, ctx.r31.u8);
	// stb r10,1073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1073, ctx.r10.u8);
	// stb r9,1075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1075, ctx.r9.u8);
	// stb r4,1076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1076, ctx.r4.u8);
	// stb r3,1121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1121, ctx.r3.u8);
	// li r3,69
	ctx.r3.s64 = 69;
	// stb r7,1077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1077, ctx.r7.u8);
	// stb r14,1078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1078, ctx.r14.u8);
	// stb r6,1079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1079, ctx.r6.u8);
	// stb r6,1080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1080, ctx.r6.u8);
	// stb r3,1127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1127, ctx.r3.u8);
	// li r3,184
	ctx.r3.s64 = 184;
	// stb r8,1081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1081, ctx.r8.u8);
	// stb r11,1082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1082, ctx.r11.u8);
	// stb r11,1083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1083, ctx.r11.u8);
	// stb r5,1084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1084, ctx.r5.u8);
	// stb r21,1085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1085, ctx.r21.u8);
	// stb r31,1086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1086, ctx.r31.u8);
	// stb r30,1087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1087, ctx.r30.u8);
	// stb r7,1088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1088, ctx.r7.u8);
	// stb r8,1089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1089, ctx.r8.u8);
	// stb r11,1090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1090, ctx.r11.u8);
	// stb r11,1091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1091, ctx.r11.u8);
	// stb r5,1092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1092, ctx.r5.u8);
	// stb r16,1093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1093, ctx.r16.u8);
	// stb r31,1094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1094, ctx.r31.u8);
	// stb r22,1095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1095, ctx.r22.u8);
	// stb r7,1096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1096, ctx.r7.u8);
	// stb r26,1097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1097, ctx.r26.u8);
	// stb r8,1098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1098, ctx.r8.u8);
	// stb r11,1099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1099, ctx.r11.u8);
	// stb r11,1100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1100, ctx.r11.u8);
	// stb r11,1101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1101, ctx.r11.u8);
	// stb r4,1103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1103, ctx.r4.u8);
	// stb r7,1104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1104, ctx.r7.u8);
	// stb r25,1106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1106, ctx.r25.u8);
	// stb r8,1107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1107, ctx.r8.u8);
	// stb r11,1108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1108, ctx.r11.u8);
	// stb r11,1109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1109, ctx.r11.u8);
	// stb r5,1110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1110, ctx.r5.u8);
	// stb r17,1111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1111, ctx.r17.u8);
	// stb r28,1112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1112, ctx.r28.u8);
	// stb r9,1113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1113, ctx.r9.u8);
	// stb r6,1114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1114, ctx.r6.u8);
	// stb r8,1115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1115, ctx.r8.u8);
	// stb r11,1116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1116, ctx.r11.u8);
	// stb r11,1117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1117, ctx.r11.u8);
	// stb r5,1118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1118, ctx.r5.u8);
	// stb r17,1119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1119, ctx.r17.u8);
	// stb r31,1120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1120, ctx.r31.u8);
	// stb r31,1122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1122, ctx.r31.u8);
	// stb r18,1123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1123, ctx.r18.u8);
	// stb r31,1124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1124, ctx.r31.u8);
	// stb r31,1125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1125, ctx.r31.u8);
	// stb r31,1126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1126, ctx.r31.u8);
	// stb r3,1128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1128, ctx.r3.u8);
	// stb r31,1129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1129, ctx.r31.u8);
	// stb r31,1130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1130, ctx.r31.u8);
	// stb r31,1131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1131, ctx.r31.u8);
	// stb r31,1132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1132, ctx.r31.u8);
	// stb r31,1133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1133, ctx.r31.u8);
	// stb r31,1134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1134, ctx.r31.u8);
	// stb r31,1135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1135, ctx.r31.u8);
	// stb r10,1136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1136, ctx.r10.u8);
	// stb r23,1137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1137, ctx.r23.u8);
	// stb r14,1161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1161, ctx.r14.u8);
	// li r14,198
	ctx.r14.s64 = 198;
	// li r3,205
	ctx.r3.s64 = 205;
	// stb r31,1138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1138, ctx.r31.u8);
	// stb r31,1139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1139, ctx.r31.u8);
	// stb r31,1140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1140, ctx.r31.u8);
	// stb r10,1141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1141, ctx.r10.u8);
	// stb r14,1167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1167, ctx.r14.u8);
	// stb r14,1175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1175, ctx.r14.u8);
	// li r14,37
	ctx.r14.s64 = 37;
	// stb r3,1142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1142, ctx.r3.u8);
	// li r3,207
	ctx.r3.s64 = 207;
	// stb r31,1143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1143, ctx.r31.u8);
	// stb r31,1144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1144, ctx.r31.u8);
	// stb r31,1145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1145, ctx.r31.u8);
	// stb r14,1177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1177, ctx.r14.u8);
	// li r14,69
	ctx.r14.s64 = 69;
	// stb r3,1147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1147, ctx.r3.u8);
	// li r3,204
	ctx.r3.s64 = 204;
	// stb r10,1146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1146, ctx.r10.u8);
	// stb r31,1148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1148, ctx.r31.u8);
	// stb r31,1149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1149, ctx.r31.u8);
	// stb r14,1183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1183, ctx.r14.u8);
	// li r14,153
	ctx.r14.s64 = 153;
	// stb r31,1150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1150, ctx.r31.u8);
	// stb r10,1151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1151, ctx.r10.u8);
	// stb r19,1152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1152, ctx.r19.u8);
	// stb r31,1153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1153, ctx.r31.u8);
	// stb r14,1184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1184, ctx.r14.u8);
	// li r14,23
	ctx.r14.s64 = 23;
	// stb r31,1154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1154, ctx.r31.u8);
	// stb r31,1155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1155, ctx.r31.u8);
	// stb r10,1156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1156, ctx.r10.u8);
	// stb r3,1157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1157, ctx.r3.u8);
	// stb r14,1194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1194, ctx.r14.u8);
	// li r14,205
	ctx.r14.s64 = 205;
	// stb r9,1158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1158, ctx.r9.u8);
	// stb r4,1159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1159, ctx.r4.u8);
	// stb r7,1160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1160, ctx.r7.u8);
	// stb r25,1162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1162, ctx.r25.u8);
	// stb r14,1199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1199, ctx.r14.u8);
	// li r14,207
	ctx.r14.s64 = 207;
	// stb r8,1163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1163, ctx.r8.u8);
	// stb r11,1164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1164, ctx.r11.u8);
	// stb r11,1165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1165, ctx.r11.u8);
	// stb r5,1166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1166, ctx.r5.u8);
	// stb r28,1168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1168, ctx.r28.u8);
	// stb r9,1169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1169, ctx.r9.u8);
	// stb r6,1170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1170, ctx.r6.u8);
	// stb r8,1171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1171, ctx.r8.u8);
	// stb r11,1172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1172, ctx.r11.u8);
	// stb r11,1173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1173, ctx.r11.u8);
	// stb r5,1174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1174, ctx.r5.u8);
	// stb r31,1176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1176, ctx.r31.u8);
	// stb r31,1178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1178, ctx.r31.u8);
	// stb r18,1179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1179, ctx.r18.u8);
	// stb r31,1180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1180, ctx.r31.u8);
	// stb r31,1181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1181, ctx.r31.u8);
	// stb r31,1182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1182, ctx.r31.u8);
	// stb r31,1185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1185, ctx.r31.u8);
	// stb r31,1186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1186, ctx.r31.u8);
	// stb r31,1187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1187, ctx.r31.u8);
	// stb r31,1188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1188, ctx.r31.u8);
	// stb r31,1189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1189, ctx.r31.u8);
	// stb r31,1190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1190, ctx.r31.u8);
	// stb r31,1191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1191, ctx.r31.u8);
	// stb r10,1192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1192, ctx.r10.u8);
	// stb r23,1193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1193, ctx.r23.u8);
	// stb r31,1195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1195, ctx.r31.u8);
	// stb r31,1196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1196, ctx.r31.u8);
	// stb r31,1197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1197, ctx.r31.u8);
	// stb r10,1198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1198, ctx.r10.u8);
	// stb r31,1200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1200, ctx.r31.u8);
	// stb r31,1201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1201, ctx.r31.u8);
	// stb r31,1202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1202, ctx.r31.u8);
	// stb r10,1203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1203, ctx.r10.u8);
	// stb r14,1204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1204, ctx.r14.u8);
	// stb r31,1205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1205, ctx.r31.u8);
	// stb r31,1206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1206, ctx.r31.u8);
	// stb r31,1207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1207, ctx.r31.u8);
	// stb r10,1208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1208, ctx.r10.u8);
	// li r14,204
	ctx.r14.s64 = 204;
	// stb r19,1209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1209, ctx.r19.u8);
	// li r3,196
	ctx.r3.s64 = 196;
	// stb r31,1210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1210, ctx.r31.u8);
	// stb r31,1211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1211, ctx.r31.u8);
	// stb r31,1212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1212, ctx.r31.u8);
	// stb r10,1213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1213, ctx.r10.u8);
	// stb r14,1214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1214, ctx.r14.u8);
	// li r14,135
	ctx.r14.s64 = 135;
	// stb r3,1249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1249, ctx.r3.u8);
	// li r3,171
	ctx.r3.s64 = 171;
	// stb r9,1215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1215, ctx.r9.u8);
	// stb r4,1216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1216, ctx.r4.u8);
	// stb r7,1217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1217, ctx.r7.u8);
	// stb r14,1218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1218, ctx.r14.u8);
	// li r14,13
	ctx.r14.s64 = 13;
	// stb r24,1219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1219, ctx.r24.u8);
	// stb r25,1220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1220, ctx.r25.u8);
	// stb r31,1221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1221, ctx.r31.u8);
	// stb r31,1222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1222, ctx.r31.u8);
	// stb r14,1230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1230, ctx.r14.u8);
	// stb r14,1269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1269, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r31,1223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1223, ctx.r31.u8);
	// stb r10,1224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1224, ctx.r10.u8);
	// stb r23,1225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1225, ctx.r23.u8);
	// stb r28,1226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1226, ctx.r28.u8);
	// stb r9,1227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1227, ctx.r9.u8);
	// stb r29,1228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1228, ctx.r29.u8);
	// stb r31,1229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1229, ctx.r31.u8);
	// stb r25,1231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1231, ctx.r25.u8);
	// stb r31,1232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1232, ctx.r31.u8);
	// stb r31,1233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1233, ctx.r31.u8);
	// stb r31,1234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1234, ctx.r31.u8);
	// stb r10,1235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1235, ctx.r10.u8);
	// stb r23,1236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1236, ctx.r23.u8);
	// stb r8,1237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1237, ctx.r8.u8);
	// stb r11,1238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1238, ctx.r11.u8);
	// stb r11,1239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1239, ctx.r11.u8);
	// stb r5,1240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1240, ctx.r5.u8);
	// stb r17,1241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1241, ctx.r17.u8);
	// stb r9,1242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1242, ctx.r9.u8);
	// stb r9,1243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1243, ctx.r9.u8);
	// stb r27,1244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1244, ctx.r27.u8);
	// stb r8,1245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1245, ctx.r8.u8);
	// stb r11,1246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1246, ctx.r11.u8);
	// stb r11,1247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1247, ctx.r11.u8);
	// stb r5,1248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1248, ctx.r5.u8);
	// stb r31,1250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1250, ctx.r31.u8);
	// stb r31,1251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1251, ctx.r31.u8);
	// stb r31,1252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1252, ctx.r31.u8);
	// stb r10,1253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1253, ctx.r10.u8);
	// stb r23,1254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1254, ctx.r23.u8);
	// stb r4,1255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1255, ctx.r4.u8);
	// stb r7,1256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1256, ctx.r7.u8);
	// stb r3,1257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1257, ctx.r3.u8);
	// stb r24,1258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1258, ctx.r24.u8);
	// stb r25,1259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1259, ctx.r25.u8);
	// stb r31,1260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1260, ctx.r31.u8);
	// stb r31,1261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1261, ctx.r31.u8);
	// stb r31,1262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1262, ctx.r31.u8);
	// stb r10,1263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1263, ctx.r10.u8);
	// stb r23,1264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1264, ctx.r23.u8);
	// stb r28,1265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1265, ctx.r28.u8);
	// stb r9,1266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1266, ctx.r9.u8);
	// stb r29,1267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1267, ctx.r29.u8);
	// stb r31,1268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1268, ctx.r31.u8);
	// stb r25,1270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1270, ctx.r25.u8);
	// stb r31,1271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1271, ctx.r31.u8);
	// stb r31,1272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1272, ctx.r31.u8);
	// stb r31,1273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1273, ctx.r31.u8);
	// stb r10,1274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1274, ctx.r10.u8);
	// stb r23,1275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1275, ctx.r23.u8);
	// stb r8,1276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1276, ctx.r8.u8);
	// stb r11,1277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1277, ctx.r11.u8);
	// stb r11,1278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1278, ctx.r11.u8);
	// stb r5,1279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1279, ctx.r5.u8);
	// stb r17,1280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1280, ctx.r17.u8);
	// stb r9,1281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1281, ctx.r9.u8);
	// stb r9,1282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1282, ctx.r9.u8);
	// stb r14,1283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1283, ctx.r14.u8);
	// li r14,31
	ctx.r14.s64 = 31;
	// stb r26,1284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1284, ctx.r26.u8);
	// li r3,68
	ctx.r3.s64 = 68;
	// stb r8,1285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1285, ctx.r8.u8);
	// stb r31,1286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1286, ctx.r31.u8);
	// stb r31,1287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1287, ctx.r31.u8);
	// stb r4,1291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1291, ctx.r4.u8);
	// stb r14,1288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1288, ctx.r14.u8);
	// li r14,29
	ctx.r14.s64 = 29;
	// stb r3,1340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1340, ctx.r3.u8);
	// li r3,171
	ctx.r3.s64 = 171;
	// stb r30,1292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1292, ctx.r30.u8);
	// stb r24,1294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1294, ctx.r24.u8);
	// stb r6,1296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1296, ctx.r6.u8);
	// stb r14,1289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1289, ctx.r14.u8);
	// li r14,39
	ctx.r14.s64 = 39;
	// stb r6,1297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1297, ctx.r6.u8);
	// stb r8,1298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1298, ctx.r8.u8);
	// stb r11,1299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1299, ctx.r11.u8);
	// stb r11,1300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1300, ctx.r11.u8);
	// stb r14,1290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1290, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r5,1301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1301, ctx.r5.u8);
	// stb r21,1302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1302, ctx.r21.u8);
	// stb r31,1303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1303, ctx.r31.u8);
	// stb r30,1304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1304, ctx.r30.u8);
	// stb r14,1293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1293, ctx.r14.u8);
	// li r14,129
	ctx.r14.s64 = 129;
	// stb r7,1305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1305, ctx.r7.u8);
	// stb r8,1306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1306, ctx.r8.u8);
	// stb r11,1307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1307, ctx.r11.u8);
	// stb r11,1308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1308, ctx.r11.u8);
	// stb r14,1295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1295, ctx.r14.u8);
	// li r14,67
	ctx.r14.s64 = 67;
	// stb r5,1309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1309, ctx.r5.u8);
	// stb r16,1310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1310, ctx.r16.u8);
	// stb r31,1311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1311, ctx.r31.u8);
	// stb r22,1312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1312, ctx.r22.u8);
	// stb r14,1319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1319, ctx.r14.u8);
	// li r14,186
	ctx.r14.s64 = 186;
	// stb r7,1313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1313, ctx.r7.u8);
	// stb r26,1314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1314, ctx.r26.u8);
	// stb r8,1315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1315, ctx.r8.u8);
	// stb r11,1316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1316, ctx.r11.u8);
	// stb r14,1329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1329, ctx.r14.u8);
	// li r14,190
	ctx.r14.s64 = 190;
	// stb r11,1317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1317, ctx.r11.u8);
	// stb r11,1318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1318, ctx.r11.u8);
	// stb r9,1320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1320, ctx.r9.u8);
	// stb r29,1321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1321, ctx.r29.u8);
	// stb r14,1338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1338, ctx.r14.u8);
	// li r14,56
	ctx.r14.s64 = 56;
	// stb r31,1322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1322, ctx.r31.u8);
	// stb r20,1323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1323, ctx.r20.u8);
	// stb r25,1324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1324, ctx.r25.u8);
	// stb r31,1325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1325, ctx.r31.u8);
	// stb r14,1339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1339, ctx.r14.u8);
	// stb r14,1342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1342, ctx.r14.u8);
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r31,1326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1326, ctx.r31.u8);
	// stb r31,1327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1327, ctx.r31.u8);
	// stb r10,1328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1328, ctx.r10.u8);
	// stb r28,1330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1330, ctx.r28.u8);
	// stb r14,1343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1343, ctx.r14.u8);
	// li r14,235
	ctx.r14.s64 = 235;
	// stb r9,1331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1331, ctx.r9.u8);
	// stb r9,1332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1332, ctx.r9.u8);
	// stb r27,1333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1333, ctx.r27.u8);
	// stb r31,1334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1334, ctx.r31.u8);
	// stb r31,1335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1335, ctx.r31.u8);
	// stb r31,1336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1336, ctx.r31.u8);
	// stb r10,1337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1337, ctx.r10.u8);
	// stb r3,1341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1341, ctx.r3.u8);
	// stb r18,1344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1344, ctx.r18.u8);
	// stb r31,1345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1345, ctx.r31.u8);
	// stb r31,1346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1346, ctx.r31.u8);
	// stb r31,1347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1347, ctx.r31.u8);
	// stb r28,1348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1348, ctx.r28.u8);
	// stb r14,1349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1349, ctx.r14.u8);
	// stb r31,1350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1350, ctx.r31.u8);
	// stb r31,1351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1351, ctx.r31.u8);
	// li r14,186
	ctx.r14.s64 = 186;
	// stb r31,1352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1352, ctx.r31.u8);
	// stb r31,1353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1353, ctx.r31.u8);
	// stb r9,1354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1354, ctx.r9.u8);
	// stb r6,1355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1355, ctx.r6.u8);
	// stb r31,1356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1356, ctx.r31.u8);
	// stb r14,1360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1360, ctx.r14.u8);
	// li r14,251
	ctx.r14.s64 = 251;
	// stb r31,1357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1357, ctx.r31.u8);
	// stb r31,1358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1358, ctx.r31.u8);
	// stb r10,1359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1359, ctx.r10.u8);
	// stb r31,1361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1361, ctx.r31.u8);
	// stb r14,1367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1367, ctx.r14.u8);
	// li r14,181
	ctx.r14.s64 = 181;
	// stb r30,1362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1362, ctx.r30.u8);
	// stb r7,1363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1363, ctx.r7.u8);
	// stb r8,1364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1364, ctx.r8.u8);
	// stb r11,1365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1365, ctx.r11.u8);
	// stb r14,1368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1368, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r11,1366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1366, ctx.r11.u8);
	// stb r9,1369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1369, ctx.r9.u8);
	// stb r4,1370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1370, ctx.r4.u8);
	// stb r30,1371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1371, ctx.r30.u8);
	// stb r14,1372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1372, ctx.r14.u8);
	// li r14,248
	ctx.r14.s64 = 248;
	// stb r24,1373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1373, ctx.r24.u8);
	// stb r16,1374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1374, ctx.r16.u8);
	// stb r8,1375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1375, ctx.r8.u8);
	// stb r11,1376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1376, ctx.r11.u8);
	// stb r14,1378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1378, ctx.r14.u8);
	// li r14,72
	ctx.r14.s64 = 72;
	// stb r11,1377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1377, ctx.r11.u8);
	// stb r31,1380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1380, ctx.r31.u8);
	// stb r31,1381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1381, ctx.r31.u8);
	// stb r31,1382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1382, ctx.r31.u8);
	// stb r14,1379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1379, ctx.r14.u8);
	// li r14,190
	ctx.r14.s64 = 190;
	// stb r10,1383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1383, ctx.r10.u8);
	// stb r9,1385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1385, ctx.r9.u8);
	// stb r29,1386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1386, ctx.r29.u8);
	// stb r31,1387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1387, ctx.r31.u8);
	// stb r14,1384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1384, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r8,1391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1391, ctx.r8.u8);
	// stb r11,1392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1392, ctx.r11.u8);
	// stb r11,1393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1393, ctx.r11.u8);
	// stb r31,1396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1396, ctx.r31.u8);
	// stb r14,1388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1388, ctx.r14.u8);
	// li r14,153
	ctx.r14.s64 = 153;
	// stb r31,1397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1397, ctx.r31.u8);
	// stb r31,1398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1398, ctx.r31.u8);
	// stb r10,1399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1399, ctx.r10.u8);
	// stb r9,1401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1401, ctx.r9.u8);
	// stb r14,1389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1389, ctx.r14.u8);
	// li r14,146
	ctx.r14.s64 = 146;
	// stb r31,1402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1402, ctx.r31.u8);
	// stb r31,1403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1403, ctx.r31.u8);
	// stb r31,1404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1404, ctx.r31.u8);
	// stb r10,1405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1405, ctx.r10.u8);
	// stb r14,1390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1390, ctx.r14.u8);
	// li r14,248
	ctx.r14.s64 = 248;
	// stb r9,1407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1407, ctx.r9.u8);
	// stb r9,1408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1408, ctx.r9.u8);
	// stb r27,1409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1409, ctx.r27.u8);
	// stb r8,1410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1410, ctx.r8.u8);
	// stb r14,1394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1394, ctx.r14.u8);
	// li r14,72
	ctx.r14.s64 = 72;
	// stb r31,1411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1411, ctx.r31.u8);
	// stb r31,1412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1412, ctx.r31.u8);
	// stb r14,1395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1395, ctx.r14.u8);
	// li r14,207
	ctx.r14.s64 = 207;
	// stb r14,1400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1400, ctx.r14.u8);
	// li r14,190
	ctx.r14.s64 = 190;
	// stb r14,1406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1406, ctx.r14.u8);
	// li r14,29
	ctx.r14.s64 = 29;
	// stb r14,1413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1413, ctx.r14.u8);
	// li r14,192
	ctx.r14.s64 = 192;
	// stb r14,1414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1414, ctx.r14.u8);
	// li r14,56
	ctx.r14.s64 = 56;
	// stb r14,1415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1415, ctx.r14.u8);
	// stb r14,1418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1418, ctx.r14.u8);
	// li r3,63
	ctx.r3.s64 = 63;
	// stb r14,1425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1425, ctx.r14.u8);
	// li r14,68
	ctx.r14.s64 = 68;
	// stb r8,1420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1420, ctx.r8.u8);
	// stb r31,1421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1421, ctx.r31.u8);
	// stb r31,1422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1422, ctx.r31.u8);
	// stb r3,1416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1416, ctx.r3.u8);
	// li r3,250
	ctx.r3.s64 = 250;
	// stb r14,1426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1426, ctx.r14.u8);
	// li r14,174
	ctx.r14.s64 = 174;
	// stb r6,1428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1428, ctx.r6.u8);
	// stb r8,1429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1429, ctx.r8.u8);
	// stb r11,1430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1430, ctx.r11.u8);
	// stb r3,1417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1417, ctx.r3.u8);
	// li r3,68
	ctx.r3.s64 = 68;
	// stb r14,1427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1427, ctx.r14.u8);
	// li r14,251
	ctx.r14.s64 = 251;
	// stb r11,1431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1431, ctx.r11.u8);
	// stb r5,1432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1432, ctx.r5.u8);
	// stb r21,1433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1433, ctx.r21.u8);
	// stb r3,1419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1419, ctx.r3.u8);
	// li r3,29
	ctx.r3.s64 = 29;
	// stb r14,1440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1440, ctx.r14.u8);
	// stb r14,1454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1454, ctx.r14.u8);
	// li r14,180
	ctx.r14.s64 = 180;
	// stb r31,1434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1434, ctx.r31.u8);
	// stb r30,1435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1435, ctx.r30.u8);
	// stb r3,1423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1423, ctx.r3.u8);
	// li r3,192
	ctx.r3.s64 = 192;
	// stb r7,1436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1436, ctx.r7.u8);
	// stb r14,1455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1455, ctx.r14.u8);
	// li r14,29
	ctx.r14.s64 = 29;
	// stb r8,1437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1437, ctx.r8.u8);
	// stb r11,1438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1438, ctx.r11.u8);
	// stb r3,1424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1424, ctx.r3.u8);
	// li r3,86
	ctx.r3.s64 = 86;
	// stb r11,1439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1439, ctx.r11.u8);
	// stb r14,1462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1462, ctx.r14.u8);
	// li r14,191
	ctx.r14.s64 = 191;
	// stb r6,1442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1442, ctx.r6.u8);
	// stb r31,1443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1443, ctx.r31.u8);
	// stb r3,1441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1441, ctx.r3.u8);
	// li r3,186
	ctx.r3.s64 = 186;
	// stb r31,1444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1444, ctx.r31.u8);
	// stb r14,1463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1463, ctx.r14.u8);
	// li r14,186
	ctx.r14.s64 = 186;
	// stb r31,1445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1445, ctx.r31.u8);
	// stb r10,1446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1446, ctx.r10.u8);
	// stb r3,1447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1447, ctx.r3.u8);
	// stb r31,1448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1448, ctx.r31.u8);
	// stb r14,1469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1469, ctx.r14.u8);
	// li r14,251
	ctx.r14.s64 = 251;
	// stb r30,1449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1449, ctx.r30.u8);
	// stb r7,1450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1450, ctx.r7.u8);
	// stb r8,1451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1451, ctx.r8.u8);
	// stb r11,1452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1452, ctx.r11.u8);
	// stb r14,1476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1476, ctx.r14.u8);
	// li r14,179
	ctx.r14.s64 = 179;
	// stb r11,1453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1453, ctx.r11.u8);
	// stb r9,1456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1456, ctx.r9.u8);
	// stb r9,1457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1457, ctx.r9.u8);
	// stb r27,1458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1458, ctx.r27.u8);
	// stb r14,1477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1477, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r8,1459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1459, ctx.r8.u8);
	// stb r31,1460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1460, ctx.r31.u8);
	// stb r31,1461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1461, ctx.r31.u8);
	// stb r6,1464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1464, ctx.r6.u8);
	// stb r31,1465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1465, ctx.r31.u8);
	// stb r31,1466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1466, ctx.r31.u8);
	// stb r31,1467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1467, ctx.r31.u8);
	// stb r10,1468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1468, ctx.r10.u8);
	// stb r31,1470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1470, ctx.r31.u8);
	// stb r30,1471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1471, ctx.r30.u8);
	// stb r7,1472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1472, ctx.r7.u8);
	// stb r8,1473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1473, ctx.r8.u8);
	// stb r11,1474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1474, ctx.r11.u8);
	// stb r11,1475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1475, ctx.r11.u8);
	// stb r14,1478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1478, ctx.r14.u8);
	// stb r31,1479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1479, ctx.r31.u8);
	// li r14,30
	ctx.r14.s64 = 30;
	// stb r31,1486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1486, ctx.r31.u8);
	// stb r31,1487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1487, ctx.r31.u8);
	// stb r31,1490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1490, ctx.r31.u8);
	// stb r31,1491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1491, ctx.r31.u8);
	// stb r31,1492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1492, ctx.r31.u8);
	// stb r14,1480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1480, ctx.r14.u8);
	// li r14,61
	ctx.r14.s64 = 61;
	// stb r31,1493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1493, ctx.r31.u8);
	// stb r9,1494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1494, ctx.r9.u8);
	// stb r15,1495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1495, ctx.r15.u8);
	// stb r31,1496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1496, ctx.r31.u8);
	// stb r14,1481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1481, ctx.r14.u8);
	// li r14,245
	ctx.r14.s64 = 245;
	// stb r31,1497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1497, ctx.r31.u8);
	// stb r10,1498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1498, ctx.r10.u8);
	// stb r31,1500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1500, ctx.r31.u8);
	// stb r31,1501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1501, ctx.r31.u8);
	// stb r14,1482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1482, ctx.r14.u8);
	// li r14,194
	ctx.r14.s64 = 194;
	// stb r31,1502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1502, ctx.r31.u8);
	// stb r10,1503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1503, ctx.r10.u8);
	// stb r31,1505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1505, ctx.r31.u8);
	// stb r31,1506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1506, ctx.r31.u8);
	// stb r14,1483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1483, ctx.r14.u8);
	// li r14,143
	ctx.r14.s64 = 143;
	// stb r31,1507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1507, ctx.r31.u8);
	// stb r10,1508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1508, ctx.r10.u8);
	// stb r23,1509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1509, ctx.r23.u8);
	// stb r31,1510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1510, ctx.r31.u8);
	// stb r14,1484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1484, ctx.r14.u8);
	// li r14,33
	ctx.r14.s64 = 33;
	// stb r31,1511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1511, ctx.r31.u8);
	// stb r31,1512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1512, ctx.r31.u8);
	// stb r10,1513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1513, ctx.r10.u8);
	// stb r31,1515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1515, ctx.r31.u8);
	// stb r14,1485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1485, ctx.r14.u8);
	// li r14,90
	ctx.r14.s64 = 90;
	// stb r31,1516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1516, ctx.r31.u8);
	// stb r31,1517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1517, ctx.r31.u8);
	// stb r10,1518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1518, ctx.r10.u8);
	// stb r31,1520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1520, ctx.r31.u8);
	// stb r14,1488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1488, ctx.r14.u8);
	// li r14,117
	ctx.r14.s64 = 117;
	// stb r31,1521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1521, ctx.r31.u8);
	// stb r31,1522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1522, ctx.r31.u8);
	// stb r10,1523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1523, ctx.r10.u8);
	// stb r31,1525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1525, ctx.r31.u8);
	// stb r14,1489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1489, ctx.r14.u8);
	// li r14,88
	ctx.r14.s64 = 88;
	// stb r31,1526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1526, ctx.r31.u8);
	// stb r31,1527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1527, ctx.r31.u8);
	// stb r10,1528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1528, ctx.r10.u8);
	// stb r19,1529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1529, ctx.r19.u8);
	// stb r14,1499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1499, ctx.r14.u8);
	// li r14,207
	ctx.r14.s64 = 207;
	// stb r31,1530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1530, ctx.r31.u8);
	// stb r31,1531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1531, ctx.r31.u8);
	// stb r31,1532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1532, ctx.r31.u8);
	// stb r10,1533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1533, ctx.r10.u8);
	// stb r14,1504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1504, ctx.r14.u8);
	// li r14,205
	ctx.r14.s64 = 205;
	// stb r31,1535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1535, ctx.r31.u8);
	// stb r31,1536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1536, ctx.r31.u8);
	// stb r31,1537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1537, ctx.r31.u8);
	// stb r10,1538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1538, ctx.r10.u8);
	// stb r14,1514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1514, ctx.r14.u8);
	// li r14,204
	ctx.r14.s64 = 204;
	// stb r9,1540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1540, ctx.r9.u8);
	// stb r4,1541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1541, ctx.r4.u8);
	// stb r14,1519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1519, ctx.r14.u8);
	// li r14,203
	ctx.r14.s64 = 203;
	// stb r14,1524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1524, ctx.r14.u8);
	// li r14,201
	ctx.r14.s64 = 201;
	// stb r14,1534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1534, ctx.r14.u8);
	// li r14,200
	ctx.r14.s64 = 200;
	// stb r14,1539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1539, ctx.r14.u8);
	// li r14,8
	ctx.r14.s64 = 8;
	// stb r14,1542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1542, ctx.r14.u8);
	// li r14,94
	ctx.r14.s64 = 94;
	// stb r14,1543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1543, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r24,1544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1544, ctx.r24.u8);
	// stb r18,1547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1547, ctx.r18.u8);
	// stb r31,1548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1548, ctx.r31.u8);
	// stb r31,1549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1549, ctx.r31.u8);
	// stb r31,1550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1550, ctx.r31.u8);
	// stb r14,1545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1545, ctx.r14.u8);
	// li r14,114
	ctx.r14.s64 = 114;
	// stb r28,1551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1551, ctx.r28.u8);
	// stb r31,1553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1553, ctx.r31.u8);
	// stb r31,1554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1554, ctx.r31.u8);
	// stb r31,1555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1555, ctx.r31.u8);
	// stb r14,1546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1546, ctx.r14.u8);
	// li r14,197
	ctx.r14.s64 = 197;
	// stb r31,1556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1556, ctx.r31.u8);
	// stb r9,1557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1557, ctx.r9.u8);
	// stb r28,1558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1558, ctx.r28.u8);
	// stb r9,1559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1559, ctx.r9.u8);
	// stb r14,1552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1552, ctx.r14.u8);
	// stb r14,1569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1569, ctx.r14.u8);
	// li r14,86
	ctx.r14.s64 = 86;
	// stb r29,1560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1560, ctx.r29.u8);
	// stb r31,1561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1561, ctx.r31.u8);
	// stb r9,1562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1562, ctx.r9.u8);
	// stb r6,1563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1563, ctx.r6.u8);
	// stb r14,1583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1583, ctx.r14.u8);
	// li r14,16
	ctx.r14.s64 = 16;
	// stb r18,1564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1564, ctx.r18.u8);
	// stb r31,1565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1565, ctx.r31.u8);
	// stb r31,1566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1566, ctx.r31.u8);
	// stb r31,1567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1567, ctx.r31.u8);
	// stb r14,1587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1587, ctx.r14.u8);
	// li r14,30
	ctx.r14.s64 = 30;
	// stb r28,1568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1568, ctx.r28.u8);
	// stb r31,1570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1570, ctx.r31.u8);
	// stb r31,1571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1571, ctx.r31.u8);
	// stb r31,1572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1572, ctx.r31.u8);
	// stb r14,1592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1592, ctx.r14.u8);
	// li r14,106
	ctx.r14.s64 = 106;
	// stb r31,1573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1573, ctx.r31.u8);
	// stb r9,1574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1574, ctx.r9.u8);
	// stb r31,1575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1575, ctx.r31.u8);
	// stb r22,1576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1576, ctx.r22.u8);
	// stb r14,1593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1593, ctx.r14.u8);
	// li r14,29
	ctx.r14.s64 = 29;
	// stb r7,1577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1577, ctx.r7.u8);
	// stb r26,1578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1578, ctx.r26.u8);
	// stb r8,1579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1579, ctx.r8.u8);
	// stb r11,1580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1580, ctx.r11.u8);
	// stb r14,1601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1601, ctx.r14.u8);
	// li r14,55
	ctx.r14.s64 = 55;
	// stb r11,1581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1581, ctx.r11.u8);
	// stb r11,1582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1582, ctx.r11.u8);
	// stb r9,1584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1584, ctx.r9.u8);
	// stb r29,1585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1585, ctx.r29.u8);
	// stb r14,1602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1602, ctx.r14.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r31,1586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1586, ctx.r31.u8);
	// stb r6,1588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1588, ctx.r6.u8);
	// stb r8,1589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1589, ctx.r8.u8);
	// stb r31,1590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1590, ctx.r31.u8);
	// stb r31,1591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1591, ctx.r31.u8);
	// stb r31,1594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1594, ctx.r31.u8);
	// stb r22,1595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1595, ctx.r22.u8);
	// stb r7,1596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1596, ctx.r7.u8);
	// stb r26,1597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1597, ctx.r26.u8);
	// stb r8,1598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1598, ctx.r8.u8);
	// stb r31,1599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1599, ctx.r31.u8);
	// stb r31,1600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1600, ctx.r31.u8);
	// stb r9,1603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1603, ctx.r9.u8);
	// stb r4,1604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1604, ctx.r4.u8);
	// stb r22,1605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1605, ctx.r22.u8);
	// stb r22,1606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1606, ctx.r22.u8);
	// stb r25,1607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1607, ctx.r25.u8);
	// stb r31,1608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1608, ctx.r31.u8);
	// stb r31,1609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1609, ctx.r31.u8);
	// stb r31,1610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1610, ctx.r31.u8);
	// stb r10,1611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1611, ctx.r10.u8);
	// stb r14,1612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1612, ctx.r14.u8);
	// stb r28,1613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1613, ctx.r28.u8);
	// stb r9,1614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1614, ctx.r9.u8);
	// stb r14,1626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1626, ctx.r14.u8);
	// li r3,193
	ctx.r3.s64 = 193;
	// li r14,251
	ctx.r14.s64 = 251;
	// stb r27,1615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1615, ctx.r27.u8);
	// stb r31,1616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1616, ctx.r31.u8);
	// stb r31,1617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1617, ctx.r31.u8);
	// stb r31,1618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1618, ctx.r31.u8);
	// stb r3,1620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1620, ctx.r3.u8);
	// li r3,30
	ctx.r3.s64 = 30;
	// stb r14,1633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1633, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r10,1619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1619, ctx.r10.u8);
	// stb r6,1621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1621, ctx.r6.u8);
	// stb r31,1622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1622, ctx.r31.u8);
	// stb r3,1644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1644, ctx.r3.u8);
	// li r3,63
	ctx.r3.s64 = 63;
	// stb r14,1634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1634, ctx.r14.u8);
	// li r14,17
	ctx.r14.s64 = 17;
	// stb r31,1623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1623, ctx.r31.u8);
	// stb r31,1624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1624, ctx.r31.u8);
	// stb r10,1625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1625, ctx.r10.u8);
	// stb r3,1645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1645, ctx.r3.u8);
	// li r3,128
	ctx.r3.s64 = 128;
	// stb r14,1637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1637, ctx.r14.u8);
	// li r14,193
	ctx.r14.s64 = 193;
	// stb r31,1627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1627, ctx.r31.u8);
	// stb r30,1628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1628, ctx.r30.u8);
	// stb r7,1629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1629, ctx.r7.u8);
	// stb r3,1646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1646, ctx.r3.u8);
	// li r3,194
	ctx.r3.s64 = 194;
	// stb r14,1643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1643, ctx.r14.u8);
	// stb r14,1665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1665, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r8,1630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1630, ctx.r8.u8);
	// stb r11,1631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1631, ctx.r11.u8);
	// stb r3,1654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1654, ctx.r3.u8);
	// li r3,171
	ctx.r3.s64 = 171;
	// stb r11,1632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1632, ctx.r11.u8);
	// stb r14,1667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1667, ctx.r14.u8);
	// li r14,204
	ctx.r14.s64 = 204;
	// stb r22,1635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1635, ctx.r22.u8);
	// stb r22,1636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1636, ctx.r22.u8);
	// stb r3,1655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1655, ctx.r3.u8);
	// li r3,203
	ctx.r3.s64 = 203;
	// stb r27,1638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1638, ctx.r27.u8);
	// stb r14,1673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1673, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r31,1639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1639, ctx.r31.u8);
	// stb r31,1640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1640, ctx.r31.u8);
	// stb r3,1660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1660, ctx.r3.u8);
	// ld r3,80(r1)
	ctx.r3.u64 = PPC_LOAD_U64(ctx.r1.u32 + 80);
	// stb r14,1674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1674, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r31,1641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1641, ctx.r31.u8);
	// stb r10,1642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1642, ctx.r10.u8);
	// stb r31,1647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1647, ctx.r31.u8);
	// stb r31,1648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1648, ctx.r31.u8);
	// stb r27,1649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1649, ctx.r27.u8);
	// stb r31,1650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1650, ctx.r31.u8);
	// stb r31,1651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1651, ctx.r31.u8);
	// stb r31,1652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1652, ctx.r31.u8);
	// stb r10,1653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1653, ctx.r10.u8);
	// stb r31,1656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1656, ctx.r31.u8);
	// stb r31,1657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1657, ctx.r31.u8);
	// stb r31,1658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1658, ctx.r31.u8);
	// stb r10,1659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1659, ctx.r10.u8);
	// stb r31,1661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1661, ctx.r31.u8);
	// stb r31,1662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1662, ctx.r31.u8);
	// stb r31,1663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1663, ctx.r31.u8);
	// stb r10,1664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1664, ctx.r10.u8);
	// stb r9,1666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1666, ctx.r9.u8);
	// stb r26,1668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1668, ctx.r26.u8);
	// stb r8,1669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1669, ctx.r8.u8);
	// stb r31,1670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1670, ctx.r31.u8);
	// stb r31,1671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1671, ctx.r31.u8);
	// stb r3,1672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1672, ctx.r3.u8);
	// stb r14,1675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1675, ctx.r14.u8);
	// stb r31,1676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1676, ctx.r31.u8);
	// stb r31,1677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1677, ctx.r31.u8);
	// stb r31,1678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1678, ctx.r31.u8);
	// stb r10,1679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1679, ctx.r10.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r19,1680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1680, ctx.r19.u8);
	// stb r11,1682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1682, ctx.r11.u8);
	// stb r11,1683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1683, ctx.r11.u8);
	// stb r9,1686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1686, ctx.r9.u8);
	// stb r26,1688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1688, ctx.r26.u8);
	// stb r14,1681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1681, ctx.r14.u8);
	// li r14,254
	ctx.r14.s64 = 254;
	// stb r31,1689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1689, ctx.r31.u8);
	// stb r31,1690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1690, ctx.r31.u8);
	// stb r31,1691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1691, ctx.r31.u8);
	// stb r10,1692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1692, ctx.r10.u8);
	// stb r14,1684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1684, ctx.r14.u8);
	// li r14,158
	ctx.r14.s64 = 158;
	// stb r31,1698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1698, ctx.r31.u8);
	// stb r31,1699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1699, ctx.r31.u8);
	// stb r31,1700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1700, ctx.r31.u8);
	// stb r10,1701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1701, ctx.r10.u8);
	// stb r14,1685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1685, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r19,1702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1702, ctx.r19.u8);
	// stb r11,1704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1704, ctx.r11.u8);
	// stb r11,1705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1705, ctx.r11.u8);
	// stb r9,1708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1708, ctx.r9.u8);
	// stb r14,1687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1687, ctx.r14.u8);
	// li r14,187
	ctx.r14.s64 = 187;
	// stb r29,1709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1709, ctx.r29.u8);
	// stb r31,1710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1710, ctx.r31.u8);
	// stb r31,1714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1714, ctx.r31.u8);
	// stb r31,1715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1715, ctx.r31.u8);
	// stb r14,1693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1693, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r31,1716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1716, ctx.r31.u8);
	// stb r10,1717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1717, ctx.r10.u8);
	// stb r19,1718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1718, ctx.r19.u8);
	// stb r11,1720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1720, ctx.r11.u8);
	// stb r14,1694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1694, ctx.r14.u8);
	// stb r14,1695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1695, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r11,1721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1721, ctx.r11.u8);
	// stb r9,1724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1724, ctx.r9.u8);
	// stb r9,1725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1725, ctx.r9.u8);
	// stb r29,1726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1726, ctx.r29.u8);
	// stb r14,1696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1696, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r31,1727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1727, ctx.r31.u8);
	// stb r31,1731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1731, ctx.r31.u8);
	// stb r31,1732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1732, ctx.r31.u8);
	// stb r31,1733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1733, ctx.r31.u8);
	// stb r14,1697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1697, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r10,1734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1734, ctx.r10.u8);
	// stb r19,1735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1735, ctx.r19.u8);
	// stb r11,1737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1737, ctx.r11.u8);
	// stb r11,1738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1738, ctx.r11.u8);
	// stb r14,1703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1703, ctx.r14.u8);
	// li r14,254
	ctx.r14.s64 = 254;
	// stb r14,1706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1706, ctx.r14.u8);
	// li r14,148
	ctx.r14.s64 = 148;
	// stb r14,1707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1707, ctx.r14.u8);
	// li r14,14
	ctx.r14.s64 = 14;
	// stb r14,1711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1711, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r14,1712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1712, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r14,1713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1713, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r14,1719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1719, ctx.r14.u8);
	// li r14,254
	ctx.r14.s64 = 254;
	// stb r14,1722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1722, ctx.r14.u8);
	// li r14,155
	ctx.r14.s64 = 155;
	// stb r14,1723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1723, ctx.r14.u8);
	// li r14,14
	ctx.r14.s64 = 14;
	// stb r14,1728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1728, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r14,1729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1729, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r14,1730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1730, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r14,1736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1736, ctx.r14.u8);
	// li r14,254
	ctx.r14.s64 = 254;
	// stb r14,1739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1739, ctx.r14.u8);
	// li r14,153
	ctx.r14.s64 = 153;
	// std r17,80(r1)
	PPC_STORE_U64(ctx.r1.u32 + 80, ctx.r17.u64);
	// li r17,204
	ctx.r17.s64 = 204;
	// stb r9,1741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1741, ctx.r9.u8);
	// stb r9,1742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1742, ctx.r9.u8);
	// stb r4,1743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1743, ctx.r4.u8);
	// stb r14,1740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1740, ctx.r14.u8);
	// li r14,215
	ctx.r14.s64 = 215;
	// stb r17,1754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1754, ctx.r17.u8);
	// li r17,196
	ctx.r17.s64 = 196;
	// stb r4,1744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1744, ctx.r4.u8);
	// stb r24,1746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1746, ctx.r24.u8);
	// stb r24,1747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1747, ctx.r24.u8);
	// stb r14,1745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1745, ctx.r14.u8);
	// li r14,129
	ctx.r14.s64 = 129;
	// stb r26,1749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1749, ctx.r26.u8);
	// stb r8,1750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1750, ctx.r8.u8);
	// stb r31,1751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1751, ctx.r31.u8);
	// stb r31,1752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1752, ctx.r31.u8);
	// stb r14,1748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1748, ctx.r14.u8);
	// stb r14,1759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1759, ctx.r14.u8);
	// li r14,187
	ctx.r14.s64 = 187;
	// stb r3,1753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1753, ctx.r3.u8);
	// stb r9,1755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1755, ctx.r9.u8);
	// stb r29,1756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1756, ctx.r29.u8);
	// stb r31,1757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1757, ctx.r31.u8);
	// stb r14,1765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1765, ctx.r14.u8);
	// li r14,60
	ctx.r14.s64 = 60;
	// stb r20,1758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1758, ctx.r20.u8);
	// stb r26,1760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1760, ctx.r26.u8);
	// stb r31,1761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1761, ctx.r31.u8);
	// stb r31,1762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1762, ctx.r31.u8);
	// stb r14,1770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1770, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r31,1763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1763, ctx.r31.u8);
	// stb r10,1764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1764, ctx.r10.u8);
	// stb r9,1766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1766, ctx.r9.u8);
	// stb r9,1767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1767, ctx.r9.u8);
	// stb r14,1771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1771, ctx.r14.u8);
	// li r14,114
	ctx.r14.s64 = 114;
	// stb r29,1768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1768, ctx.r29.u8);
	// stb r31,1769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1769, ctx.r31.u8);
	// stb r24,1772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1772, ctx.r24.u8);
	// stb r31,1774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1774, ctx.r31.u8);
	// stb r14,1773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1773, ctx.r14.u8);
	// stb r14,1784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1784, ctx.r14.u8);
	// li r14,195
	ctx.r14.s64 = 195;
	// stb r31,1775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1775, ctx.r31.u8);
	// stb r31,1776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1776, ctx.r31.u8);
	// stb r10,1777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1777, ctx.r10.u8);
	// stb r17,1778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1778, ctx.r17.u8);
	// stb r14,1789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1789, ctx.r14.u8);
	// li r14,34
	ctx.r14.s64 = 34;
	// stb r28,1779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1779, ctx.r28.u8);
	// stb r9,1780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1780, ctx.r9.u8);
	// stb r29,1781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1781, ctx.r29.u8);
	// stb r31,1782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1782, ctx.r31.u8);
	// stb r14,1795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1795, ctx.r14.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r20,1783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1783, ctx.r20.u8);
	// stb r31,1785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1785, ctx.r31.u8);
	// stb r31,1786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1786, ctx.r31.u8);
	// stb r31,1787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1787, ctx.r31.u8);
	// stb r10,1788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1788, ctx.r10.u8);
	// stb r28,1790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1790, ctx.r28.u8);
	// stb r9,1791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1791, ctx.r9.u8);
	// stb r9,1792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1792, ctx.r9.u8);
	// stb r29,1793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1793, ctx.r29.u8);
	// stb r31,1794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1794, ctx.r31.u8);
	// stb r24,1796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1796, ctx.r24.u8);
	// stb r25,1797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1797, ctx.r25.u8);
	// stb r31,1798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1798, ctx.r31.u8);
	// stb r31,1799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1799, ctx.r31.u8);
	// stb r31,1800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1800, ctx.r31.u8);
	// stb r10,1801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1801, ctx.r10.u8);
	// stb r14,1802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1802, ctx.r14.u8);
	// stb r28,1803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1803, ctx.r28.u8);
	// stb r9,1804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1804, ctx.r9.u8);
	// stb r29,1805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1805, ctx.r29.u8);
	// stb r31,1806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1806, ctx.r31.u8);
	// stb r14,1813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1813, ctx.r14.u8);
	// li r14,11
	ctx.r14.s64 = 11;
	// li r17,21
	ctx.r17.s64 = 21;
	// stb r6,1808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1808, ctx.r6.u8);
	// stb r31,1809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1809, ctx.r31.u8);
	// stb r31,1810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1810, ctx.r31.u8);
	// stb r31,1811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1811, ctx.r31.u8);
	// stb r14,1815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1815, ctx.r14.u8);
	// li r14,53
	ctx.r14.s64 = 53;
	// stb r17,1807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1807, ctx.r17.u8);
	// li r17,38
	ctx.r17.s64 = 38;
	// stb r10,1812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1812, ctx.r10.u8);
	// stb r31,1814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1814, ctx.r31.u8);
	// stb r7,1816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1816, ctx.r7.u8);
	// stb r14,1821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1821, ctx.r14.u8);
	// li r14,219
	ctx.r14.s64 = 219;
	// stb r17,1848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1848, ctx.r17.u8);
	// li r17,114
	ctx.r17.s64 = 114;
	// stb r18,1817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1817, ctx.r18.u8);
	// stb r31,1818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1818, ctx.r31.u8);
	// stb r31,1819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1819, ctx.r31.u8);
	// stb r14,1822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1822, ctx.r14.u8);
	// li r14,161
	ctx.r14.s64 = 161;
	// stb r17,1853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1853, ctx.r17.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r31,1820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1820, ctx.r31.u8);
	// stb r31,1823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1823, ctx.r31.u8);
	// stb r31,1824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1824, ctx.r31.u8);
	// stb r14,1831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1831, ctx.r14.u8);
	// li r14,53
	ctx.r14.s64 = 53;
	// stb r17,1854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1854, ctx.r17.u8);
	// li r17,208
	ctx.r17.s64 = 208;
	// stb r31,1825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1825, ctx.r31.u8);
	// stb r31,1826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1826, ctx.r31.u8);
	// stb r9,1827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1827, ctx.r9.u8);
	// stb r14,1832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1832, ctx.r14.u8);
	// li r14,209
	ctx.r14.s64 = 209;
	// stb r17,1858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1858, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r9,1828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1828, ctx.r9.u8);
	// stb r9,1829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1829, ctx.r9.u8);
	// stb r9,1830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1830, ctx.r9.u8);
	// stb r14,1836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1836, ctx.r14.u8);
	// li r14,213
	ctx.r14.s64 = 213;
	// stb r17,1862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1862, ctx.r17.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r31,1833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1833, ctx.r31.u8);
	// stb r31,1834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1834, ctx.r31.u8);
	// stb r3,1835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1835, ctx.r3.u8);
	// stb r14,1840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1840, ctx.r14.u8);
	// li r14,165
	ctx.r14.s64 = 165;
	// stb r31,1837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1837, ctx.r31.u8);
	// stb r31,1838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1838, ctx.r31.u8);
	// stb r3,1839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1839, ctx.r3.u8);
	// stb r31,1841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1841, ctx.r31.u8);
	// stb r8,1842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1842, ctx.r8.u8);
	// stb r8,1843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1843, ctx.r8.u8);
	// stb r31,1844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1844, ctx.r31.u8);
	// stb r31,1845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1845, ctx.r31.u8);
	// stb r3,1846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1846, ctx.r3.u8);
	// stb r14,1847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1847, ctx.r14.u8);
	// stb r9,1849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1849, ctx.r9.u8);
	// stb r4,1850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1850, ctx.r4.u8);
	// stb r4,1851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1851, ctx.r4.u8);
	// stb r22,1852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1852, ctx.r22.u8);
	// stb r31,1855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1855, ctx.r31.u8);
	// stb r31,1856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1856, ctx.r31.u8);
	// stb r3,1857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1857, ctx.r3.u8);
	// stb r31,1859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1859, ctx.r31.u8);
	// stb r31,1860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1860, ctx.r31.u8);
	// stb r3,1861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1861, ctx.r3.u8);
	// stb r31,1863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1863, ctx.r31.u8);
	// stb r31,1864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1864, ctx.r31.u8);
	// stb r8,1865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1865, ctx.r8.u8);
	// stb r31,1866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1866, ctx.r31.u8);
	// stb r31,1867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1867, ctx.r31.u8);
	// stb r3,1868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1868, ctx.r3.u8);
	// stb r14,1869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1869, ctx.r14.u8);
	// stb r28,1870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1870, ctx.r28.u8);
	// stb r9,1871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1871, ctx.r9.u8);
	// stb r27,1872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1872, ctx.r27.u8);
	// stb r14,1888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1888, ctx.r14.u8);
	// li r14,196
	ctx.r14.s64 = 196;
	// stb r17,1873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1873, ctx.r17.u8);
	// li r17,208
	ctx.r17.s64 = 208;
	// stb r31,1874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1874, ctx.r31.u8);
	// stb r31,1875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1875, ctx.r31.u8);
	// stb r3,1876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1876, ctx.r3.u8);
	// stb r14,1893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1893, ctx.r14.u8);
	// li r14,221
	ctx.r14.s64 = 221;
	// stb r17,1877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1877, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r31,1878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1878, ctx.r31.u8);
	// stb r31,1879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1879, ctx.r31.u8);
	// stb r3,1880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1880, ctx.r3.u8);
	// stb r14,1894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1894, ctx.r14.u8);
	// li r14,53
	ctx.r14.s64 = 53;
	// stb r17,1881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1881, ctx.r17.u8);
	// li r17,38
	ctx.r17.s64 = 38;
	// stb r31,1882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1882, ctx.r31.u8);
	// stb r8,1883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1883, ctx.r8.u8);
	// stb r8,1884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1884, ctx.r8.u8);
	// stb r14,1895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1895, ctx.r14.u8);
	// li r14,211
	ctx.r14.s64 = 211;
	// stb r17,1931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1931, ctx.r17.u8);
	// li r17,56
	ctx.r17.s64 = 56;
	// stb r31,1885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1885, ctx.r31.u8);
	// stb r31,1886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1886, ctx.r31.u8);
	// stb r3,1887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1887, ctx.r3.u8);
	// stb r14,1899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1899, ctx.r14.u8);
	// li r14,213
	ctx.r14.s64 = 213;
	// stb r17,1933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1933, ctx.r17.u8);
	// li r17,63
	ctx.r17.s64 = 63;
	// stb r31,1889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1889, ctx.r31.u8);
	// stb r31,1890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1890, ctx.r31.u8);
	// stb r31,1891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1891, ctx.r31.u8);
	// stb r14,1903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1903, ctx.r14.u8);
	// li r14,165
	ctx.r14.s64 = 165;
	// stb r10,1892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1892, ctx.r10.u8);
	// stb r31,1896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1896, ctx.r31.u8);
	// stb r31,1897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1897, ctx.r31.u8);
	// stb r3,1898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1898, ctx.r3.u8);
	// stb r14,1910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1910, ctx.r14.u8);
	// li r14,172
	ctx.r14.s64 = 172;
	// stb r31,1900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1900, ctx.r31.u8);
	// stb r31,1901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1901, ctx.r31.u8);
	// stb r3,1902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1902, ctx.r3.u8);
	// stb r31,1904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1904, ctx.r31.u8);
	// stb r14,1911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1911, ctx.r14.u8);
	// li r14,56
	ctx.r14.s64 = 56;
	// stb r8,1905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1905, ctx.r8.u8);
	// stb r8,1906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1906, ctx.r8.u8);
	// stb r31,1907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1907, ctx.r31.u8);
	// stb r31,1908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1908, ctx.r31.u8);
	// stb r14,1912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1912, ctx.r14.u8);
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r3,1909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1909, ctx.r3.u8);
	// stb r31,1916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1916, ctx.r31.u8);
	// stb r31,1917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1917, ctx.r31.u8);
	// stb r3,1918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1918, ctx.r3.u8);
	// stb r14,1913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1913, ctx.r14.u8);
	// li r14,147
	ctx.r14.s64 = 147;
	// stb r31,1920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1920, ctx.r31.u8);
	// stb r31,1921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1921, ctx.r31.u8);
	// stb r3,1922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1922, ctx.r3.u8);
	// stb r31,1924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1924, ctx.r31.u8);
	// stb r14,1914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1914, ctx.r14.u8);
	// li r14,53
	ctx.r14.s64 = 53;
	// stb r31,1925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1925, ctx.r31.u8);
	// stb r8,1926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1926, ctx.r8.u8);
	// stb r31,1927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1927, ctx.r31.u8);
	// stb r31,1928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1928, ctx.r31.u8);
	// stb r14,1915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1915, ctx.r14.u8);
	// li r14,209
	ctx.r14.s64 = 209;
	// stb r3,1929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1929, ctx.r3.u8);
	// stb r9,1932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1932, ctx.r9.u8);
	// stb r17,1934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1934, ctx.r17.u8);
	// stb r14,1919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1919, ctx.r14.u8);
	// li r14,213
	ctx.r14.s64 = 213;
	// stb r14,1923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1923, ctx.r14.u8);
	// li r14,165
	ctx.r14.s64 = 165;
	// stb r14,1930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1930, ctx.r14.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r31,1936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1936, ctx.r31.u8);
	// stb r31,1937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1937, ctx.r31.u8);
	// stb r3,1938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1938, ctx.r3.u8);
	// stb r31,1940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1940, ctx.r31.u8);
	// stb r31,1941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1941, ctx.r31.u8);
	// stb r17,1935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1935, ctx.r17.u8);
	// li r17,209
	ctx.r17.s64 = 209;
	// stb r3,1942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1942, ctx.r3.u8);
	// stb r31,1944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1944, ctx.r31.u8);
	// stb r31,1945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1945, ctx.r31.u8);
	// stb r8,1946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1946, ctx.r8.u8);
	// stb r17,1939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1939, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r31,1947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1947, ctx.r31.u8);
	// stb r31,1948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1948, ctx.r31.u8);
	// stb r3,1949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1949, ctx.r3.u8);
	// stb r14,1950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1950, ctx.r14.u8);
	// stb r17,1943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1943, ctx.r17.u8);
	// li r17,223
	ctx.r17.s64 = 223;
	// stb r9,1951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1951, ctx.r9.u8);
	// stb r9,1952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1952, ctx.r9.u8);
	// stb r31,1955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1955, ctx.r31.u8);
	// stb r31,1956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1956, ctx.r31.u8);
	// stb r17,1953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1953, ctx.r17.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r3,1957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1957, ctx.r3.u8);
	// stb r31,1959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1959, ctx.r31.u8);
	// stb r31,1960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1960, ctx.r31.u8);
	// stb r3,1961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1961, ctx.r3.u8);
	// stb r17,1954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1954, ctx.r17.u8);
	// li r17,211
	ctx.r17.s64 = 211;
	// stb r31,1963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1963, ctx.r31.u8);
	// stb r8,1964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1964, ctx.r8.u8);
	// stb r8,1965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1965, ctx.r8.u8);
	// stb r31,1966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1966, ctx.r31.u8);
	// stb r17,1958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1958, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r31,1967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1967, ctx.r31.u8);
	// stb r3,1968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1968, ctx.r3.u8);
	// stb r14,1969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1969, ctx.r14.u8);
	// stb r31,1971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1971, ctx.r31.u8);
	// stb r17,1962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1962, ctx.r17.u8);
	// li r17,212
	ctx.r17.s64 = 212;
	// stb r31,1972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1972, ctx.r31.u8);
	// stb r31,1973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1973, ctx.r31.u8);
	// stb r10,1974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1974, ctx.r10.u8);
	// stb r31,1980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1980, ctx.r31.u8);
	// stb r17,1970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1970, ctx.r17.u8);
	// li r17,205
	ctx.r17.s64 = 205;
	// stb r31,1981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1981, ctx.r31.u8);
	// stb r31,1985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1985, ctx.r31.u8);
	// stb r31,1986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1986, ctx.r31.u8);
	// stb r3,1987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1987, ctx.r3.u8);
	// stb r17,1975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1975, ctx.r17.u8);
	// li r17,172
	ctx.r17.s64 = 172;
	// stb r31,1989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1989, ctx.r31.u8);
	// stb r31,1990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1990, ctx.r31.u8);
	// stb r3,1991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1991, ctx.r3.u8);
	// stb r31,1993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1993, ctx.r31.u8);
	// stb r17,1976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1976, ctx.r17.u8);
	// li r17,30
	ctx.r17.s64 = 30;
	// stb r31,1994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1994, ctx.r31.u8);
	// stb r8,1995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1995, ctx.r8.u8);
	// stb r31,1996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1996, ctx.r31.u8);
	// stb r31,1997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1997, ctx.r31.u8);
	// stb r17,1977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1977, ctx.r17.u8);
	// li r17,63
	ctx.r17.s64 = 63;
	// stb r17,1978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1978, ctx.r17.u8);
	// li r17,128
	ctx.r17.s64 = 128;
	// stb r17,1979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1979, ctx.r17.u8);
	// li r17,56
	ctx.r17.s64 = 56;
	// stb r17,1982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1982, ctx.r17.u8);
	// li r17,63
	ctx.r17.s64 = 63;
	// stb r17,1983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1983, ctx.r17.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r17,1984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1984, ctx.r17.u8);
	// li r17,209
	ctx.r17.s64 = 209;
	// stb r17,1988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1988, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r17,1992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1992, ctx.r17.u8);
	// li r17,223
	ctx.r17.s64 = 223;
	// stb r14,1999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1999, ctx.r14.u8);
	// stb r14,2019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2019, ctx.r14.u8);
	// stb r14,2042(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2042, ctx.r14.u8);
	// li r14,194
	ctx.r14.s64 = 194;
	// stb r3,1998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1998, ctx.r3.u8);
	// stb r9,2000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2000, ctx.r9.u8);
	// stb r17,2003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2003, ctx.r17.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r9,2001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2001, ctx.r9.u8);
	// stb r14,2047(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2047, ctx.r14.u8);
	// li r14,212
	ctx.r14.s64 = 212;
	// stb r9,2002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2002, ctx.r9.u8);
	// stb r31,2005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2005, ctx.r31.u8);
	// stb r17,2004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2004, ctx.r17.u8);
	// li r17,210
	ctx.r17.s64 = 210;
	// stb r31,2006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2006, ctx.r31.u8);
	// stb r14,2051(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2051, ctx.r14.u8);
	// li r14,154
	ctx.r14.s64 = 154;
	// stb r3,2007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2007, ctx.r3.u8);
	// stb r31,2009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2009, ctx.r31.u8);
	// stb r17,2008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2008, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r31,2010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2010, ctx.r31.u8);
	// stb r3,2011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2011, ctx.r3.u8);
	// stb r31,2013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2013, ctx.r31.u8);
	// stb r8,2014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2014, ctx.r8.u8);
	// stb r17,2012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2012, ctx.r17.u8);
	// li r17,204
	ctx.r17.s64 = 204;
	// stb r8,2015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2015, ctx.r8.u8);
	// stb r31,2016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2016, ctx.r31.u8);
	// stb r31,2017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2017, ctx.r31.u8);
	// stb r3,2018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2018, ctx.r3.u8);
	// stb r17,2024(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2024, ctx.r17.u8);
	// li r17,184
	ctx.r17.s64 = 184;
	// stb r31,2020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2020, ctx.r31.u8);
	// stb r31,2021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2021, ctx.r31.u8);
	// stb r31,2022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2022, ctx.r31.u8);
	// stb r10,2023(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2023, ctx.r10.u8);
	// stb r17,2026(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2026, ctx.r17.u8);
	// li r17,53
	ctx.r17.s64 = 53;
	// stb r9,2025(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2025, ctx.r9.u8);
	// stb r31,2028(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2028, ctx.r31.u8);
	// stb r31,2029(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2029, ctx.r31.u8);
	// stb r3,2030(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2030, ctx.r3.u8);
	// stb r17,2027(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2027, ctx.r17.u8);
	// li r17,212
	ctx.r17.s64 = 212;
	// stb r31,2032(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2032, ctx.r31.u8);
	// stb r31,2033(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2033, ctx.r31.u8);
	// stb r3,2034(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2034, ctx.r3.u8);
	// stb r31,2036(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2036, ctx.r31.u8);
	// stb r17,2031(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2031, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r8,2037(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2037, ctx.r8.u8);
	// stb r8,2038(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2038, ctx.r8.u8);
	// stb r31,2039(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2039, ctx.r31.u8);
	// stb r31,2040(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2040, ctx.r31.u8);
	// stb r17,2035(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2035, ctx.r17.u8);
	// stb r3,2041(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2041, ctx.r3.u8);
	// stb r31,2043(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2043, ctx.r31.u8);
	// stb r31,2044(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2044, ctx.r31.u8);
	// stb r31,2045(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2045, ctx.r31.u8);
	// stb r10,2046(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2046, ctx.r10.u8);
	// stb r9,2048(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2048, ctx.r9.u8);
	// stb r4,2049(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2049, ctx.r4.u8);
	// stb r4,2050(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2050, ctx.r4.u8);
	// stb r14,2052(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2052, ctx.r14.u8);
	// stb r6,2053(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2053, ctx.r6.u8);
	// stb r6,2054(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2054, ctx.r6.u8);
	// stb r8,2055(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2055, ctx.r8.u8);
	// stb r11,2056(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2056, ctx.r11.u8);
	// stb r11,2057(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2057, ctx.r11.u8);
	// stb r5,2058(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2058, ctx.r5.u8);
	// stb r21,2059(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2059, ctx.r21.u8);
	// stb r31,2060(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2060, ctx.r31.u8);
	// stb r30,2061(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2061, ctx.r30.u8);
	// stb r7,2062(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2062, ctx.r7.u8);
	// stb r8,2063(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2063, ctx.r8.u8);
	// stb r11,2064(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2064, ctx.r11.u8);
	// stb r11,2065(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2065, ctx.r11.u8);
	// stb r5,2066(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2066, ctx.r5.u8);
	// li r14,245
	ctx.r14.s64 = 245;
	// stb r16,2067(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2067, ctx.r16.u8);
	// li r17,94
	ctx.r17.s64 = 94;
	// stb r31,2068(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2068, ctx.r31.u8);
	// stb r30,2069(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2069, ctx.r30.u8);
	// stb r7,2070(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2070, ctx.r7.u8);
	// stb r8,2071(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2071, ctx.r8.u8);
	// stb r14,2074(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2074, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r17,2102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2102, ctx.r17.u8);
	// li r17,189
	ctx.r17.s64 = 189;
	// stb r11,2072(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2072, ctx.r11.u8);
	// stb r11,2073(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2073, ctx.r11.u8);
	// stb r9,2077(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2077, ctx.r9.u8);
	// stb r14,2075(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2075, ctx.r14.u8);
	// li r14,38
	ctx.r14.s64 = 38;
	// stb r17,2108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2108, ctx.r17.u8);
	// li r17,220
	ctx.r17.s64 = 220;
	// stb r27,2078(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2078, ctx.r27.u8);
	// stb r8,2079(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2079, ctx.r8.u8);
	// stb r31,2080(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2080, ctx.r31.u8);
	// stb r14,2076(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2076, ctx.r14.u8);
	// li r14,232
	ctx.r14.s64 = 232;
	// stb r17,2113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2113, ctx.r17.u8);
	// li r17,191
	ctx.r17.s64 = 191;
	// stb r31,2081(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2081, ctx.r31.u8);
	// stb r31,2084(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2084, ctx.r31.u8);
	// stb r31,2085(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2085, ctx.r31.u8);
	// stb r14,2082(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2082, ctx.r14.u8);
	// li r14,113
	ctx.r14.s64 = 113;
	// stb r17,2118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2118, ctx.r17.u8);
	// li r17,196
	ctx.r17.s64 = 196;
	// stb r31,2086(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2086, ctx.r31.u8);
	// stb r10,2087(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2087, ctx.r10.u8);
	// stb r27,2089(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2089, ctx.r27.u8);
	// stb r14,2083(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2083, ctx.r14.u8);
	// li r14,200
	ctx.r14.s64 = 200;
	// stb r17,2123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2123, ctx.r17.u8);
	// li r17,94
	ctx.r17.s64 = 94;
	// stb r8,2090(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2090, ctx.r8.u8);
	// stb r31,2091(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2091, ctx.r31.u8);
	// stb r31,2092(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2092, ctx.r31.u8);
	// stb r14,2088(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2088, ctx.r14.u8);
	// li r14,8
	ctx.r14.s64 = 8;
	// stb r17,2127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2127, ctx.r17.u8);
	// li r17,132
	ctx.r17.s64 = 132;
	// stb r3,2093(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2093, ctx.r3.u8);
	// stb r8,2094(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2094, ctx.r8.u8);
	// stb r31,2095(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2095, ctx.r31.u8);
	// stb r31,2096(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2096, ctx.r31.u8);
	// stb r31,2097(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2097, ctx.r31.u8);
	// stb r10,2098(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2098, ctx.r10.u8);
	// stb r23,2099(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2099, ctx.r23.u8);
	// stb r22,2100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2100, ctx.r22.u8);
	// stb r14,2101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2101, ctx.r14.u8);
	// stb r27,2103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2103, ctx.r27.u8);
	// stb r31,2104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2104, ctx.r31.u8);
	// stb r31,2105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2105, ctx.r31.u8);
	// stb r31,2106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2106, ctx.r31.u8);
	// stb r10,2107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2107, ctx.r10.u8);
	// stb r15,2109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2109, ctx.r15.u8);
	// stb r31,2110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2110, ctx.r31.u8);
	// stb r31,2111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2111, ctx.r31.u8);
	// stb r10,2112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2112, ctx.r10.u8);
	// stb r31,2114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2114, ctx.r31.u8);
	// stb r31,2115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2115, ctx.r31.u8);
	// stb r31,2116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2116, ctx.r31.u8);
	// stb r10,2117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2117, ctx.r10.u8);
	// stb r31,2119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2119, ctx.r31.u8);
	// stb r31,2120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2120, ctx.r31.u8);
	// stb r31,2121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2121, ctx.r31.u8);
	// stb r10,2122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2122, ctx.r10.u8);
	// stb r9,2124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2124, ctx.r9.u8);
	// stb r4,2125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2125, ctx.r4.u8);
	// stb r14,2126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2126, ctx.r14.u8);
	// stb r17,2128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2128, ctx.r17.u8);
	// stb r26,2129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2129, ctx.r26.u8);
	// stb r31,2130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2130, ctx.r31.u8);
	// stb r31,2131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2131, ctx.r31.u8);
	// stb r31,2132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2132, ctx.r31.u8);
	// stb r10,2133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2133, ctx.r10.u8);
	// stb r14,2148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2148, ctx.r14.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// li r17,187
	ctx.r17.s64 = 187;
	// stb r3,2191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2191, ctx.r3.u8);
	// li r3,37
	ctx.r3.s64 = 37;
	// stb r29,2135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2135, ctx.r29.u8);
	// stb r31,2136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2136, ctx.r31.u8);
	// stb r20,2137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2137, ctx.r20.u8);
	// stb r14,2149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2149, ctx.r14.u8);
	// li r14,154
	ctx.r14.s64 = 154;
	// stb r17,2134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2134, ctx.r17.u8);
	// li r17,151
	ctx.r17.s64 = 151;
	// stb r31,2139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2139, ctx.r31.u8);
	// stb r31,2140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2140, ctx.r31.u8);
	// stb r31,2141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2141, ctx.r31.u8);
	// stb r14,2150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2150, ctx.r14.u8);
	// li r14,245
	ctx.r14.s64 = 245;
	// stb r17,2138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2138, ctx.r17.u8);
	// li r17,189
	ctx.r17.s64 = 189;
	// stb r10,2142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2142, ctx.r10.u8);
	// stb r9,2145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2145, ctx.r9.u8);
	// stb r9,2146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2146, ctx.r9.u8);
	// stb r14,2172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2172, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r17,2143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2143, ctx.r17.u8);
	// li r17,37
	ctx.r17.s64 = 37;
	// stb r4,2147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2147, ctx.r4.u8);
	// stb r6,2151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2151, ctx.r6.u8);
	// stb r6,2152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2152, ctx.r6.u8);
	// stb r14,2173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2173, ctx.r14.u8);
	// li r14,38
	ctx.r14.s64 = 38;
	// stb r17,2144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2144, ctx.r17.u8);
	// li r17,200
	ctx.r17.s64 = 200;
	// stb r8,2153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2153, ctx.r8.u8);
	// stb r11,2154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2154, ctx.r11.u8);
	// stb r11,2155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2155, ctx.r11.u8);
	// stb r14,2174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2174, ctx.r14.u8);
	// li r14,232
	ctx.r14.s64 = 232;
	// stb r5,2156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2156, ctx.r5.u8);
	// stb r21,2157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2157, ctx.r21.u8);
	// stb r31,2158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2158, ctx.r31.u8);
	// stb r30,2159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2159, ctx.r30.u8);
	// stb r14,2180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2180, ctx.r14.u8);
	// li r14,113
	ctx.r14.s64 = 113;
	// stb r7,2160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2160, ctx.r7.u8);
	// stb r8,2161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2161, ctx.r8.u8);
	// stb r11,2162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2162, ctx.r11.u8);
	// stb r11,2163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2163, ctx.r11.u8);
	// stb r5,2164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2164, ctx.r5.u8);
	// stb r16,2165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2165, ctx.r16.u8);
	// stb r31,2166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2166, ctx.r31.u8);
	// stb r30,2167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2167, ctx.r30.u8);
	// stb r7,2168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2168, ctx.r7.u8);
	// stb r8,2169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2169, ctx.r8.u8);
	// stb r11,2170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2170, ctx.r11.u8);
	// stb r11,2171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2171, ctx.r11.u8);
	// stb r9,2175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2175, ctx.r9.u8);
	// stb r27,2176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2176, ctx.r27.u8);
	// stb r8,2177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2177, ctx.r8.u8);
	// stb r31,2178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2178, ctx.r31.u8);
	// stb r31,2179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2179, ctx.r31.u8);
	// stb r14,2181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2181, ctx.r14.u8);
	// stb r31,2182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2182, ctx.r31.u8);
	// stb r31,2183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2183, ctx.r31.u8);
	// stb r31,2184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2184, ctx.r31.u8);
	// stb r10,2185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2185, ctx.r10.u8);
	// stb r17,2186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2186, ctx.r17.u8);
	// stb r27,2187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2187, ctx.r27.u8);
	// stb r8,2188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2188, ctx.r8.u8);
	// stb r31,2189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2189, ctx.r31.u8);
	// stb r31,2190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2190, ctx.r31.u8);
	// stb r8,2192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2192, ctx.r8.u8);
	// stb r31,2193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2193, ctx.r31.u8);
	// stb r31,2194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2194, ctx.r31.u8);
	// stb r31,2195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2195, ctx.r31.u8);
	// stb r10,2196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2196, ctx.r10.u8);
	// stb r23,2197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2197, ctx.r23.u8);
	// stb r15,2198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2198, ctx.r15.u8);
	// stb r31,2199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2199, ctx.r31.u8);
	// stb r31,2200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2200, ctx.r31.u8);
	// stb r3,2201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2201, ctx.r3.u8);
	// stb r14,2202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2202, ctx.r14.u8);
	// li r14,194
	ctx.r14.s64 = 194;
	// li r17,205
	ctx.r17.s64 = 205;
	// stb r31,2203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2203, ctx.r31.u8);
	// stb r31,2204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2204, ctx.r31.u8);
	// stb r31,2205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2205, ctx.r31.u8);
	// stb r10,2206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2206, ctx.r10.u8);
	// stb r14,2207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2207, ctx.r14.u8);
	// li r14,205
	ctx.r14.s64 = 205;
	// stb r17,2257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2257, ctx.r17.u8);
	// li r17,204
	ctx.r17.s64 = 204;
	// stb r31,2208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2208, ctx.r31.u8);
	// stb r31,2209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2209, ctx.r31.u8);
	// stb r31,2210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2210, ctx.r31.u8);
	// stb r14,2212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2212, ctx.r14.u8);
	// li r14,204
	ctx.r14.s64 = 204;
	// stb r17,2262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2262, ctx.r17.u8);
	// li r17,203
	ctx.r17.s64 = 203;
	// stb r10,2211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2211, ctx.r10.u8);
	// stb r31,2213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2213, ctx.r31.u8);
	// stb r31,2214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2214, ctx.r31.u8);
	// stb r14,2217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2217, ctx.r14.u8);
	// li r14,132
	ctx.r14.s64 = 132;
	// stb r31,2215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2215, ctx.r31.u8);
	// stb r10,2216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2216, ctx.r10.u8);
	// stb r26,2219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2219, ctx.r26.u8);
	// stb r31,2220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2220, ctx.r31.u8);
	// stb r14,2218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2218, ctx.r14.u8);
	// li r14,187
	ctx.r14.s64 = 187;
	// stb r31,2221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2221, ctx.r31.u8);
	// stb r31,2222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2222, ctx.r31.u8);
	// stb r10,2223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2223, ctx.r10.u8);
	// stb r29,2225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2225, ctx.r29.u8);
	// stb r14,2224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2224, ctx.r14.u8);
	// li r14,151
	ctx.r14.s64 = 151;
	// stb r31,2226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2226, ctx.r31.u8);
	// stb r20,2227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2227, ctx.r20.u8);
	// stb r31,2229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2229, ctx.r31.u8);
	// stb r31,2230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2230, ctx.r31.u8);
	// stb r14,2228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2228, ctx.r14.u8);
	// li r14,189
	ctx.r14.s64 = 189;
	// stb r31,2231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2231, ctx.r31.u8);
	// stb r10,2232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2232, ctx.r10.u8);
	// stb r9,2235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2235, ctx.r9.u8);
	// stb r9,2236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2236, ctx.r9.u8);
	// stb r14,2233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2233, ctx.r14.u8);
	// li r14,38
	ctx.r14.s64 = 38;
	// stb r9,2237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2237, ctx.r9.u8);
	// stb r15,2238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2238, ctx.r15.u8);
	// stb r31,2239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2239, ctx.r31.u8);
	// stb r31,2240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2240, ctx.r31.u8);
	// stb r14,2234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2234, ctx.r14.u8);
	// li r14,47
	ctx.r14.s64 = 47;
	// stb r31,2243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2243, ctx.r31.u8);
	// stb r31,2244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2244, ctx.r31.u8);
	// stb r31,2245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2245, ctx.r31.u8);
	// stb r10,2246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2246, ctx.r10.u8);
	// stb r14,2241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2241, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r31,2248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2248, ctx.r31.u8);
	// stb r31,2249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2249, ctx.r31.u8);
	// stb r31,2250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2250, ctx.r31.u8);
	// stb r10,2251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2251, ctx.r10.u8);
	// stb r14,2242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2242, ctx.r14.u8);
	// li r14,207
	ctx.r14.s64 = 207;
	// stb r23,2252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2252, ctx.r23.u8);
	// stb r31,2253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2253, ctx.r31.u8);
	// stb r31,2254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2254, ctx.r31.u8);
	// stb r31,2255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2255, ctx.r31.u8);
	// stb r14,2247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2247, ctx.r14.u8);
	// stb r10,2256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2256, ctx.r10.u8);
	// stb r31,2258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2258, ctx.r31.u8);
	// stb r31,2259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2259, ctx.r31.u8);
	// stb r31,2260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2260, ctx.r31.u8);
	// stb r10,2261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2261, ctx.r10.u8);
	// stb r31,2263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2263, ctx.r31.u8);
	// stb r31,2264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2264, ctx.r31.u8);
	// stb r31,2265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2265, ctx.r31.u8);
	// stb r10,2266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2266, ctx.r10.u8);
	// stb r17,2267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2267, ctx.r17.u8);
	// stb r31,2268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2268, ctx.r31.u8);
	// li r17,201
	ctx.r17.s64 = 201;
	// stb r31,2269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2269, ctx.r31.u8);
	// stb r31,2270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2270, ctx.r31.u8);
	// stb r10,2271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2271, ctx.r10.u8);
	// stb r19,2272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2272, ctx.r19.u8);
	// stb r31,2273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2273, ctx.r31.u8);
	// stb r17,2277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2277, ctx.r17.u8);
	// li r17,200
	ctx.r17.s64 = 200;
	// stb r31,2274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2274, ctx.r31.u8);
	// stb r31,2275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2275, ctx.r31.u8);
	// stb r10,2276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2276, ctx.r10.u8);
	// stb r31,2278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2278, ctx.r31.u8);
	// stb r17,2282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2282, ctx.r17.u8);
	// li r17,213
	ctx.r17.s64 = 213;
	// stb r31,2279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2279, ctx.r31.u8);
	// stb r31,2280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2280, ctx.r31.u8);
	// stb r10,2281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2281, ctx.r10.u8);
	// stb r9,2283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2283, ctx.r9.u8);
	// stb r17,2286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2286, ctx.r17.u8);
	// li r17,67
	ctx.r17.s64 = 67;
	// stb r4,2284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2284, ctx.r4.u8);
	// stb r20,2285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2285, ctx.r20.u8);
	// stb r6,2287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2287, ctx.r6.u8);
	// stb r6,2288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2288, ctx.r6.u8);
	// stb r17,2310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2310, ctx.r17.u8);
	// li r17,8
	ctx.r17.s64 = 8;
	// stb r8,2289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2289, ctx.r8.u8);
	// stb r11,2290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2290, ctx.r11.u8);
	// stb r11,2291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2291, ctx.r11.u8);
	// stb r5,2292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2292, ctx.r5.u8);
	// stb r17,2312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2312, ctx.r17.u8);
	// li r17,249
	ctx.r17.s64 = 249;
	// stb r21,2293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2293, ctx.r21.u8);
	// stb r31,2294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2294, ctx.r31.u8);
	// stb r30,2295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2295, ctx.r30.u8);
	// stb r7,2296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2296, ctx.r7.u8);
	// stb r17,2313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2313, ctx.r17.u8);
	// li r17,192
	ctx.r17.s64 = 192;
	// stb r8,2297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2297, ctx.r8.u8);
	// stb r11,2298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2298, ctx.r11.u8);
	// stb r11,2299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2299, ctx.r11.u8);
	// stb r5,2300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2300, ctx.r5.u8);
	// stb r17,2327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2327, ctx.r17.u8);
	// li r17,46
	ctx.r17.s64 = 46;
	// stb r16,2301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2301, ctx.r16.u8);
	// stb r31,2302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2302, ctx.r31.u8);
	// stb r22,2303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2303, ctx.r22.u8);
	// stb r7,2304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2304, ctx.r7.u8);
	// stb r17,2328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2328, ctx.r17.u8);
	// li r17,57
	ctx.r17.s64 = 57;
	// stb r26,2305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2305, ctx.r26.u8);
	// stb r8,2306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2306, ctx.r8.u8);
	// stb r11,2307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2307, ctx.r11.u8);
	// stb r11,2308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2308, ctx.r11.u8);
	// stb r17,2331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2331, ctx.r17.u8);
	// li r17,217
	ctx.r17.s64 = 217;
	// stb r11,2309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2309, ctx.r11.u8);
	// stb r4,2311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2311, ctx.r4.u8);
	// stb r25,2314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2314, ctx.r25.u8);
	// stb r31,2315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2315, ctx.r31.u8);
	// stb r17,2332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2332, ctx.r17.u8);
	// li r17,8
	ctx.r17.s64 = 8;
	// stb r31,2316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2316, ctx.r31.u8);
	// stb r31,2317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2317, ctx.r31.u8);
	// stb r10,2318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2318, ctx.r10.u8);
	// stb r23,2319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2319, ctx.r23.u8);
	// stb r28,2320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2320, ctx.r28.u8);
	// stb r9,2321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2321, ctx.r9.u8);
	// stb r27,2322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2322, ctx.r27.u8);
	// stb r31,2323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2323, ctx.r31.u8);
	// stb r31,2324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2324, ctx.r31.u8);
	// stb r31,2325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2325, ctx.r31.u8);
	// stb r10,2326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2326, ctx.r10.u8);
	// stb r31,2329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2329, ctx.r31.u8);
	// stb r31,2330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2330, ctx.r31.u8);
	// stb r31,2333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2333, ctx.r31.u8);
	// stb r31,2334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2334, ctx.r31.u8);
	// stb r31,2335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2335, ctx.r31.u8);
	// stb r10,2336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2336, ctx.r10.u8);
	// stb r23,2337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2337, ctx.r23.u8);
	// stb r4,2338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2338, ctx.r4.u8);
	// stb r27,2358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2358, ctx.r27.u8);
	// li r27,46
	ctx.r27.s64 = 46;
	// stb r17,2339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2339, ctx.r17.u8);
	// li r17,249
	ctx.r17.s64 = 249;
	// stb r15,2341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2341, ctx.r15.u8);
	// stb r11,2342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2342, ctx.r11.u8);
	// stb r11,2343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2343, ctx.r11.u8);
	// stb r27,2364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2364, ctx.r27.u8);
	// li r27,53
	ctx.r27.s64 = 53;
	// stb r17,2340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2340, ctx.r17.u8);
	// li r17,250
	ctx.r17.s64 = 250;
	// stb r31,2346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2346, ctx.r31.u8);
	// stb r31,2347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2347, ctx.r31.u8);
	// stb r31,2348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2348, ctx.r31.u8);
	// stb r27,2367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2367, ctx.r27.u8);
	// li r27,164
	ctx.r27.s64 = 164;
	// stb r17,2344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2344, ctx.r17.u8);
	// li r17,242
	ctx.r17.s64 = 242;
	// stb r10,2349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2349, ctx.r10.u8);
	// stb r31,2352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2352, ctx.r31.u8);
	// stb r31,2353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2353, ctx.r31.u8);
	// stb r27,2368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2368, ctx.r27.u8);
	// li r27,81
	ctx.r27.s64 = 81;
	// stb r17,2345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2345, ctx.r17.u8);
	// li r17,192
	ctx.r17.s64 = 192;
	// stb r28,2356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2356, ctx.r28.u8);
	// stb r9,2357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2357, ctx.r9.u8);
	// stb r31,2359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2359, ctx.r31.u8);
	// stb r27,2370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2370, ctx.r27.u8);
	// li r27,192
	ctx.r27.s64 = 192;
	// stb r17,2350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2350, ctx.r17.u8);
	// li r17,82
	ctx.r17.s64 = 82;
	// stb r31,2360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2360, ctx.r31.u8);
	// stb r31,2361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2361, ctx.r31.u8);
	// stb r10,2362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2362, ctx.r10.u8);
	// stb r27,2375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2375, ctx.r27.u8);
	// li r27,11
	ctx.r27.s64 = 11;
	// stb r17,2351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2351, ctx.r17.u8);
	// li r17,57
	ctx.r17.s64 = 57;
	// stb r31,2365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2365, ctx.r31.u8);
	// stb r31,2366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2366, ctx.r31.u8);
	// stb r6,2369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2369, ctx.r6.u8);
	// stb r27,2377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2377, ctx.r27.u8);
	// li r27,220
	ctx.r27.s64 = 220;
	// stb r17,2354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2354, ctx.r17.u8);
	// li r17,217
	ctx.r17.s64 = 217;
	// stb r31,2371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2371, ctx.r31.u8);
	// stb r31,2372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2372, ctx.r31.u8);
	// stb r31,2373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2373, ctx.r31.u8);
	// stb r27,2384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2384, ctx.r27.u8);
	// li r27,8
	ctx.r27.s64 = 8;
	// stb r17,2355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2355, ctx.r17.u8);
	// ld r17,80(r1)
	ctx.r17.u64 = PPC_LOAD_U64(ctx.r1.u32 + 80);
	// stb r10,2374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2374, ctx.r10.u8);
	// stb r31,2376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2376, ctx.r31.u8);
	// stb r27,2391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2391, ctx.r27.u8);
	// li r27,249
	ctx.r27.s64 = 249;
	// stb r7,2378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2378, ctx.r7.u8);
	// stb r17,2363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2363, ctx.r17.u8);
	// stb r18,2379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2379, ctx.r18.u8);
	// stb r31,2380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2380, ctx.r31.u8);
	// stb r27,2392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2392, ctx.r27.u8);
	// li r27,213
	ctx.r27.s64 = 213;
	// stb r31,2381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2381, ctx.r31.u8);
	// stb r31,2382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2382, ctx.r31.u8);
	// stb r31,2383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2383, ctx.r31.u8);
	// stb r31,2385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2385, ctx.r31.u8);
	// stb r31,2386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2386, ctx.r31.u8);
	// stb r31,2387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2387, ctx.r31.u8);
	// stb r31,2388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2388, ctx.r31.u8);
	// stb r9,2389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2389, ctx.r9.u8);
	// stb r22,2390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2390, ctx.r22.u8);
	// stb r4,2393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2393, ctx.r4.u8);
	// stb r20,2394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2394, ctx.r20.u8);
	// stb r27,2395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2395, ctx.r27.u8);
	// stb r24,2396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2396, ctx.r24.u8);
	// stb r24,2397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2397, ctx.r24.u8);
	// stb r25,2398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2398, ctx.r25.u8);
	// stb r31,2399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2399, ctx.r31.u8);
	// stb r31,2400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2400, ctx.r31.u8);
	// stb r31,2401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2401, ctx.r31.u8);
	// stb r29,2406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2406, ctx.r29.u8);
	// li r24,13
	ctx.r24.s64 = 13;
	// stb r23,2414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2414, ctx.r23.u8);
	// stb r29,2422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2422, ctx.r29.u8);
	// li r29,18
	ctx.r29.s64 = 18;
	// std r23,80(r1)
	PPC_STORE_U64(ctx.r1.u32 + 80, ctx.r23.u64);
	// li r23,94
	ctx.r23.s64 = 94;
	// stb r10,2402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2402, ctx.r10.u8);
	// stb r24,2408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2408, ctx.r24.u8);
	// li r24,167
	ctx.r24.s64 = 167;
	// stb r17,2403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2403, ctx.r17.u8);
	// stb r29,2424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2424, ctx.r29.u8);
	// li r29,52
	ctx.r29.s64 = 52;
	// stb r23,2445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2445, ctx.r23.u8);
	// li r23,151
	ctx.r23.s64 = 151;
	// stb r28,2404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2404, ctx.r28.u8);
	// stb r24,2439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2439, ctx.r24.u8);
	// stb r24,2468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2468, ctx.r24.u8);
	// li r24,120
	ctx.r24.s64 = 120;
	// stb r9,2405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2405, ctx.r9.u8);
	// stb r31,2407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2407, ctx.r31.u8);
	// stb r25,2409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2409, ctx.r25.u8);
	// stb r31,2410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2410, ctx.r31.u8);
	// stb r31,2411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2411, ctx.r31.u8);
	// stb r31,2412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2412, ctx.r31.u8);
	// stb r10,2413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2413, ctx.r10.u8);
	// stb r8,2415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2415, ctx.r8.u8);
	// stb r11,2416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2416, ctx.r11.u8);
	// stb r11,2417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2417, ctx.r11.u8);
	// stb r5,2418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2418, ctx.r5.u8);
	// stb r17,2419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2419, ctx.r17.u8);
	// stb r9,2420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2420, ctx.r9.u8);
	// stb r9,2421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2421, ctx.r9.u8);
	// stb r31,2423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2423, ctx.r31.u8);
	// stb r25,2425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2425, ctx.r25.u8);
	// stb r6,2426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2426, ctx.r6.u8);
	// stb r31,2427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2427, ctx.r31.u8);
	// stb r31,2428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2428, ctx.r31.u8);
	// stb r31,2429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2429, ctx.r31.u8);
	// stb r10,2430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2430, ctx.r10.u8);
	// stb r17,2431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2431, ctx.r17.u8);
	// stb r31,2432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2432, ctx.r31.u8);
	// stb r30,2433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2433, ctx.r30.u8);
	// stb r7,2434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2434, ctx.r7.u8);
	// stb r8,2435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2435, ctx.r8.u8);
	// stb r31,2436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2436, ctx.r31.u8);
	// stb r31,2437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2437, ctx.r31.u8);
	// stb r29,2438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2438, ctx.r29.u8);
	// stb r28,2440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2440, ctx.r28.u8);
	// stb r9,2441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2441, ctx.r9.u8);
	// stb r9,2442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2442, ctx.r9.u8);
	// stb r4,2443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2443, ctx.r4.u8);
	// stb r20,2444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2444, ctx.r20.u8);
	// stb r23,2446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2446, ctx.r23.u8);
	// stb r31,2447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2447, ctx.r31.u8);
	// stb r31,2448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2448, ctx.r31.u8);
	// stb r31,2449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2449, ctx.r31.u8);
	// stb r10,2450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2450, ctx.r10.u8);
	// stb r14,2451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2451, ctx.r14.u8);
	// stb r3,2452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2452, ctx.r3.u8);
	// stb r9,2453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2453, ctx.r9.u8);
	// stb r6,2454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2454, ctx.r6.u8);
	// stb r6,2455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2455, ctx.r6.u8);
	// stb r31,2456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2456, ctx.r31.u8);
	// stb r31,2457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2457, ctx.r31.u8);
	// stb r31,2458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2458, ctx.r31.u8);
	// stb r10,2459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2459, ctx.r10.u8);
	// stb r17,2460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2460, ctx.r17.u8);
	// stb r31,2461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2461, ctx.r31.u8);
	// stb r30,2462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2462, ctx.r30.u8);
	// stb r7,2463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2463, ctx.r7.u8);
	// stb r8,2464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2464, ctx.r8.u8);
	// stb r31,2465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2465, ctx.r31.u8);
	// stb r31,2466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2466, ctx.r31.u8);
	// stb r29,2467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2467, ctx.r29.u8);
	// stb r31,2469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2469, ctx.r31.u8);
	// stb r9,2470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2470, ctx.r9.u8);
	// stb r31,2471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2471, ctx.r31.u8);
	// stb r15,2472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2472, ctx.r15.u8);
	// stb r31,2473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2473, ctx.r31.u8);
	// stb r31,2474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2474, ctx.r31.u8);
	// stb r28,2508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2508, ctx.r28.u8);
	// li r28,183
	ctx.r28.s64 = 183;
	// stb r24,2475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2475, ctx.r24.u8);
	// li r24,23
	ctx.r24.s64 = 23;
	// stb r27,2496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2496, ctx.r27.u8);
	// li r27,19
	ctx.r27.s64 = 19;
	// li r23,250
	ctx.r23.s64 = 250;
	// stb r17,2476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2476, ctx.r17.u8);
	// stb r31,2477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2477, ctx.r31.u8);
	// stb r28,2512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2512, ctx.r28.u8);
	// li r28,154
	ctx.r28.s64 = 154;
	// stb r24,2482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2482, ctx.r24.u8);
	// li r24,56
	ctx.r24.s64 = 56;
	// stb r27,2498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2498, ctx.r27.u8);
	// li r27,254
	ctx.r27.s64 = 254;
	// stb r31,2478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2478, ctx.r31.u8);
	// stb r31,2479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2479, ctx.r31.u8);
	// stb r28,2513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2513, ctx.r28.u8);
	// li r28,245
	ctx.r28.s64 = 245;
	// stb r24,2483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2483, ctx.r24.u8);
	// li r24,63
	ctx.r24.s64 = 63;
	// stb r27,2501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2501, ctx.r27.u8);
	// li r27,151
	ctx.r27.s64 = 151;
	// stb r10,2480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2480, ctx.r10.u8);
	// stb r17,2481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2481, ctx.r17.u8);
	// stb r28,2535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2535, ctx.r28.u8);
	// li r28,239
	ctx.r28.s64 = 239;
	// stb r24,2484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2484, ctx.r24.u8);
	// stb r23,2485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2485, ctx.r23.u8);
	// stb r31,2486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2486, ctx.r31.u8);
	// stb r31,2487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2487, ctx.r31.u8);
	// stb r28,2536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2536, ctx.r28.u8);
	// li r28,38
	ctx.r28.s64 = 38;
	// stb r31,2488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2488, ctx.r31.u8);
	// stb r10,2489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2489, ctx.r10.u8);
	// stb r14,2490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2490, ctx.r14.u8);
	// stb r3,2491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2491, ctx.r3.u8);
	// stb r28,2537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2537, ctx.r28.u8);
	// li r28,46
	ctx.r28.s64 = 46;
	// stb r9,2492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2492, ctx.r9.u8);
	// stb r9,2493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2493, ctx.r9.u8);
	// stb r4,2494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2494, ctx.r4.u8);
	// stb r20,2495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2495, ctx.r20.u8);
	// stb r25,2497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2497, ctx.r25.u8);
	// stb r11,2499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2499, ctx.r11.u8);
	// stb r11,2500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2500, ctx.r11.u8);
	// stb r27,2502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2502, ctx.r27.u8);
	// stb r31,2503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2503, ctx.r31.u8);
	// stb r31,2504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2504, ctx.r31.u8);
	// stb r31,2505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2505, ctx.r31.u8);
	// stb r10,2506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2506, ctx.r10.u8);
	// stb r19,2507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2507, ctx.r19.u8);
	// stb r9,2509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2509, ctx.r9.u8);
	// stb r4,2510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2510, ctx.r4.u8);
	// stb r20,2511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2511, ctx.r20.u8);
	// stb r6,2514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2514, ctx.r6.u8);
	// stb r6,2515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2515, ctx.r6.u8);
	// stb r8,2516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2516, ctx.r8.u8);
	// stb r11,2517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2517, ctx.r11.u8);
	// stb r11,2518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2518, ctx.r11.u8);
	// stb r5,2519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2519, ctx.r5.u8);
	// stb r21,2520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2520, ctx.r21.u8);
	// stb r31,2521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2521, ctx.r31.u8);
	// stb r30,2522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2522, ctx.r30.u8);
	// stb r7,2523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2523, ctx.r7.u8);
	// stb r8,2524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2524, ctx.r8.u8);
	// stb r11,2525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2525, ctx.r11.u8);
	// stb r11,2526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2526, ctx.r11.u8);
	// stb r5,2527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2527, ctx.r5.u8);
	// stb r16,2528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2528, ctx.r16.u8);
	// stb r31,2529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2529, ctx.r31.u8);
	// stb r30,2530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2530, ctx.r30.u8);
	// stb r7,2531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2531, ctx.r7.u8);
	// stb r8,2532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2532, ctx.r8.u8);
	// stb r11,2533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2533, ctx.r11.u8);
	// stb r11,2534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2534, ctx.r11.u8);
	// stb r9,2538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2538, ctx.r9.u8);
	// stb r6,2539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2539, ctx.r6.u8);
	// stb r28,2540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2540, ctx.r28.u8);
	// stb r31,2541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2541, ctx.r31.u8);
	// stb r31,2542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2542, ctx.r31.u8);
	// stb r11,2547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2547, ctx.r11.u8);
	// li r28,86
	ctx.r28.s64 = 86;
	// stb r11,2548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2548, ctx.r11.u8);
	// li r27,30
	ctx.r27.s64 = 30;
	// stb r11,2555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2555, ctx.r11.u8);
	// stb r11,2556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2556, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r5,2549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2549, ctx.r5.u8);
	// stb r28,2543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2543, ctx.r28.u8);
	// li r28,127
	ctx.r28.s64 = 127;
	// stb r5,2557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2557, ctx.r5.u8);
	// li r5,74
	ctx.r5.s64 = 74;
	// stb r6,2545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2545, ctx.r6.u8);
	// stb r11,2560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2560, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r8,2546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2546, ctx.r8.u8);
	// stb r28,2544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2544, ctx.r28.u8);
	// li r28,83
	ctx.r28.s64 = 83;
	// stb r21,2550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2550, ctx.r21.u8);
	// stb r31,2551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2551, ctx.r31.u8);
	// stb r11,2567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2567, ctx.r11.u8);
	// li r11,36
	ctx.r11.s64 = 36;
	// stb r30,2552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2552, ctx.r30.u8);
	// stb r7,2553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2553, ctx.r7.u8);
	// stb r8,2554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2554, ctx.r8.u8);
	// stb r16,2558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2558, ctx.r16.u8);
	// stb r11,2573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2573, ctx.r11.u8);
	// stb r11,2580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2580, ctx.r11.u8);
	// li r11,167
	ctx.r11.s64 = 167;
	// stb r31,2559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2559, ctx.r31.u8);
	// stb r31,2561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2561, ctx.r31.u8);
	// stb r18,2562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2562, ctx.r18.u8);
	// stb r31,2563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2563, ctx.r31.u8);
	// stb r11,2597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2597, ctx.r11.u8);
	// li r11,12
	ctx.r11.s64 = 12;
	// stb r31,2564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2564, ctx.r31.u8);
	// stb r31,2565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2565, ctx.r31.u8);
	// stb r5,2566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2566, ctx.r5.u8);
	// stb r31,2568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2568, ctx.r31.u8);
	// stb r11,2599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2599, ctx.r11.u8);
	// li r11,120
	ctx.r11.s64 = 120;
	// stb r31,2569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2569, ctx.r31.u8);
	// stb r31,2570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2570, ctx.r31.u8);
	// stb r31,2571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2571, ctx.r31.u8);
	// stb r3,2572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2572, ctx.r3.u8);
	// stb r11,2604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2604, ctx.r11.u8);
	// li r11,229
	ctx.r11.s64 = 229;
	// stb r28,2574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2574, ctx.r28.u8);
	// stb r27,2575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2575, ctx.r27.u8);
	// stb r31,2576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2576, ctx.r31.u8);
	// stb r31,2577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2577, ctx.r31.u8);
	// stb r11,2605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2605, ctx.r11.u8);
	// li r11,23
	ctx.r11.s64 = 23;
	// stb r31,2578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2578, ctx.r31.u8);
	// stb r31,2579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2579, ctx.r31.u8);
	// stb r28,2581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2581, ctx.r28.u8);
	// stb r9,2582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2582, ctx.r9.u8);
	// stb r6,2583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2583, ctx.r6.u8);
	// stb r6,2584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2584, ctx.r6.u8);
	// stb r31,2585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2585, ctx.r31.u8);
	// stb r31,2586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2586, ctx.r31.u8);
	// stb r31,2587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2587, ctx.r31.u8);
	// stb r10,2588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2588, ctx.r10.u8);
	// stb r17,2589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2589, ctx.r17.u8);
	// stb r31,2590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2590, ctx.r31.u8);
	// stb r30,2591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2591, ctx.r30.u8);
	// stb r7,2592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2592, ctx.r7.u8);
	// stb r8,2593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2593, ctx.r8.u8);
	// stb r31,2594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2594, ctx.r31.u8);
	// stb r31,2595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2595, ctx.r31.u8);
	// stb r29,2596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2596, ctx.r29.u8);
	// stb r31,2598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2598, ctx.r31.u8);
	// stb r31,2600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2600, ctx.r31.u8);
	// stb r15,2601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2601, ctx.r15.u8);
	// stb r31,2602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2602, ctx.r31.u8);
	// stb r31,2603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2603, ctx.r31.u8);
	// stb r31,2606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2606, ctx.r31.u8);
	// stb r31,2607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2607, ctx.r31.u8);
	// stb r31,2608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2608, ctx.r31.u8);
	// stb r10,2609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2609, ctx.r10.u8);
	// stb r17,2610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2610, ctx.r17.u8);
	// stb r11,2611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2611, ctx.r11.u8);
	// li r11,252
	ctx.r11.s64 = 252;
	// stb r5,2656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2656, ctx.r5.u8);
	// li r5,210
	ctx.r5.s64 = 210;
	// stb r3,2630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2630, ctx.r3.u8);
	// li r8,208
	ctx.r8.s64 = 208;
	// stb r25,2631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2631, ctx.r25.u8);
	// li r6,205
	ctx.r6.s64 = 205;
	// li r3,204
	ctx.r3.s64 = 204;
	// lwz r30,2900(r1)
	ctx.r30.u64 = PPC_LOAD_U32(ctx.r1.u32 + 2900);
	// stb r11,2615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2615, ctx.r11.u8);
	// li r27,203
	ctx.r27.s64 = 203;
	// stb r11,2618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2618, ctx.r11.u8);
	// li r11,129
	ctx.r11.s64 = 129;
	// li r25,56
	ctx.r25.s64 = 56;
	// stb r4,2616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2616, ctx.r4.u8);
	// stb r5,2657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2657, ctx.r5.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r9,2612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2612, ctx.r9.u8);
	// li r5,2617
	ctx.r5.s64 = 2617;
	// stb r22,2613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2613, ctx.r22.u8);
	// addi r4,r1,96
	ctx.r4.s64 = ctx.r1.s64 + 96;
	// stb r11,2619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2619, ctx.r11.u8);
	// li r11,212
	ctx.r11.s64 = 212;
	// stb r20,2614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2614, ctx.r20.u8);
	// stb r20,2617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2617, ctx.r20.u8);
	// stb r26,2620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2620, ctx.r26.u8);
	// stb r31,2621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2621, ctx.r31.u8);
	// stb r31,2622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2622, ctx.r31.u8);
	// stb r31,2623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2623, ctx.r31.u8);
	// stb r10,2624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2624, ctx.r10.u8);
	// stb r8,2625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2625, ctx.r8.u8);
	// stb r9,2626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2626, ctx.r9.u8);
	// stb r15,2627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2627, ctx.r15.u8);
	// stb r31,2628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2628, ctx.r31.u8);
	// stb r31,2629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2629, ctx.r31.u8);
	// stb r31,2632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2632, ctx.r31.u8);
	// stb r31,2633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2633, ctx.r31.u8);
	// stb r31,2634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2634, ctx.r31.u8);
	// stb r10,2635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2635, ctx.r10.u8);
	// stb r6,2636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2636, ctx.r6.u8);
	// stb r11,2637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2637, ctx.r11.u8);
	// stb r21,2638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2638, ctx.r21.u8);
	// stb r31,2639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2639, ctx.r31.u8);
	// stb r31,2640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2640, ctx.r31.u8);
	// stb r31,2641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2641, ctx.r31.u8);
	// stb r10,2642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2642, ctx.r10.u8);
	// stb r3,2643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2643, ctx.r3.u8);
	// stb r9,2644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2644, ctx.r9.u8);
	// stb r31,2645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2645, ctx.r31.u8);
	// stb r31,2646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2646, ctx.r31.u8);
	// stb r31,2647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2647, ctx.r31.u8);
	// stb r10,2648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2648, ctx.r10.u8);
	// stb r27,2649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2649, ctx.r27.u8);
	// stb r9,2650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2650, ctx.r9.u8);
	// stb r9,2651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2651, ctx.r9.u8);
	// stb r18,2652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2652, ctx.r18.u8);
	// stb r31,2653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2653, ctx.r31.u8);
	// stb r31,2654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2654, ctx.r31.u8);
	// stb r31,2655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2655, ctx.r31.u8);
	// stb r31,2658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2658, ctx.r31.u8);
	// stb r31,2659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2659, ctx.r31.u8);
	// stb r31,2660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2660, ctx.r31.u8);
	// stb r31,2661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2661, ctx.r31.u8);
	// stb r25,2662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2662, ctx.r25.u8);
	// stb r24,2663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2663, ctx.r24.u8);
	// stb r31,2664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2664, ctx.r31.u8);
	// stb r31,2665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2665, ctx.r31.u8);
	// stb r31,2666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2666, ctx.r31.u8);
	// stb r10,2667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2667, ctx.r10.u8);
	// stb r14,2668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2668, ctx.r14.u8);
	// stb r26,2669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2669, ctx.r26.u8);
	// stb r31,2670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2670, ctx.r31.u8);
	// stb r31,2671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2671, ctx.r31.u8);
	// stb r31,2672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2672, ctx.r31.u8);
	// stb r10,2673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2673, ctx.r10.u8);
	// stb r8,2674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2674, ctx.r8.u8);
	// stb r31,2675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2675, ctx.r31.u8);
	// stb r31,2676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2676, ctx.r31.u8);
	// stb r31,2677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2677, ctx.r31.u8);
	// stb r10,2678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2678, ctx.r10.u8);
	// stb r11,2690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2690, ctx.r11.u8);
	// li r11,201
	ctx.r11.s64 = 201;
	// ld r23,80(r1)
	ctx.r23.u64 = PPC_LOAD_U64(ctx.r1.u32 + 80);
	// stb r3,2696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2696, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,2680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2680, ctx.r31.u8);
	// stb r31,2681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2681, ctx.r31.u8);
	// stb r11,2708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2708, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r23,2679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2679, ctx.r23.u8);
	// stb r31,2682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2682, ctx.r31.u8);
	// stb r10,2683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2683, ctx.r10.u8);
	// stb r6,2684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2684, ctx.r6.u8);
	// stb r31,2685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2685, ctx.r31.u8);
	// stb r31,2686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2686, ctx.r31.u8);
	// stb r31,2687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2687, ctx.r31.u8);
	// stb r10,2688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2688, ctx.r10.u8);
	// stb r19,2689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2689, ctx.r19.u8);
	// stb r21,2691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2691, ctx.r21.u8);
	// stb r31,2692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2692, ctx.r31.u8);
	// stb r31,2693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2693, ctx.r31.u8);
	// stb r31,2694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2694, ctx.r31.u8);
	// stb r10,2695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2695, ctx.r10.u8);
	// stb r9,2697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2697, ctx.r9.u8);
	// stb r31,2698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2698, ctx.r31.u8);
	// stb r31,2699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2699, ctx.r31.u8);
	// stb r31,2700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2700, ctx.r31.u8);
	// stb r10,2701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2701, ctx.r10.u8);
	// stb r27,2702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2702, ctx.r27.u8);
	// stb r9,2703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2703, ctx.r9.u8);
	// stb r31,2704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2704, ctx.r31.u8);
	// stb r31,2705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2705, ctx.r31.u8);
	// stb r31,2706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2706, ctx.r31.u8);
	// stb r10,2707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2707, ctx.r10.u8);
	// stb r9,2709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2709, ctx.r9.u8);
	// stb r7,2710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2710, ctx.r7.u8);
	// stb r11,2711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2711, ctx.r11.u8);
	// stb r28,2712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 2712, ctx.r28.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C70BC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,2880
	ctx.r1.s64 = ctx.r1.s64 + 2880;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C70D0"))) PPC_WEAK_FUNC(sub_824C70D0);
PPC_FUNC_IMPL(__imp__sub_824C70D0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C70D8;
	__savegprlr_14(ctx, base);
	// stwu r1,-1024(r1)
	ea = -1024 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r26,r3
	ctx.r26.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r26,4
	ctx.r3.s64 = ctx.r26.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,769
	ctx.r9.s64 = 769;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31844
	ctx.r4.s64 = ctx.r10.s64 + 31844;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r26)
	PPC_STORE_U32(ctx.r26.u32 + 0, ctx.r11.u32);
	// stw r9,16(r26)
	PPC_STORE_U32(ctx.r26.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C7114;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31824
	ctx.r4.s64 = ctx.r11.s64 + 31824;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,856
	ctx.r3.s64 = ctx.r1.s64 + 856;
	// bl 0x8243b750
	ctx.lr = 0x824C712C;
	sub_8243B750(ctx, base);
	// li r10,40
	ctx.r10.s64 = 40;
	// li r9,106
	ctx.r9.s64 = 106;
	// lwz r6,856(r1)
	ctx.r6.u64 = PPC_LOAD_U32(ctx.r1.u32 + 856);
	// li r18,20
	ctx.r18.s64 = 20;
	// lwz r5,860(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 860);
	// li r27,45
	ctx.r27.s64 = 45;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// stb r10,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r10.u8);
	// li r7,31
	ctx.r7.s64 = 31;
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// li r10,79
	ctx.r10.s64 = 79;
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r17,30
	ctx.r17.s64 = 30;
	// li r22,27
	ctx.r22.s64 = 27;
	// stb r18,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r18.u8);
	// li r4,33
	ctx.r4.s64 = 33;
	// stb r27,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r27.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r10,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r10.u8);
	// li r10,43
	ctx.r10.s64 = 43;
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r11,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r11.u8);
	// li r19,39
	ctx.r19.s64 = 39;
	// stb r7,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r7.u8);
	// stb r18,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r18.u8);
	// stb r27,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r27.u8);
	// stb r10,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r10.u8);
	// li r10,41
	ctx.r10.s64 = 41;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r17,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r17.u8);
	// stb r22,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r22.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r4,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r4.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r10,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r10.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r8,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r8.u8);
	// stb r18,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r18.u8);
	// stb r27,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r27.u8);
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r7,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r7.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// stb r19,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r19.u8);
	// li r7,97
	ctx.r7.s64 = 97;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// li r10,197
	ctx.r10.s64 = 197;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// li r23,15
	ctx.r23.s64 = 15;
	// stw r6,24(r26)
	PPC_STORE_U32(ctx.r26.u32 + 24, ctx.r6.u32);
	// li r29,36
	ctx.r29.s64 = 36;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// li r20,37
	ctx.r20.s64 = 37;
	// stw r5,28(r26)
	PPC_STORE_U32(ctx.r26.u32 + 28, ctx.r5.u32);
	// stb r7,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r7.u8);
	// li r7,26
	ctx.r7.s64 = 26;
	// stb r10,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r10.u8);
	// li r10,46
	ctx.r10.s64 = 46;
	// li r28,42
	ctx.r28.s64 = 42;
	// stb r23,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r23.u8);
	// li r30,7
	ctx.r30.s64 = 7;
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// li r24,2
	ctx.r24.s64 = 2;
	// stb r20,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r20.u8);
	// stb r7,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r7.u8);
	// li r7,243
	ctx.r7.s64 = 243;
	// stb r10,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r10.u8);
	// li r25,119
	ctx.r25.s64 = 119;
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r22,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r22.u8);
	// li r3,5
	ctx.r3.s64 = 5;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// li r7,253
	ctx.r7.s64 = 253;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r28,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r28.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r7,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r7.u8);
	// li r7,209
	ctx.r7.s64 = 209;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r8,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r8.u8);
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r23,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r23.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r29,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r29.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r11,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r11.u8);
	// stb r20,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r20.u8);
	// stb r30,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r30.u8);
	// stb r24,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r24.u8);
	// stb r25,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r25.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r29,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r29.u8);
	// stb r28,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r28.u8);
	// stb r8,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r8.u8);
	// stb r23,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r23.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r4,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r4.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// stb r10,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r10.u8);
	// stb r7,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r7.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// stb r29,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r29.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// li r21,185
	ctx.r21.s64 = 185;
	// stb r3,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r3.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// stb r9,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r9.u8);
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r10,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r10.u8);
	// li r15,87
	ctx.r15.s64 = 87;
	// stb r10,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r10.u8);
	// li r16,67
	ctx.r16.s64 = 67;
	// stb r30,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r30.u8);
	// stb r21,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r21.u8);
	// li r21,99
	ctx.r21.s64 = 99;
	// stb r14,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r14.u8);
	// li r14,95
	ctx.r14.s64 = 95;
	// li r5,247
	ctx.r5.s64 = 247;
	// stb r6,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r6.u8);
	// stb r9,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r9.u8);
	// stb r25,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r25.u8);
	// stb r21,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r21.u8);
	// li r21,130
	ctx.r21.s64 = 130;
	// stb r14,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r14.u8);
	// li r14,96
	ctx.r14.s64 = 96;
	// stb r5,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r5.u8);
	// stb r7,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r7.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r21,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r21.u8);
	// li r21,24
	ctx.r21.s64 = 24;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r29,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r29.u8);
	// stb r21,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r21.u8);
	// li r21,11
	ctx.r21.s64 = 11;
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r3,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r3.u8);
	// stb r6,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r6.u8);
	// stb r9,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r9.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r15,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r15.u8);
	// stb r16,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r16.u8);
	// stb r28,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r28.u8);
	// stb r8,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r8.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r17,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r17.u8);
	// stb r7,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r7.u8);
	// stb r7,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r7.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r11,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r11.u8);
	// stb r29,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r29.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r3,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r3.u8);
	// stb r6,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r6.u8);
	// stb r9,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r9.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r15,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r15.u8);
	// stb r16,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r16.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r21,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r21.u8);
	// stb r6,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r6.u8);
	// stb r22,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r22.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r8,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r8.u8);
	// stb r8,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r8.u8);
	// stb r30,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r30.u8);
	// stb r9,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r9.u8);
	// stb r14,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r14.u8);
	// stb r25,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r25.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r11,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r11.u8);
	// li r14,43
	ctx.r14.s64 = 43;
	// stb r4,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r4.u8);
	// stb r28,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r28.u8);
	// stb r8,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r8.u8);
	// stb r7,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r7.u8);
	// stb r7,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r7.u8);
	// stb r14,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r14.u8);
	// li r14,216
	ctx.r14.s64 = 216;
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r11,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r11.u8);
	// stb r14,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r14.u8);
	// li r14,248
	ctx.r14.s64 = 248;
	// stb r29,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r29.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r3,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r3.u8);
	// stb r6,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r6.u8);
	// stb r14,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r14.u8);
	// li r14,76
	ctx.r14.s64 = 76;
	// stb r9,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r9.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r15,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r15.u8);
	// stb r14,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r16,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r16.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r17,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r17.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r14,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r14.u8);
	// li r14,96
	ctx.r14.s64 = 96;
	// stb r22,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r22.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r14,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r14.u8);
	// li r14,130
	ctx.r14.s64 = 130;
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r14,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r14.u8);
	// li r14,53
	ctx.r14.s64 = 53;
	// stb r7,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r7.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r14,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r14.u8);
	// li r14,98
	ctx.r14.s64 = 98;
	// stb r11,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r11.u8);
	// stb r4,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r4.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r3,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r3.u8);
	// stb r14,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r6,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r6.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r10,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r10.u8);
	// stb r10,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r10.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r11,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r11.u8);
	// stb r8,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r8.u8);
	// stb r30,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r30.u8);
	// stb r9,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r9.u8);
	// stb r27,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r27.u8);
	// stb r10,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r10.u8);
	// stb r10,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r10.u8);
	// stb r10,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r10.u8);
	// stb r10,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r10.u8);
	// stb r10,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r10.u8);
	// stb r5,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r5.u8);
	// stb r20,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r20.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r11,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r11.u8);
	// stb r14,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r14.u8);
	// li r14,24
	ctx.r14.s64 = 24;
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r18,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r18.u8);
	// stb r27,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r27.u8);
	// stb r10,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r10.u8);
	// stb r14,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r14.u8);
	// li r14,129
	ctx.r14.s64 = 129;
	// stb r10,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r10.u8);
	// stb r10,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r10.u8);
	// stb r10,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r10.u8);
	// stb r10,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r10.u8);
	// stb r14,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r14.u8);
	// li r14,53
	ctx.r14.s64 = 53;
	// stb r5,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r5.u8);
	// stb r20,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r20.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r14,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r14.u8);
	// li r14,99
	ctx.r14.s64 = 99;
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r11,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r11.u8);
	// stb r14,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r8,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r8.u8);
	// stb r8,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r8.u8);
	// stb r18,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r18.u8);
	// stb r27,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r27.u8);
	// stb r14,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r14.u8);
	// li r14,31
	ctx.r14.s64 = 31;
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r11,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r11.u8);
	// stb r14,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r14.u8);
	// li r14,96
	ctx.r14.s64 = 96;
	// stb r19,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r19.u8);
	// stb r30,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r30.u8);
	// stb r9,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r9.u8);
	// stb r7,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r7.u8);
	// stb r14,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r14.u8);
	// li r14,130
	ctx.r14.s64 = 130;
	// stb r7,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r7.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r14,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r14.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// stb r11,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r11.u8);
	// stb r29,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r29.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r3,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r3.u8);
	// stb r14,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r14.u8);
	// li r14,93
	ctx.r14.s64 = 93;
	// stb r6,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r6.u8);
	// stb r9,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r9.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r14,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r14.u8);
	// li r14,24
	ctx.r14.s64 = 24;
	// stb r15,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r15.u8);
	// stb r16,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r16.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r21,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r21.u8);
	// stb r6,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r6.u8);
	// stb r22,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r22.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r8,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r8.u8);
	// stb r14,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r14.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r17,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r17.u8);
	// stb r7,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r7.u8);
	// stb r7,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r7.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// stb r16,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r16.u8);
	// std r16,864(r1)
	PPC_STORE_U64(ctx.r1.u32 + 864, ctx.r16.u64);
	// li r16,34
	ctx.r16.s64 = 34;
	// stb r17,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r17.u8);
	// li r17,6
	ctx.r17.s64 = 6;
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r14,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r14.u8);
	// li r14,96
	ctx.r14.s64 = 96;
	// stb r16,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r16.u8);
	// li r16,205
	ctx.r16.s64 = 205;
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r11,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r11.u8);
	// stb r29,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r29.u8);
	// stb r14,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r14.u8);
	// li r14,253
	ctx.r14.s64 = 253;
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r3,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r3.u8);
	// stb r6,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r6.u8);
	// stb r9,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r9.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r15,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r15.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r21,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r21.u8);
	// stb r6,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r6.u8);
	// stb r22,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r22.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r8,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r8.u8);
	// stb r8,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r8.u8);
	// stb r18,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r18.u8);
	// stb r27,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r27.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r11,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r11.u8);
	// stb r19,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r19.u8);
	// stb r17,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r17.u8);
	// stb r9,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r9.u8);
	// stb r14,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r14.u8);
	// stb r30,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r30.u8);
	// stb r9,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r9.u8);
	// stb r14,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r14.u8);
	// stb r25,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r25.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r11,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r11.u8);
	// stb r4,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r4.u8);
	// stb r28,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r28.u8);
	// stb r8,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r8.u8);
	// stb r23,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r23.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r11,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r11.u8);
	// stb r7,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r7.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r11,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r11.u8);
	// stb r4,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r4.u8);
	// stb r31,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r31.u8);
	// stb r3,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r3.u8);
	// stb r6,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r6.u8);
	// stb r9,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r9.u8);
	// stb r10,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r10.u8);
	// stb r10,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r10.u8);
	// stb r5,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r5.u8);
	// stb r16,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r16.u8);
	// stb r30,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r30.u8);
	// stb r9,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r9.u8);
	// stb r14,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r14.u8);
	// stb r25,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r25.u8);
	// li r14,34
	ctx.r14.s64 = 34;
	// stb r31,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r31.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r11,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r11.u8);
	// stb r28,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r28.u8);
	// stb r14,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r8,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r8.u8);
	// stb r23,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r23.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r14,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r14.u8);
	// li r14,234
	ctx.r14.s64 = 234;
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r11,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r11.u8);
	// stb r20,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r20.u8);
	// stb r30,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r30.u8);
	// stb r14,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r14.u8);
	// li r14,150
	ctx.r14.s64 = 150;
	// stb r9,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r9.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r14,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r11,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r11.u8);
	// stb r7,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r7.u8);
	// stb r31,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r31.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r14,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r14.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r11,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r11.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r31.u8);
	// stb r14,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r14.u8);
	// li r14,34
	ctx.r14.s64 = 34;
	// stb r7,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r7.u8);
	// stb r9,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r9.u8);
	// stb r10,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r10.u8);
	// stb r10,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r10.u8);
	// stb r14,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r14.u8);
	// li r14,14
	ctx.r14.s64 = 14;
	// stb r5,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r5.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r3,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r3.u8);
	// stb r31,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r31.u8);
	// stb r14,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r14.u8);
	// li r14,233
	ctx.r14.s64 = 233;
	// stb r9,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r9.u8);
	// stb r10,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r10.u8);
	// stb r10,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r10.u8);
	// stb r10,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r10.u8);
	// stb r14,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r14.u8);
	// li r14,197
	ctx.r14.s64 = 197;
	// stb r8,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r8.u8);
	// stb r30,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r30.u8);
	// stb r9,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r9.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r14,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r14.u8);
	// li r14,224
	ctx.r14.s64 = 224;
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r11,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r11.u8);
	// stb r4,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r4.u8);
	// stb r14,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r14.u8);
	// li r14,114
	ctx.r14.s64 = 114;
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r11,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r11.u8);
	// stb r14,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r14.u8);
	// li r14,16
	ctx.r14.s64 = 16;
	// stb r7,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r7.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r14,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r14,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r14.u8);
	// li r14,34
	ctx.r14.s64 = 34;
	// stb r18,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r18.u8);
	// li r18,31
	ctx.r18.s64 = 31;
	// stb r11,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r11.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r7,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r7.u8);
	// stb r14,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r14.u8);
	// li r14,14
	ctx.r14.s64 = 14;
	// stb r18,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r18.u8);
	// stb r18,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r18.u8);
	// li r18,28
	ctx.r18.s64 = 28;
	// stb r9,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r9.u8);
	// stb r10,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r10.u8);
	// stb r14,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r14.u8);
	// li r14,233
	ctx.r14.s64 = 233;
	// stb r10,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r10.u8);
	// stb r18,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r18.u8);
	// li r18,250
	ctx.r18.s64 = 250;
	// stb r5,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r5.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r14,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r14.u8);
	// li r14,197
	ctx.r14.s64 = 197;
	// stb r3,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r3.u8);
	// stb r18,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r18.u8);
	// li r18,196
	ctx.r18.s64 = 196;
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r9,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r9.u8);
	// stb r14,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r14.u8);
	// li r14,234
	ctx.r14.s64 = 234;
	// stb r10,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r10.u8);
	// stb r10,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r10.u8);
	// stb r10,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r10.u8);
	// stb r8,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r8.u8);
	// stb r14,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r14.u8);
	// li r14,165
	ctx.r14.s64 = 165;
	// stb r17,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r17.u8);
	// stb r9,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r9.u8);
	// stb r31,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r31.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r14,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r11,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r11.u8);
	// stb r8,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r8.u8);
	// stb r17,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r17.u8);
	// stb r14,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r14.u8);
	// li r14,148
	ctx.r14.s64 = 148;
	// stb r9,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r9.u8);
	// stb r30,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r30.u8);
	// stb r9,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r9.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r14,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r14.u8);
	// li r14,253
	ctx.r14.s64 = 253;
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r11,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r11.u8);
	// stb r20,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r20.u8);
	// stb r14,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r14.u8);
	// li r14,154
	ctx.r14.s64 = 154;
	// stb r8,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r8.u8);
	// stb r27,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r27.u8);
	// stb r31,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r31.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r14,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r11,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r11.u8);
	// stb r19,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r19.u8);
	// stb r30,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r30.u8);
	// stb r14,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r14.u8);
	// li r14,240
	ctx.r14.s64 = 240;
	// stb r24,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r24.u8);
	// stb r27,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r27.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r14,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r14.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r11,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r11.u8);
	// stb r10,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r10.u8);
	// stb r10,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r10.u8);
	// li r14,29
	ctx.r14.s64 = 29;
	// stb r18,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r18.u8);
	// li r18,35
	ctx.r18.s64 = 35;
	// stb r9,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r9.u8);
	// li r16,29
	ctx.r16.s64 = 29;
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r19,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r19.u8);
	// stb r14,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r14.u8);
	// li r14,205
	ctx.r14.s64 = 205;
	// stb r18,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r18.u8);
	// li r18,142
	ctx.r18.s64 = 142;
	// stb r8,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r8.u8);
	// stb r23,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r23.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r14,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r14.u8);
	// li r14,211
	ctx.r14.s64 = 211;
	// stb r18,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r18.u8);
	// li r18,80
	ctx.r18.s64 = 80;
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r11,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r11.u8);
	// stb r14,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r14.u8);
	// li r14,168
	ctx.r14.s64 = 168;
	// stb r18,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r18.u8);
	// stb r18,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r18.u8);
	// stb r18,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r18.u8);
	// stb r18,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r18.u8);
	// stb r14,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r14.u8);
	// li r14,29
	ctx.r14.s64 = 29;
	// stb r7,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r7.u8);
	// stb r7,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r7.u8);
	// stb r31,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r31.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r14,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r14.u8);
	// li r14,28
	ctx.r14.s64 = 28;
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r11,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r11.u8);
	// stb r4,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r4.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r3,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r3.u8);
	// stb r6,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r6.u8);
	// stb r9,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r9.u8);
	// stb r10,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r10.u8);
	// stb r10,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r10.u8);
	// stb r5,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r5.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r3,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r3.u8);
	// stb r6,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r6.u8);
	// stb r9,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r9.u8);
	// stb r10,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r10.u8);
	// stb r10,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r10.u8);
	// stb r5,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r5.u8);
	// stb r30,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r30.u8);
	// stb r24,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r24.u8);
	// stb r25,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r25.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r11,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r11.u8);
	// stb r28,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r28.u8);
	// stb r8,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r8.u8);
	// stb r23,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r23.u8);
	// stb r31,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r31.u8);
	// stb r31,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r31.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r11,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r11.u8);
	// stb r14,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r14.u8);
	// stb r7,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r7.u8);
	// stb r7,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r7.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r31,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r31.u8);
	// stb r31,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r31.u8);
	// stb r11,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r11.u8);
	// stb r16,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r16.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r3,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r3.u8);
	// stb r6,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r6.u8);
	// stb r9,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r9.u8);
	// stb r10,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r10.u8);
	// stb r10,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r10.u8);
	// li r16,155
	ctx.r16.s64 = 155;
	// stb r4,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r4.u8);
	// stb r4,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r4.u8);
	// li r4,99
	ctx.r4.s64 = 99;
	// stb r23,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r23.u8);
	// li r23,233
	ctx.r23.s64 = 233;
	// stb r5,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r5.u8);
	// stb r31,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r31.u8);
	// stb r16,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r16.u8);
	// li r16,16
	ctx.r16.s64 = 16;
	// stb r4,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r4.u8);
	// li r4,216
	ctx.r4.s64 = 216;
	// stb r6,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r6.u8);
	// stb r14,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r14.u8);
	// stb r10,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r10.u8);
	// stb r16,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r16.u8);
	// li r16,250
	ctx.r16.s64 = 250;
	// stb r4,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r4.u8);
	// li r4,168
	ctx.r4.s64 = 168;
	// stb r10,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r10.u8);
	// stb r19,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r19.u8);
	// stb r31,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r31.u8);
	// stb r16,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r16.u8);
	// li r16,68
	ctx.r16.s64 = 68;
	// stb r4,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r4.u8);
	// li r4,132
	ctx.r4.s64 = 132;
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r24,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r24.u8);
	// stb r31,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r31.u8);
	// stb r16,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r16.u8);
	// li r16,29
	ctx.r16.s64 = 29;
	// stb r31,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r31.u8);
	// stb r31,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r31.u8);
	// stb r31,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r31.u8);
	// stb r18,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r18.u8);
	// stb r16,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r16.u8);
	// li r16,155
	ctx.r16.s64 = 155;
	// stb r8,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r8.u8);
	// stb r31,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r31.u8);
	// stb r31,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r31.u8);
	// stb r31,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r31.u8);
	// stb r16,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r16.u8);
	// li r16,16
	ctx.r16.s64 = 16;
	// stb r23,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r23.u8);
	// stb r17,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r17.u8);
	// stb r7,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r7.u8);
	// stb r7,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r7.u8);
	// stb r16,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r16.u8);
	// li r16,250
	ctx.r16.s64 = 250;
	// stb r31,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r31.u8);
	// stb r31,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r31.u8);
	// stb r31,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r31.u8);
	// stb r11,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r11.u8);
	// stb r31,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r31.u8);
	// stb r3,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r3.u8);
	// stb r6,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r6.u8);
	// stb r9,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r9.u8);
	// stb r10,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r10.u8);
	// stb r10,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r10.u8);
	// stb r5,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r5.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r6,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r6.u8);
	// stb r14,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r14.u8);
	// stb r10,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r10.u8);
	// stb r10,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r10.u8);
	// stb r16,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r16.u8);
	// stb r19,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r19.u8);
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r31,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r31.u8);
	// stb r31,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r31.u8);
	// stb r31,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r31.u8);
	// stb r31,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r31.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r18,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r18.u8);
	// stb r8,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r8.u8);
	// stb r30,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r30.u8);
	// stb r24,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r24.u8);
	// stb r4,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r4.u8);
	// stb r25,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r25.u8);
	// stb r31,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r31.u8);
	// stb r31,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r31.u8);
	// stb r10,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r10.u8);
	// li r4,24
	ctx.r4.s64 = 24;
	// stb r10,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r10.u8);
	// li r10,189
	ctx.r10.s64 = 189;
	// stb r23,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r23.u8);
	// li r23,77
	ctx.r23.s64 = 77;
	// stb r25,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r25.u8);
	// addi r25,r26,32
	ctx.r25.s64 = ctx.r26.s64 + 32;
	// stb r5,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r5.u8);
	// li r5,769
	ctx.r5.s64 = 769;
	// stb r4,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r4.u8);
	// li r4,9
	ctx.r4.s64 = 9;
	// stb r10,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r10.u8);
	// li r10,85
	ctx.r10.s64 = 85;
	// stb r31,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r31.u8);
	// stb r11,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r11.u8);
	// stb r14,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r14.u8);
	// stb r4,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r4.u8);
	// li r4,46
	ctx.r4.s64 = 46;
	// stb r10,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r10.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r28,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r28.u8);
	// stb r8,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r8.u8);
	// stb r31,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r31.u8);
	// stb r4,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r4.u8);
	// li r4,12
	ctx.r4.s64 = 12;
	// stb r10,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r10.u8);
	// li r10,240
	ctx.r10.s64 = 240;
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// stb r31,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r31.u8);
	// stb r4,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r10.u8);
	// li r10,30
	ctx.r10.s64 = 30;
	// stb r17,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r17.u8);
	// stb r28,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r28.u8);
	// stb r8,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r8.u8);
	// stb r8,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r8.u8);
	// stb r6,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r6.u8);
	// stb r21,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r21.u8);
	// stb r7,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r7.u8);
	// stb r31,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r31.u8);
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r23,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r23.u8);
	// stb r7,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r7.u8);
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r11,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r11.u8);
	// stb r29,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r29.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r3,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r3.u8);
	// stb r6,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r6.u8);
	// stb r9,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r9.u8);
	// stb r31,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r31.u8);
	// stb r21,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r21.u8);
	// stb r31,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r31.u8);
	// stb r22,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r22.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r31,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r31.u8);
	// stb r31,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r31.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r8,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r8.u8);
	// stb r30,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r30.u8);
	// stb r24,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r24.u8);
	// stb r27,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r27.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r31,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r31.u8);
	// stb r11,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r11.u8);
	// stb r10,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r10.u8);
	// stb r7,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r7.u8);
	// stb r7,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r7.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r11,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r11.u8);
	// li r10,215
	ctx.r10.s64 = 215;
	// stb r11,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r11.u8);
	// ld r16,864(r1)
	ctx.r16.u64 = PPC_LOAD_U64(ctx.r1.u32 + 864);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r3,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r3.u8);
	// mr r3,r25
	ctx.r3.u64 = ctx.r25.u64;
	// stb r29,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r29.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r10,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r10.u8);
	// li r10,254
	ctx.r10.s64 = 254;
	// stb r6,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r6.u8);
	// stb r9,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r9.u8);
	// stb r31,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r31.u8);
	// stb r31,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r31.u8);
	// stb r10,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r10.u8);
	// stb r10,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r10.u8);
	// li r10,114
	ctx.r10.s64 = 114;
	// stb r15,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r15.u8);
	// stb r16,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r16.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r21,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r21.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r22,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r22.u8);
	// stb r31,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r31.u8);
	// stb r31,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r31.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r23,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r23.u8);
	// stb r31,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r31.u8);
	// stb r31,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r31.u8);
	// stb r31,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r31.u8);
	// stb r31,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r31.u8);
	// stb r8,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r8.u8);
	// stb r17,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r17.u8);
	// stb r24,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r24.u8);
	// stb r30,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r30.u8);
	// stb r24,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r24.u8);
	// stb r10,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r10.u8);
	// stb r31,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r31.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r20,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r20.u8);
	// stb r28,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r28.u8);
	// stb r8,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r8.u8);
	// stb r6,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r6.u8);
	// stb r21,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r21.u8);
	// stb r11,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C7F84;
	sub_82B06418(ctx, base);
	// mr r3,r26
	ctx.r3.u64 = ctx.r26.u64;
	// stw r25,20(r26)
	PPC_STORE_U32(ctx.r26.u32 + 20, ctx.r25.u32);
	// addi r1,r1,1024
	ctx.r1.s64 = ctx.r1.s64 + 1024;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C7F98"))) PPC_WEAK_FUNC(sub_824C7F98);
PPC_FUNC_IMPL(__imp__sub_824C7F98) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C7FA0;
	__savegprlr_14(ctx, base);
	// stwu r1,-672(r1)
	ea = -672 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,411
	ctx.r9.s64 = 411;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,31912
	ctx.r4.s64 = ctx.r10.s64 + 31912;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C7FDC;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31884
	ctx.r4.s64 = ctx.r11.s64 + 31884;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,496
	ctx.r3.s64 = ctx.r1.s64 + 496;
	// bl 0x8243b750
	ctx.lr = 0x824C7FF4;
	sub_8243B750(ctx, base);
	// li r11,15
	ctx.r11.s64 = 15;
	// li r8,194
	ctx.r8.s64 = 194;
	// lwz r9,496(r1)
	ctx.r9.u64 = PPC_LOAD_U32(ctx.r1.u32 + 496);
	// li r10,126
	ctx.r10.s64 = 126;
	// lwz r27,500(r1)
	ctx.r27.u64 = PPC_LOAD_U32(ctx.r1.u32 + 500);
	// li r6,48
	ctx.r6.s64 = 48;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r24,9
	ctx.r24.s64 = 9;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// stb r11,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r11.u8);
	// li r11,46
	ctx.r11.s64 = 46;
	// stb r8,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r8.u8);
	// li r8,40
	ctx.r8.s64 = 40;
	// stb r10,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r10.u8);
	// li r28,7
	ctx.r28.s64 = 7;
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// li r23,254
	ctx.r23.s64 = 254;
	// stb r6,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r6.u8);
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// li r4,247
	ctx.r4.s64 = 247;
	// li r17,20
	ctx.r17.s64 = 20;
	// stb r24,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r24.u8);
	// li r5,45
	ctx.r5.s64 = 45;
	// stb r10,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r10.u8);
	// li r18,232
	ctx.r18.s64 = 232;
	// stb r23,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r23.u8);
	// li r19,112
	ctx.r19.s64 = 112;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r20,152
	ctx.r20.s64 = 152;
	// stb r11,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r11.u8);
	// li r21,119
	ctx.r21.s64 = 119;
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// li r22,42
	ctx.r22.s64 = 42;
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r4,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r4.u8);
	// li r7,115
	ctx.r7.s64 = 115;
	// stb r17,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r17.u8);
	// stb r5,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r5.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r18,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r18.u8);
	// stb r19,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r19.u8);
	// stb r28,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r28.u8);
	// stb r10,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r10.u8);
	// stb r20,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r20.u8);
	// stb r21,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r21.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r6,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r6.u8);
	// stb r24,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r24.u8);
	// stb r22,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r22.u8);
	// stb r8,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r8.u8);
	// stb r28,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r28.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r7,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r7.u8);
	// li r16,27
	ctx.r16.s64 = 27;
	// stw r9,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r9.u32);
	// stw r27,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r27.u32);
	// li r7,177
	ctx.r7.s64 = 177;
	// li r3,226
	ctx.r3.s64 = 226;
	// stb r10,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r10.u8);
	// li r9,251
	ctx.r9.s64 = 251;
	// stb r11,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r11.u8);
	// li r27,217
	ctx.r27.s64 = 217;
	// stb r11,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r11.u8);
	// stb r16,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r16.u8);
	// li r16,88
	ctx.r16.s64 = 88;
	// stb r7,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r7.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r3,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r3.u8);
	// li r29,5
	ctx.r29.s64 = 5;
	// stb r9,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r9.u8);
	// li r9,35
	ctx.r9.s64 = 35;
	// stb r27,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r27.u8);
	// li r3,4
	ctx.r3.s64 = 4;
	// stb r16,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r16.u8);
	// li r14,86
	ctx.r14.s64 = 86;
	// li r25,53
	ctx.r25.s64 = 53;
	// stb r7,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r7.u8);
	// li r26,224
	ctx.r26.s64 = 224;
	// stb r4,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r4.u8);
	// li r27,141
	ctx.r27.s64 = 141;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// li r16,202
	ctx.r16.s64 = 202;
	// stb r29,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r29.u8);
	// stb r3,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r3.u8);
	// stb r10,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r10.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// stb r14,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r14.u8);
	// stb r25,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r25.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r9,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r9.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// stb r26,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r26.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r10,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r10.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r9,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r9.u8);
	// stb r27,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r27.u8);
	// stb r8,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r8.u8);
	// stb r7,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r7.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r6,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r6.u8);
	// stb r24,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r24.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r7,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r7.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r16,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r16.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r7,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r7.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r6,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r6.u8);
	// stb r24,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r24.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r29,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r29.u8);
	// stb r10,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r10.u8);
	// stb r10,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r10.u8);
	// stb r11,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r11.u8);
	// stb r11,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r11.u8);
	// stb r23,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r23.u8);
	// li r23,186
	ctx.r23.s64 = 186;
	// std r30,504(r1)
	PPC_STORE_U64(ctx.r1.u32 + 504, ctx.r30.u64);
	// li r30,177
	ctx.r30.s64 = 177;
	// stb r14,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r14.u8);
	// li r15,130
	ctx.r15.s64 = 130;
	// stb r8,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r8.u8);
	// li r16,33
	ctx.r16.s64 = 33;
	// stb r17,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r17.u8);
	// li r14,216
	ctx.r14.s64 = 216;
	// stb r5,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r5.u8);
	// stb r23,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r23.u8);
	// li r23,39
	ctx.r23.s64 = 39;
	// stb r30,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r30.u8);
	// li r30,226
	ctx.r30.s64 = 226;
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r23,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r23.u8);
	// li r23,6
	ctx.r23.s64 = 6;
	// stb r30,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r30.u8);
	// li r30,251
	ctx.r30.s64 = 251;
	// stb r18,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r18.u8);
	// stb r19,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r19.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r23,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r23.u8);
	// li r23,182
	ctx.r23.s64 = 182;
	// stb r28,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r28.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r15,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r15.u8);
	// stb r5,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r5.u8);
	// stb r23,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r23.u8);
	// stb r23,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r23.u8);
	// li r23,129
	ctx.r23.s64 = 129;
	// stb r25,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r25.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r9,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r9.u8);
	// stb r23,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r23.u8);
	// li r23,222
	ctx.r23.s64 = 222;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r9,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r9.u8);
	// stb r26,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r26.u8);
	// stb r23,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r23.u8);
	// li r23,24
	ctx.r23.s64 = 24;
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r10,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r10.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r9,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r9.u8);
	// stb r27,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r27.u8);
	// stb r8,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r8.u8);
	// stb r23,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r23.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r16,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r16.u8);
	// stb r7,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r7.u8);
	// stb r10,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r10.u8);
	// stb r11,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r11.u8);
	// stb r11,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r11.u8);
	// stb r4,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r4.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r29,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r29.u8);
	// stb r3,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r3.u8);
	// stb r10,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r10.u8);
	// stb r11,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r11.u8);
	// stb r11,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r11.u8);
	// stb r30,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r30.u8);
	// stb r25,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r25.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r9,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r9.u8);
	// stb r14,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r14.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r9,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r9.u8);
	// stb r26,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r26.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r10,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r10.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r19,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r19.u8);
	// li r14,39
	ctx.r14.s64 = 39;
	// stb r19,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r19.u8);
	// li r19,16
	ctx.r19.s64 = 16;
	// stb r18,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r18.u8);
	// stb r18,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r18.u8);
	// li r18,252
	ctx.r18.s64 = 252;
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r9,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r9.u8);
	// stb r19,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r19.u8);
	// li r19,6
	ctx.r19.s64 = 6;
	// stb r27,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r27.u8);
	// stb r8,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r8.u8);
	// stb r8,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r8.u8);
	// stb r17,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r17.u8);
	// stb r19,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r19.u8);
	// li r19,254
	ctx.r19.s64 = 254;
	// stb r5,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r5.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r19,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r19.u8);
	// li r19,129
	ctx.r19.s64 = 129;
	// stb r14,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r14.u8);
	// stb r28,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r28.u8);
	// stb r10,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r10.u8);
	// stb r20,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r20.u8);
	// stb r19,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r19.u8);
	// li r19,221
	ctx.r19.s64 = 221;
	// stb r15,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r15.u8);
	// stb r5,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r5.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r23,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r23.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r7,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r7.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r6,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r6.u8);
	// stb r24,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r24.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r3,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r3.u8);
	// stb r5,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r5.u8);
	// stb r10,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r10.u8);
	// stb r11,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r11.u8);
	// stb r11,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r11.u8);
	// stb r18,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r18.u8);
	// stb r8,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r8.u8);
	// stb r28,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r28.u8);
	// stb r10,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r10.u8);
	// stb r20,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r20.u8);
	// stb r5,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r5.u8);
	// stb r25,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r25.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r9,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r9.u8);
	// stb r19,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r19.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r9,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r9.u8);
	// stb r26,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r26.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r10,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r10.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r9,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r9.u8);
	// stb r27,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r27.u8);
	// stb r8,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r8.u8);
	// stb r17,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r17.u8);
	// stb r5,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r5.u8);
	// stb r25,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r25.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r9,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r9.u8);
	// stb r19,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r19.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r9,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r9.u8);
	// li r17,46
	ctx.r17.s64 = 46;
	// stb r18,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r18.u8);
	// li r18,138
	ctx.r18.s64 = 138;
	// stb r24,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r24.u8);
	// stb r20,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r20.u8);
	// li r5,8
	ctx.r5.s64 = 8;
	// li r19,15
	ctx.r19.s64 = 15;
	// stb r26,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r26.u8);
	// li r24,32
	ctx.r24.s64 = 32;
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r17,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r17.u8);
	// li r17,253
	ctx.r17.s64 = 253;
	// stb r18,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r18.u8);
	// li r20,18
	ctx.r20.s64 = 18;
	// li r18,161
	ctx.r18.s64 = 161;
	// stb r10,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r10.u8);
	// stb r10,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r10.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r17,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r17.u8);
	// li r17,36
	ctx.r17.s64 = 36;
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r9,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r9.u8);
	// stb r27,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r27.u8);
	// stb r14,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r14.u8);
	// stb r17,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r17.u8);
	// li r17,26
	ctx.r17.s64 = 26;
	// stb r19,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r19.u8);
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r17,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r17.u8);
	// li r17,37
	ctx.r17.s64 = 37;
	// stb r6,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r6.u8);
	// stb r5,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r5.u8);
	// stb r7,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r7.u8);
	// stb r11,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r11.u8);
	// stb r17,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r17.u8);
	// li r17,239
	ctx.r17.s64 = 239;
	// stb r11,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r11.u8);
	// stb r7,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r7.u8);
	// stb r7,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r7.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r6,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r6.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r29,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r29.u8);
	// stb r24,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r24.u8);
	// stb r10,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r10.u8);
	// stb r11,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r11.u8);
	// stb r11,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r11.u8);
	// stb r4,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r4.u8);
	// stb r17,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r17.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r29,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r29.u8);
	// stb r3,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r3.u8);
	// stb r10,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r10.u8);
	// stb r11,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r11.u8);
	// stb r11,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r11.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r29,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r29.u8);
	// stb r3,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r3.u8);
	// stb r10,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r10.u8);
	// stb r11,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r11.u8);
	// stb r11,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r11.u8);
	// stb r4,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r4.u8);
	// stb r18,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r18.u8);
	// stb r28,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r28.u8);
	// stb r10,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r10.u8);
	// stb r15,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r15.u8);
	// stb r21,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r21.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r6,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r6.u8);
	// stb r5,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r5.u8);
	// stb r22,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r22.u8);
	// stb r8,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r8.u8);
	// stb r23,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r23.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r20,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r20.u8);
	// stb r9,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r9.u8);
	// stb r9,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r9.u8);
	// stb r9,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r9.u8);
	// li r9,28
	ctx.r9.s64 = 28;
	// stb r29,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r29.u8);
	// li r29,162
	ctx.r29.s64 = 162;
	// stb r11,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r11.u8);
	// stb r11,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r11.u8);
	// stb r11,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r11.u8);
	// stb r9,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r9.u8);
	// li r9,133
	ctx.r9.s64 = 133;
	// stb r29,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r29.u8);
	// li r29,214
	ctx.r29.s64 = 214;
	// stb r11,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r11.u8);
	// stb r11,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r11.u8);
	// stb r11,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r9,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r9.u8);
	// li r9,197
	ctx.r9.s64 = 197;
	// ld r30,504(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + 504);
	// stb r5,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r5.u8);
	// stb r4,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r4.u8);
	// stb r29,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r9,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r9.u8);
	// stb r9,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// stb r5,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r5.u8);
	// li r5,411
	ctx.r5.s64 = 411;
	// stb r4,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r4.u8);
	// stb r4,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r21,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r21.u8);
	// stb r7,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r7.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r6,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r6.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r3,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r3.u8);
	// stb r10,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r10.u8);
	// stb r22,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r22.u8);
	// stb r8,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r8.u8);
	// stb r8,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r8.u8);
	// stb r19,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r19.u8);
	// stb r25,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r25.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r26,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r26.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r10,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r10.u8);
	// stb r10,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r10.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r27,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r27.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r24,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r24.u8);
	// stb r16,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r16.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r6,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r6.u8);
	// stb r8,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r8.u8);
	// stb r28,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r28.u8);
	// stb r10,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r10.u8);
	// stb r21,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r21.u8);
	// stb r10,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r10.u8);
	// stb r22,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r22.u8);
	// stb r8,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r8.u8);
	// stb r7,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r7.u8);
	// stb r10,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r10.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r9,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r9.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r11,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r11.u8);
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r31,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r31.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// li r11,109
	ctx.r11.s64 = 109;
	// stb r3,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r3.u8);
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// li r10,31
	ctx.r10.s64 = 31;
	// stb r31,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r11,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r7,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r7.u8);
	// li r7,64
	ctx.r7.s64 = 64;
	// stb r10,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r10.u8);
	// stb r8,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r8.u8);
	// stb r23,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r23.u8);
	// stb r11,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r11.u8);
	// stb r7,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r7.u8);
	// li r7,192
	ctx.r7.s64 = 192;
	// stb r11,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r31,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r31.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r16,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r16.u8);
	// stb r7,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r7.u8);
	// li r7,40
	ctx.r7.s64 = 40;
	// stb r11,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r10,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r10.u8);
	// stb r7,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r7.u8);
	// stb r31,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r31.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r8,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r8.u8);
	// stb r9,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r9.u8);
	// stb r11,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C87DC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,672
	ctx.r1.s64 = ctx.r1.s64 + 672;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C87F0"))) PPC_WEAK_FUNC(sub_824C87F0);
PPC_FUNC_IMPL(__imp__sub_824C87F0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C87F8;
	__savegprlr_14(ctx, base);
	// stwu r1,-816(r1)
	ea = -816 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,565
	ctx.r9.s64 = 565;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32000
	ctx.r4.s64 = ctx.r10.s64 + 32000;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C8834;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31976
	ctx.r4.s64 = ctx.r11.s64 + 31976;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,648
	ctx.r3.s64 = ctx.r1.s64 + 648;
	// bl 0x8243b750
	ctx.lr = 0x824C884C;
	sub_8243B750(ctx, base);
	// li r11,68
	ctx.r11.s64 = 68;
	// li r10,6
	ctx.r10.s64 = 6;
	// lwz r3,648(r1)
	ctx.r3.u64 = PPC_LOAD_U32(ctx.r1.u32 + 648);
	// li r5,72
	ctx.r5.s64 = 72;
	// lwz r28,652(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 652);
	// li r7,33
	ctx.r7.s64 = 33;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r19,7
	ctx.r19.s64 = 7;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,154
	ctx.r11.s64 = 154;
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r9,56
	ctx.r9.s64 = 56;
	// li r6,58
	ctx.r6.s64 = 58;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r8,25
	ctx.r8.s64 = 25;
	// stb r5,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r5.u8);
	// li r15,46
	ctx.r15.s64 = 46;
	// stb r19,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r19.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r4,27
	ctx.r4.s64 = 27;
	// li r26,38
	ctx.r26.s64 = 38;
	// stb r9,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r9.u8);
	// li r16,191
	ctx.r16.s64 = 191;
	// stb r6,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r6.u8);
	// li r20,77
	ctx.r20.s64 = 77;
	// stb r8,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r8.u8);
	// li r29,251
	ctx.r29.s64 = 251;
	// stb r15,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r15.u8);
	// li r17,40
	ctx.r17.s64 = 40;
	// stb r7,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r7.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r4,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r4.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// li r21,28
	ctx.r21.s64 = 28;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r26,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r26.u8);
	// stb r16,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r16.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r7,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r7.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r20,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r20.u8);
	// stb r29,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r29.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r17,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r17.u8);
	// stb r11,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r11.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r21,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r21.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r5,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r5.u8);
	// stb r9,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r6,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r6.u8);
	// li r27,130
	ctx.r27.s64 = 130;
	// stw r3,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r3.u32);
	// li r3,4
	ctx.r3.s64 = 4;
	// stw r28,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r28.u32);
	// li r22,36
	ctx.r22.s64 = 36;
	// li r6,29
	ctx.r6.s64 = 29;
	// stb r8,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r8.u8);
	// stb r9,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r9.u8);
	// li r9,3
	ctx.r9.s64 = 3;
	// li r14,185
	ctx.r14.s64 = 185;
	// stb r11,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r11.u8);
	// li r23,30
	ctx.r23.s64 = 30;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r28,24
	ctx.r28.s64 = 24;
	// stb r22,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r22.u8);
	// li r18,247
	ctx.r18.s64 = 247;
	// stb r3,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r3.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// li r9,83
	ctx.r9.s64 = 83;
	// li r25,226
	ctx.r25.s64 = 226;
	// stb r4,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r4.u8);
	// li r24,5
	ctx.r24.s64 = 5;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r9,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r9.u8);
	// li r9,248
	ctx.r9.s64 = 248;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r7,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r7.u8);
	// stb r9,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r9.u8);
	// li r9,55
	ctx.r9.s64 = 55;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r9,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r9.u8);
	// li r9,92
	ctx.r9.s64 = 92;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r19,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r19.u8);
	// stb r9,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r9.u8);
	// li r9,174
	ctx.r9.s64 = 174;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r27,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r27.u8);
	// stb r27,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r27.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// li r9,181
	ctx.r9.s64 = 181;
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r6,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r6.u8);
	// stb r14,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r14.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// li r9,179
	ctx.r9.s64 = 179;
	// stb r23,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r23.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r9,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r9.u8);
	// li r9,255
	ctx.r9.s64 = 255;
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r28,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r28.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// stb r8,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r8.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// stb r9,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r9.u8);
	// stb r9,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r9.u8);
	// stb r18,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r18.u8);
	// stb r25,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r25.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r24,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r24.u8);
	// stb r3,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r3.u8);
	// stb r10,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r10.u8);
	// li r25,86
	ctx.r25.s64 = 86;
	// stb r14,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r14.u8);
	// stb r14,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r14.u8);
	// li r14,8
	ctx.r14.s64 = 8;
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r9,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r9.u8);
	// stb r29,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r29.u8);
	// stb r25,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r25.u8);
	// li r25,12
	ctx.r25.s64 = 12;
	// stb r14,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r14.u8);
	// li r14,23
	ctx.r14.s64 = 23;
	// stb r10,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r10.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r25,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r25.u8);
	// li r25,54
	ctx.r25.s64 = 54;
	// stb r6,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r6.u8);
	// stb r11,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r11.u8);
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// stb r28,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r28.u8);
	// stb r25,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r25.u8);
	// li r25,14
	ctx.r25.s64 = 14;
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r4,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r4.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r25,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r25.u8);
	// li r25,15
	ctx.r25.s64 = 15;
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r11,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r11.u8);
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// stb r25,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r25.u8);
	// stb r10,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r10.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r6,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r6.u8);
	// stb r23,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r23.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r8,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r8.u8);
	// stb r15,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r15.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r5,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r5.u8);
	// stb r7,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r7.u8);
	// stb r4,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r4.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r26,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r26.u8);
	// stb r16,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r16.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r7,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r7.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r20,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r20.u8);
	// stb r29,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r29.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r17,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r17.u8);
	// stb r11,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r11.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r21,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r21.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r5,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r5.u8);
	// stb r14,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r14.u8);
	// stb r22,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r22.u8);
	// stb r10,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r10.u8);
	// li r14,181
	ctx.r14.s64 = 181;
	// std r30,656(r1)
	PPC_STORE_U64(ctx.r1.u32 + 656, ctx.r30.u64);
	// li r30,179
	ctx.r30.s64 = 179;
	// stb r11,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r11.u8);
	// stb r19,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r19.u8);
	// stb r10,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r10.u8);
	// stb r7,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r7.u8);
	// stb r14,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r14.u8);
	// li r14,184
	ctx.r14.s64 = 184;
	// stb r30,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r30.u8);
	// li r30,226
	ctx.r30.s64 = 226;
	// stb r27,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r27.u8);
	// stb r27,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r27.u8);
	// stb r10,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r10.u8);
	// stb r14,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r14.u8);
	// stb r14,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r14.u8);
	// li r14,21
	ctx.r14.s64 = 21;
	// stb r30,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r30.u8);
	// li r30,86
	ctx.r30.s64 = 86;
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r6,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r6.u8);
	// stb r14,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r23,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r23.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r14,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r14.u8);
	// li r14,9
	ctx.r14.s64 = 9;
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r11,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r11.u8);
	// stb r28,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r28.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r14,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r14.u8);
	// li r14,11
	ctx.r14.s64 = 11;
	// stb r11,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r11.u8);
	// stb r8,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r8.u8);
	// stb r10,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r10.u8);
	// stb r9,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r9.u8);
	// stb r14,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r14.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// stb r9,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r9.u8);
	// stb r18,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r18.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r24,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r24.u8);
	// stb r14,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r14.u8);
	// li r14,150
	ctx.r14.s64 = 150;
	// stb r3,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r3.u8);
	// stb r10,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r10.u8);
	// stb r9,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r9.u8);
	// stb r9,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r9.u8);
	// stb r29,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r29.u8);
	// stb r30,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r30.u8);
	// stb r10,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r10.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r6,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r6.u8);
	// stb r11,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r11.u8);
	// stb r11,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r11.u8);
	// stb r28,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r28.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r8,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r8.u8);
	// stb r10,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r10.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r3,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r3.u8);
	// stb r4,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r4.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r31,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r31.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r14,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r14.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r31,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r31.u8);
	// stb r11,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r11.u8);
	// stb r11,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r11.u8);
	// stb r25,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r25.u8);
	// stb r10,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r10.u8);
	// li r14,184
	ctx.r14.s64 = 184;
	// stb r19,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r19.u8);
	// li r19,147
	ctx.r19.s64 = 147;
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r6,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r6.u8);
	// stb r23,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r23.u8);
	// stb r14,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r14.u8);
	// li r14,8
	ctx.r14.s64 = 8;
	// stb r19,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r19.u8);
	// li r19,226
	ctx.r19.s64 = 226;
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r14,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r14.u8);
	// li r14,23
	ctx.r14.s64 = 23;
	// stb r19,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r19.u8);
	// li r19,150
	ctx.r19.s64 = 150;
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r8,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r8.u8);
	// stb r15,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r15.u8);
	// stb r14,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r14.u8);
	// li r14,154
	ctx.r14.s64 = 154;
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r31,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r31.u8);
	// stb r5,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r5.u8);
	// stb r7,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r7.u8);
	// stb r4,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r4.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r26,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r26.u8);
	// stb r16,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r16.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r7,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r7.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r20,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r20.u8);
	// stb r29,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r29.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r17,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r17.u8);
	// stb r11,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r11.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r21,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r21.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r5,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r5.u8);
	// stb r22,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r22.u8);
	// stb r10,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r10.u8);
	// stb r11,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r11.u8);
	// stb r10,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r10.u8);
	// stb r27,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r27.u8);
	// stb r27,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r27.u8);
	// stb r14,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r14.u8);
	// stb r8,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r8.u8);
	// stb r8,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r8.u8);
	// stb r10,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r10.u8);
	// stb r9,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r9.u8);
	// stb r9,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r9.u8);
	// stb r18,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r18.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r24,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r24.u8);
	// stb r3,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r3.u8);
	// stb r10,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r10.u8);
	// stb r9,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r9.u8);
	// stb r9,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r9.u8);
	// stb r18,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r18.u8);
	// stb r19,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r19.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r24,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r24.u8);
	// stb r3,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r3.u8);
	// stb r10,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r10.u8);
	// stb r9,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r9.u8);
	// stb r9,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r9.u8);
	// li r30,56
	ctx.r30.s64 = 56;
	// stb r14,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r14.u8);
	// stb r14,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r14.u8);
	// li r19,245
	ctx.r19.s64 = 245;
	// li r14,232
	ctx.r14.s64 = 232;
	// stb r26,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r26.u8);
	// stb r11,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r11.u8);
	// stb r28,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r28.u8);
	// stb r30,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r30.u8);
	// li r30,58
	ctx.r30.s64 = 58;
	// stb r19,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r19.u8);
	// li r19,239
	ctx.r19.s64 = 239;
	// stb r14,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r14.u8);
	// li r14,118
	ctx.r14.s64 = 118;
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r8,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r8.u8);
	// stb r30,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r30.u8);
	// li r30,6
	ctx.r30.s64 = 6;
	// stb r19,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r19.u8);
	// li r19,45
	ctx.r19.s64 = 45;
	// stb r14,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r15,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r15.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r30,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r30.u8);
	// li r30,56
	ctx.r30.s64 = 56;
	// stb r19,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r19.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r5,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r5.u8);
	// stb r7,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r7.u8);
	// stb r30,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r30.u8);
	// li r30,58
	ctx.r30.s64 = 58;
	// stb r4,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r4.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r30,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r30.u8);
	// li r30,9
	ctx.r30.s64 = 9;
	// stb r26,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r26.u8);
	// stb r16,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r16.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r7,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r7.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r20,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r20.u8);
	// stb r29,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r29.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r17,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r17.u8);
	// stb r11,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r11.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r10,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r10.u8);
	// stb r21,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r21.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r5,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r5.u8);
	// stb r8,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r8.u8);
	// stb r11,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r11.u8);
	// stb r22,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r22.u8);
	// stb r10,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r10.u8);
	// stb r11,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r11.u8);
	// stb r11,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r11.u8);
	// stb r28,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r28.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r30,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r30.u8);
	// stb r10,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r10.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r26,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r26.u8);
	// stb r11,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r11.u8);
	// stb r11,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r11.u8);
	// stb r14,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r14.u8);
	// stb r19,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r19.u8);
	// stb r10,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r10.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r19,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r19.u8);
	// stb r19,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r19.u8);
	// li r19,39
	ctx.r19.s64 = 39;
	// stb r27,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r27.u8);
	// stb r27,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r27.u8);
	// li r27,181
	ctx.r27.s64 = 181;
	// stb r10,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r10.u8);
	// stb r14,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r14.u8);
	// li r14,194
	ctx.r14.s64 = 194;
	// stb r19,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r19.u8);
	// li r19,232
	ctx.r19.s64 = 232;
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r27,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r27.u8);
	// li r27,183
	ctx.r27.s64 = 183;
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r14,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r14.u8);
	// li r14,39
	ctx.r14.s64 = 39;
	// stb r19,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r19.u8);
	// li r19,118
	ctx.r19.s64 = 118;
	// stb r25,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r25.u8);
	// stb r10,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r10.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r14,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r14.u8);
	// li r14,20
	ctx.r14.s64 = 20;
	// stb r19,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r19.u8);
	// li r19,37
	ctx.r19.s64 = 37;
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r25,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r25.u8);
	// stb r31,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r31.u8);
	// stb r14,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r14.u8);
	// li r14,31
	ctx.r14.s64 = 31;
	// stb r19,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r19.u8);
	// li r19,47
	ctx.r19.s64 = 47;
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r21,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r21.u8);
	// stb r14,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r14.u8);
	// li r14,202
	ctx.r14.s64 = 202;
	// stb r19,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r19.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r10,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r10.u8);
	// stb r14,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r22,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r22.u8);
	// stb r24,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r24.u8);
	// stb r11,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r11.u8);
	// stb r25,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r25.u8);
	// stb r14,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r14.u8);
	// li r14,201
	ctx.r14.s64 = 201;
	// stb r31,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r31.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r19,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r19.u8);
	// stb r14,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r14.u8);
	// li r14,225
	ctx.r14.s64 = 225;
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r19,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r19.u8);
	// stb r14,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r14.u8);
	// li r14,202
	ctx.r14.s64 = 202;
	// stb r11,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r11.u8);
	// stb r8,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r8.u8);
	// stb r10,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r10.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r14,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r14.u8);
	// li r14,7
	ctx.r14.s64 = 7;
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r6,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r6.u8);
	// stb r27,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r27.u8);
	// stb r23,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r23.u8);
	// stb r14,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r14,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r14.u8);
	// stb r11,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r11.u8);
	// stb r9,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r9.u8);
	// li r14,179
	ctx.r14.s64 = 179;
	// stb r9,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r9.u8);
	// stb r9,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r9.u8);
	// stb r9,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r9.u8);
	// li r9,86
	ctx.r9.s64 = 86;
	// stb r18,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r18.u8);
	// li r18,226
	ctx.r18.s64 = 226;
	// stb r28,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r28.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r11,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r11.u8);
	// stb r9,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r9.u8);
	// li r9,13
	ctx.r9.s64 = 13;
	// stb r14,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r14.u8);
	// stb r8,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r8.u8);
	// stb r10,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r10.u8);
	// stb r18,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r18.u8);
	// stb r9,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r9.u8);
	// li r9,178
	ctx.r9.s64 = 178;
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r24,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r24.u8);
	// stb r3,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r3.u8);
	// stb r10,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r10.u8);
	// stb r9,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r9.u8);
	// li r9,201
	ctx.r9.s64 = 201;
	// stb r29,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r29.u8);
	// stb r10,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r10.u8);
	// stb r31,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r9,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r9.u8);
	// li r9,187
	ctx.r9.s64 = 187;
	// stb r6,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r6.u8);
	// stb r27,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r27.u8);
	// stb r11,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r11.u8);
	// stb r11,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r11.u8);
	// stb r28,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r28.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r19,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r19.u8);
	// stb r10,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r10.u8);
	// stb r31,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r31.u8);
	// stb r31,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r31.u8);
	// stb r6,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r6.u8);
	// stb r9,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r9.u8);
	// stb r11,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r11.u8);
	// stb r11,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r11.u8);
	// stb r25,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r25.u8);
	// stb r10,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r10.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r31,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r31.u8);
	// stb r6,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r6.u8);
	// stb r27,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r27.u8);
	// stb r23,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r23.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r31,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r31.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r31,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r31.u8);
	// stb r8,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r8.u8);
	// stb r15,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r15.u8);
	// stb r31,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r31.u8);
	// stb r31,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r31.u8);
	// stb r5,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r5.u8);
	// stb r7,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r7.u8);
	// stb r4,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r4.u8);
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r31,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r31.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r26,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r26.u8);
	// stb r16,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r16.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r7,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r7.u8);
	// stb r31,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r31.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r20,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r20.u8);
	// stb r29,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r29.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// li r9,8
	ctx.r9.s64 = 8;
	// stb r11,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r11.u8);
	// stb r10,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r10.u8);
	// li r10,3
	ctx.r10.s64 = 3;
	// stb r11,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r11.u8);
	// stb r11,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// ld r30,656(r1)
	ctx.r30.u64 = PPC_LOAD_U64(ctx.r1.u32 + 656);
	// stb r9,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r9.u8);
	// li r9,23
	ctx.r9.s64 = 23;
	// stb r10,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r10.u8);
	// li r10,83
	ctx.r10.s64 = 83;
	// addi r28,r30,32
	ctx.r28.s64 = ctx.r30.s64 + 32;
	// stb r5,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r5.u8);
	// stb r11,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r11.u8);
	// li r11,203
	ctx.r11.s64 = 203;
	// stb r3,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r3.u8);
	// li r5,565
	ctx.r5.s64 = 565;
	// stb r9,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r9.u8);
	// li r9,248
	ctx.r9.s64 = 248;
	// stb r4,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r3,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r3.u8);
	// mr r3,r28
	ctx.r3.u64 = ctx.r28.u64;
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r31,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r31.u8);
	// stb r17,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r17.u8);
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r21,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r21.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r31.u8);
	// stb r22,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r22.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r31,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r31.u8);
	// stb r10,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r10.u8);
	// stb r9,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r9.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r31,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r31.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r7,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r7.u8);
	// stb r31,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r31.u8);
	// stb r31,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r31.u8);
	// stb r20,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r20.u8);
	// stb r29,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r29.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r19,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r19.u8);
	// stb r11,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r11.u8);
	// stb r10,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r10.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C9300;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r28,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r28.u32);
	// addi r1,r1,816
	ctx.r1.s64 = ctx.r1.s64 + 816;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C9310"))) PPC_WEAK_FUNC(sub_824C9310);
PPC_FUNC_IMPL(__imp__sub_824C9310) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C9318;
	__savegprlr_14(ctx, base);
	// stwu r1,-624(r1)
	ea = -624 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r29,r3
	ctx.r29.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r29,4
	ctx.r3.s64 = ctx.r29.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,369
	ctx.r9.s64 = 369;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32056
	ctx.r4.s64 = ctx.r10.s64 + 32056;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r29)
	PPC_STORE_U32(ctx.r29.u32 + 0, ctx.r11.u32);
	// stw r9,16(r29)
	PPC_STORE_U32(ctx.r29.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C9354;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31884
	ctx.r4.s64 = ctx.r11.s64 + 31884;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,456
	ctx.r3.s64 = ctx.r1.s64 + 456;
	// bl 0x8243b750
	ctx.lr = 0x824C936C;
	sub_8243B750(ctx, base);
	// li r11,144
	ctx.r11.s64 = 144;
	// li r10,1
	ctx.r10.s64 = 1;
	// lwz r3,456(r1)
	ctx.r3.u64 = PPC_LOAD_U32(ctx.r1.u32 + 456);
	// li r23,7
	ctx.r23.s64 = 7;
	// lwz r28,460(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 460);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// li r6,247
	ctx.r6.s64 = 247;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r30,5
	ctx.r30.s64 = 5;
	// stb r23,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r23.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// li r14,129
	ctx.r14.s64 = 129;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r11,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r11.u8);
	// li r11,14
	ctx.r11.s64 = 14;
	// li r19,27
	ctx.r19.s64 = 27;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r20,130
	ctx.r20.s64 = 130;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// li r22,154
	ctx.r22.s64 = 154;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// li r27,226
	ctx.r27.s64 = 226;
	// stb r14,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r14.u8);
	// stb r11,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r11.u8);
	// li r11,117
	ctx.r11.s64 = 117;
	// li r5,150
	ctx.r5.s64 = 150;
	// stb r19,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r19.u8);
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// stb r9,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r9.u8);
	// stb r23,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r23.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r20,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r20.u8);
	// stb r22,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r22.u8);
	// stb r7,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r7.u8);
	// stb r7,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r7.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r6,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r6.u8);
	// stb r27,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r27.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r30,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r30.u8);
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r11,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r11.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// stb r6,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r6.u8);
	// stb r5,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r5.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r30,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r30.u8);
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// stb r11,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r11.u8);
	// stw r3,24(r29)
	PPC_STORE_U32(ctx.r29.u32 + 24, ctx.r3.u32);
	// li r4,245
	ctx.r4.s64 = 245;
	// li r3,232
	ctx.r3.s64 = 232;
	// stw r28,28(r29)
	PPC_STORE_U32(ctx.r29.u32 + 28, ctx.r28.u32);
	// li r21,46
	ctx.r21.s64 = 46;
	// stb r11,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r11.u8);
	// li r26,24
	ctx.r26.s64 = 24;
	// stb r9,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r9.u8);
	// li r18,9
	ctx.r18.s64 = 9;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r4,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r4.u8);
	// li r4,239
	ctx.r4.s64 = 239;
	// stb r3,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r3.u8);
	// li r3,118
	ctx.r3.s64 = 118;
	// stb r21,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r21.u8);
	// li r21,127
	ctx.r21.s64 = 127;
	// stb r26,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r26.u8);
	// li r26,86
	ctx.r26.s64 = 86;
	// li r28,29
	ctx.r28.s64 = 29;
	// stb r18,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r18.u8);
	// stb r4,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r4.u8);
	// li r4,38
	ctx.r4.s64 = 38;
	// stb r3,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r3.u8);
	// li r17,185
	ctx.r17.s64 = 185;
	// stb r21,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r21.u8);
	// li r3,15
	ctx.r3.s64 = 15;
	// li r24,174
	ctx.r24.s64 = 174;
	// stb r22,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r22.u8);
	// li r25,251
	ctx.r25.s64 = 251;
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// li r21,11
	ctx.r21.s64 = 11;
	// stb r4,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r4.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r4,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r4.u8);
	// stb r9,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r9.u8);
	// stb r9,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r9.u8);
	// stb r3,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r3.u8);
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r28,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r28.u8);
	// stb r17,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r17.u8);
	// stb r24,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r24.u8);
	// stb r7,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r7.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r11,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r11.u8);
	// stb r6,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r6.u8);
	// stb r27,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r27.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r30,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r30.u8);
	// stb r8,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r8.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// stb r11,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r11.u8);
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// stb r25,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r25.u8);
	// stb r26,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r26.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r26,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r26.u8);
	// stb r7,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r7.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// stb r11,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r11.u8);
	// stb r6,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r6.u8);
	// stb r27,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r27.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r30,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r30.u8);
	// stb r8,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r8.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// stb r6,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r6.u8);
	// stb r5,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r5.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r21,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r21.u8);
	// stb r8,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r8.u8);
	// stb r19,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r19.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r14,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r17,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r17.u8);
	// li r17,189
	ctx.r17.s64 = 189;
	// std r29,464(r1)
	PPC_STORE_U64(ctx.r1.u32 + 464, ctx.r29.u64);
	// li r15,99
	ctx.r15.s64 = 99;
	// li r16,6
	ctx.r16.s64 = 6;
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// li r29,144
	ctx.r29.s64 = 144;
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r14,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r14.u8);
	// li r14,54
	ctx.r14.s64 = 54;
	// stb r17,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r17.u8);
	// li r17,41
	ctx.r17.s64 = 41;
	// stb r15,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r15.u8);
	// stb r20,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r20.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r14,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r14.u8);
	// li r14,14
	ctx.r14.s64 = 14;
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r9,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r9.u8);
	// stb r9,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r9.u8);
	// stb r16,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r16.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r29,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r29.u8);
	// stb r3,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r3.u8);
	// stb r10,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r10.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r28,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r28.u8);
	// stb r24,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r24.u8);
	// stb r7,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r7.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// stb r11,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r11.u8);
	// stb r6,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r6.u8);
	// stb r27,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r27.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r30,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r30.u8);
	// stb r8,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r8.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// stb r25,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r25.u8);
	// stb r26,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r26.u8);
	// stb r10,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r10.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r28,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r28.u8);
	// stb r9,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r9.u8);
	// stb r23,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r23.u8);
	// stb r10,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r10.u8);
	// stb r17,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r17.u8);
	// stb r7,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r7.u8);
	// stb r10,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r10.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r18,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r18.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r21,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r21.u8);
	// stb r8,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r8.u8);
	// stb r19,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r19.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r5,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r5.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r9,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r9.u8);
	// stb r9,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r9.u8);
	// stb r23,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r23.u8);
	// stb r10,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r10.u8);
	// stb r14,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r14.u8);
	// stb r20,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r20.u8);
	// stb r22,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r22.u8);
	// stb r7,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r7.u8);
	// stb r7,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r7.u8);
	// stb r22,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r22.u8);
	// li r22,232
	ctx.r22.s64 = 232;
	// li r14,245
	ctx.r14.s64 = 245;
	// stb r4,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r4.u8);
	// stb r4,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r4.u8);
	// li r4,184
	ctx.r4.s64 = 184;
	// stb r10,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r10.u8);
	// stb r11,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r11.u8);
	// stb r22,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r22.u8);
	// li r22,118
	ctx.r22.s64 = 118;
	// stb r14,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r11,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r11.u8);
	// stb r6,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r6.u8);
	// stb r27,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r27.u8);
	// stb r22,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r22.u8);
	// li r22,46
	ctx.r22.s64 = 46;
	// stb r14,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r14.u8);
	// li r14,24
	ctx.r14.s64 = 24;
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r30,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r30.u8);
	// stb r8,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r8.u8);
	// stb r22,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r22.u8);
	// li r22,127
	ctx.r22.s64 = 127;
	// stb r10,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r10.u8);
	// stb r11,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r11.u8);
	// stb r11,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r11.u8);
	// stb r6,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r6.u8);
	// stb r5,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r5.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r30,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r30.u8);
	// stb r8,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r8.u8);
	// stb r10,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r10.u8);
	// stb r11,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r11.u8);
	// stb r11,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r11.u8);
	// stb r9,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r9.u8);
	// stb r14,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r14.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r18,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r18.u8);
	// stb r10,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r10.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r9,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r9.u8);
	// stb r9,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r9.u8);
	// stb r3,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r3.u8);
	// stb r10,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r10.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r28,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r28.u8);
	// stb r4,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r4.u8);
	// stb r24,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r24.u8);
	// stb r7,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r7.u8);
	// stb r10,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r10.u8);
	// stb r11,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r11.u8);
	// stb r11,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r11.u8);
	// stb r6,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r6.u8);
	// stb r27,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r27.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r30,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r30.u8);
	// stb r8,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r8.u8);
	// stb r10,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r10.u8);
	// stb r11,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r11.u8);
	// stb r11,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r11.u8);
	// stb r25,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r25.u8);
	// stb r26,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r26.u8);
	// stb r7,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r7.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r26,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r26.u8);
	// stb r22,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r22.u8);
	// stb r7,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r7.u8);
	// stb r10,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r10.u8);
	// stb r11,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r11.u8);
	// stb r11,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r11.u8);
	// stb r6,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r6.u8);
	// stb r27,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r27.u8);
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r30,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r30.u8);
	// stb r8,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r8.u8);
	// stb r10,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r10.u8);
	// stb r11,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r11.u8);
	// stb r19,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r19.u8);
	// li r19,28
	ctx.r19.s64 = 28;
	// stb r5,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r5.u8);
	// li r5,188
	ctx.r5.s64 = 188;
	// stb r17,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r17.u8);
	// li r22,47
	ctx.r22.s64 = 47;
	// li r18,198
	ctx.r18.s64 = 198;
	// ld r29,464(r1)
	ctx.r29.u64 = PPC_LOAD_U64(ctx.r1.u32 + 464);
	// li r17,225
	ctx.r17.s64 = 225;
	// stb r20,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r20.u8);
	// stb r19,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r19.u8);
	// li r19,32
	ctx.r19.s64 = 32;
	// stb r4,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r4.u8);
	// addi r20,r29,32
	ctx.r20.s64 = ctx.r29.s64 + 32;
	// stb r5,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r5.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r11.u8);
	// li r5,369
	ctx.r5.s64 = 369;
	// stb r6,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r6.u8);
	// stb r19,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r19.u8);
	// li r19,36
	ctx.r19.s64 = 36;
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r21,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r21.u8);
	// stb r8,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r8.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r19,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r19.u8);
	// li r19,197
	ctx.r19.s64 = 197;
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r31.u8);
	// stb r15,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r15.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r9,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r9.u8);
	// stb r9,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r9.u8);
	// stb r16,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r16.u8);
	// stb r10,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r10.u8);
	// stb r3,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r3.u8);
	// stb r10,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r10.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r28,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r28.u8);
	// stb r24,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r24.u8);
	// stb r7,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r7.u8);
	// stb r10,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r10.u8);
	// stb r11,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r11.u8);
	// stb r11,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r11.u8);
	// stb r6,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r6.u8);
	// stb r27,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r27.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r30,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r30.u8);
	// stb r8,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r8.u8);
	// stb r10,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r10.u8);
	// stb r11,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r11.u8);
	// stb r11,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r11.u8);
	// stb r25,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r25.u8);
	// stb r26,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r26.u8);
	// stb r10,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r10.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r28,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r28.u8);
	// stb r9,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r9.u8);
	// stb r3,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r3.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r22,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r22.u8);
	// stb r18,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r18.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r10,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r10.u8);
	// stb r30,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r30.u8);
	// stb r9,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r9.u8);
	// stb r3,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r3.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r22,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r22.u8);
	// stb r19,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r19.u8);
	// stb r17,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r17.u8);
	// stb r23,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r23.u8);
	// li r23,110
	ctx.r23.s64 = 110;
	// stb r11,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r11.u8);
	// stb r11,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r11.u8);
	// stb r11,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r11.u8);
	// stb r11,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r11.u8);
	// li r11,186
	ctx.r11.s64 = 186;
	// stb r23,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r23.u8);
	// li r23,177
	ctx.r23.s64 = 177;
	// stb r3,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r3.u8);
	// mr r3,r20
	ctx.r3.u64 = ctx.r20.u64;
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r11,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r23,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r23.u8);
	// li r23,187
	ctx.r23.s64 = 187;
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r22,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r22.u8);
	// stb r18,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r18.u8);
	// stb r9,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r9.u8);
	// stb r23,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r23.u8);
	// li r23,183
	ctx.r23.s64 = 183;
	// stb r10,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r10.u8);
	// stb r31,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r31.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r22,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r22.u8);
	// stb r19,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r19.u8);
	// stb r10,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r10.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r28,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r28.u8);
	// stb r9,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r9.u8);
	// stb r10,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r10.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r28,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r28.u8);
	// stb r23,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r23.u8);
	// stb r24,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r24.u8);
	// stb r7,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r7.u8);
	// stb r10,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r10.u8);
	// stb r6,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r6.u8);
	// stb r27,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r27.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r30,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r30.u8);
	// stb r8,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r8.u8);
	// stb r10,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r10.u8);
	// stb r25,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r25.u8);
	// stb r26,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r26.u8);
	// stb r10,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r10.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r28,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r28.u8);
	// stb r9,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r9.u8);
	// stb r8,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r8.u8);
	// stb r21,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r21.u8);
	// stb r11,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C9A5C;
	sub_82B06418(ctx, base);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stw r20,20(r29)
	PPC_STORE_U32(ctx.r29.u32 + 20, ctx.r20.u32);
	// addi r1,r1,624
	ctx.r1.s64 = ctx.r1.s64 + 624;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C9A70"))) PPC_WEAK_FUNC(sub_824C9A70);
PPC_FUNC_IMPL(__imp__sub_824C9A70) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e34
	ctx.lr = 0x824C9A78;
	__savegprlr_15(ctx, base);
	// stwu r1,-480(r1)
	ea = -480 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,234
	ctx.r9.s64 = 234;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32120
	ctx.r4.s64 = ctx.r10.s64 + 32120;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C9AB4;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,32112
	ctx.r4.s64 = ctx.r11.s64 + 32112;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,320
	ctx.r3.s64 = ctx.r1.s64 + 320;
	// bl 0x8243b750
	ctx.lr = 0x824C9ACC;
	sub_8243B750(ctx, base);
	// li r11,79
	ctx.r11.s64 = 79;
	// li r9,22
	ctx.r9.s64 = 22;
	// lwz r8,320(r1)
	ctx.r8.u64 = PPC_LOAD_U32(ctx.r1.u32 + 320);
	// li r5,27
	ctx.r5.s64 = 27;
	// lwz r4,324(r1)
	ctx.r4.u64 = PPC_LOAD_U32(ctx.r1.u32 + 324);
	// li r15,251
	ctx.r15.s64 = 251;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r6,28
	ctx.r6.s64 = 28;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// stb r11,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r11.u8);
	// li r11,43
	ctx.r11.s64 = 43;
	// li r22,32
	ctx.r22.s64 = 32;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// li r23,39
	ctx.r23.s64 = 39;
	// stb r5,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r5.u8);
	// li r27,7
	ctx.r27.s64 = 7;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r16,155
	ctx.r16.s64 = 155;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r11,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// li r17,130
	ctx.r17.s64 = 130;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// li r18,119
	ctx.r18.s64 = 119;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r24,42
	ctx.r24.s64 = 42;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r11,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r11.u8);
	// li r11,77
	ctx.r11.s64 = 77;
	// li r3,35
	ctx.r3.s64 = 35;
	// stb r15,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r15.u8);
	// li r25,163
	ctx.r25.s64 = 163;
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// li r19,24
	ctx.r19.s64 = 24;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// li r11,17
	ctx.r11.s64 = 17;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r9,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r9.u8);
	// stb r6,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r6.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r22,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r22.u8);
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r23,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r23.u8);
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r27,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r27.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r16,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r16.u8);
	// stb r17,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r17.u8);
	// stb r18,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r18.u8);
	// stb r24,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r24.u8);
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r3,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r3.u8);
	// stb r25,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r25.u8);
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// stb r5,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r5.u8);
	// li r5,218
	ctx.r5.s64 = 218;
	// stw r8,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r8.u32);
	// li r8,199
	ctx.r8.s64 = 199;
	// stw r4,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r4.u32);
	// li r11,255
	ctx.r11.s64 = 255;
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r19,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r19.u8);
	// li r4,250
	ctx.r4.s64 = 250;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r5,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r5.u8);
	// li r5,18
	ctx.r5.s64 = 18;
	// stb r8,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r8.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// li r26,21
	ctx.r26.s64 = 21;
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r28,247
	ctx.r28.s64 = 247;
	// stb r7,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r7.u8);
	// li r20,11
	ctx.r20.s64 = 11;
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r5,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r5.u8);
	// li r5,254
	ctx.r5.s64 = 254;
	// li r29,5
	ctx.r29.s64 = 5;
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// stb r26,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r26.u8);
	// stb r28,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r28.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r5,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r5.u8);
	// li r5,12
	ctx.r5.s64 = 12;
	// stb r20,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r20.u8);
	// stb r8,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r8.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r5,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r5.u8);
	// li r5,6
	ctx.r5.s64 = 6;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r29,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r29.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r5,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r5.u8);
	// li r5,123
	ctx.r5.s64 = 123;
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r9.u8);
	// stb r9,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r9.u8);
	// stb r5,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r5.u8);
	// li r5,14
	ctx.r5.s64 = 14;
	// stb r7,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r7.u8);
	// stb r22,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r22.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r5,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r5.u8);
	// li r5,121
	ctx.r5.s64 = 121;
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r8,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r8.u8);
	// stb r6,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r6.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// stb r5,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r5.u8);
	// li r5,40
	ctx.r5.s64 = 40;
	// stb r11,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r11.u8);
	// stb r4,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r4.u8);
	// stb r9,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r9.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r5,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r5.u8);
	// li r5,36
	ctx.r5.s64 = 36;
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r6,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r6.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r5,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r5.u8);
	// li r5,3
	ctx.r5.s64 = 3;
	// stb r4,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r4.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r5,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r5.u8);
	// li r5,148
	ctx.r5.s64 = 148;
	// stb r3,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r3.u8);
	// stb r9,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r9.u8);
	// stb r7,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r7.u8);
	// stb r5,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r5.u8);
	// li r5,16
	ctx.r5.s64 = 16;
	// stb r4,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r4.u8);
	// li r21,62
	ctx.r21.s64 = 62;
	// stb r4,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r4.u8);
	// li r4,171
	ctx.r4.s64 = 171;
	// stb r10,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r10.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r5,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r5.u8);
	// li r5,116
	ctx.r5.s64 = 116;
	// stb r21,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r21.u8);
	// li r21,128
	ctx.r21.s64 = 128;
	// stb r3,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r3.u8);
	// stb r25,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r25.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r5,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r5.u8);
	// li r5,30
	ctx.r5.s64 = 30;
	// stb r21,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r21.u8);
	// li r21,15
	ctx.r21.s64 = 15;
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r6,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r6.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// stb r5,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r5.u8);
	// stb r5,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r5.u8);
	// stb r5,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r5.u8);
	// stb r5,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r5.u8);
	// li r5,80
	ctx.r5.s64 = 80;
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r5,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r5.u8);
	// stb r5,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r5.u8);
	// stb r5,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r5.u8);
	// stb r5,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r5.u8);
	// stb r5,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r5.u8);
	// li r5,34
	ctx.r5.s64 = 34;
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r9,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r9.u8);
	// stb r5,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r5.u8);
	// li r5,252
	ctx.r5.s64 = 252;
	// stb r21,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r21.u8);
	// stb r10,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r10.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r5,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r5.u8);
	// li r5,226
	ctx.r5.s64 = 226;
	// stb r3,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r3.u8);
	// stb r25,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r25.u8);
	// stb r24,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r24.u8);
	// stb r27,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r27.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r16,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r16.u8);
	// stb r18,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r18.u8);
	// stb r24,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r24.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r26,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r26.u8);
	// stb r9,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r9.u8);
	// stb r6,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r6.u8);
	// stb r11,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r11.u8);
	// stb r11,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r11.u8);
	// stb r4,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r4.u8);
	// stb r10,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r10.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r26,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r26.u8);
	// stb r9,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r9.u8);
	// stb r21,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r21.u8);
	// stb r10,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r10.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r7,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r7.u8);
	// stb r10,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r10.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r11,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r11.u8);
	// stb r28,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r28.u8);
	// stb r5,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r5.u8);
	// stb r11,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r11.u8);
	// li r4,86
	ctx.r4.s64 = 86;
	// stb r11,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r11.u8);
	// stb r11,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r11.u8);
	// stb r11,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r11.u8);
	// stb r11,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r11.u8);
	// stb r11,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r11.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r11,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r11.u8);
	// li r11,245
	ctx.r11.s64 = 245;
	// stb r4,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r4.u8);
	// li r4,231
	ctx.r4.s64 = 231;
	// stb r7,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r7.u8);
	// stb r7,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r7.u8);
	// li r7,150
	ctx.r7.s64 = 150;
	// stb r10,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r10.u8);
	// stb r11,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r11.u8);
	// li r11,239
	ctx.r11.s64 = 239;
	// stb r4,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r4.u8);
	// li r4,154
	ctx.r4.s64 = 154;
	// stb r10,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r10.u8);
	// stb r10,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r10.u8);
	// stb r7,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r7.u8);
	// li r7,194
	ctx.r7.s64 = 194;
	// stb r11,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r11.u8);
	// li r11,38
	ctx.r11.s64 = 38;
	// stb r10,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r10.u8);
	// stb r9,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r9.u8);
	// stb r9,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r9.u8);
	// stb r9,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r9.u8);
	// li r9,20
	ctx.r9.s64 = 20;
	// stb r11,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r11.u8);
	// li r11,131
	ctx.r11.s64 = 131;
	// stb r10,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r10.u8);
	// stb r10,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r10.u8);
	// li r10,31
	ctx.r10.s64 = 31;
	// stb r29,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r29.u8);
	// stb r4,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r11.u8);
	// li r11,45
	ctx.r11.s64 = 45;
	// stb r5,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r5.u8);
	// li r5,234
	ctx.r5.s64 = 234;
	// stb r29,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r29.u8);
	// stb r29,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r8,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r8.u8);
	// stb r15,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r15.u8);
	// stb r27,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r27.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r17,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r17.u8);
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r8,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r8.u8);
	// stb r28,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r28.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r8,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r8.u8);
	// stb r19,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r19.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r27,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r27.u8);
	// stb r6,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r6.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r22,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r22.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r11,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r11.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r3,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r3.u8);
	// stb r7,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r7.u8);
	// stb r23,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r23.u8);
	// stb r9,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r9.u8);
	// stb r11,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r11.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r10,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r10.u8);
	// stb r11,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r11.u8);
	// stb r23,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r23.u8);
	// stb r8,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r8.u8);
	// stb r20,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r20.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r11,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824C9F9C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,480
	ctx.r1.s64 = ctx.r1.s64 + 480;
	// b 0x82e28e84
	__restgprlr_15(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824C9FB0"))) PPC_WEAK_FUNC(sub_824C9FB0);
PPC_FUNC_IMPL(__imp__sub_824C9FB0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824C9FB8;
	__savegprlr_14(ctx, base);
	// stwu r1,-1200(r1)
	ea = -1200 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r26,r3
	ctx.r26.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r26,4
	ctx.r3.s64 = ctx.r26.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,943
	ctx.r9.s64 = 943;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32160
	ctx.r4.s64 = ctx.r10.s64 + 32160;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r26)
	PPC_STORE_U32(ctx.r26.u32 + 0, ctx.r11.u32);
	// stw r9,16(r26)
	PPC_STORE_U32(ctx.r26.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824C9FF4;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,1024
	ctx.r3.s64 = ctx.r1.s64 + 1024;
	// bl 0x8243b750
	ctx.lr = 0x824CA00C;
	sub_8243B750(ctx, base);
	// li r11,72
	ctx.r11.s64 = 72;
	// li r9,133
	ctx.r9.s64 = 133;
	// lwz r30,1024(r1)
	ctx.r30.u64 = PPC_LOAD_U32(ctx.r1.u32 + 1024);
	// li r22,33
	ctx.r22.s64 = 33;
	// lwz r29,1028(r1)
	ctx.r29.u64 = PPC_LOAD_U32(ctx.r1.u32 + 1028);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,25
	ctx.r8.s64 = 25;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r23,46
	ctx.r23.s64 = 46;
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,40
	ctx.r11.s64 = 40;
	// stb r9,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r9.u8);
	// li r9,77
	ctx.r9.s64 = 77;
	// li r27,27
	ctx.r27.s64 = 27;
	// stb r22,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r22.u8);
	// li r24,251
	ctx.r24.s64 = 251;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r15,32
	ctx.r15.s64 = 32;
	// stb r23,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r23.u8);
	// stb r11,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r11.u8);
	// li r28,7
	ctx.r28.s64 = 7;
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// li r11,189
	ctx.r11.s64 = 189;
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r21,130
	ctx.r21.s64 = 130;
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r27,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r27.u8);
	// li r4,154
	ctx.r4.s64 = 154;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r10,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r10.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r22,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r22.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r24,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r24.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r15,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r15.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r22,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r22.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r28,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r28.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r21,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r21.u8);
	// stb r4,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r4.u8);
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// stb r10,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r10.u8);
	// stb r11,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r11.u8);
	// stb r11,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r11.u8);
	// stw r29,28(r26)
	PPC_STORE_U32(ctx.r26.u32 + 28, ctx.r29.u32);
	// li r29,24
	ctx.r29.s64 = 24;
	// stw r30,24(r26)
	PPC_STORE_U32(ctx.r26.u32 + 24, ctx.r30.u32);
	// li r30,245
	ctx.r30.s64 = 245;
	// stb r4,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r4.u8);
	// li r6,247
	ctx.r6.s64 = 247;
	// li r5,5
	ctx.r5.s64 = 5;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// li r7,4
	ctx.r7.s64 = 4;
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r29,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r29.u8);
	// li r29,9
	ctx.r29.s64 = 9;
	// stb r30,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r30.u8);
	// li r30,239
	ctx.r30.s64 = 239;
	// li r3,226
	ctx.r3.s64 = 226;
	// stb r6,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r6.u8);
	// li r20,150
	ctx.r20.s64 = 150;
	// stb r5,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r5.u8);
	// li r4,232
	ctx.r4.s64 = 232;
	// stb r7,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r7.u8);
	// stb r29,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r29.u8);
	// li r29,118
	ctx.r29.s64 = 118;
	// stb r30,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r30.u8);
	// li r30,38
	ctx.r30.s64 = 38;
	// li r25,29
	ctx.r25.s64 = 29;
	// stb r3,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r3.u8);
	// li r19,174
	ctx.r19.s64 = 174;
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// li r18,127
	ctx.r18.s64 = 127;
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// stb r29,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r29.u8);
	// li r29,185
	ctx.r29.s64 = 185;
	// stb r30,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r30.u8);
	// stb r30,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r30.u8);
	// li r30,15
	ctx.r30.s64 = 15;
	// stb r6,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r6.u8);
	// stb r20,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r20.u8);
	// stb r29,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r29.u8);
	// li r29,86
	ctx.r29.s64 = 86;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r5,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r5.u8);
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// stb r10,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r10.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r9,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r9.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r4,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r4.u8);
	// stb r9,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r9.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// stb r30,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r30.u8);
	// stb r10,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r10.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r25,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r25.u8);
	// stb r19,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r19.u8);
	// stb r8,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r8.u8);
	// stb r10,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r10.u8);
	// stb r11,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r11.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r6,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r6.u8);
	// stb r3,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r3.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r5,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r5.u8);
	// stb r7,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r7.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// stb r11,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r11.u8);
	// stb r11,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r11.u8);
	// stb r24,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r24.u8);
	// stb r29,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r29.u8);
	// stb r8,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r8.u8);
	// stb r23,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r23.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r29,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r29.u8);
	// stb r18,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r18.u8);
	// stb r8,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r8.u8);
	// stb r10,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r10.u8);
	// li r16,11
	ctx.r16.s64 = 11;
	// stb r11,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r11.u8);
	// li r17,99
	ctx.r17.s64 = 99;
	// stb r11,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r11.u8);
	// li r14,184
	ctx.r14.s64 = 184;
	// stb r6,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r6.u8);
	// stb r3,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r3.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r5,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r5.u8);
	// stb r7,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r7.u8);
	// stb r10,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r10.u8);
	// stb r11,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r11.u8);
	// stb r11,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r11.u8);
	// stb r6,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r6.u8);
	// stb r20,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r20.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r16,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r16.u8);
	// stb r7,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r7.u8);
	// stb r27,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r27.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r17,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r17.u8);
	// stb r21,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r21.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r9,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r9.u8);
	// stb r9,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r9.u8);
	// stb r30,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r30.u8);
	// stb r10,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r10.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r25,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r25.u8);
	// stb r14,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r14.u8);
	// stb r19,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r19.u8);
	// stb r8,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r8.u8);
	// stb r10,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r10.u8);
	// stb r11,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r11.u8);
	// stb r11,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r11.u8);
	// stb r6,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r6.u8);
	// stb r3,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r3.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r5,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r5.u8);
	// stb r7,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r7.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// stb r11,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r11.u8);
	// stb r11,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r11.u8);
	// stb r24,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r24.u8);
	// stb r29,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r29.u8);
	// stb r8,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r8.u8);
	// stb r23,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r23.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r29,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r29.u8);
	// stb r18,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r18.u8);
	// stb r8,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r8.u8);
	// stb r10,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r10.u8);
	// stb r11,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r11.u8);
	// stb r11,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r11.u8);
	// stb r6,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r6.u8);
	// stb r3,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r3.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r5,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r5.u8);
	// stb r7,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r7.u8);
	// stb r10,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r10.u8);
	// stb r11,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r11.u8);
	// stb r11,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r11.u8);
	// stb r6,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r6.u8);
	// stb r20,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r20.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r16,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r16.u8);
	// stb r7,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r7.u8);
	// stb r27,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r27.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r17,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r17.u8);
	// stb r21,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r21.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// li r21,6
	ctx.r21.s64 = 6;
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r9,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r9.u8);
	// stb r9,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r9.u8);
	// stb r21,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r21.u8);
	// li r21,243
	ctx.r21.s64 = 243;
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r30,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r30.u8);
	// stb r10,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r10.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r21,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r21.u8);
	// li r21,185
	ctx.r21.s64 = 185;
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r25,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r25.u8);
	// stb r19,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r19.u8);
	// stb r8,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r8.u8);
	// stb r21,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r21.u8);
	// li r21,189
	ctx.r21.s64 = 189;
	// stb r10,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r10.u8);
	// stb r11,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r11.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r6,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r6.u8);
	// stb r21,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r21.u8);
	// li r21,188
	ctx.r21.s64 = 188;
	// stb r3,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r3.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r5,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r5.u8);
	// stb r7,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r7.u8);
	// stb r21,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r21.u8);
	// li r21,183
	ctx.r21.s64 = 183;
	// stb r10,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r10.u8);
	// stb r11,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r11.u8);
	// stb r11,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r11.u8);
	// stb r24,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r24.u8);
	// stb r29,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r29.u8);
	// stb r10,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r10.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r25,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r25.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r30,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r30.u8);
	// stb r10,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r10.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r25,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r25.u8);
	// stb r14,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r14.u8);
	// stb r19,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r19.u8);
	// stb r8,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r8.u8);
	// stb r10,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r10.u8);
	// stb r11,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r11.u8);
	// stb r11,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r11.u8);
	// stb r6,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r6.u8);
	// stb r3,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r3.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r5,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r5.u8);
	// stb r7,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r7.u8);
	// stb r10,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r10.u8);
	// stb r11,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r11.u8);
	// stb r11,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r11.u8);
	// stb r24,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r24.u8);
	// stb r29,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r29.u8);
	// stb r10,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r10.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r25,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r25.u8);
	// stb r9,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r9.u8);
	// stb r30,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r30.u8);
	// stb r10,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r10.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r25,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r25.u8);
	// stb r21,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r21.u8);
	// stb r19,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r19.u8);
	// stb r8,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r8.u8);
	// stb r10,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r10.u8);
	// stb r11,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r11.u8);
	// stb r11,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r11.u8);
	// stb r6,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r6.u8);
	// stb r3,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r3.u8);
	// stb r22,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r22.u8);
	// li r22,68
	ctx.r22.s64 = 68;
	// li r21,186
	ctx.r21.s64 = 186;
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// li r14,47
	ctx.r14.s64 = 47;
	// stb r5,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r5.u8);
	// li r17,194
	ctx.r17.s64 = 194;
	// stb r7,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r7.u8);
	// stb r10,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r10.u8);
	// stb r22,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r22.u8);
	// li r22,67
	ctx.r22.s64 = 67;
	// stb r21,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r21.u8);
	// li r21,28
	ctx.r21.s64 = 28;
	// stb r11,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r11.u8);
	// stb r11,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r11.u8);
	// stb r24,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r24.u8);
	// stb r22,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r22.u8);
	// li r22,250
	ctx.r22.s64 = 250;
	// stb r29,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r29.u8);
	// stb r10,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r10.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r22,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r22.u8);
	// li r22,242
	ctx.r22.s64 = 242;
	// stb r25,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r25.u8);
	// stb r9,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r9.u8);
	// stb r30,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r30.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r22,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r22.u8);
	// li r22,82
	ctx.r22.s64 = 82;
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r14,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r14.u8);
	// stb r17,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r17.u8);
	// stb r22,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r22.u8);
	// li r22,57
	ctx.r22.s64 = 57;
	// stb r21,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r21.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r9,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r9.u8);
	// stb r22,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r22.u8);
	// li r22,217
	ctx.r22.s64 = 217;
	// stb r28,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r28.u8);
	// stb r10,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r10.u8);
	// stb r21,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r21.u8);
	// stb r11,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r11.u8);
	// stb r22,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r22.u8);
	// li r22,42
	ctx.r22.s64 = 42;
	// stb r11,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r11.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r22,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r22.u8);
	// li r22,81
	ctx.r22.s64 = 81;
	// stb r14,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r14.u8);
	// stb r17,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r17.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r22,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r22.u8);
	// li r22,69
	ctx.r22.s64 = 69;
	// stb r9,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r9.u8);
	// stb r8,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r8.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r22,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r22.u8);
	// li r22,124
	ctx.r22.s64 = 124;
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r14,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r14.u8);
	// stb r17,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r17.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r16,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r16.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r27,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r27.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r22,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r22.u8);
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// li r22,17
	ctx.r22.s64 = 17;
	// stb r25,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r25.u8);
	// li r14,42
	ctx.r14.s64 = 42;
	// stb r9,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r9.u8);
	// li r25,136
	ctx.r25.s64 = 136;
	// stb r21,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r21.u8);
	// li r17,147
	ctx.r17.s64 = 147;
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r22,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r22.u8);
	// li r22,40
	ctx.r22.s64 = 40;
	// stb r14,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r14.u8);
	// li r14,120
	ctx.r14.s64 = 120;
	// stb r25,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r25.u8);
	// li r25,18
	ctx.r25.s64 = 18;
	// stb r15,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r15.u8);
	// stb r9,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r9.u8);
	// stb r22,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r22.u8);
	// li r22,113
	ctx.r22.s64 = 113;
	// stb r14,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r14.u8);
	// li r14,205
	ctx.r14.s64 = 205;
	// stb r28,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r28.u8);
	// stb r10,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r10.u8);
	// stb r27,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r27.u8);
	// stb r22,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r22.u8);
	// li r22,119
	ctx.r22.s64 = 119;
	// stb r14,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r14.u8);
	// li r14,23
	ctx.r14.s64 = 23;
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r22,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r22.u8);
	// li r22,44
	ctx.r22.s64 = 44;
	// stb r17,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r17.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r22,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r22.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r9,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r9.u8);
	// stb r9,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r9.u8);
	// stb r8,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r8.u8);
	// stb r27,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r27.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r31,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r31.u8);
	// stb r31,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r31.u8);
	// stb r22,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r22.u8);
	// stb r17,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r17.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r9,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r9.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r28,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r28.u8);
	// stb r31,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r31.u8);
	// stb r21,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r21.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r14,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r14.u8);
	// stb r9,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r9.u8);
	// stb r30,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r30.u8);
	// stb r10,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r10.u8);
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r19,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r19.u8);
	// stb r8,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r8.u8);
	// stb r10,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r10.u8);
	// stb r11,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r11.u8);
	// stb r11,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r11.u8);
	// stb r6,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r6.u8);
	// stb r3,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r3.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r5,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r5.u8);
	// stb r7,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r7.u8);
	// stb r10,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r10.u8);
	// stb r11,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r11.u8);
	// stb r11,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r11.u8);
	// stb r24,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r24.u8);
	// stb r29,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r29.u8);
	// stb r25,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r25.u8);
	// li r25,2
	ctx.r25.s64 = 2;
	// stb r15,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r15.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r31,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r31.u8);
	// stb r29,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r29.u8);
	// stb r18,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r18.u8);
	// stb r25,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r25.u8);
	// li r25,85
	ctx.r25.s64 = 85;
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r5,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r5.u8);
	// stb r7,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r7.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r25,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r25.u8);
	// li r25,48
	ctx.r25.s64 = 48;
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r9,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r9.u8);
	// stb r28,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r28.u8);
	// stb r10,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r10.u8);
	// stb r25,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r25.u8);
	// li r25,224
	ctx.r25.s64 = 224;
	// stb r10,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r10.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r22,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r22.u8);
	// stb r25,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r25.u8);
	// li r25,45
	ctx.r25.s64 = 45;
	// stb r28,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r28.u8);
	// stb r10,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r10.u8);
	// stb r27,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r27.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r25,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r25.u8);
	// li r25,31
	ctx.r25.s64 = 31;
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r31,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r31.u8);
	// stb r22,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r22.u8);
	// stb r17,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r17.u8);
	// stb r25,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r25.u8);
	// li r25,224
	ctx.r25.s64 = 224;
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r31,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r31.u8);
	// stb r25,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r25.u8);
	// li r25,119
	ctx.r25.s64 = 119;
	// stb r9,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r9.u8);
	// stb r9,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r9.u8);
	// stb r8,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r8.u8);
	// stb r27,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r27.u8);
	// stb r25,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r25.u8);
	// li r25,42
	ctx.r25.s64 = 42;
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r22,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r22.u8);
	// stb r25,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r25.u8);
	// li r25,121
	ctx.r25.s64 = 121;
	// stb r17,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r17.u8);
	// stb r31,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r31.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r25,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r25.u8);
	// li r25,19
	ctx.r25.s64 = 19;
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r9,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r9.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r28,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r28.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r21,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r21.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r31,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r31.u8);
	// stb r25,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r25.u8);
	// stb r14,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r14.u8);
	// stb r9,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r9.u8);
	// stb r8,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r8.u8);
	// stb r27,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r27.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r22,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r22.u8);
	// stb r17,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r17.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// li r17,193
	ctx.r17.s64 = 193;
	// stb r21,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r21.u8);
	// li r25,12
	ctx.r25.s64 = 12;
	// stb r21,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r21.u8);
	// stb r21,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r21.u8);
	// li r21,33
	ctx.r21.s64 = 33;
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r31,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r31.u8);
	// stb r17,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r17.u8);
	// li r17,160
	ctx.r17.s64 = 160;
	// stb r25,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r25.u8);
	// li r25,121
	ctx.r25.s64 = 121;
	// stb r21,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r21.u8);
	// li r21,208
	ctx.r21.s64 = 208;
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r9,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r9.u8);
	// stb r17,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r17.u8);
	// li r17,3
	ctx.r17.s64 = 3;
	// stb r25,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r25.u8);
	// li r25,30
	ctx.r25.s64 = 30;
	// stb r31,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r31.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r31.u8);
	// stb r17,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r17.u8);
	// li r17,172
	ctx.r17.s64 = 172;
	// stb r31,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r31.u8);
	// stb r9,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r9.u8);
	// stb r14,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r14.u8);
	// stb r25,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r25.u8);
	// stb r17,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r17.u8);
	// li r17,130
	ctx.r17.s64 = 130;
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r31,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r31.u8);
	// stb r9,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r9.u8);
	// stb r28,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r28.u8);
	// stb r17,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r17.u8);
	// li r17,154
	ctx.r17.s64 = 154;
	// stb r8,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r8.u8);
	// stb r8,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r8.u8);
	// stb r10,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r10.u8);
	// stb r11,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r11.u8);
	// stb r17,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r17.u8);
	// li r17,245
	ctx.r17.s64 = 245;
	// stb r11,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r11.u8);
	// stb r6,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r6.u8);
	// stb r3,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r3.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r17,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r17.u8);
	// li r17,239
	ctx.r17.s64 = 239;
	// stb r5,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r5.u8);
	// stb r7,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r7.u8);
	// stb r10,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r10.u8);
	// stb r11,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r11.u8);
	// stb r17,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r17.u8);
	// li r17,38
	ctx.r17.s64 = 38;
	// stb r11,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r11.u8);
	// stb r6,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r6.u8);
	// stb r20,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r20.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r17,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r17.u8);
	// li r17,24
	ctx.r17.s64 = 24;
	// stb r5,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r5.u8);
	// stb r7,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r7.u8);
	// stb r10,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r10.u8);
	// stb r11,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r11.u8);
	// stb r17,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r17.u8);
	// li r17,131
	ctx.r17.s64 = 131;
	// stb r11,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r11.u8);
	// stb r9,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r9.u8);
	// stb r31,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r31.u8);
	// stb r28,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r28.u8);
	// stb r17,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r17.u8);
	// li r17,56
	ctx.r17.s64 = 56;
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r31,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r31.u8);
	// stb r15,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r15.u8);
	// stb r9,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r9.u8);
	// stb r9,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r9.u8);
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r31,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r31.u8);
	// stb r21,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r21.u8);
	// li r21,63
	ctx.r21.s64 = 63;
	// stb r17,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r17.u8);
	// li r14,199
	ctx.r14.s64 = 199;
	// stb r8,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r8.u8);
	// stb r23,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r23.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r21,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r21.u8);
	// li r21,99
	ctx.r21.s64 = 99;
	// stb r14,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r14.u8);
	// li r14,225
	ctx.r14.s64 = 225;
	// stb r29,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r29.u8);
	// stb r18,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r18.u8);
	// stb r8,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r8.u8);
	// stb r21,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r21.u8);
	// li r21,129
	ctx.r21.s64 = 129;
	// stb r14,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r10,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r10.u8);
	// stb r11,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r11.u8);
	// stb r11,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r11.u8);
	// stb r21,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r21.u8);
	// li r21,97
	ctx.r21.s64 = 97;
	// stb r14,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r6,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r6.u8);
	// stb r3,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r3.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r21,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r21.u8);
	// li r21,26
	ctx.r21.s64 = 26;
	// stb r14,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r14.u8);
	// li r14,2
	ctx.r14.s64 = 2;
	// stb r5,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r5.u8);
	// stb r7,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r7.u8);
	// stb r10,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r10.u8);
	// stb r11,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r11.u8);
	// stb r11,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r11.u8);
	// stb r6,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r6.u8);
	// stb r20,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r20.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r16,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r16.u8);
	// stb r7,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r7.u8);
	// stb r27,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r27.u8);
	// stb r31,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r31.u8);
	// stb r31,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r31.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r31.u8);
	// stb r31,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r31.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r9,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r9.u8);
	// stb r9,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r9.u8);
	// stb r30,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r30.u8);
	// stb r31,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r31.u8);
	// stb r31,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r31.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r4,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r4.u8);
	// stb r3,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r3.u8);
	// stb r23,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r23.u8);
	// stb r31,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r31.u8);
	// stb r31,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r31.u8);
	// stb r21,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r21.u8);
	// stb r10,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r10.u8);
	// stb r11,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r11.u8);
	// stb r11,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r11.u8);
	// stb r6,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r6.u8);
	// stb r30,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r30.u8);
	// stb r31,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r31.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r4,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r4.u8);
	// stb r23,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r23.u8);
	// stb r31,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r31.u8);
	// stb r31,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r31.u8);
	// stb r21,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r21.u8);
	// stb r10,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r10.u8);
	// stb r31,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r31.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r10,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r10.u8);
	// stb r28,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r28.u8);
	// stb r14,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r14.u8);
	// li r14,211
	ctx.r14.s64 = 211;
	// std r26,1032(r1)
	PPC_STORE_U64(ctx.r1.u32 + 1032, ctx.r26.u64);
	// li r26,181
	ctx.r26.s64 = 181;
	// stb r8,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r8.u8);
	// stb r8,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r8.u8);
	// stb r8,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r8.u8);
	// stb r31,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r31.u8);
	// stb r14,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r14.u8);
	// li r14,155
	ctx.r14.s64 = 155;
	// stb r26,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r26.u8);
	// li r26,248
	ctx.r26.s64 = 248;
	// stb r31,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r31.u8);
	// stb r31,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r31.u8);
	// stb r4,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r4.u8);
	// stb r14,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r14.u8);
	// li r14,217
	ctx.r14.s64 = 217;
	// stb r26,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r26.u8);
	// li r26,52
	ctx.r26.s64 = 52;
	// stb r3,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r3.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r5,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r5.u8);
	// stb r14,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r14.u8);
	// stb r14,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r14.u8);
	// li r14,181
	ctx.r14.s64 = 181;
	// stb r26,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r26.u8);
	// li r26,225
	ctx.r26.s64 = 225;
	// stb r7,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r7.u8);
	// stb r10,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r10.u8);
	// stb r11,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r11.u8);
	// stb r14,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r14.u8);
	// li r14,248
	ctx.r14.s64 = 248;
	// stb r11,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r11.u8);
	// stb r6,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r6.u8);
	// stb r31,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r31.u8);
	// stb r5,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r5.u8);
	// stb r14,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r14.u8);
	// li r14,52
	ctx.r14.s64 = 52;
	// stb r7,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r7.u8);
	// stb r10,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r10.u8);
	// stb r11,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r11.u8);
	// stb r11,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r11.u8);
	// stb r6,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r6.u8);
	// stb r31,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r31.u8);
	// stb r5,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r5.u8);
	// stb r7,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r7.u8);
	// stb r10,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r10.u8);
	// stb r11,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r11.u8);
	// stb r11,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r11.u8);
	// stb r8,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r8.u8);
	// stb r8,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r8.u8);
	// stb r8,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r8.u8);
	// stb r31,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r31.u8);
	// stb r31,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r31.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r4,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r4.u8);
	// stb r26,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r26.u8);
	// stb r31,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r31.u8);
	// stb r5,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r5.u8);
	// stb r7,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r7.u8);
	// stb r10,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r10.u8);
	// stb r11,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r11.u8);
	// stb r11,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r11.u8);
	// stb r6,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r6.u8);
	// stb r31,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r31.u8);
	// stb r5,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r5.u8);
	// stb r7,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r7.u8);
	// stb r10,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r10.u8);
	// stb r11,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r11.u8);
	// stb r11,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r11.u8);
	// stb r6,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r6.u8);
	// stb r31,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r31.u8);
	// stb r5,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r5.u8);
	// stb r7,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r7.u8);
	// stb r10,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r10.u8);
	// stb r11,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r11.u8);
	// stb r11,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r11.u8);
	// stb r14,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r14.u8);
	// stb r9,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r9.u8);
	// stb r8,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r8.u8);
	// stb r23,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r23.u8);
	// stb r31,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r31.u8);
	// li r14,99
	ctx.r14.s64 = 99;
	// stb r31,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r31.u8);
	// stb r29,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r29.u8);
	// stb r18,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r18.u8);
	// stb r8,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r8.u8);
	// stb r10,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r10.u8);
	// stb r14,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r14.u8);
	// li r14,240
	ctx.r14.s64 = 240;
	// stb r11,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r11.u8);
	// stb r11,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r11.u8);
	// stb r6,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r6.u8);
	// stb r3,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r3.u8);
	// stb r14,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r14.u8);
	// li r14,51
	ctx.r14.s64 = 51;
	// stb r31,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r31.u8);
	// stb r5,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r5.u8);
	// stb r7,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r7.u8);
	// stb r10,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r10.u8);
	// stb r14,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r14.u8);
	// li r14,253
	ctx.r14.s64 = 253;
	// stb r11,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r11.u8);
	// stb r11,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r11.u8);
	// stb r6,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r6.u8);
	// stb r20,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r20.u8);
	// stb r14,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r14.u8);
	// li r14,225
	ctx.r14.s64 = 225;
	// stb r31,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r31.u8);
	// stb r25,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r25.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r27,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r27.u8);
	// stb r14,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r14.u8);
	// li r14,87
	ctx.r14.s64 = 87;
	// stb r31,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r31.u8);
	// stb r31,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r31.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r14,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r14.u8);
	// li r14,68
	ctx.r14.s64 = 68;
	// stb r31,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r31.u8);
	// stb r31,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r31.u8);
	// stb r31,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r31.u8);
	// stb r23,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r23.u8);
	// stb r14,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// stb r31,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r31.u8);
	// stb r31,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r31.u8);
	// stb r8,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r8.u8);
	// stb r31,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r31.u8);
	// stb r14,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r14.u8);
	// li r14,42
	ctx.r14.s64 = 42;
	// stb r31,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r31.u8);
	// stb r31,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r31.u8);
	// stb r4,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r4.u8);
	// stb r31,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r31.u8);
	// stb r14,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r14.u8);
	// li r14,224
	ctx.r14.s64 = 224;
	// stb r5,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r5.u8);
	// stb r7,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r7.u8);
	// stb r10,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r10.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r14,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r14.u8);
	// li r14,175
	ctx.r14.s64 = 175;
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r9,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r9.u8);
	// stb r30,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r30.u8);
	// stb r10,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r10.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r10,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r10.u8);
	// stb r30,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r30.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r31,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r31.u8);
	// stb r31,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r31.u8);
	// stb r4,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r4.u8);
	// stb r14,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r14.u8);
	// stb r8,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r8.u8);
	// stb r10,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r10.u8);
	// stb r11,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r11.u8);
	// stb r11,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r11.u8);
	// stb r6,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r6.u8);
	// stb r3,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r3.u8);
	// li r14,116
	ctx.r14.s64 = 116;
	// stb r19,856(r1)
	PPC_STORE_U8(ctx.r1.u32 + 856, ctx.r19.u8);
	// li r19,114
	ctx.r19.s64 = 114;
	// stb r31,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r31.u8);
	// li r26,115
	ctx.r26.s64 = 115;
	// stb r5,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r5.u8);
	// stb r7,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r7.u8);
	// stb r10,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r10.u8);
	// stb r14,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r14.u8);
	// li r14,68
	ctx.r14.s64 = 68;
	// stb r19,861(r1)
	PPC_STORE_U8(ctx.r1.u32 + 861, ctx.r19.u8);
	// li r19,63
	ctx.r19.s64 = 63;
	// stb r26,843(r1)
	PPC_STORE_U8(ctx.r1.u32 + 843, ctx.r26.u8);
	// li r26,224
	ctx.r26.s64 = 224;
	// stb r11,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r11.u8);
	// stb r11,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r11.u8);
	// stb r14,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r14.u8);
	// li r14,114
	ctx.r14.s64 = 114;
	// stb r19,863(r1)
	PPC_STORE_U8(ctx.r1.u32 + 863, ctx.r19.u8);
	// stb r19,867(r1)
	PPC_STORE_U8(ctx.r1.u32 + 867, ctx.r19.u8);
	// li r19,116
	ctx.r19.s64 = 116;
	// stb r24,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r24.u8);
	// stb r29,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r29.u8);
	// stb r14,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r14.u8);
	// stb r14,854(r1)
	PPC_STORE_U8(ctx.r1.u32 + 854, ctx.r14.u8);
	// li r14,173
	ctx.r14.s64 = 173;
	// stb r10,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r10.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r4,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r4.u8);
	// stb r14,855(r1)
	PPC_STORE_U8(ctx.r1.u32 + 855, ctx.r14.u8);
	// li r14,38
	ctx.r14.s64 = 38;
	// stb r9,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r9.u8);
	// stb r30,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r30.u8);
	// stb r21,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r21.u8);
	// stb r17,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r17.u8);
	// stb r10,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r10.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r31,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r31.u8);
	// stb r4,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r4.u8);
	// stb r10,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r10.u8);
	// stb r31,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r31.u8);
	// stb r31,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r31.u8);
	// stb r4,842(r1)
	PPC_STORE_U8(ctx.r1.u32 + 842, ctx.r4.u8);
	// stb r31,844(r1)
	PPC_STORE_U8(ctx.r1.u32 + 844, ctx.r31.u8);
	// stb r31,845(r1)
	PPC_STORE_U8(ctx.r1.u32 + 845, ctx.r31.u8);
	// stb r31,846(r1)
	PPC_STORE_U8(ctx.r1.u32 + 846, ctx.r31.u8);
	// stb r4,847(r1)
	PPC_STORE_U8(ctx.r1.u32 + 847, ctx.r4.u8);
	// stb r26,848(r1)
	PPC_STORE_U8(ctx.r1.u32 + 848, ctx.r26.u8);
	// stb r30,849(r1)
	PPC_STORE_U8(ctx.r1.u32 + 849, ctx.r30.u8);
	// stb r10,850(r1)
	PPC_STORE_U8(ctx.r1.u32 + 850, ctx.r10.u8);
	// stb r31,851(r1)
	PPC_STORE_U8(ctx.r1.u32 + 851, ctx.r31.u8);
	// stb r31,852(r1)
	PPC_STORE_U8(ctx.r1.u32 + 852, ctx.r31.u8);
	// stb r4,853(r1)
	PPC_STORE_U8(ctx.r1.u32 + 853, ctx.r4.u8);
	// stb r10,857(r1)
	PPC_STORE_U8(ctx.r1.u32 + 857, ctx.r10.u8);
	// stb r31,858(r1)
	PPC_STORE_U8(ctx.r1.u32 + 858, ctx.r31.u8);
	// stb r31,859(r1)
	PPC_STORE_U8(ctx.r1.u32 + 859, ctx.r31.u8);
	// stb r4,860(r1)
	PPC_STORE_U8(ctx.r1.u32 + 860, ctx.r4.u8);
	// stb r17,862(r1)
	PPC_STORE_U8(ctx.r1.u32 + 862, ctx.r17.u8);
	// stb r14,864(r1)
	PPC_STORE_U8(ctx.r1.u32 + 864, ctx.r14.u8);
	// stb r9,865(r1)
	PPC_STORE_U8(ctx.r1.u32 + 865, ctx.r9.u8);
	// stb r17,866(r1)
	PPC_STORE_U8(ctx.r1.u32 + 866, ctx.r17.u8);
	// stb r22,868(r1)
	PPC_STORE_U8(ctx.r1.u32 + 868, ctx.r22.u8);
	// stb r7,869(r1)
	PPC_STORE_U8(ctx.r1.u32 + 869, ctx.r7.u8);
	// stb r9,870(r1)
	PPC_STORE_U8(ctx.r1.u32 + 870, ctx.r9.u8);
	// stb r30,871(r1)
	PPC_STORE_U8(ctx.r1.u32 + 871, ctx.r30.u8);
	// stb r10,872(r1)
	PPC_STORE_U8(ctx.r1.u32 + 872, ctx.r10.u8);
	// stb r31,873(r1)
	PPC_STORE_U8(ctx.r1.u32 + 873, ctx.r31.u8);
	// stb r31,874(r1)
	PPC_STORE_U8(ctx.r1.u32 + 874, ctx.r31.u8);
	// stb r4,875(r1)
	PPC_STORE_U8(ctx.r1.u32 + 875, ctx.r4.u8);
	// stb r19,876(r1)
	PPC_STORE_U8(ctx.r1.u32 + 876, ctx.r19.u8);
	// stb r8,877(r1)
	PPC_STORE_U8(ctx.r1.u32 + 877, ctx.r8.u8);
	// stb r10,878(r1)
	PPC_STORE_U8(ctx.r1.u32 + 878, ctx.r10.u8);
	// stb r11,879(r1)
	PPC_STORE_U8(ctx.r1.u32 + 879, ctx.r11.u8);
	// stb r11,880(r1)
	PPC_STORE_U8(ctx.r1.u32 + 880, ctx.r11.u8);
	// stb r6,881(r1)
	PPC_STORE_U8(ctx.r1.u32 + 881, ctx.r6.u8);
	// stb r3,882(r1)
	PPC_STORE_U8(ctx.r1.u32 + 882, ctx.r3.u8);
	// stb r31,883(r1)
	PPC_STORE_U8(ctx.r1.u32 + 883, ctx.r31.u8);
	// stb r5,884(r1)
	PPC_STORE_U8(ctx.r1.u32 + 884, ctx.r5.u8);
	// stb r7,885(r1)
	PPC_STORE_U8(ctx.r1.u32 + 885, ctx.r7.u8);
	// stb r10,886(r1)
	PPC_STORE_U8(ctx.r1.u32 + 886, ctx.r10.u8);
	// stb r30,891(r1)
	PPC_STORE_U8(ctx.r1.u32 + 891, ctx.r30.u8);
	// li r19,3
	ctx.r19.s64 = 3;
	// stb r30,902(r1)
	PPC_STORE_U8(ctx.r1.u32 + 902, ctx.r30.u8);
	// li r30,227
	ctx.r30.s64 = 227;
	// stb r22,918(r1)
	PPC_STORE_U8(ctx.r1.u32 + 918, ctx.r22.u8);
	// li r22,184
	ctx.r22.s64 = 184;
	// stb r24,889(r1)
	PPC_STORE_U8(ctx.r1.u32 + 889, ctx.r24.u8);
	// li r24,228
	ctx.r24.s64 = 228;
	// li r17,37
	ctx.r17.s64 = 37;
	// stb r11,887(r1)
	PPC_STORE_U8(ctx.r1.u32 + 887, ctx.r11.u8);
	// li r14,101
	ctx.r14.s64 = 101;
	// stb r11,888(r1)
	PPC_STORE_U8(ctx.r1.u32 + 888, ctx.r11.u8);
	// stb r30,907(r1)
	PPC_STORE_U8(ctx.r1.u32 + 907, ctx.r30.u8);
	// stb r30,917(r1)
	PPC_STORE_U8(ctx.r1.u32 + 917, ctx.r30.u8);
	// stb r30,932(r1)
	PPC_STORE_U8(ctx.r1.u32 + 932, ctx.r30.u8);
	// stb r30,944(r1)
	PPC_STORE_U8(ctx.r1.u32 + 944, ctx.r30.u8);
	// li r30,6
	ctx.r30.s64 = 6;
	// stb r22,921(r1)
	PPC_STORE_U8(ctx.r1.u32 + 921, ctx.r22.u8);
	// li r22,115
	ctx.r22.s64 = 115;
	// stb r29,890(r1)
	PPC_STORE_U8(ctx.r1.u32 + 890, ctx.r29.u8);
	// stb r31,892(r1)
	PPC_STORE_U8(ctx.r1.u32 + 892, ctx.r31.u8);
	// stb r31,893(r1)
	PPC_STORE_U8(ctx.r1.u32 + 893, ctx.r31.u8);
	// stb r30,946(r1)
	PPC_STORE_U8(ctx.r1.u32 + 946, ctx.r30.u8);
	// li r30,61
	ctx.r30.s64 = 61;
	// stb r22,937(r1)
	PPC_STORE_U8(ctx.r1.u32 + 937, ctx.r22.u8);
	// li r22,163
	ctx.r22.s64 = 163;
	// stb r31,894(r1)
	PPC_STORE_U8(ctx.r1.u32 + 894, ctx.r31.u8);
	// stb r4,895(r1)
	PPC_STORE_U8(ctx.r1.u32 + 895, ctx.r4.u8);
	// stb r24,896(r1)
	PPC_STORE_U8(ctx.r1.u32 + 896, ctx.r24.u8);
	// stb r30,948(r1)
	PPC_STORE_U8(ctx.r1.u32 + 948, ctx.r30.u8);
	// li r30,183
	ctx.r30.s64 = 183;
	// stb r25,897(r1)
	PPC_STORE_U8(ctx.r1.u32 + 897, ctx.r25.u8);
	// stb r31,898(r1)
	PPC_STORE_U8(ctx.r1.u32 + 898, ctx.r31.u8);
	// stb r31,899(r1)
	PPC_STORE_U8(ctx.r1.u32 + 899, ctx.r31.u8);
	// stb r31,900(r1)
	PPC_STORE_U8(ctx.r1.u32 + 900, ctx.r31.u8);
	// stb r30,949(r1)
	PPC_STORE_U8(ctx.r1.u32 + 949, ctx.r30.u8);
	// li r30,64
	ctx.r30.s64 = 64;
	// stb r31,901(r1)
	PPC_STORE_U8(ctx.r1.u32 + 901, ctx.r31.u8);
	// stb r31,903(r1)
	PPC_STORE_U8(ctx.r1.u32 + 903, ctx.r31.u8);
	// stb r31,904(r1)
	PPC_STORE_U8(ctx.r1.u32 + 904, ctx.r31.u8);
	// stb r31,905(r1)
	PPC_STORE_U8(ctx.r1.u32 + 905, ctx.r31.u8);
	// stb r4,906(r1)
	PPC_STORE_U8(ctx.r1.u32 + 906, ctx.r4.u8);
	// stb r17,908(r1)
	PPC_STORE_U8(ctx.r1.u32 + 908, ctx.r17.u8);
	// stb r28,909(r1)
	PPC_STORE_U8(ctx.r1.u32 + 909, ctx.r28.u8);
	// stb r19,910(r1)
	PPC_STORE_U8(ctx.r1.u32 + 910, ctx.r19.u8);
	// stb r14,911(r1)
	PPC_STORE_U8(ctx.r1.u32 + 911, ctx.r14.u8);
	// stb r20,912(r1)
	PPC_STORE_U8(ctx.r1.u32 + 912, ctx.r20.u8);
	// stb r31,913(r1)
	PPC_STORE_U8(ctx.r1.u32 + 913, ctx.r31.u8);
	// stb r31,914(r1)
	PPC_STORE_U8(ctx.r1.u32 + 914, ctx.r31.u8);
	// stb r31,915(r1)
	PPC_STORE_U8(ctx.r1.u32 + 915, ctx.r31.u8);
	// stb r4,916(r1)
	PPC_STORE_U8(ctx.r1.u32 + 916, ctx.r4.u8);
	// stb r7,919(r1)
	PPC_STORE_U8(ctx.r1.u32 + 919, ctx.r7.u8);
	// stb r9,920(r1)
	PPC_STORE_U8(ctx.r1.u32 + 920, ctx.r9.u8);
	// stb r31,922(r1)
	PPC_STORE_U8(ctx.r1.u32 + 922, ctx.r31.u8);
	// stb r31,923(r1)
	PPC_STORE_U8(ctx.r1.u32 + 923, ctx.r31.u8);
	// stb r31,924(r1)
	PPC_STORE_U8(ctx.r1.u32 + 924, ctx.r31.u8);
	// stb r4,925(r1)
	PPC_STORE_U8(ctx.r1.u32 + 925, ctx.r4.u8);
	// stb r24,926(r1)
	PPC_STORE_U8(ctx.r1.u32 + 926, ctx.r24.u8);
	// stb r21,927(r1)
	PPC_STORE_U8(ctx.r1.u32 + 927, ctx.r21.u8);
	// stb r31,928(r1)
	PPC_STORE_U8(ctx.r1.u32 + 928, ctx.r31.u8);
	// stb r31,929(r1)
	PPC_STORE_U8(ctx.r1.u32 + 929, ctx.r31.u8);
	// stb r31,930(r1)
	PPC_STORE_U8(ctx.r1.u32 + 930, ctx.r31.u8);
	// stb r4,931(r1)
	PPC_STORE_U8(ctx.r1.u32 + 931, ctx.r4.u8);
	// stb r10,933(r1)
	PPC_STORE_U8(ctx.r1.u32 + 933, ctx.r10.u8);
	// stb r31,934(r1)
	PPC_STORE_U8(ctx.r1.u32 + 934, ctx.r31.u8);
	// stb r31,935(r1)
	PPC_STORE_U8(ctx.r1.u32 + 935, ctx.r31.u8);
	// stb r4,936(r1)
	PPC_STORE_U8(ctx.r1.u32 + 936, ctx.r4.u8);
	// stb r9,938(r1)
	PPC_STORE_U8(ctx.r1.u32 + 938, ctx.r9.u8);
	// stb r22,939(r1)
	PPC_STORE_U8(ctx.r1.u32 + 939, ctx.r22.u8);
	// stb r31,940(r1)
	PPC_STORE_U8(ctx.r1.u32 + 940, ctx.r31.u8);
	// stb r31,941(r1)
	PPC_STORE_U8(ctx.r1.u32 + 941, ctx.r31.u8);
	// stb r31,942(r1)
	PPC_STORE_U8(ctx.r1.u32 + 942, ctx.r31.u8);
	// stb r4,943(r1)
	PPC_STORE_U8(ctx.r1.u32 + 943, ctx.r4.u8);
	// stb r9,945(r1)
	PPC_STORE_U8(ctx.r1.u32 + 945, ctx.r9.u8);
	// stb r19,947(r1)
	PPC_STORE_U8(ctx.r1.u32 + 947, ctx.r19.u8);
	// stb r31,950(r1)
	PPC_STORE_U8(ctx.r1.u32 + 950, ctx.r31.u8);
	// stb r31,951(r1)
	PPC_STORE_U8(ctx.r1.u32 + 951, ctx.r31.u8);
	// stb r31,952(r1)
	PPC_STORE_U8(ctx.r1.u32 + 952, ctx.r31.u8);
	// stb r4,953(r1)
	PPC_STORE_U8(ctx.r1.u32 + 953, ctx.r4.u8);
	// stb r24,954(r1)
	PPC_STORE_U8(ctx.r1.u32 + 954, ctx.r24.u8);
	// stb r25,955(r1)
	PPC_STORE_U8(ctx.r1.u32 + 955, ctx.r25.u8);
	// stb r11,984(r1)
	PPC_STORE_U8(ctx.r1.u32 + 984, ctx.r11.u8);
	// stb r11,985(r1)
	PPC_STORE_U8(ctx.r1.u32 + 985, ctx.r11.u8);
	// stb r11,992(r1)
	PPC_STORE_U8(ctx.r1.u32 + 992, ctx.r11.u8);
	// stb r11,993(r1)
	PPC_STORE_U8(ctx.r1.u32 + 993, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r30,956(r1)
	PPC_STORE_U8(ctx.r1.u32 + 956, ctx.r30.u8);
	// li r30,128
	ctx.r30.s64 = 128;
	// stb r4,968(r1)
	PPC_STORE_U8(ctx.r1.u32 + 968, ctx.r4.u8);
	// li r4,65
	ctx.r4.s64 = 65;
	// stb r10,983(r1)
	PPC_STORE_U8(ctx.r1.u32 + 983, ctx.r10.u8);
	// stb r10,991(r1)
	PPC_STORE_U8(ctx.r1.u32 + 991, ctx.r10.u8);
	// li r10,36
	ctx.r10.s64 = 36;
	// stb r11,997(r1)
	PPC_STORE_U8(ctx.r1.u32 + 997, ctx.r11.u8);
	// li r11,74
	ctx.r11.s64 = 74;
	// stb r30,957(r1)
	PPC_STORE_U8(ctx.r1.u32 + 957, ctx.r30.u8);
	// li r30,172
	ctx.r30.s64 = 172;
	// ld r26,1032(r1)
	ctx.r26.u64 = PPC_LOAD_U64(ctx.r1.u32 + 1032);
	// stb r31,958(r1)
	PPC_STORE_U8(ctx.r1.u32 + 958, ctx.r31.u8);
	// stb r31,959(r1)
	PPC_STORE_U8(ctx.r1.u32 + 959, ctx.r31.u8);
	// stb r11,1003(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1003, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r30,963(r1)
	PPC_STORE_U8(ctx.r1.u32 + 963, ctx.r30.u8);
	// li r30,176
	ctx.r30.s64 = 176;
	// stb r31,965(r1)
	PPC_STORE_U8(ctx.r1.u32 + 965, ctx.r31.u8);
	// stb r31,966(r1)
	PPC_STORE_U8(ctx.r1.u32 + 966, ctx.r31.u8);
	// stb r31,967(r1)
	PPC_STORE_U8(ctx.r1.u32 + 967, ctx.r31.u8);
	// stb r11,1004(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1004, ctx.r11.u8);
	// li r11,98
	ctx.r11.s64 = 98;
	// stb r4,971(r1)
	PPC_STORE_U8(ctx.r1.u32 + 971, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,973(r1)
	PPC_STORE_U8(ctx.r1.u32 + 973, ctx.r31.u8);
	// stb r31,974(r1)
	PPC_STORE_U8(ctx.r1.u32 + 974, ctx.r31.u8);
	// stb r31,978(r1)
	PPC_STORE_U8(ctx.r1.u32 + 978, ctx.r31.u8);
	// stb r11,1011(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1011, ctx.r11.u8);
	// stb r11,1018(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1018, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,979(r1)
	PPC_STORE_U8(ctx.r1.u32 + 979, ctx.r31.u8);
	// stb r31,988(r1)
	PPC_STORE_U8(ctx.r1.u32 + 988, ctx.r31.u8);
	// stb r5,989(r1)
	PPC_STORE_U8(ctx.r1.u32 + 989, ctx.r5.u8);
	// li r5,943
	ctx.r5.s64 = 943;
	// stb r31,996(r1)
	PPC_STORE_U8(ctx.r1.u32 + 996, ctx.r31.u8);
	// stb r31,998(r1)
	PPC_STORE_U8(ctx.r1.u32 + 998, ctx.r31.u8);
	// stb r31,1000(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1000, ctx.r31.u8);
	// stb r31,1001(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1001, ctx.r31.u8);
	// stb r31,1002(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1002, ctx.r31.u8);
	// stb r31,1005(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1005, ctx.r31.u8);
	// stb r31,1006(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1006, ctx.r31.u8);
	// stb r31,1007(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1007, ctx.r31.u8);
	// stb r31,1008(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1008, ctx.r31.u8);
	// stb r31,1013(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1013, ctx.r31.u8);
	// stb r31,1014(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1014, ctx.r31.u8);
	// stb r31,1015(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1015, ctx.r31.u8);
	// stb r31,1016(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1016, ctx.r31.u8);
	// addi r31,r26,32
	ctx.r31.s64 = ctx.r26.s64 + 32;
	// stb r9,960(r1)
	PPC_STORE_U8(ctx.r1.u32 + 960, ctx.r9.u8);
	// stb r28,961(r1)
	PPC_STORE_U8(ctx.r1.u32 + 961, ctx.r28.u8);
	// stb r19,962(r1)
	PPC_STORE_U8(ctx.r1.u32 + 962, ctx.r19.u8);
	// stb r30,964(r1)
	PPC_STORE_U8(ctx.r1.u32 + 964, ctx.r30.u8);
	// stb r24,969(r1)
	PPC_STORE_U8(ctx.r1.u32 + 969, ctx.r24.u8);
	// stb r25,970(r1)
	PPC_STORE_U8(ctx.r1.u32 + 970, ctx.r25.u8);
	// stb r15,972(r1)
	PPC_STORE_U8(ctx.r1.u32 + 972, ctx.r15.u8);
	// stb r9,975(r1)
	PPC_STORE_U8(ctx.r1.u32 + 975, ctx.r9.u8);
	// stb r8,976(r1)
	PPC_STORE_U8(ctx.r1.u32 + 976, ctx.r8.u8);
	// stb r23,977(r1)
	PPC_STORE_U8(ctx.r1.u32 + 977, ctx.r23.u8);
	// stb r29,980(r1)
	PPC_STORE_U8(ctx.r1.u32 + 980, ctx.r29.u8);
	// stb r18,981(r1)
	PPC_STORE_U8(ctx.r1.u32 + 981, ctx.r18.u8);
	// stb r8,982(r1)
	PPC_STORE_U8(ctx.r1.u32 + 982, ctx.r8.u8);
	// stb r6,986(r1)
	PPC_STORE_U8(ctx.r1.u32 + 986, ctx.r6.u8);
	// stb r3,987(r1)
	PPC_STORE_U8(ctx.r1.u32 + 987, ctx.r3.u8);
	// stb r7,990(r1)
	PPC_STORE_U8(ctx.r1.u32 + 990, ctx.r7.u8);
	// stb r6,994(r1)
	PPC_STORE_U8(ctx.r1.u32 + 994, ctx.r6.u8);
	// stb r20,995(r1)
	PPC_STORE_U8(ctx.r1.u32 + 995, ctx.r20.u8);
	// stb r27,999(r1)
	PPC_STORE_U8(ctx.r1.u32 + 999, ctx.r27.u8);
	// stb r17,1009(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1009, ctx.r17.u8);
	// stb r10,1010(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1010, ctx.r10.u8);
	// stb r25,1012(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1012, ctx.r25.u8);
	// stb r10,1017(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1017, ctx.r10.u8);
	// stb r9,1019(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1019, ctx.r9.u8);
	// stb r7,1020(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1020, ctx.r7.u8);
	// stb r16,1021(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1021, ctx.r16.u8);
	// stb r11,1022(r1)
	PPC_STORE_U8(ctx.r1.u32 + 1022, ctx.r11.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// bl 0x82b06418
	ctx.lr = 0x824CB17C;
	sub_82B06418(ctx, base);
	// mr r3,r26
	ctx.r3.u64 = ctx.r26.u64;
	// stw r31,20(r26)
	PPC_STORE_U32(ctx.r26.u32 + 20, ctx.r31.u32);
	// addi r1,r1,1200
	ctx.r1.s64 = ctx.r1.s64 + 1200;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CB190"))) PPC_WEAK_FUNC(sub_824CB190);
PPC_FUNC_IMPL(__imp__sub_824CB190) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e58
	ctx.lr = 0x824CB198;
	__savegprlr_24(ctx, base);
	// stwu r1,-288(r1)
	ea = -288 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,109
	ctx.r9.s64 = 109;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32204
	ctx.r4.s64 = ctx.r10.s64 + 32204;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CB1D4;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,80
	ctx.r3.s64 = ctx.r1.s64 + 80;
	// bl 0x8243b750
	ctx.lr = 0x824CB1EC;
	sub_8243B750(ctx, base);
	// li r10,34
	ctx.r10.s64 = 34;
	// li r11,163
	ctx.r11.s64 = 163;
	// lwz r5,80(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 80);
	// li r7,248
	ctx.r7.s64 = 248;
	// lwz r4,84(r1)
	ctx.r4.u64 = PPC_LOAD_U32(ctx.r1.u32 + 84);
	// li r6,44
	ctx.r6.s64 = 44;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r10,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r10.u8);
	// li r10,192
	ctx.r10.s64 = 192;
	// stb r11,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r7,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r7.u8);
	// li r7,40
	ctx.r7.s64 = 40;
	// li r8,27
	ctx.r8.s64 = 27;
	// stb r6,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r6.u8);
	// li r24,83
	ctx.r24.s64 = 83;
	// stb r6,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r6.u8);
	// stb r10,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r10.u8);
	// li r10,49
	ctx.r10.s64 = 49;
	// li r25,20
	ctx.r25.s64 = 20;
	// stb r11,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r11.u8);
	// li r26,45
	ctx.r26.s64 = 45;
	// stb r9,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r9.u8);
	// li r27,31
	ctx.r27.s64 = 31;
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// li r28,15
	ctx.r28.s64 = 15;
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r10,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r10.u8);
	// li r10,56
	ctx.r10.s64 = 56;
	// li r3,29
	ctx.r3.s64 = 29;
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// li r6,193
	ctx.r6.s64 = 193;
	// stb r24,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r24.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// li r10,63
	ctx.r10.s64 = 63;
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r10,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r10.u8);
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r7,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r7.u8);
	// stb r9,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r9.u8);
	// stb r25,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r25.u8);
	// stb r26,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r26.u8);
	// stb r10,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r10.u8);
	// stb r10,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r10.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r27,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r27.u8);
	// stb r7,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r7.u8);
	// stb r28,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r28.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r3,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r3.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r10,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r10.u8);
	// li r10,251
	ctx.r10.s64 = 251;
	// stb r6,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r6.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r3,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r3.u8);
	// li r3,55
	ctx.r3.s64 = 55;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r10,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r10.u8);
	// li r10,86
	ctx.r10.s64 = 86;
	// stb r6,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r6.u8);
	// li r6,247
	ctx.r6.s64 = 247;
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// stb r11,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r11.u8);
	// li r11,43
	ctx.r11.s64 = 43;
	// stw r5,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r5.u32);
	// li r5,109
	ctx.r5.s64 = 109;
	// stb r10,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r10.u8);
	// li r10,139
	ctx.r10.s64 = 139;
	// stb r6,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r6.u8);
	// li r6,226
	ctx.r6.s64 = 226;
	// stw r4,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r4.u32);
	// addi r4,r1,96
	ctx.r4.s64 = ctx.r1.s64 + 96;
	// stb r3,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r10,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r10.u8);
	// li r10,30
	ctx.r10.s64 = 30;
	// stb r6,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r6.u8);
	// li r6,5
	ctx.r6.s64 = 5;
	// stb r28,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r28.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r10,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r10.u8);
	// li r10,88
	ctx.r10.s64 = 88;
	// stb r6,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r6.u8);
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// li r10,205
	ctx.r10.s64 = 205;
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r8,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r8.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// li r10,68
	ctx.r10.s64 = 68;
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r9,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r9.u8);
	// stb r8,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r8.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r10,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r10.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r9,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r9.u8);
	// stb r25,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r25.u8);
	// stb r26,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r26.u8);
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r27,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r27.u8);
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// stb r7,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r7.u8);
	// stb r8,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r8.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// li r11,54
	ctx.r11.s64 = 54;
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r9,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r9.u8);
	// stb r11,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r6,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r6.u8);
	// stb r24,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r24.u8);
	// stb r11,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CB454;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,288
	ctx.r1.s64 = ctx.r1.s64 + 288;
	// b 0x82e28ea8
	__restgprlr_24(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CB468"))) PPC_WEAK_FUNC(sub_824CB468);
PPC_FUNC_IMPL(__imp__sub_824CB468) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824CB470;
	__savegprlr_14(ctx, base);
	// stwu r1,-1024(r1)
	ea = -1024 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r26,r3
	ctx.r26.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r26,4
	ctx.r3.s64 = ctx.r26.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,762
	ctx.r9.s64 = 762;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32296
	ctx.r4.s64 = ctx.r10.s64 + 32296;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r26)
	PPC_STORE_U32(ctx.r26.u32 + 0, ctx.r11.u32);
	// stw r9,16(r26)
	PPC_STORE_U32(ctx.r26.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CB4AC;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,32252
	ctx.r4.s64 = ctx.r11.s64 + 32252;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,848
	ctx.r3.s64 = ctx.r1.s64 + 848;
	// bl 0x8243b750
	ctx.lr = 0x824CB4C4;
	sub_8243B750(ctx, base);
	// li r9,63
	ctx.r9.s64 = 63;
	// li r22,15
	ctx.r22.s64 = 15;
	// lwz r11,848(r1)
	ctx.r11.u64 = PPC_LOAD_U32(ctx.r1.u32 + 848);
	// li r10,47
	ctx.r10.s64 = 47;
	// lwz r7,852(r1)
	ctx.r7.u64 = PPC_LOAD_U32(ctx.r1.u32 + 852);
	// li r4,5
	ctx.r4.s64 = 5;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r30,4
	ctx.r30.s64 = 4;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// stb r9,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r9.u8);
	// li r9,32
	ctx.r9.s64 = 32;
	// li r19,68
	ctx.r19.s64 = 68;
	// stb r22,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r22.u8);
	// li r15,56
	ctx.r15.s64 = 56;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// li r16,18
	ctx.r16.s64 = 18;
	// stb r10,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r10.u8);
	// li r17,86
	ctx.r17.s64 = 86;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r9.u8);
	// li r9,127
	ctx.r9.s64 = 127;
	// li r23,2
	ctx.r23.s64 = 2;
	// stb r19,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r19.u8);
	// li r20,69
	ctx.r20.s64 = 69;
	// stb r15,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r15.u8);
	// li r3,175
	ctx.r3.s64 = 175;
	// stb r16,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r16.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r9,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r9.u8);
	// li r9,85
	ctx.r9.s64 = 85;
	// li r8,1
	ctx.r8.s64 = 1;
	// stb r17,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r17.u8);
	// li r27,247
	ctx.r27.s64 = 247;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// li r5,226
	ctx.r5.s64 = 226;
	// stb r4,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r4.u8);
	// stb r30,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r30.u8);
	// stb r9,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r9.u8);
	// li r9,58
	ctx.r9.s64 = 58;
	// stb r23,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r23.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r22,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r22.u8);
	// stb r9,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r9.u8);
	// li r9,255
	ctx.r9.s64 = 255;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r10,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r10.u8);
	// stb r20,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r20.u8);
	// stb r3,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r3.u8);
	// stb r6,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r6.u8);
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r9,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r9.u8);
	// stb r27,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r27.u8);
	// stb r5,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r5.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r4,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r4.u8);
	// stb r30,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r30.u8);
	// li r5,251
	ctx.r5.s64 = 251;
	// stw r11,24(r26)
	PPC_STORE_U32(ctx.r26.u32 + 24, ctx.r11.u32);
	// li r11,139
	ctx.r11.s64 = 139;
	// stb r3,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r3.u8);
	// li r25,35
	ctx.r25.s64 = 35;
	// stw r7,28(r26)
	PPC_STORE_U32(ctx.r26.u32 + 28, ctx.r7.u32);
	// li r3,66
	ctx.r3.s64 = 66;
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// li r7,45
	ctx.r7.s64 = 45;
	// stb r9,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r9.u8);
	// stb r5,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r5.u8);
	// li r5,29
	ctx.r5.s64 = 29;
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// li r28,20
	ctx.r28.s64 = 20;
	// stb r25,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r25.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// li r25,40
	ctx.r25.s64 = 40;
	// stb r3,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r3.u8);
	// li r18,132
	ctx.r18.s64 = 132;
	// stb r9,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r9.u8);
	// stb r5,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r5.u8);
	// li r5,67
	ctx.r5.s64 = 67;
	// li r29,27
	ctx.r29.s64 = 27;
	// stb r17,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r17.u8);
	// li r24,7
	ctx.r24.s64 = 7;
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// li r21,65
	ctx.r21.s64 = 65;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// li r3,70
	ctx.r3.s64 = 70;
	// stb r5,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r5.u8);
	// li r5,54
	ctx.r5.s64 = 54;
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r28,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r28.u8);
	// stb r7,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r7.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r5,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r5.u8);
	// li r5,41
	ctx.r5.s64 = 41;
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// stb r18,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r18.u8);
	// stb r5,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r5.u8);
	// li r5,24
	ctx.r5.s64 = 24;
	// stb r29,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r29.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// stb r5,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r5.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r24,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r24.u8);
	// stb r7,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r7.u8);
	// stb r8,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r8.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r11,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r11.u8);
	// stb r28,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r28.u8);
	// stb r7,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r7.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// stb r25,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r25.u8);
	// stb r28,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r28.u8);
	// stb r7,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r7.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// stb r21,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r21.u8);
	// stb r25,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r25.u8);
	// stb r22,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r22.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r10,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r10.u8);
	// li r14,46
	ctx.r14.s64 = 46;
	// stb r21,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r21.u8);
	// stb r22,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r22.u8);
	// li r21,39
	ctx.r21.s64 = 39;
	// li r22,71
	ctx.r22.s64 = 71;
	// std r26,856(r1)
	PPC_STORE_U64(ctx.r1.u32 + 856, ctx.r26.u64);
	// li r26,119
	ctx.r26.s64 = 119;
	// stb r3,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r3.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r14,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r21,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r21.u8);
	// li r21,183
	ctx.r21.s64 = 183;
	// stb r22,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r22.u8);
	// li r22,46
	ctx.r22.s64 = 46;
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r8,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r8.u8);
	// stb r14,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r14.u8);
	// li r14,199
	ctx.r14.s64 = 199;
	// stb r21,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r21.u8);
	// li r21,66
	ctx.r21.s64 = 66;
	// stb r22,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r22.u8);
	// li r22,110
	ctx.r22.s64 = 110;
	// stb r9,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r9.u8);
	// stb r9,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r9.u8);
	// stb r14,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r14.u8);
	// stb r14,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r14.u8);
	// li r14,233
	ctx.r14.s64 = 233;
	// stb r22,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r22.u8);
	// li r22,31
	ctx.r22.s64 = 31;
	// stb r21,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r21.u8);
	// li r21,130
	ctx.r21.s64 = 130;
	// stb r27,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r27.u8);
	// stb r24,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r24.u8);
	// stb r14,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r14.u8);
	// li r14,119
	ctx.r14.s64 = 119;
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r14,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r14.u8);
	// li r14,42
	ctx.r14.s64 = 42;
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// stb r3,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r3.u8);
	// stb r11,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r11.u8);
	// stb r28,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r28.u8);
	// stb r14,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r14.u8);
	// stb r7,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r7.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r10,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r10.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r10,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r10.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r22,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r22.u8);
	// stb r6,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r6.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r10,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r10.u8);
	// stb r3,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r3.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r4,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r4.u8);
	// stb r30,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r30.u8);
	// stb r8,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r8.u8);
	// stb r9,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r9.u8);
	// stb r9,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r9.u8);
	// stb r27,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r27.u8);
	// stb r28,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r28.u8);
	// stb r7,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r7.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r10,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r10.u8);
	// stb r21,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r21.u8);
	// stb r21,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r21.u8);
	// stb r26,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r26.u8);
	// stb r14,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r14.u8);
	// li r14,129
	ctx.r14.s64 = 129;
	// li r26,71
	ctx.r26.s64 = 71;
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r10,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r10.u8);
	// stb r14,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r14.u8);
	// li r14,13
	ctx.r14.s64 = 13;
	// stb r26,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r26.u8);
	// stb r11,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r11.u8);
	// stb r5,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r5.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r14,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r14.u8);
	// li r14,102
	ctx.r14.s64 = 102;
	// stb r6,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r6.u8);
	// stb r6,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r6.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r14,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r14.u8);
	// li r14,33
	ctx.r14.s64 = 33;
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r10,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r10.u8);
	// stb r3,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r3.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r14,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r14.u8);
	// li r14,94
	ctx.r14.s64 = 94;
	// stb r30,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r30.u8);
	// stb r21,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r21.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r14,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r14.u8);
	// li r14,87
	ctx.r14.s64 = 87;
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r14,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r14.u8);
	// li r14,39
	ctx.r14.s64 = 39;
	// stb r11,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r11.u8);
	// stb r11,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r11.u8);
	// stb r11,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r11.u8);
	// stb r5,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r5.u8);
	// stb r14,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r14.u8);
	// li r14,71
	ctx.r14.s64 = 71;
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r22,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r22.u8);
	// stb r6,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r6.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r14,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r14.u8);
	// li r14,21
	ctx.r14.s64 = 21;
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r10,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r10.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r14,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r14.u8);
	// li r14,43
	ctx.r14.s64 = 43;
	// stb r30,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r30.u8);
	// stb r29,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r29.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r14,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r14.u8);
	// li r14,33
	ctx.r14.s64 = 33;
	// stb r31,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r31.u8);
	// stb r6,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r6.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r14,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r14.u8);
	// li r14,79
	ctx.r14.s64 = 79;
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r14,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r14.u8);
	// li r14,186
	ctx.r14.s64 = 186;
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r14,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r14.u8);
	// li r14,80
	ctx.r14.s64 = 80;
	// stb r14,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r14.u8);
	// li r14,35
	ctx.r14.s64 = 35;
	// li r26,29
	ctx.r26.s64 = 29;
	// stb r11,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r11.u8);
	// stb r11,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r11.u8);
	// stb r24,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r24.u8);
	// stb r23,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r23.u8);
	// stb r14,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r14.u8);
	// li r14,176
	ctx.r14.s64 = 176;
	// stb r26,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r26.u8);
	// li r26,67
	ctx.r26.s64 = 67;
	// stb r27,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r27.u8);
	// stb r18,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r18.u8);
	// stb r21,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r21.u8);
	// stb r14,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r14.u8);
	// li r14,13
	ctx.r14.s64 = 13;
	// stb r26,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r26.u8);
	// li r26,66
	ctx.r26.s64 = 66;
	// stb r7,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r7.u8);
	// stb r8,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r8.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r14,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r14.u8);
	// li r14,177
	ctx.r14.s64 = 177;
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r5,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r5.u8);
	// stb r31,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r14,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r14.u8);
	// li r14,30
	ctx.r14.s64 = 30;
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r10,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r10.u8);
	// stb r20,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r20.u8);
	// stb r14,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r14.u8);
	// li r14,64
	ctx.r14.s64 = 64;
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r11,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r11.u8);
	// stb r11,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r11.u8);
	// stb r14,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r14.u8);
	// li r14,160
	ctx.r14.s64 = 160;
	// stb r5,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r5.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r20,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r20.u8);
	// stb r18,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r18.u8);
	// stb r14,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r14.u8);
	// li r14,177
	ctx.r14.s64 = 177;
	// stb r21,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r21.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r14,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r14.u8);
	// stb r10,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r10.u8);
	// stb r20,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r20.u8);
	// stb r31,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r10,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r10.u8);
	// stb r19,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r19.u8);
	// stb r11,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r11.u8);
	// stb r5,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r5.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r18,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r18.u8);
	// stb r7,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r7.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r10,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r10.u8);
	// stb r5,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r5.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r16,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r16.u8);
	// stb r21,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r21.u8);
	// stb r7,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r7.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r10,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r10.u8);
	// stb r26,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r26.u8);
	// stb r5,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r5.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r24,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r24.u8);
	// stb r21,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r21.u8);
	// li r21,66
	ctx.r21.s64 = 66;
	// stb r14,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r14.u8);
	// li r14,171
	ctx.r14.s64 = 171;
	// li r26,65
	ctx.r26.s64 = 65;
	// stb r7,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r7.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r21,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r21.u8);
	// li r21,9
	ctx.r21.s64 = 9;
	// stb r14,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r14.u8);
	// li r14,63
	ctx.r14.s64 = 63;
	// stb r26,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r26.u8);
	// li r26,19
	ctx.r26.s64 = 19;
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r10,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r10.u8);
	// stb r21,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r21.u8);
	// li r21,119
	ctx.r21.s64 = 119;
	// stb r14,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r14.u8);
	// li r14,44
	ctx.r14.s64 = 44;
	// stb r11,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r11.u8);
	// stb r11,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r11.u8);
	// stb r11,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r11.u8);
	// stb r21,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r21.u8);
	// li r21,42
	ctx.r21.s64 = 42;
	// stb r5,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r5.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r26,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r26.u8);
	// stb r31,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r31.u8);
	// stb r21,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r21.u8);
	// li r21,77
	ctx.r21.s64 = 77;
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r10,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r10.u8);
	// stb r20,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r20.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r10,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r10.u8);
	// stb r19,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r19.u8);
	// stb r15,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r15.u8);
	// stb r14,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r14.u8);
	// stb r23,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r23.u8);
	// stb r11,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r11.u8);
	// stb r11,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r11.u8);
	// stb r11,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r11.u8);
	// stb r11,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r11.u8);
	// stb r24,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r24.u8);
	// stb r23,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r23.u8);
	// stb r25,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r25.u8);
	// stb r7,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r7.u8);
	// stb r31,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r31.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r10,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r10.u8);
	// stb r5,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r5.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r31.u8);
	// stb r31,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r31.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r10,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r10.u8);
	// stb r3,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r3.u8);
	// stb r11,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r11.u8);
	// stb r11,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r11.u8);
	// stb r6,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r6.u8);
	// stb r31,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r31.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r10,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r10.u8);
	// stb r3,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r3.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r6,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r6.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r29,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r29.u8);
	// stb r31,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r31.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r16,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r16.u8);
	// stb r21,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r21.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r31,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r31.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r21,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r21.u8);
	// li r21,76
	ctx.r21.s64 = 76;
	// stb r20,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r20.u8);
	// stb r20,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r20.u8);
	// li r20,65
	ctx.r20.s64 = 65;
	// stb r31,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r31.u8);
	// stb r31,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r31.u8);
	// stb r14,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r14.u8);
	// li r14,127
	ctx.r14.s64 = 127;
	// stb r21,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r21.u8);
	// li r21,65
	ctx.r21.s64 = 65;
	// stb r20,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r20.u8);
	// li r20,87
	ctx.r20.s64 = 87;
	// stb r16,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r16.u8);
	// stb r31,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r31.u8);
	// stb r14,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r14.u8);
	// li r14,85
	ctx.r14.s64 = 85;
	// stb r21,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r21.u8);
	// li r21,89
	ctx.r21.s64 = 89;
	// stb r20,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r20.u8);
	// li r20,78
	ctx.r20.s64 = 78;
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r17,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r17.u8);
	// stb r14,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r14.u8);
	// li r14,61
	ctx.r14.s64 = 61;
	// stb r21,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r21.u8);
	// li r21,82
	ctx.r21.s64 = 82;
	// stb r20,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r20.u8);
	// li r20,112
	ctx.r20.s64 = 112;
	// stb r31,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r31.u8);
	// stb r4,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r4.u8);
	// stb r14,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r14.u8);
	// li r14,226
	ctx.r14.s64 = 226;
	// stb r21,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r21.u8);
	// stb r21,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r21.u8);
	// li r21,83
	ctx.r21.s64 = 83;
	// stb r30,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r30.u8);
	// stb r23,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r23.u8);
	// stb r14,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r14.u8);
	// li r14,150
	ctx.r14.s64 = 150;
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r31,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r31.u8);
	// stb r11,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r11.u8);
	// stb r6,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r6.u8);
	// stb r14,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r14.u8);
	// li r14,94
	ctx.r14.s64 = 94;
	// stb r6,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r6.u8);
	// stb r8,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r8.u8);
	// stb r9,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r9.u8);
	// stb r9,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r9.u8);
	// stb r14,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r14.u8);
	// li r14,28
	ctx.r14.s64 = 28;
	// stb r27,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r27.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r4,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r4.u8);
	// stb r30,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r30.u8);
	// stb r14,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r14.u8);
	// li r14,250
	ctx.r14.s64 = 250;
	// stb r8,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r8.u8);
	// stb r9,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r9.u8);
	// stb r9,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r9.u8);
	// stb r27,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r27.u8);
	// stb r14,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r14.u8);
	// li r14,49
	ctx.r14.s64 = 49;
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r9,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r9.u8);
	// stb r9,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r9.u8);
	// stb r14,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r14.u8);
	// li r14,80
	ctx.r14.s64 = 80;
	// stb r22,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r22.u8);
	// stb r31,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r31.u8);
	// stb r22,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r22.u8);
	// stb r21,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r21.u8);
	// stb r14,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r14.u8);
	// stb r14,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r14.u8);
	// stb r14,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r14.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r20,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r20.u8);
	// stb r20,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r20.u8);
	// li r26,119
	ctx.r26.s64 = 119;
	// stb r6,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r6.u8);
	// li r20,195
	ctx.r20.s64 = 195;
	// stb r6,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r6.u8);
	// stb r8,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r8.u8);
	// stb r9,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r9.u8);
	// stb r9,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r9.u8);
	// stb r26,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r26.u8);
	// li r26,195
	ctx.r26.s64 = 195;
	// stb r20,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r20.u8);
	// li r20,181
	ctx.r20.s64 = 181;
	// stb r27,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r27.u8);
	// stb r31,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r31.u8);
	// stb r4,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r4.u8);
	// stb r26,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r26.u8);
	// li r26,248
	ctx.r26.s64 = 248;
	// stb r20,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r20.u8);
	// li r20,11
	ctx.r20.s64 = 11;
	// stb r30,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r30.u8);
	// stb r8,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r8.u8);
	// stb r9,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r9.u8);
	// stb r26,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r26.u8);
	// li r26,32
	ctx.r26.s64 = 32;
	// stb r20,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r20.u8);
	// li r20,43
	ctx.r20.s64 = 43;
	// stb r9,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r9.u8);
	// stb r27,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r27.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r26,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r26.u8);
	// li r26,127
	ctx.r26.s64 = 127;
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r29,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r29.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r31,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r31.u8);
	// stb r26,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r26.u8);
	// li r26,85
	ctx.r26.s64 = 85;
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r20,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r20.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r31,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r31.u8);
	// stb r26,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r26.u8);
	// li r26,61
	ctx.r26.s64 = 61;
	// stb r31,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r31.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r11,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r11.u8);
	// stb r22,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r22.u8);
	// stb r7,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r7.u8);
	// stb r31,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r31.u8);
	// stb r11,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r11.u8);
	// stb r15,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r15.u8);
	// stb r21,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r21.u8);
	// stb r6,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r6.u8);
	// stb r8,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r8.u8);
	// stb r9,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r9.u8);
	// stb r9,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r9.u8);
	// stb r27,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r27.u8);
	// stb r31,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r31.u8);
	// stb r4,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r4.u8);
	// stb r30,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r30.u8);
	// stb r8,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r8.u8);
	// stb r9,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r9.u8);
	// stb r9,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r9.u8);
	// stb r3,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r3.u8);
	// stb r11,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r11.u8);
	// stb r15,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r15.u8);
	// stb r21,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r21.u8);
	// stb r16,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r16.u8);
	// stb r31,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r31.u8);
	// stb r31,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r31.u8);
	// stb r17,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r17.u8);
	// stb r31,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r31.u8);
	// stb r4,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r4.u8);
	// stb r30,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r30.u8);
	// stb r23,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r23.u8);
	// stb r31,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r31.u8);
	// stb r31,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r31.u8);
	// stb r26,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r26.u8);
	// stb r14,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r14.u8);
	// stb r11,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r11.u8);
	// stb r24,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r24.u8);
	// stb r23,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r23.u8);
	// li r14,6
	ctx.r14.s64 = 6;
	// stb r3,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r3.u8);
	// stb r3,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r3.u8);
	// stb r3,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r3.u8);
	// li r3,79
	ctx.r3.s64 = 79;
	// stb r25,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r25.u8);
	// stb r6,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r6.u8);
	// stb r14,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r14.u8);
	// li r14,28
	ctx.r14.s64 = 28;
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r3,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r3.u8);
	// li r3,174
	ctx.r3.s64 = 174;
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r31,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r31.u8);
	// stb r14,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r14.u8);
	// li r14,97
	ctx.r14.s64 = 97;
	// stb r10,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r10.u8);
	// stb r3,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r3.u8);
	// li r3,53
	ctx.r3.s64 = 53;
	// stb r31,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r31.u8);
	// stb r30,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r30.u8);
	// stb r14,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r14.u8);
	// li r14,179
	ctx.r14.s64 = 179;
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r3,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r3.u8);
	// li r3,163
	ctx.r3.s64 = 163;
	// stb r31,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r31.u8);
	// stb r11,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r11.u8);
	// stb r14,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r14.u8);
	// li r14,19
	ctx.r14.s64 = 19;
	// stb r6,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r6.u8);
	// stb r3,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r3.u8);
	// li r3,192
	ctx.r3.s64 = 192;
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r14,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r14.u8);
	// li r14,162
	ctx.r14.s64 = 162;
	// stb r31,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r31.u8);
	// stb r10,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r10.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r6,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r6.u8);
	// stb r14,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r14.u8);
	// li r14,34
	ctx.r14.s64 = 34;
	// stb r31,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r31.u8);
	// stb r29,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r29.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r31,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r31.u8);
	// stb r31,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r31,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r31.u8);
	// stb r31,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r31.u8);
	// stb r31,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r31.u8);
	// stb r6,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r6.u8);
	// stb r31,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r31.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r10,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r10.u8);
	// stb r31,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r31.u8);
	// stb r4,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r4.u8);
	// stb r30,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r30.u8);
	// stb r8,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r8.u8);
	// stb r31,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r31.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r11,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r11.u8);
	// stb r29,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r29.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r31,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r31.u8);
	// stb r19,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r19.u8);
	// stb r31,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r31.u8);
	// stb r31,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r31.u8);
	// stb r31,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r31.u8);
	// stb r31,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r31.u8);
	// stb r11,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r11.u8);
	// stb r8,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r8.u8);
	// stb r31,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r31.u8);
	// stb r31,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r31.u8);
	// stb r14,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r14.u8);
	// stb r3,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r3.u8);
	// stb r11,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r11.u8);
	// stb r24,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r24.u8);
	// stb r24,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r24.u8);
	// li r3,98
	ctx.r3.s64 = 98;
	// stb r24,668(r1)
	PPC_STORE_U8(ctx.r1.u32 + 668, ctx.r24.u8);
	// li r24,28
	ctx.r24.s64 = 28;
	// stb r6,697(r1)
	PPC_STORE_U8(ctx.r1.u32 + 697, ctx.r6.u8);
	// li r6,226
	ctx.r6.s64 = 226;
	// stb r5,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r5.u8);
	// stb r10,663(r1)
	PPC_STORE_U8(ctx.r1.u32 + 663, ctx.r10.u8);
	// stb r3,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r3.u8);
	// li r3,67
	ctx.r3.s64 = 67;
	// stb r5,666(r1)
	PPC_STORE_U8(ctx.r1.u32 + 666, ctx.r5.u8);
	// li r5,176
	ctx.r5.s64 = 176;
	// stb r24,676(r1)
	PPC_STORE_U8(ctx.r1.u32 + 676, ctx.r24.u8);
	// li r24,193
	ctx.r24.s64 = 193;
	// stb r10,679(r1)
	PPC_STORE_U8(ctx.r1.u32 + 679, ctx.r10.u8);
	// li r10,92
	ctx.r10.s64 = 92;
	// stb r6,702(r1)
	PPC_STORE_U8(ctx.r1.u32 + 702, ctx.r6.u8);
	// li r6,251
	ctx.r6.s64 = 251;
	// stb r18,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r18.u8);
	// stb r18,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r18.u8);
	// li r18,39
	ctx.r18.s64 = 39;
	// stb r3,664(r1)
	PPC_STORE_U8(ctx.r1.u32 + 664, ctx.r3.u8);
	// li r3,35
	ctx.r3.s64 = 35;
	// stb r5,674(r1)
	PPC_STORE_U8(ctx.r1.u32 + 674, ctx.r5.u8);
	// stb r10,680(r1)
	PPC_STORE_U8(ctx.r1.u32 + 680, ctx.r10.u8);
	// li r10,29
	ctx.r10.s64 = 29;
	// stb r5,688(r1)
	PPC_STORE_U8(ctx.r1.u32 + 688, ctx.r5.u8);
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r24,695(r1)
	PPC_STORE_U8(ctx.r1.u32 + 695, ctx.r24.u8);
	// li r24,174
	ctx.r24.s64 = 174;
	// stb r27,701(r1)
	PPC_STORE_U8(ctx.r1.u32 + 701, ctx.r27.u8);
	// li r27,32
	ctx.r27.s64 = 32;
	// stb r6,709(r1)
	PPC_STORE_U8(ctx.r1.u32 + 709, ctx.r6.u8);
	// li r6,63
	ctx.r6.s64 = 63;
	// stb r23,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r23.u8);
	// stb r18,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r18.u8);
	// stb r31,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r31.u8);
	// stb r7,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r7.u8);
	// stb r31,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r31.u8);
	// stb r31,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r31.u8);
	// stb r31,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r31.u8);
	// stb r11,665(r1)
	PPC_STORE_U8(ctx.r1.u32 + 665, ctx.r11.u8);
	// stb r31,667(r1)
	PPC_STORE_U8(ctx.r1.u32 + 667, ctx.r31.u8);
	// stb r7,669(r1)
	PPC_STORE_U8(ctx.r1.u32 + 669, ctx.r7.u8);
	// stb r8,670(r1)
	PPC_STORE_U8(ctx.r1.u32 + 670, ctx.r8.u8);
	// stb r31,671(r1)
	PPC_STORE_U8(ctx.r1.u32 + 671, ctx.r31.u8);
	// stb r31,672(r1)
	PPC_STORE_U8(ctx.r1.u32 + 672, ctx.r31.u8);
	// stb r3,673(r1)
	PPC_STORE_U8(ctx.r1.u32 + 673, ctx.r3.u8);
	// stb r11,675(r1)
	PPC_STORE_U8(ctx.r1.u32 + 675, ctx.r11.u8);
	// stb r31,677(r1)
	PPC_STORE_U8(ctx.r1.u32 + 677, ctx.r31.u8);
	// stb r31,678(r1)
	PPC_STORE_U8(ctx.r1.u32 + 678, ctx.r31.u8);
	// stb r11,681(r1)
	PPC_STORE_U8(ctx.r1.u32 + 681, ctx.r11.u8);
	// stb r28,682(r1)
	PPC_STORE_U8(ctx.r1.u32 + 682, ctx.r28.u8);
	// stb r7,683(r1)
	PPC_STORE_U8(ctx.r1.u32 + 683, ctx.r7.u8);
	// stb r8,684(r1)
	PPC_STORE_U8(ctx.r1.u32 + 684, ctx.r8.u8);
	// stb r31,685(r1)
	PPC_STORE_U8(ctx.r1.u32 + 685, ctx.r31.u8);
	// stb r31,686(r1)
	PPC_STORE_U8(ctx.r1.u32 + 686, ctx.r31.u8);
	// stb r3,687(r1)
	PPC_STORE_U8(ctx.r1.u32 + 687, ctx.r3.u8);
	// stb r25,689(r1)
	PPC_STORE_U8(ctx.r1.u32 + 689, ctx.r25.u8);
	// stb r5,690(r1)
	PPC_STORE_U8(ctx.r1.u32 + 690, ctx.r5.u8);
	// stb r8,691(r1)
	PPC_STORE_U8(ctx.r1.u32 + 691, ctx.r8.u8);
	// stb r31,692(r1)
	PPC_STORE_U8(ctx.r1.u32 + 692, ctx.r31.u8);
	// stb r31,693(r1)
	PPC_STORE_U8(ctx.r1.u32 + 693, ctx.r31.u8);
	// stb r10,694(r1)
	PPC_STORE_U8(ctx.r1.u32 + 694, ctx.r10.u8);
	// stb r24,696(r1)
	PPC_STORE_U8(ctx.r1.u32 + 696, ctx.r24.u8);
	// stb r8,698(r1)
	PPC_STORE_U8(ctx.r1.u32 + 698, ctx.r8.u8);
	// stb r9,699(r1)
	PPC_STORE_U8(ctx.r1.u32 + 699, ctx.r9.u8);
	// stb r9,700(r1)
	PPC_STORE_U8(ctx.r1.u32 + 700, ctx.r9.u8);
	// stb r31,703(r1)
	PPC_STORE_U8(ctx.r1.u32 + 703, ctx.r31.u8);
	// stb r4,704(r1)
	PPC_STORE_U8(ctx.r1.u32 + 704, ctx.r4.u8);
	// stb r30,705(r1)
	PPC_STORE_U8(ctx.r1.u32 + 705, ctx.r30.u8);
	// stb r8,706(r1)
	PPC_STORE_U8(ctx.r1.u32 + 706, ctx.r8.u8);
	// stb r9,707(r1)
	PPC_STORE_U8(ctx.r1.u32 + 707, ctx.r9.u8);
	// stb r9,708(r1)
	PPC_STORE_U8(ctx.r1.u32 + 708, ctx.r9.u8);
	// stb r17,710(r1)
	PPC_STORE_U8(ctx.r1.u32 + 710, ctx.r17.u8);
	// stb r15,711(r1)
	PPC_STORE_U8(ctx.r1.u32 + 711, ctx.r15.u8);
	// stb r6,712(r1)
	PPC_STORE_U8(ctx.r1.u32 + 712, ctx.r6.u8);
	// stb r16,713(r1)
	PPC_STORE_U8(ctx.r1.u32 + 713, ctx.r16.u8);
	// stb r27,714(r1)
	PPC_STORE_U8(ctx.r1.u32 + 714, ctx.r27.u8);
	// stb r31,715(r1)
	PPC_STORE_U8(ctx.r1.u32 + 715, ctx.r31.u8);
	// stb r31,716(r1)
	PPC_STORE_U8(ctx.r1.u32 + 716, ctx.r31.u8);
	// stb r4,720(r1)
	PPC_STORE_U8(ctx.r1.u32 + 720, ctx.r4.u8);
	// li r4,85
	ctx.r4.s64 = 85;
	// stb r5,728(r1)
	PPC_STORE_U8(ctx.r1.u32 + 728, ctx.r5.u8);
	// li r5,139
	ctx.r5.s64 = 139;
	// li r27,127
	ctx.r27.s64 = 127;
	// stb r9,776(r1)
	PPC_STORE_U8(ctx.r1.u32 + 776, ctx.r9.u8);
	// stb r9,777(r1)
	PPC_STORE_U8(ctx.r1.u32 + 777, ctx.r9.u8);
	// li r9,248
	ctx.r9.s64 = 248;
	// ld r26,856(r1)
	ctx.r26.u64 = PPC_LOAD_U64(ctx.r1.u32 + 856);
	// stb r4,725(r1)
	PPC_STORE_U8(ctx.r1.u32 + 725, ctx.r4.u8);
	// li r4,57
	ctx.r4.s64 = 57;
	// stb r5,733(r1)
	PPC_STORE_U8(ctx.r1.u32 + 733, ctx.r5.u8);
	// li r5,30
	ctx.r5.s64 = 30;
	// stb r27,718(r1)
	PPC_STORE_U8(ctx.r1.u32 + 718, ctx.r27.u8);
	// addi r27,r26,32
	ctx.r27.s64 = ctx.r26.s64 + 32;
	// stb r17,717(r1)
	PPC_STORE_U8(ctx.r1.u32 + 717, ctx.r17.u8);
	// stb r31,719(r1)
	PPC_STORE_U8(ctx.r1.u32 + 719, ctx.r31.u8);
	// stb r4,726(r1)
	PPC_STORE_U8(ctx.r1.u32 + 726, ctx.r4.u8);
	// li r4,49
	ctx.r4.s64 = 49;
	// stb r5,734(r1)
	PPC_STORE_U8(ctx.r1.u32 + 734, ctx.r5.u8);
	// li r5,44
	ctx.r5.s64 = 44;
	// stb r30,721(r1)
	PPC_STORE_U8(ctx.r1.u32 + 721, ctx.r30.u8);
	// stb r23,722(r1)
	PPC_STORE_U8(ctx.r1.u32 + 722, ctx.r23.u8);
	// stb r31,723(r1)
	PPC_STORE_U8(ctx.r1.u32 + 723, ctx.r31.u8);
	// stb r4,768(r1)
	PPC_STORE_U8(ctx.r1.u32 + 768, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r5,753(r1)
	PPC_STORE_U8(ctx.r1.u32 + 753, ctx.r5.u8);
	// stb r5,779(r1)
	PPC_STORE_U8(ctx.r1.u32 + 779, ctx.r5.u8);
	// li r5,762
	ctx.r5.s64 = 762;
	// stb r31,724(r1)
	PPC_STORE_U8(ctx.r1.u32 + 724, ctx.r31.u8);
	// stb r11,727(r1)
	PPC_STORE_U8(ctx.r1.u32 + 727, ctx.r11.u8);
	// stb r8,729(r1)
	PPC_STORE_U8(ctx.r1.u32 + 729, ctx.r8.u8);
	// stb r31,730(r1)
	PPC_STORE_U8(ctx.r1.u32 + 730, ctx.r31.u8);
	// stb r31,731(r1)
	PPC_STORE_U8(ctx.r1.u32 + 731, ctx.r31.u8);
	// stb r10,732(r1)
	PPC_STORE_U8(ctx.r1.u32 + 732, ctx.r10.u8);
	// stb r31,735(r1)
	PPC_STORE_U8(ctx.r1.u32 + 735, ctx.r31.u8);
	// stb r31,736(r1)
	PPC_STORE_U8(ctx.r1.u32 + 736, ctx.r31.u8);
	// stb r31,737(r1)
	PPC_STORE_U8(ctx.r1.u32 + 737, ctx.r31.u8);
	// stb r31,738(r1)
	PPC_STORE_U8(ctx.r1.u32 + 738, ctx.r31.u8);
	// stb r28,739(r1)
	PPC_STORE_U8(ctx.r1.u32 + 739, ctx.r28.u8);
	// stb r7,740(r1)
	PPC_STORE_U8(ctx.r1.u32 + 740, ctx.r7.u8);
	// stb r8,741(r1)
	PPC_STORE_U8(ctx.r1.u32 + 741, ctx.r8.u8);
	// stb r31,742(r1)
	PPC_STORE_U8(ctx.r1.u32 + 742, ctx.r31.u8);
	// stb r31,743(r1)
	PPC_STORE_U8(ctx.r1.u32 + 743, ctx.r31.u8);
	// stb r22,744(r1)
	PPC_STORE_U8(ctx.r1.u32 + 744, ctx.r22.u8);
	// stb r20,745(r1)
	PPC_STORE_U8(ctx.r1.u32 + 745, ctx.r20.u8);
	// stb r25,746(r1)
	PPC_STORE_U8(ctx.r1.u32 + 746, ctx.r25.u8);
	// stb r28,747(r1)
	PPC_STORE_U8(ctx.r1.u32 + 747, ctx.r28.u8);
	// stb r7,748(r1)
	PPC_STORE_U8(ctx.r1.u32 + 748, ctx.r7.u8);
	// stb r8,749(r1)
	PPC_STORE_U8(ctx.r1.u32 + 749, ctx.r8.u8);
	// stb r31,750(r1)
	PPC_STORE_U8(ctx.r1.u32 + 750, ctx.r31.u8);
	// stb r31,751(r1)
	PPC_STORE_U8(ctx.r1.u32 + 751, ctx.r31.u8);
	// stb r22,752(r1)
	PPC_STORE_U8(ctx.r1.u32 + 752, ctx.r22.u8);
	// stb r25,754(r1)
	PPC_STORE_U8(ctx.r1.u32 + 754, ctx.r25.u8);
	// stb r28,755(r1)
	PPC_STORE_U8(ctx.r1.u32 + 755, ctx.r28.u8);
	// stb r7,756(r1)
	PPC_STORE_U8(ctx.r1.u32 + 756, ctx.r7.u8);
	// stb r8,757(r1)
	PPC_STORE_U8(ctx.r1.u32 + 757, ctx.r8.u8);
	// stb r31,758(r1)
	PPC_STORE_U8(ctx.r1.u32 + 758, ctx.r31.u8);
	// stb r31,759(r1)
	PPC_STORE_U8(ctx.r1.u32 + 759, ctx.r31.u8);
	// stb r22,760(r1)
	PPC_STORE_U8(ctx.r1.u32 + 760, ctx.r22.u8);
	// stb r14,761(r1)
	PPC_STORE_U8(ctx.r1.u32 + 761, ctx.r14.u8);
	// stb r25,762(r1)
	PPC_STORE_U8(ctx.r1.u32 + 762, ctx.r25.u8);
	// stb r29,763(r1)
	PPC_STORE_U8(ctx.r1.u32 + 763, ctx.r29.u8);
	// stb r31,764(r1)
	PPC_STORE_U8(ctx.r1.u32 + 764, ctx.r31.u8);
	// stb r31,765(r1)
	PPC_STORE_U8(ctx.r1.u32 + 765, ctx.r31.u8);
	// stb r31,766(r1)
	PPC_STORE_U8(ctx.r1.u32 + 766, ctx.r31.u8);
	// stb r21,767(r1)
	PPC_STORE_U8(ctx.r1.u32 + 767, ctx.r21.u8);
	// stb r31,769(r1)
	PPC_STORE_U8(ctx.r1.u32 + 769, ctx.r31.u8);
	// stb r31,770(r1)
	PPC_STORE_U8(ctx.r1.u32 + 770, ctx.r31.u8);
	// stb r31,771(r1)
	PPC_STORE_U8(ctx.r1.u32 + 771, ctx.r31.u8);
	// stb r31,772(r1)
	PPC_STORE_U8(ctx.r1.u32 + 772, ctx.r31.u8);
	// stb r15,773(r1)
	PPC_STORE_U8(ctx.r1.u32 + 773, ctx.r15.u8);
	// stb r6,774(r1)
	PPC_STORE_U8(ctx.r1.u32 + 774, ctx.r6.u8);
	// stb r8,775(r1)
	PPC_STORE_U8(ctx.r1.u32 + 775, ctx.r8.u8);
	// stb r9,778(r1)
	PPC_STORE_U8(ctx.r1.u32 + 778, ctx.r9.u8);
	// stb r25,780(r1)
	PPC_STORE_U8(ctx.r1.u32 + 780, ctx.r25.u8);
	// stb r11,781(r1)
	PPC_STORE_U8(ctx.r1.u32 + 781, ctx.r11.u8);
	// stb r28,782(r1)
	PPC_STORE_U8(ctx.r1.u32 + 782, ctx.r28.u8);
	// stb r7,783(r1)
	PPC_STORE_U8(ctx.r1.u32 + 783, ctx.r7.u8);
	// stb r8,784(r1)
	PPC_STORE_U8(ctx.r1.u32 + 784, ctx.r8.u8);
	// stb r31,785(r1)
	PPC_STORE_U8(ctx.r1.u32 + 785, ctx.r31.u8);
	// stb r10,814(r1)
	PPC_STORE_U8(ctx.r1.u32 + 814, ctx.r10.u8);
	// li r10,138
	ctx.r10.s64 = 138;
	// li r9,194
	ctx.r9.s64 = 194;
	// stb r11,800(r1)
	PPC_STORE_U8(ctx.r1.u32 + 800, ctx.r11.u8);
	// stb r11,816(r1)
	PPC_STORE_U8(ctx.r1.u32 + 816, ctx.r11.u8);
	// stb r11,827(r1)
	PPC_STORE_U8(ctx.r1.u32 + 827, ctx.r11.u8);
	// stb r11,838(r1)
	PPC_STORE_U8(ctx.r1.u32 + 838, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r10,815(r1)
	PPC_STORE_U8(ctx.r1.u32 + 815, ctx.r10.u8);
	// li r10,88
	ctx.r10.s64 = 88;
	// stb r9,788(r1)
	PPC_STORE_U8(ctx.r1.u32 + 788, ctx.r9.u8);
	// li r9,54
	ctx.r9.s64 = 54;
	// stb r3,787(r1)
	PPC_STORE_U8(ctx.r1.u32 + 787, ctx.r3.u8);
	// mr r3,r27
	ctx.r3.u64 = ctx.r27.u64;
	// stb r31,786(r1)
	PPC_STORE_U8(ctx.r1.u32 + 786, ctx.r31.u8);
	// stb r18,789(r1)
	PPC_STORE_U8(ctx.r1.u32 + 789, ctx.r18.u8);
	// stb r10,821(r1)
	PPC_STORE_U8(ctx.r1.u32 + 821, ctx.r10.u8);
	// li r10,205
	ctx.r10.s64 = 205;
	// stb r9,795(r1)
	PPC_STORE_U8(ctx.r1.u32 + 795, ctx.r9.u8);
	// li r9,59
	ctx.r9.s64 = 59;
	// stb r29,790(r1)
	PPC_STORE_U8(ctx.r1.u32 + 790, ctx.r29.u8);
	// stb r31,791(r1)
	PPC_STORE_U8(ctx.r1.u32 + 791, ctx.r31.u8);
	// stb r31,792(r1)
	PPC_STORE_U8(ctx.r1.u32 + 792, ctx.r31.u8);
	// stb r10,822(r1)
	PPC_STORE_U8(ctx.r1.u32 + 822, ctx.r10.u8);
	// li r10,55
	ctx.r10.s64 = 55;
	// stb r31,793(r1)
	PPC_STORE_U8(ctx.r1.u32 + 793, ctx.r31.u8);
	// stb r19,794(r1)
	PPC_STORE_U8(ctx.r1.u32 + 794, ctx.r19.u8);
	// stb r31,796(r1)
	PPC_STORE_U8(ctx.r1.u32 + 796, ctx.r31.u8);
	// stb r31,797(r1)
	PPC_STORE_U8(ctx.r1.u32 + 797, ctx.r31.u8);
	// stb r31,798(r1)
	PPC_STORE_U8(ctx.r1.u32 + 798, ctx.r31.u8);
	// stb r31,799(r1)
	PPC_STORE_U8(ctx.r1.u32 + 799, ctx.r31.u8);
	// stb r29,801(r1)
	PPC_STORE_U8(ctx.r1.u32 + 801, ctx.r29.u8);
	// stb r31,802(r1)
	PPC_STORE_U8(ctx.r1.u32 + 802, ctx.r31.u8);
	// stb r31,803(r1)
	PPC_STORE_U8(ctx.r1.u32 + 803, ctx.r31.u8);
	// stb r31,804(r1)
	PPC_STORE_U8(ctx.r1.u32 + 804, ctx.r31.u8);
	// stb r19,805(r1)
	PPC_STORE_U8(ctx.r1.u32 + 805, ctx.r19.u8);
	// stb r9,806(r1)
	PPC_STORE_U8(ctx.r1.u32 + 806, ctx.r9.u8);
	// stb r31,807(r1)
	PPC_STORE_U8(ctx.r1.u32 + 807, ctx.r31.u8);
	// stb r31,808(r1)
	PPC_STORE_U8(ctx.r1.u32 + 808, ctx.r31.u8);
	// stb r31,809(r1)
	PPC_STORE_U8(ctx.r1.u32 + 809, ctx.r31.u8);
	// stb r31,810(r1)
	PPC_STORE_U8(ctx.r1.u32 + 810, ctx.r31.u8);
	// stb r8,811(r1)
	PPC_STORE_U8(ctx.r1.u32 + 811, ctx.r8.u8);
	// stb r31,812(r1)
	PPC_STORE_U8(ctx.r1.u32 + 812, ctx.r31.u8);
	// stb r31,813(r1)
	PPC_STORE_U8(ctx.r1.u32 + 813, ctx.r31.u8);
	// stb r29,817(r1)
	PPC_STORE_U8(ctx.r1.u32 + 817, ctx.r29.u8);
	// stb r31,818(r1)
	PPC_STORE_U8(ctx.r1.u32 + 818, ctx.r31.u8);
	// stb r31,819(r1)
	PPC_STORE_U8(ctx.r1.u32 + 819, ctx.r31.u8);
	// stb r31,820(r1)
	PPC_STORE_U8(ctx.r1.u32 + 820, ctx.r31.u8);
	// stb r31,823(r1)
	PPC_STORE_U8(ctx.r1.u32 + 823, ctx.r31.u8);
	// stb r31,824(r1)
	PPC_STORE_U8(ctx.r1.u32 + 824, ctx.r31.u8);
	// stb r31,825(r1)
	PPC_STORE_U8(ctx.r1.u32 + 825, ctx.r31.u8);
	// stb r31,826(r1)
	PPC_STORE_U8(ctx.r1.u32 + 826, ctx.r31.u8);
	// stb r29,828(r1)
	PPC_STORE_U8(ctx.r1.u32 + 828, ctx.r29.u8);
	// stb r31,829(r1)
	PPC_STORE_U8(ctx.r1.u32 + 829, ctx.r31.u8);
	// stb r31,830(r1)
	PPC_STORE_U8(ctx.r1.u32 + 830, ctx.r31.u8);
	// stb r31,831(r1)
	PPC_STORE_U8(ctx.r1.u32 + 831, ctx.r31.u8);
	// stb r19,832(r1)
	PPC_STORE_U8(ctx.r1.u32 + 832, ctx.r19.u8);
	// stb r10,833(r1)
	PPC_STORE_U8(ctx.r1.u32 + 833, ctx.r10.u8);
	// stb r31,834(r1)
	PPC_STORE_U8(ctx.r1.u32 + 834, ctx.r31.u8);
	// stb r31,835(r1)
	PPC_STORE_U8(ctx.r1.u32 + 835, ctx.r31.u8);
	// stb r31,836(r1)
	PPC_STORE_U8(ctx.r1.u32 + 836, ctx.r31.u8);
	// stb r31,837(r1)
	PPC_STORE_U8(ctx.r1.u32 + 837, ctx.r31.u8);
	// stb r30,839(r1)
	PPC_STORE_U8(ctx.r1.u32 + 839, ctx.r30.u8);
	// stb r11,840(r1)
	PPC_STORE_U8(ctx.r1.u32 + 840, ctx.r11.u8);
	// stb r21,841(r1)
	PPC_STORE_U8(ctx.r1.u32 + 841, ctx.r21.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CC368;
	sub_82B06418(ctx, base);
	// mr r3,r26
	ctx.r3.u64 = ctx.r26.u64;
	// stw r27,20(r26)
	PPC_STORE_U32(ctx.r26.u32 + 20, ctx.r27.u32);
	// addi r1,r1,1024
	ctx.r1.s64 = ctx.r1.s64 + 1024;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CC378"))) PPC_WEAK_FUNC(sub_824CC378);
PPC_FUNC_IMPL(__imp__sub_824CC378) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824CC380;
	__savegprlr_14(ctx, base);
	// stwu r1,-448(r1)
	ea = -448 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,203
	ctx.r9.s64 = 203;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32380
	ctx.r4.s64 = ctx.r10.s64 + 32380;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CC3BC;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,32364
	ctx.r4.s64 = ctx.r11.s64 + 32364;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,288
	ctx.r3.s64 = ctx.r1.s64 + 288;
	// bl 0x8243b750
	ctx.lr = 0x824CC3D4;
	sub_8243B750(ctx, base);
	// li r7,141
	ctx.r7.s64 = 141;
	// li r11,154
	ctx.r11.s64 = 154;
	// lwz r5,288(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 288);
	// li r9,45
	ctx.r9.s64 = 45;
	// lwz r4,292(r1)
	ctx.r4.u64 = PPC_LOAD_U32(ctx.r1.u32 + 292);
	// li r29,56
	ctx.r29.s64 = 56;
	// stb r31,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r31.u8);
	// li r3,58
	ctx.r3.s64 = 58;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// stb r7,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r7.u8);
	// li r7,130
	ctx.r7.s64 = 130;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// li r6,20
	ctx.r6.s64 = 20;
	// stb r9,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r9.u8);
	// li r10,82
	ctx.r10.s64 = 82;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// li r25,83
	ctx.r25.s64 = 83;
	// stb r9,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r9.u8);
	// stb r7,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r7.u8);
	// li r7,129
	ctx.r7.s64 = 129;
	// stb r11,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// li r14,5
	ctx.r14.s64 = 5;
	// stb r6,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r6.u8);
	// li r15,115
	ctx.r15.s64 = 115;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// li r16,150
	ctx.r16.s64 = 150;
	// stb r29,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r29.u8);
	// stb r7,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r7.u8);
	// li r17,36
	ctx.r17.s64 = 36;
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r3,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r3.u8);
	// li r26,7
	ctx.r26.s64 = 7;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r7,31
	ctx.r7.s64 = 31;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// li r18,44
	ctx.r18.s64 = 44;
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// stb r25,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r25.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r14,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r14.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r15,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r15.u8);
	// stb r16,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r16.u8);
	// stb r29,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r29.u8);
	// stb r3,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r3.u8);
	// stb r17,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r17.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r8,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r8.u8);
	// stb r26,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r26.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r7,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r7.u8);
	// stb r10,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r10.u8);
	// li r10,204
	ctx.r10.s64 = 204;
	// li r28,24
	ctx.r28.s64 = 24;
	// stw r5,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r5.u32);
	// stw r4,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r4.u32);
	// li r5,28
	ctx.r5.s64 = 28;
	// li r4,39
	ctx.r4.s64 = 39;
	// stb r18,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r18.u8);
	// li r23,70
	ctx.r23.s64 = 70;
	// stb r8,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r8.u8);
	// stb r10,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r10.u8);
	// li r10,42
	ctx.r10.s64 = 42;
	// stb r28,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r28.u8);
	// li r28,35
	ctx.r28.s64 = 35;
	// li r24,64
	ctx.r24.s64 = 64;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// li r27,15
	ctx.r27.s64 = 15;
	// stb r26,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r26.u8);
	// li r19,37
	ctx.r19.s64 = 37;
	// stb r9,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r9.u8);
	// stb r10,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r10.u8);
	// li r10,113
	ctx.r10.s64 = 113;
	// li r20,30
	ctx.r20.s64 = 30;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// li r21,246
	ctx.r21.s64 = 246;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// li r22,135
	ctx.r22.s64 = 135;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r9,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r9.u8);
	// stb r10,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r10.u8);
	// li r10,255
	ctx.r10.s64 = 255;
	// stb r8,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r8.u8);
	// stb r6,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r6.u8);
	// stb r9,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r9.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r28,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r28.u8);
	// stb r4,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r4.u8);
	// stb r27,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r27.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r28,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r28.u8);
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// stb r5,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r5.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r19,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r19.u8);
	// stb r20,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r20.u8);
	// stb r23,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r23.u8);
	// stb r5,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r5.u8);
	// stb r24,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r24.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r11,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r11.u8);
	// stb r10,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r10.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// stb r21,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r21.u8);
	// stb r22,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r22.u8);
	// stb r28,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r28.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r23,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r23.u8);
	// stb r5,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r5.u8);
	// stb r24,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r24.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r4,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r4.u8);
	// stb r8,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r8.u8);
	// stb r6,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r6.u8);
	// stb r9,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r9.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r7,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r7.u8);
	// stb r18,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r18.u8);
	// stb r6,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r6.u8);
	// li r28,43
	ctx.r28.s64 = 43;
	// stb r6,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r6.u8);
	// li r6,33
	ctx.r6.s64 = 33;
	// stb r9,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r9.u8);
	// li r23,248
	ctx.r23.s64 = 248;
	// stb r9,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r9.u8);
	// li r24,72
	ctx.r24.s64 = 72;
	// stb r9,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r9.u8);
	// stb r28,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r28.u8);
	// li r28,40
	ctx.r28.s64 = 40;
	// stb r6,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r6.u8);
	// li r6,208
	ctx.r6.s64 = 208;
	// stb r9,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r9.u8);
	// li r9,2
	ctx.r9.s64 = 2;
	// stb r4,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r4.u8);
	// stb r4,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r28,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r28.u8);
	// li r28,38
	ctx.r28.s64 = 38;
	// stb r6,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r6.u8);
	// li r6,63
	ctx.r6.s64 = 63;
	// stb r5,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r5.u8);
	// li r5,203
	ctx.r5.s64 = 203;
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r28,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r28.u8);
	// addi r28,r30,32
	ctx.r28.s64 = ctx.r30.s64 + 32;
	// stb r6,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r6.u8);
	// li r6,128
	ctx.r6.s64 = 128;
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r7,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r7.u8);
	// stb r27,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r27.u8);
	// stb r11,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r11.u8);
	// stb r6,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r6.u8);
	// li r6,6
	ctx.r6.s64 = 6;
	// stb r10,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r10.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// stb r23,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r23.u8);
	// stb r24,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r24.u8);
	// stb r6,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r6.u8);
	// li r6,200
	ctx.r6.s64 = 200;
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r7,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r7.u8);
	// stb r6,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r6.u8);
	// stb r6,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r6.u8);
	// li r6,154
	ctx.r6.s64 = 154;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r20,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r20.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r6,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r6.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r8,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r8.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r26,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r26.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r29,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r29.u8);
	// stb r3,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r3.u8);
	// stb r6,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r6.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r25,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r25.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r14,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r14.u8);
	// stb r11,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r11.u8);
	// stb r11,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r11.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r15,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r15.u8);
	// stb r16,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r16.u8);
	// stb r29,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r29.u8);
	// stb r3,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r3.u8);
	// stb r17,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r17.u8);
	// stb r9,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r9.u8);
	// stb r8,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r8.u8);
	// stb r27,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r27.u8);
	// li r9,27
	ctx.r9.s64 = 27;
	// stb r11,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r11.u8);
	// stb r11,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r11.u8);
	// mr r3,r28
	ctx.r3.u64 = ctx.r28.u64;
	// stb r11,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r11.u8);
	// li r11,80
	ctx.r11.s64 = 80;
	// stb r10,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r10.u8);
	// stb r10,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r10.u8);
	// stb r9,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r9.u8);
	// li r9,67
	ctx.r9.s64 = 67;
	// stb r23,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r23.u8);
	// stb r11,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r24,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r24.u8);
	// stb r19,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r19.u8);
	// stb r9,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r9.u8);
	// li r9,247
	ctx.r9.s64 = 247;
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r11,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r9,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r9.u8);
	// li r9,199
	ctx.r9.s64 = 199;
	// stb r7,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r7.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r31,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r31.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r9,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r9.u8);
	// li r9,32
	ctx.r9.s64 = 32;
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r10,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r10.u8);
	// stb r10,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r10.u8);
	// stb r10,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r10.u8);
	// stb r9,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r9.u8);
	// li r9,253
	ctx.r9.s64 = 253;
	// stb r10,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r10.u8);
	// stb r10,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r10.u8);
	// stb r10,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r10.u8);
	// stb r21,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r21.u8);
	// stb r9,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r9.u8);
	// li r9,237
	ctx.r9.s64 = 237;
	// stb r22,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r22.u8);
	// stb r8,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r8.u8);
	// stb r11,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r11.u8);
	// stb r25,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r25.u8);
	// stb r9,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r9.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CC810;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r28,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r28.u32);
	// addi r1,r1,448
	ctx.r1.s64 = ctx.r1.s64 + 448;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CC820"))) PPC_WEAK_FUNC(sub_824CC820);
PPC_FUNC_IMPL(__imp__sub_824CC820) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e5c
	ctx.lr = 0x824CC828;
	__savegprlr_25(ctx, base);
	// stwu r1,-304(r1)
	ea = -304 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,146
	ctx.r9.s64 = 146;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32416
	ctx.r4.s64 = ctx.r10.s64 + 32416;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CC864;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,32112
	ctx.r4.s64 = ctx.r11.s64 + 32112;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,232
	ctx.r3.s64 = ctx.r1.s64 + 232;
	// bl 0x8243b750
	ctx.lr = 0x824CC87C;
	sub_8243B750(ctx, base);
	// li r9,226
	ctx.r9.s64 = 226;
	// li r11,143
	ctx.r11.s64 = 143;
	// lwz r29,232(r1)
	ctx.r29.u64 = PPC_LOAD_U32(ctx.r1.u32 + 232);
	// li r7,67
	ctx.r7.s64 = 67;
	// lwz r28,236(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 236);
	// li r8,7
	ctx.r8.s64 = 7;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r9,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r9.u8);
	// li r9,5
	ctx.r9.s64 = 5;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,130
	ctx.r11.s64 = 130;
	// stb r7,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r7.u8);
	// li r7,24
	ctx.r7.s64 = 24;
	// stb r8,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r8.u8);
	// li r6,247
	ctx.r6.s64 = 247;
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// li r3,4
	ctx.r3.s64 = 4;
	// stb r9,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r9.u8);
	// li r9,150
	ctx.r9.s64 = 150;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,25
	ctx.r11.s64 = 25;
	// stb r7,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r7.u8);
	// li r4,35
	ctx.r4.s64 = 35;
	// li r8,192
	ctx.r8.s64 = 192;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// li r7,22
	ctx.r7.s64 = 22;
	// stb r6,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r6.u8);
	// stb r9,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r9.u8);
	// li r9,6
	ctx.r9.s64 = 6;
	// stb r11,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r11.u8);
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r11,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r3,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r3.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// stb r9,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r9.u8);
	// li r9,45
	ctx.r9.s64 = 45;
	// stb r6,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r6.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r11.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// stb r11,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r11.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r3,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r3.u8);
	// stb r9,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r9.u8);
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r10,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r10.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r4,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r4.u8);
	// stb r8,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r8.u8);
	// stb r7,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r7.u8);
	// stb r5,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r5.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r5,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r5.u8);
	// li r27,252
	ctx.r27.s64 = 252;
	// stb r5,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r5.u8);
	// li r5,28
	ctx.r5.s64 = 28;
	// stw r28,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r28.u32);
	// li r28,216
	ctx.r28.s64 = 216;
	// stb r6,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r6.u8);
	// li r8,42
	ctx.r8.s64 = 42;
	// stb r6,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r6.u8);
	// li r6,204
	ctx.r6.s64 = 204;
	// stb r4,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r4.u8);
	// li r26,53
	ctx.r26.s64 = 53;
	// stb r5,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r5.u8);
	// li r5,37
	ctx.r5.s64 = 37;
	// stb r4,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r4.u8);
	// li r4,71
	ctx.r4.s64 = 71;
	// stb r27,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r27.u8);
	// li r27,251
	ctx.r27.s64 = 251;
	// stw r29,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r29.u32);
	// li r29,48
	ctx.r29.s64 = 48;
	// stb r28,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r28.u8);
	// li r25,186
	ctx.r25.s64 = 186;
	// stb r5,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r5.u8);
	// li r5,113
	ctx.r5.s64 = 113;
	// stb r28,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r28.u8);
	// li r28,20
	ctx.r28.s64 = 20;
	// stb r6,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r6.u8);
	// li r6,39
	ctx.r6.s64 = 39;
	// stb r4,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r4.u8);
	// li r4,195
	ctx.r4.s64 = 195;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r5,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r5.u8);
	// li r5,30
	ctx.r5.s64 = 30;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r9,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r9.u8);
	// stb r8,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r8.u8);
	// stb r7,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r7.u8);
	// stb r26,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r26.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// stb r27,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r27.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// stb r29,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r29.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r10.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r9,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r9.u8);
	// stb r8,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r8.u8);
	// stb r25,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r25.u8);
	// stb r26,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r26.u8);
	// stb r11,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r11.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r27,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r27.u8);
	// stb r11,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r11.u8);
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// stb r29,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r29.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r9,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r9.u8);
	// stb r8,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r8.u8);
	// stb r7,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r7.u8);
	// stb r28,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r28.u8);
	// stb r9,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r9.u8);
	// stb r10,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r10.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r6,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r6.u8);
	// stb r10,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r10.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// stb r8,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r8.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// stb r11,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r11.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r11,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r11.u8);
	// li r11,246
	ctx.r11.s64 = 246;
	// stb r10,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r10.u8);
	// stb r8,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r8.u8);
	// li r8,49
	ctx.r8.s64 = 49;
	// stb r10,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r10.u8);
	// li r10,31
	ctx.r10.s64 = 31;
	// stb r4,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r4.u8);
	// li r4,80
	ctx.r4.s64 = 80;
	// stb r11,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r11.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r5,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r5.u8);
	// li r5,146
	ctx.r5.s64 = 146;
	// stb r8,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r8.u8);
	// li r8,63
	ctx.r8.s64 = 63;
	// stb r10,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r10.u8);
	// li r10,43
	ctx.r10.s64 = 43;
	// stb r4,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r11,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r3,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r8,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r8.u8);
	// li r8,128
	ctx.r8.s64 = 128;
	// stb r10,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r10.u8);
	// li r10,11
	ctx.r10.s64 = 11;
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r9,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r9.u8);
	// stb r6,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r6.u8);
	// stb r7,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r7.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r8,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r8.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r6,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r6.u8);
	// stb r7,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r7.u8);
	// stb r28,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r28.u8);
	// stb r9,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r9.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r6,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r6.u8);
	// stb r10,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r10.u8);
	// stb r11,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CCBA0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,304
	ctx.r1.s64 = ctx.r1.s64 + 304;
	// b 0x82e28eac
	__restgprlr_25(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CCBB0"))) PPC_WEAK_FUNC(sub_824CCBB0);
PPC_FUNC_IMPL(__imp__sub_824CCBB0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824CCBB8;
	__savegprlr_29(ctx, base);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,40
	ctx.r9.s64 = 40;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32460
	ctx.r4.s64 = ctx.r10.s64 + 32460;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CCBF4;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,80
	ctx.r3.s64 = ctx.r1.s64 + 80;
	// bl 0x8243b750
	ctx.lr = 0x824CCC0C;
	sub_8243B750(ctx, base);
	// li r11,15
	ctx.r11.s64 = 15;
	// li r7,42
	ctx.r7.s64 = 42;
	// lwz r9,80(r1)
	ctx.r9.u64 = PPC_LOAD_U32(ctx.r1.u32 + 80);
	// li r10,35
	ctx.r10.s64 = 35;
	// lwz r8,84(r1)
	ctx.r8.u64 = PPC_LOAD_U32(ctx.r1.u32 + 84);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// li r5,40
	ctx.r5.s64 = 40;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r7,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r7.u8);
	// li r7,28
	ctx.r7.s64 = 28;
	// addi r4,r1,96
	ctx.r4.s64 = ctx.r1.s64 + 96;
	// stb r10,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r10.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r11,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r11.u8);
	// stb r11,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r11.u8);
	// stb r11,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r7,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r7.u8);
	// li r7,37
	ctx.r7.s64 = 37;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// li r11,246
	ctx.r11.s64 = 246;
	// stb r7,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r7.u8);
	// li r7,113
	ctx.r7.s64 = 113;
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r10,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r10.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r11,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r11.u8);
	// li r11,135
	ctx.r11.s64 = 135;
	// stb r7,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r7.u8);
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// li r11,39
	ctx.r11.s64 = 39;
	// stb r7,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r7.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stw r9,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r9.u32);
	// stw r8,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r8.u32);
	// bl 0x82b06418
	ctx.lr = 0x824CCD10;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CCD20"))) PPC_WEAK_FUNC(sub_824CCD20);
PPC_FUNC_IMPL(__imp__sub_824CCD20) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824CCD28;
	__savegprlr_26(ctx, base);
	// stwu r1,-208(r1)
	ea = -208 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r31,r3
	ctx.r31.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r31,4
	ctx.r3.s64 = ctx.r31.s64 + 4;
	// li r30,0
	ctx.r30.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,43
	ctx.r9.s64 = 43;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32512
	ctx.r4.s64 = ctx.r10.s64 + 32512;
	// stw r30,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r30.u32);
	// stw r30,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r30.u32);
	// stw r30,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r30.u32);
	// stw r11,0(r31)
	PPC_STORE_U32(ctx.r31.u32 + 0, ctx.r11.u32);
	// stw r9,16(r31)
	PPC_STORE_U32(ctx.r31.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CCD64;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,80
	ctx.r3.s64 = ctx.r1.s64 + 80;
	// bl 0x8243b750
	ctx.lr = 0x824CCD7C;
	sub_8243B750(ctx, base);
	// li r11,15
	ctx.r11.s64 = 15;
	// li r26,135
	ctx.r26.s64 = 135;
	// lwz r28,80(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 80);
	// li r10,1
	ctx.r10.s64 = 1;
	// lwz r27,84(r1)
	ctx.r27.u64 = PPC_LOAD_U32(ctx.r1.u32 + 84);
	// li r3,30
	ctx.r3.s64 = 30;
	// stb r30,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r30.u8);
	// li r6,69
	ctx.r6.s64 = 69;
	// stb r30,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r30.u8);
	// stb r11,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r11.u8);
	// li r11,35
	ctx.r11.s64 = 35;
	// stb r26,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r26.u8);
	// li r26,212
	ctx.r26.s64 = 212;
	// li r7,156
	ctx.r7.s64 = 156;
	// stb r10,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r10.u8);
	// li r8,64
	ctx.r8.s64 = 64;
	// stb r10,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r10.u8);
	// li r9,246
	ctx.r9.s64 = 246;
	// stb r30,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r30.u8);
	// stb r11,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r11.u8);
	// li r11,42
	ctx.r11.s64 = 42;
	// stb r26,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r26.u8);
	// li r26,211
	ctx.r26.s64 = 211;
	// addi r29,r31,32
	ctx.r29.s64 = ctx.r31.s64 + 32;
	// stb r30,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r30.u8);
	// li r5,43
	ctx.r5.s64 = 43;
	// stb r3,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r3.u8);
	// addi r4,r1,96
	ctx.r4.s64 = ctx.r1.s64 + 96;
	// stb r6,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r6.u8);
	// stb r11,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r11.u8);
	// li r11,28
	ctx.r11.s64 = 28;
	// stb r26,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r26.u8);
	// li r26,56
	ctx.r26.s64 = 56;
	// stb r7,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r7.u8);
	// stb r8,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r8.u8);
	// stb r30,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r30.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r26,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r26.u8);
	// li r26,57
	ctx.r26.s64 = 57;
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// stb r9,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r9.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// stb r11,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r11.u8);
	// li r11,113
	ctx.r11.s64 = 113;
	// stb r26,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r26.u8);
	// stb r9,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r9.u8);
	// stb r3,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r3.u8);
	// stb r6,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r6.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r7,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r7.u8);
	// stb r8,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r8.u8);
	// stb r11,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r11.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// stb r11,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r11.u8);
	// li r11,133
	ctx.r11.s64 = 133;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// li r10,39
	ctx.r10.s64 = 39;
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r30,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r30.u8);
	// stw r28,24(r31)
	PPC_STORE_U32(ctx.r31.u32 + 24, ctx.r28.u32);
	// stw r27,28(r31)
	PPC_STORE_U32(ctx.r31.u32 + 28, ctx.r27.u32);
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CCEAC;
	sub_82B06418(ctx, base);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stw r29,20(r31)
	PPC_STORE_U32(ctx.r31.u32 + 20, ctx.r29.u32);
	// addi r1,r1,208
	ctx.r1.s64 = ctx.r1.s64 + 208;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CCEC0"))) PPC_WEAK_FUNC(sub_824CCEC0);
PPC_FUNC_IMPL(__imp__sub_824CCEC0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e58
	ctx.lr = 0x824CCEC8;
	__savegprlr_24(ctx, base);
	// stwu r1,-336(r1)
	ea = -336 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,168
	ctx.r9.s64 = 168;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32568
	ctx.r4.s64 = ctx.r10.s64 + 32568;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CCF04;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,248
	ctx.r3.s64 = ctx.r1.s64 + 248;
	// bl 0x8243b750
	ctx.lr = 0x824CCF1C;
	sub_8243B750(ctx, base);
	// li r11,7
	ctx.r11.s64 = 7;
	// li r8,245
	ctx.r8.s64 = 245;
	// lwz r28,248(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 248);
	// li r26,86
	ctx.r26.s64 = 86;
	// lwz r27,252(r1)
	ctx.r27.u64 = PPC_LOAD_U32(ctx.r1.u32 + 252);
	// li r9,25
	ctx.r9.s64 = 25;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r11,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r11.u8);
	// li r11,73
	ctx.r11.s64 = 73;
	// stb r8,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r8.u8);
	// li r8,239
	ctx.r8.s64 = 239;
	// stb r26,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r26.u8);
	// li r6,247
	ctx.r6.s64 = 247;
	// li r29,226
	ctx.r29.s64 = 226;
	// stb r9,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r9.u8);
	// li r4,5
	ctx.r4.s64 = 5;
	// stb r9,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r9.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,154
	ctx.r11.s64 = 154;
	// stb r8,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r8.u8);
	// li r8,38
	ctx.r8.s64 = 38;
	// li r7,4
	ctx.r7.s64 = 4;
	// stb r10,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r10.u8);
	// li r3,150
	ctx.r3.s64 = 150;
	// stb r6,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r6.u8);
	// li r5,46
	ctx.r5.s64 = 46;
	// stb r29,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r29.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// li r26,127
	ctx.r26.s64 = 127;
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r4,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r4.u8);
	// stb r7,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r7.u8);
	// stb r10,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r10.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r11.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// stb r11,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r11.u8);
	// stb r6,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r6.u8);
	// stb r3,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r3.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r4,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r4.u8);
	// stb r7,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r7.u8);
	// stb r10,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r10.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r8,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r8.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// stb r5,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r5.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r26,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r26.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// stb r10,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r10.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// stb r6,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r6.u8);
	// stb r29,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r29.u8);
	// stb r6,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r6.u8);
	// li r6,74
	ctx.r6.s64 = 74;
	// li r29,133
	ctx.r29.s64 = 133;
	// stb r4,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r4.u8);
	// stb r11,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r11.u8);
	// li r4,36
	ctx.r4.s64 = 36;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r3,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r3.u8);
	// li r3,30
	ctx.r3.s64 = 30;
	// stb r6,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r6.u8);
	// li r6,250
	ctx.r6.s64 = 250;
	// stb r29,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r29.u8);
	// li r29,33
	ctx.r29.s64 = 33;
	// stb r4,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r4.u8);
	// stb r11,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r11.u8);
	// li r11,27
	ctx.r11.s64 = 27;
	// stb r4,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r4.u8);
	// li r4,71
	ctx.r4.s64 = 71;
	// stb r6,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r6.u8);
	// li r6,37
	ctx.r6.s64 = 37;
	// stb r29,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r29.u8);
	// li r29,43
	ctx.r29.s64 = 43;
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r7,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r7.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r6,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r6.u8);
	// li r6,89
	ctx.r6.s64 = 89;
	// stb r29,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r29.u8);
	// li r29,130
	ctx.r29.s64 = 130;
	// stw r28,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r28.u32);
	// stw r27,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r27.u32);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// stb r6,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r6.u8);
	// li r6,15
	ctx.r6.s64 = 15;
	// stb r29,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r29.u8);
	// li r29,32
	ctx.r29.s64 = 32;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r6,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r6.u8);
	// stb r6,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r6.u8);
	// li r6,40
	ctx.r6.s64 = 40;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r3,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r3.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r8,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r8.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// stb r5,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r5.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r4,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r4.u8);
	// stb r11,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r11.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r10,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r10.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r31,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r31.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r29,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r29.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r4,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r4.u8);
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// li r24,28
	ctx.r24.s64 = 28;
	// stb r11,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r11.u8);
	// li r11,115
	ctx.r11.s64 = 115;
	// stb r6,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r6.u8);
	// li r25,70
	ctx.r25.s64 = 70;
	// stb r6,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r6.u8);
	// li r6,235
	ctx.r6.s64 = 235;
	// stb r5,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r5.u8);
	// li r5,114
	ctx.r5.s64 = 114;
	// li r26,93
	ctx.r26.s64 = 93;
	// stb r3,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r3.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// li r11,6
	ctx.r11.s64 = 6;
	// li r27,12
	ctx.r27.s64 = 12;
	// stb r3,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r3.u8);
	// stb r6,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r6.u8);
	// li r6,11
	ctx.r6.s64 = 11;
	// li r28,42
	ctx.r28.s64 = 42;
	// stb r5,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r5.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r8,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r8.u8);
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// li r11,237
	ctx.r11.s64 = 237;
	// li r5,168
	ctx.r5.s64 = 168;
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r7,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r7.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r24,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r24.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r25,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r25.u8);
	// stb r9,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r9.u8);
	// stb r10,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r10.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r26,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r26.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r6,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r6.u8);
	// stb r27,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r27.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r28,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r28.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r8,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r8.u8);
	// stb r9,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r9.u8);
	// stb r10,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r10.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r26,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r26.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r6,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r6.u8);
	// stb r27,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r27.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r28,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r28.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r31,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r31.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r8,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r8.u8);
	// stb r8,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r8.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r7,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r7.u8);
	// stb r24,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r24.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r25,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r25.u8);
	// stb r8,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r8.u8);
	// stb r7,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r7.u8);
	// stb r6,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r6.u8);
	// stb r11,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CD298;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,336
	ctx.r1.s64 = ctx.r1.s64 + 336;
	// b 0x82e28ea8
	__restgprlr_24(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CD2A8"))) PPC_WEAK_FUNC(sub_824CD2A8);
PPC_FUNC_IMPL(__imp__sub_824CD2A8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824CD2B0;
	__savegprlr_14(ctx, base);
	// stwu r1,-720(r1)
	ea = -720 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,465
	ctx.r9.s64 = 465;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32640
	ctx.r4.s64 = ctx.r10.s64 + 32640;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CD2EC;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31976
	ctx.r4.s64 = ctx.r11.s64 + 31976;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,552
	ctx.r3.s64 = ctx.r1.s64 + 552;
	// bl 0x8243b750
	ctx.lr = 0x824CD304;
	sub_8243B750(ctx, base);
	// li r8,117
	ctx.r8.s64 = 117;
	// li r11,129
	ctx.r11.s64 = 129;
	// lwz r10,552(r1)
	ctx.r10.u64 = PPC_LOAD_U32(ctx.r1.u32 + 552);
	// li r4,7
	ctx.r4.s64 = 7;
	// lwz r9,556(r1)
	ctx.r9.u64 = PPC_LOAD_U32(ctx.r1.u32 + 556);
	// li r21,28
	ctx.r21.s64 = 28;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r29,36
	ctx.r29.s64 = 36;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r8,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r8.u8);
	// li r8,16
	ctx.r8.s64 = 16;
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,81
	ctx.r11.s64 = 81;
	// li r26,43
	ctx.r26.s64 = 43;
	// stb r4,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r4.u8);
	// li r28,25
	ctx.r28.s64 = 25;
	// stb r21,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r21.u8);
	// li r6,1
	ctx.r6.s64 = 1;
	// stb r29,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r29.u8);
	// stb r8,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r8.u8);
	// li r8,52
	ctx.r8.s64 = 52;
	// stb r11,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// li r5,30
	ctx.r5.s64 = 30;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r27,23
	ctx.r27.s64 = 23;
	// stb r26,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r26.u8);
	// li r7,33
	ctx.r7.s64 = 33;
	// stb r28,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r28.u8);
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// li r8,59
	ctx.r8.s64 = 59;
	// stb r11,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r11.u8);
	// li r22,130
	ctx.r22.s64 = 130;
	// stb r11,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r11.u8);
	// stb r6,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r6.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r8,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r8.u8);
	// li r8,31
	ctx.r8.s64 = 31;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r5,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r5.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r8,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r8.u8);
	// li r8,155
	ctx.r8.s64 = 155;
	// stb r21,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r21.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r27,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r27.u8);
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// li r8,142
	ctx.r8.s64 = 142;
	// stb r7,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r7.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r4,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r4.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r8,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r8.u8);
	// stw r10,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r10.u32);
	// li r10,38
	ctx.r10.s64 = 38;
	// stw r9,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r9.u32);
	// li r9,40
	ctx.r9.s64 = 40;
	// stb r29,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r29.u8);
	// li r29,132
	ctx.r29.s64 = 132;
	// li r8,72
	ctx.r8.s64 = 72;
	// stb r22,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r22.u8);
	// li r24,24
	ctx.r24.s64 = 24;
	// stb r28,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r28.u8);
	// stb r10,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r10.u8);
	// li r10,191
	ctx.r10.s64 = 191;
	// stb r9,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r9.u8);
	// li r9,12
	ctx.r9.s64 = 12;
	// stb r29,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r29.u8);
	// li r29,114
	ctx.r29.s64 = 114;
	// stb r8,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r8.u8);
	// li r8,27
	ctx.r8.s64 = 27;
	// li r23,46
	ctx.r23.s64 = 46;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r10,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r10.u8);
	// li r3,83
	ctx.r3.s64 = 83;
	// stb r9,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r9.u8);
	// li r10,80
	ctx.r10.s64 = 80;
	// stb r29,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r29.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// li r15,54
	ctx.r15.s64 = 54;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// li r16,166
	ctx.r16.s64 = 166;
	// stb r23,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r23.u8);
	// li r29,93
	ctx.r29.s64 = 93;
	// stb r3,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r3.u8);
	// li r25,42
	ctx.r25.s64 = 42;
	// stb r8,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r8.u8);
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r7,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r7.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r10,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r10.u8);
	// stb r26,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r26.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r9,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r9.u8);
	// stb r8,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r8.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r15,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r15.u8);
	// stb r16,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r16.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r31,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r31.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r27,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r27.u8);
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// stb r24,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r24.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r6,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r6.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r5,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r5.u8);
	// stb r29,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r29.u8);
	// stb r25,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r25.u8);
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// stb r24,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r24.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r27,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r27.u8);
	// stb r28,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r28.u8);
	// stb r6,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r6.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r29,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r29.u8);
	// li r29,13
	ctx.r29.s64 = 13;
	// stb r22,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r22.u8);
	// li r20,237
	ctx.r20.s64 = 237;
	// stb r22,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r22.u8);
	// li r17,250
	ctx.r17.s64 = 250;
	// stb r22,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r22.u8);
	// li r22,119
	ctx.r22.s64 = 119;
	// li r18,84
	ctx.r18.s64 = 84;
	// stb r5,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r5.u8);
	// stb r29,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r29.u8);
	// li r29,102
	ctx.r29.s64 = 102;
	// stb r20,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r20.u8);
	// li r19,179
	ctx.r19.s64 = 179;
	// li r20,60
	ctx.r20.s64 = 60;
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r22,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r22.u8);
	// li r22,255
	ctx.r22.s64 = 255;
	// stb r9,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r9.u8);
	// stb r29,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r29.u8);
	// li r29,53
	ctx.r29.s64 = 53;
	// stb r7,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r7.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r22,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r22.u8);
	// stb r22,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r22.u8);
	// li r22,242
	ctx.r22.s64 = 242;
	// stb r29,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r29.u8);
	// li r29,3
	ctx.r29.s64 = 3;
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r10,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r10.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r22,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r22.u8);
	// li r22,188
	ctx.r22.s64 = 188;
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// stb r11,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r11.u8);
	// stb r11,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r11.u8);
	// stb r9,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r9.u8);
	// stb r8,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r8.u8);
	// stb r29,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r29.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r3,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r3.u8);
	// stb r17,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r17.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r7,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r7.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r10,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r10.u8);
	// stb r18,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r18.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r31,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r31.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r11,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r11.u8);
	// stb r4,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r4.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r6,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r6.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r5,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r5.u8);
	// stb r19,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r19.u8);
	// stb r25,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r25.u8);
	// stb r11,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r11.u8);
	// stb r24,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r24.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r27,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r27.u8);
	// stb r21,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r21.u8);
	// stb r17,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r17.u8);
	// stb r23,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r23.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r20,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r20.u8);
	// stb r22,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r22.u8);
	// stb r6,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r6.u8);
	// stb r22,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r22.u8);
	// li r14,82
	ctx.r14.s64 = 82;
	// stb r22,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r22.u8);
	// li r22,13
	ctx.r22.s64 = 13;
	// stb r19,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r19.u8);
	// stb r20,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r20.u8);
	// stb r20,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r20.u8);
	// li r20,115
	ctx.r20.s64 = 115;
	// stb r14,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r14.u8);
	// li r14,32
	ctx.r14.s64 = 32;
	// stb r22,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r22.u8);
	// li r22,231
	ctx.r22.s64 = 231;
	// stb r19,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r19.u8);
	// li r19,79
	ctx.r19.s64 = 79;
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r14,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r14.u8);
	// li r14,152
	ctx.r14.s64 = 152;
	// stb r22,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r22.u8);
	// li r22,37
	ctx.r22.s64 = 37;
	// stb r5,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r5.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r14,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r14.u8);
	// li r14,81
	ctx.r14.s64 = 81;
	// stb r22,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r22.u8);
	// li r22,248
	ctx.r22.s64 = 248;
	// stb r25,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r25.u8);
	// stb r11,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r11.u8);
	// stb r11,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r11.u8);
	// stb r24,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r24.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// stb r14,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r14.u8);
	// stb r23,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r23.u8);
	// stb r31,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r6,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r6.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r5,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r5.u8);
	// stb r31,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r31.u8);
	// stb r9,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r9.u8);
	// stb r8,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r8.u8);
	// stb r31,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r31.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r25,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r25.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r31,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r31.u8);
	// stb r31,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r31.u8);
	// stb r31,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r31.u8);
	// stb r10,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r10.u8);
	// stb r10,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r10.u8);
	// stb r11,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r11.u8);
	// stb r11,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r11.u8);
	// stb r11,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r11.u8);
	// stb r9,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r9.u8);
	// stb r8,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r8.u8);
	// stb r29,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r29.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r31,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r31.u8);
	// stb r3,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r3.u8);
	// stb r22,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r22.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r7,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r7.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r31,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r31.u8);
	// stb r10,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r10.u8);
	// stb r19,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r19.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r11,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r11.u8);
	// stb r4,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r4.u8);
	// stb r6,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r6.u8);
	// stb r20,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r20.u8);
	// stb r5,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r5.u8);
	// li r22,132
	ctx.r22.s64 = 132;
	// stb r5,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r5.u8);
	// li r5,17
	ctx.r5.s64 = 17;
	// stb r25,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r25.u8);
	// li r25,29
	ctx.r25.s64 = 29;
	// stb r24,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r24.u8);
	// li r24,191
	ctx.r24.s64 = 191;
	// stb r21,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r21.u8);
	// li r21,72
	ctx.r21.s64 = 72;
	// stb r22,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r22.u8);
	// li r22,114
	ctx.r22.s64 = 114;
	// stb r5,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r5.u8);
	// li r5,52
	ctx.r5.s64 = 52;
	// stb r25,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r25.u8);
	// li r25,129
	ctx.r25.s64 = 129;
	// stb r6,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r6.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r22,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r22.u8);
	// li r22,117
	ctx.r22.s64 = 117;
	// stb r5,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r5.u8);
	// li r5,77
	ctx.r5.s64 = 77;
	// stb r31,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r31.u8);
	// stb r11,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r11.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r22,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r22.u8);
	// stb r5,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r5.u8);
	// li r5,36
	ctx.r5.s64 = 36;
	// stb r22,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r22.u8);
	// li r22,38
	ctx.r22.s64 = 38;
	// stb r25,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r25.u8);
	// stb r28,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r28.u8);
	// stb r6,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r6.u8);
	// stb r5,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r5.u8);
	// li r5,94
	ctx.r5.s64 = 94;
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r9,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r9.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r7,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r7.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r10,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r10.u8);
	// stb r26,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r26.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r29,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r29.u8);
	// stb r11,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r11.u8);
	// stb r11,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r11.u8);
	// stb r11,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r11.u8);
	// stb r4,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r4.u8);
	// stb r6,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r6.u8);
	// stb r5,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r5.u8);
	// stb r28,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r28.u8);
	// stb r23,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r23.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r21,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r21.u8);
	// stb r3,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r3.u8);
	// stb r8,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r8.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r31,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r31.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r22,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r22.u8);
	// stb r24,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r24.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r7,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r7.u8);
	// stb r31,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r31.u8);
	// stb r31,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r31.u8);
	// stb r10,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r10.u8);
	// stb r26,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r26.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r17,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r17.u8);
	// li r25,40
	ctx.r25.s64 = 40;
	// stb r6,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r6.u8);
	// li r5,12
	ctx.r5.s64 = 12;
	// stb r20,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r20.u8);
	// li r17,6
	ctx.r17.s64 = 6;
	// stb r6,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r6.u8);
	// li r20,248
	ctx.r20.s64 = 248;
	// li r6,181
	ctx.r6.s64 = 181;
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r25,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r25.u8);
	// stb r11,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r11.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r5,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r5.u8);
	// stb r9,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r9.u8);
	// stb r8,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r8.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r31,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r31.u8);
	// stb r15,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r15.u8);
	// stb r16,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r16.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r31,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r31.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r27,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r27.u8);
	// stb r11,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r11.u8);
	// stb r9,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r9.u8);
	// stb r8,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r8.u8);
	// stb r29,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r29.u8);
	// stb r31,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r31.u8);
	// stb r31,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r31.u8);
	// stb r3,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r3.u8);
	// stb r31,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r31.u8);
	// stb r31,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r31.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// stb r31,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r31.u8);
	// stb r7,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r7.u8);
	// stb r31,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r31.u8);
	// stb r31,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r31.u8);
	// stb r10,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r10.u8);
	// stb r18,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r18.u8);
	// stb r31,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r31.u8);
	// stb r31,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r31.u8);
	// stb r31,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r31.u8);
	// stb r31,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r31.u8);
	// stb r11,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r11.u8);
	// stb r17,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r17.u8);
	// stb r9,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r9.u8);
	// stb r8,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r8.u8);
	// stb r29,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r29.u8);
	// stb r31,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r31.u8);
	// stb r31,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r31.u8);
	// stb r3,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r3.u8);
	// stb r20,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r20.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r31,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r31.u8);
	// stb r31,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r31.u8);
	// stb r31,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r31.u8);
	// stb r7,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r7.u8);
	// stb r31,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r31.u8);
	// stb r31,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r31.u8);
	// stb r10,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r10.u8);
	// stb r19,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r19.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r31,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r31.u8);
	// stb r31,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r31.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r11,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r11.u8);
	// stb r4,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r4.u8);
	// stb r6,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r6.u8);
	// stb r28,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r28.u8);
	// stb r23,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r23.u8);
	// stb r31,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r31.u8);
	// stb r31,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r31.u8);
	// stb r21,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r21.u8);
	// stb r3,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r3.u8);
	// stb r8,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r8.u8);
	// stb r31,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r31.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r11,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r11.u8);
	// stb r11,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r11.u8);
	// stb r11,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r11.u8);
	// stb r11,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r5,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r5.u8);
	// li r5,465
	ctx.r5.s64 = 465;
	// stb r29,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r29.u8);
	// stb r4,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r4.u8);
	// stb r29,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r4,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r22,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r22.u8);
	// stb r24,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r24.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r31,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r31.u8);
	// stb r31,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r31.u8);
	// stb r31,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r31.u8);
	// stb r7,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r7.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r10,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r10.u8);
	// stb r26,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r26.u8);
	// stb r31,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r31.u8);
	// stb r31,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r31.u8);
	// stb r31,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r31.u8);
	// stb r31,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r31.u8);
	// stb r25,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r25.u8);
	// stb r31,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r31.u8);
	// stb r9,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r9.u8);
	// stb r8,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r8.u8);
	// stb r31,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r31.u8);
	// stb r31,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r31.u8);
	// stb r31,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r31.u8);
	// stb r15,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r15.u8);
	// stb r16,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r16.u8);
	// stb r31,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r31.u8);
	// stb r31,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r31.u8);
	// stb r31,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r31.u8);
	// stb r31,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r31.u8);
	// stb r27,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r27.u8);
	// stb r9,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r9.u8);
	// stb r8,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r8.u8);
	// stb r31,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r31.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r3,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r3.u8);
	// stb r31,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r31.u8);
	// stb r31,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r31.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r7,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r7.u8);
	// stb r31,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r31.u8);
	// stb r31,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r31.u8);
	// stb r10,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r10.u8);
	// stb r10,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r10.u8);
	// stb r31,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r31.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r31,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r31.u8);
	// stb r9,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r9.u8);
	// stb r8,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r8.u8);
	// stb r31,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r31.u8);
	// stb r31,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r31.u8);
	// stb r3,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r3.u8);
	// stb r31,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r31.u8);
	// stb r31,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r31.u8);
	// stb r31,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r31.u8);
	// stb r31,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r31.u8);
	// stb r7,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r7.u8);
	// stb r31,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r31.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r10,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r10.u8);
	// stb r14,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r14.u8);
	// stb r31,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r31.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r31,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r31.u8);
	// stb r31,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r31.u8);
	// stb r9,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r9.u8);
	// stb r11,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r11.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r3,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r31.u8);
	// stb r26,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r26.u8);
	// stb r18,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r18.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CDBA8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,720
	ctx.r1.s64 = ctx.r1.s64 + 720;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CDBB8"))) PPC_WEAK_FUNC(sub_824CDBB8);
PPC_FUNC_IMPL(__imp__sub_824CDBB8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e54
	ctx.lr = 0x824CDBC0;
	__savegprlr_23(ctx, base);
	// stwu r1,-320(r1)
	ea = -320 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,139
	ctx.r9.s64 = 139;
	// lis r10,-32250
	ctx.r10.s64 = -2113536000;
	// addi r4,r10,32704
	ctx.r4.s64 = ctx.r10.s64 + 32704;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CDBFC;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31884
	ctx.r4.s64 = ctx.r11.s64 + 31884;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,224
	ctx.r3.s64 = ctx.r1.s64 + 224;
	// bl 0x8243b750
	ctx.lr = 0x824CDC14;
	sub_8243B750(ctx, base);
	// li r9,117
	ctx.r9.s64 = 117;
	// li r6,129
	ctx.r6.s64 = 129;
	// lwz r25,224(r1)
	ctx.r25.u64 = PPC_LOAD_U32(ctx.r1.u32 + 224);
	// li r10,1
	ctx.r10.s64 = 1;
	// lwz r23,228(r1)
	ctx.r23.u64 = PPC_LOAD_U32(ctx.r1.u32 + 228);
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r26,7
	ctx.r26.s64 = 7;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// stb r9,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r9.u8);
	// li r27,136
	ctx.r27.s64 = 136;
	// stb r9,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r9.u8);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r6,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r6.u8);
	// li r5,130
	ctx.r5.s64 = 130;
	// li r28,119
	ctx.r28.s64 = 119;
	// stb r10,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r10.u8);
	// li r8,42
	ctx.r8.s64 = 42;
	// stb r26,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r26.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// stb r27,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r27.u8);
	// stb r9,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r9.u8);
	// li r9,52
	ctx.r9.s64 = 52;
	// li r29,24
	ctx.r29.s64 = 24;
	// stb r5,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r5.u8);
	// li r24,27
	ctx.r24.s64 = 27;
	// stb r28,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r28.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// li r3,4
	ctx.r3.s64 = 4;
	// stb r7,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r7.u8);
	// stb r9,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r9.u8);
	// li r9,73
	ctx.r9.s64 = 73;
	// li r4,28
	ctx.r4.s64 = 28;
	// stb r8,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r8.u8);
	// stb r11,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r11.u8);
	// stb r29,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r29.u8);
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r9,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r9.u8);
	// li r9,33
	ctx.r9.s64 = 33;
	// stb r24,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r24.u8);
	// stb r6,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r6.u8);
	// stb r10,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r10.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r9,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r9.u8);
	// li r9,80
	ctx.r9.s64 = 80;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r7,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r7.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r3,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r3.u8);
	// stb r9,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r9.u8);
	// li r9,43
	ctx.r9.s64 = 43;
	// stb r4,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r4.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// li r9,70
	ctx.r9.s64 = 70;
	// stb r27,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r27.u8);
	// li r27,250
	ctx.r27.s64 = 250;
	// stb r26,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r26.u8);
	// stb r5,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r5.u8);
	// li r26,246
	ctx.r26.s64 = 246;
	// stw r25,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r25.u32);
	// li r5,93
	ctx.r5.s64 = 93;
	// li r25,212
	ctx.r25.s64 = 212;
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r9,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r9.u8);
	// li r9,132
	ctx.r9.s64 = 132;
	// stb r27,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r27.u8);
	// li r27,216
	ctx.r27.s64 = 216;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// stb r11,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r11.u8);
	// stb r11,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r11.u8);
	// stb r9,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r9.u8);
	// li r9,177
	ctx.r9.s64 = 177;
	// stb r27,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r27.u8);
	// li r27,5
	ctx.r27.s64 = 5;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r28,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r28.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r9,255
	ctx.r9.s64 = 255;
	// stb r27,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r27.u8);
	// li r27,12
	ctx.r27.s64 = 12;
	// stw r23,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r23.u32);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// stb r9,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r9.u8);
	// stb r9,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r9.u8);
	// stb r9,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r9.u8);
	// stb r9,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r9.u8);
	// stb r9,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r9.u8);
	// li r9,56
	ctx.r9.s64 = 56;
	// stb r27,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r27.u8);
	// li r27,135
	ctx.r27.s64 = 135;
	// stb r7,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r7.u8);
	// stb r5,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r5.u8);
	// stb r8,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r8.u8);
	// stb r9,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r9.u8);
	// li r9,63
	ctx.r9.s64 = 63;
	// stb r27,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r27.u8);
	// stb r27,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r27.u8);
	// li r27,44
	ctx.r27.s64 = 44;
	// stb r11,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r11.u8);
	// stb r29,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r29.u8);
	// stb r9,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r9.u8);
	// li r9,29
	ctx.r9.s64 = 29;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r4,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r4.u8);
	// stb r25,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r25.u8);
	// stb r6,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r6.u8);
	// stb r9,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r9.u8);
	// stb r9,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r9.u8);
	// li r9,46
	ctx.r9.s64 = 46;
	// stb r10,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r10.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r7,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r7.u8);
	// stb r5,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r5.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// stb r26,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r26.u8);
	// stb r10,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r10.u8);
	// stb r26,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r26.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r11,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r11.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// stb r27,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r27.u8);
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// stb r29,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r29.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r28,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r28.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// li r9,107
	ctx.r9.s64 = 107;
	// stb r10,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r10.u8);
	// li r10,197
	ctx.r10.s64 = 197;
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// stb r9,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r9.u8);
	// li r9,122
	ctx.r9.s64 = 122;
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// li r10,36
	ctx.r10.s64 = 36;
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r9,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r9.u8);
	// li r9,11
	ctx.r9.s64 = 11;
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// addi r31,r30,32
	ctx.r31.s64 = ctx.r30.s64 + 32;
	// stb r5,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r5.u8);
	// li r5,139
	ctx.r5.s64 = 139;
	// stb r3,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r3.u8);
	// stb r4,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r3,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r3.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r6,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r6.u8);
	// stb r7,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r7.u8);
	// stb r9,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r9.u8);
	// stb r24,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r24.u8);
	// stb r8,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r8.u8);
	// stb r8,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r8.u8);
	// stb r10,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r10.u8);
	// stb r25,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r25.u8);
	// stb r10,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r10.u8);
	// stb r6,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r6.u8);
	// stb r8,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r8.u8);
	// stb r9,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r9.u8);
	// stb r11,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CDF14;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,320
	ctx.r1.s64 = ctx.r1.s64 + 320;
	// b 0x82e28ea4
	__restgprlr_23(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CDF28"))) PPC_WEAK_FUNC(sub_824CDF28);
PPC_FUNC_IMPL(__imp__sub_824CDF28) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e34
	ctx.lr = 0x824CDF30;
	__savegprlr_15(ctx, base);
	// stwu r1,-816(r1)
	ea = -816 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r27,r3
	ctx.r27.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r27,4
	ctx.r3.s64 = ctx.r27.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,583
	ctx.r9.s64 = 583;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32748
	ctx.r4.s64 = ctx.r10.s64 + -32748;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r27)
	PPC_STORE_U32(ctx.r27.u32 + 0, ctx.r11.u32);
	// stw r9,16(r27)
	PPC_STORE_U32(ctx.r27.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CDF6C;
	sub_822E0818(ctx, base);
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,-32764
	ctx.r4.s64 = ctx.r11.s64 + -32764;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,664
	ctx.r3.s64 = ctx.r1.s64 + 664;
	// bl 0x8243b750
	ctx.lr = 0x824CDF84;
	sub_8243B750(ctx, base);
	// li r4,34
	ctx.r4.s64 = 34;
	// li r8,8
	ctx.r8.s64 = 8;
	// lwz r3,664(r1)
	ctx.r3.u64 = PPC_LOAD_U32(ctx.r1.u32 + 664);
	// li r11,1
	ctx.r11.s64 = 1;
	// lwz r28,668(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 668);
	// li r10,5
	ctx.r10.s64 = 5;
	// stb r31,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r31.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r31,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r31.u8);
	// stb r4,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r4.u8);
	// li r4,33
	ctx.r4.s64 = 33;
	// stb r8,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r8.u8);
	// li r9,30
	ctx.r9.s64 = 30;
	// li r5,15
	ctx.r5.s64 = 15;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r7,106
	ctx.r7.s64 = 106;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// li r8,29
	ctx.r8.s64 = 29;
	// stb r6,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r6.u8);
	// stb r4,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r4.u8);
	// li r4,80
	ctx.r4.s64 = 80;
	// li r29,20
	ctx.r29.s64 = 20;
	// stb r9,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r9.u8);
	// li r30,45
	ctx.r30.s64 = 45;
	// stb r5,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r5.u8);
	// li r15,74
	ctx.r15.s64 = 74;
	// stb r7,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r7.u8);
	// li r16,77
	ctx.r16.s64 = 77;
	// stb r10,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r10.u8);
	// stb r4,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r4.u8);
	// li r4,47
	ctx.r4.s64 = 47;
	// stb r11,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r11.u8);
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r8,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r8.u8);
	// stb r4,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r4.u8);
	// li r4,53
	ctx.r4.s64 = 53;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r31,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r31.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r29,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r29.u8);
	// stb r30,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r30.u8);
	// stb r4,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r4.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r10,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r10.u8);
	// stb r15,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r15.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r10,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r10.u8);
	// stb r16,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r16.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r11,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r11.u8);
	// stb r6,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r6.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r9,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r9.u8);
	// stw r3,24(r27)
	PPC_STORE_U32(ctx.r27.u32 + 24, ctx.r3.u32);
	// li r3,95
	ctx.r3.s64 = 95;
	// stw r28,28(r27)
	PPC_STORE_U32(ctx.r27.u32 + 28, ctx.r28.u32);
	// li r24,28
	ctx.r24.s64 = 28;
	// li r28,96
	ctx.r28.s64 = 96;
	// stb r7,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r7.u8);
	// li r17,11
	ctx.r17.s64 = 11;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// li r22,36
	ctx.r22.s64 = 36;
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r3,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r3.u8);
	// li r3,14
	ctx.r3.s64 = 14;
	// li r21,39
	ctx.r21.s64 = 39;
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r26,31
	ctx.r26.s64 = 31;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// li r18,76
	ctx.r18.s64 = 76;
	// stb r17,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r17.u8);
	// li r25,94
	ctx.r25.s64 = 94;
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r8,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r8.u8);
	// stb r22,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r22.u8);
	// stb r21,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r21.u8);
	// stb r29,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r29.u8);
	// stb r30,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r30.u8);
	// stb r4,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r4.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r10,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r10.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// stb r28,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r28.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// stb r6,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r6.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// stb r31,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r9,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r9.u8);
	// stb r7,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r7.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r10,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r10.u8);
	// stb r24,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r24.u8);
	// stb r11,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r11.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r8,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r8.u8);
	// stb r3,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r3.u8);
	// stb r30,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r30.u8);
	// stb r11,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r11.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r26,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r26.u8);
	// stb r18,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r18.u8);
	// stb r5,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r5.u8);
	// stb r4,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r4.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r10,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r10.u8);
	// stb r25,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r25.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r10,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r10.u8);
	// stb r28,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r28.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// stb r6,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r6.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r9,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r9.u8);
	// stb r7,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r7.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r10,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r10.u8);
	// stb r24,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r24.u8);
	// stb r11,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r11.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r8,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r8.u8);
	// stb r3,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r3.u8);
	// stb r3,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r3.u8);
	// li r20,251
	ctx.r20.s64 = 251;
	// li r23,211
	ctx.r23.s64 = 211;
	// stb r24,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r24.u8);
	// li r19,93
	ctx.r19.s64 = 93;
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// li r3,210
	ctx.r3.s64 = 210;
	// stb r11,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r11.u8);
	// li r25,255
	ctx.r25.s64 = 255;
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r20,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r20.u8);
	// stb r23,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r23.u8);
	// li r23,22
	ctx.r23.s64 = 22;
	// stb r19,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r19.u8);
	// li r19,128
	ctx.r19.s64 = 128;
	// stb r20,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r20.u8);
	// li r20,129
	ctx.r20.s64 = 129;
	// stb r3,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r3.u8);
	// li r3,4
	ctx.r3.s64 = 4;
	// stb r25,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r25.u8);
	// stb r25,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r25.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r9,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r9.u8);
	// stb r23,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r23.u8);
	// stb r5,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r5.u8);
	// stb r4,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r4.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r10,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r10.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r10,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r10.u8);
	// stb r28,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r28.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r11,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r11.u8);
	// stb r6,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r6.u8);
	// stb r11,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r11.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r9,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r9.u8);
	// stb r7,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r7.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r10,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r10.u8);
	// stb r24,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r24.u8);
	// stb r11,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r11.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r8,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r8.u8);
	// stb r24,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r24.u8);
	// stb r25,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r25.u8);
	// stb r25,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r25.u8);
	// stb r10,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r10.u8);
	// stb r11,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r11.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r9,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r9.u8);
	// stb r23,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r23.u8);
	// stb r29,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r29.u8);
	// stb r30,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r30.u8);
	// stb r4,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r4.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r31,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r31.u8);
	// stb r10,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r10.u8);
	// stb r19,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r19.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r10,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r10.u8);
	// stb r20,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r20.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r11,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r11.u8);
	// stb r6,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r6.u8);
	// stb r11,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r11.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r9,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r9.u8);
	// stb r7,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r7.u8);
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r10,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r10.u8);
	// stb r3,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r3.u8);
	// stb r11,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r11.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r21,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r21.u8);
	// li r28,108
	ctx.r28.s64 = 108;
	// stb r21,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r21.u8);
	// li r21,109
	ctx.r21.s64 = 109;
	// stb r20,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r20.u8);
	// li r20,107
	ctx.r20.s64 = 107;
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r8,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r8.u8);
	// stb r28,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r28.u8);
	// stb r21,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r21.u8);
	// li r21,120
	ctx.r21.s64 = 120;
	// stb r28,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r28.u8);
	// li r28,118
	ctx.r28.s64 = 118;
	// stb r29,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r29.u8);
	// stb r30,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r30.u8);
	// stb r4,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r4.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r31,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r31.u8);
	// stb r10,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r10.u8);
	// stb r19,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r19.u8);
	// stb r31,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r31.u8);
	// stb r31,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r31.u8);
	// stb r10,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r10.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r6,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r6.u8);
	// stb r11,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r11.u8);
	// stb r31,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r31.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r9,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r9.u8);
	// stb r7,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r7.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r10,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r10.u8);
	// stb r3,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r3.u8);
	// stb r11,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r11.u8);
	// stb r31,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r31.u8);
	// stb r31,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r31.u8);
	// stb r8,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r8.u8);
	// stb r20,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r20.u8);
	// stb r5,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r5.u8);
	// stb r6,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r6.u8);
	// stb r11,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r11.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r9,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r9.u8);
	// stb r7,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r7.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r10,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r10.u8);
	// stb r3,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r3.u8);
	// stb r11,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r11.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r8,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r8.u8);
	// stb r6,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r6.u8);
	// stb r11,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r11.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r31,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r31.u8);
	// stb r9,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r9.u8);
	// stb r7,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r7.u8);
	// stb r31,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r31.u8);
	// stb r10,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r10.u8);
	// stb r3,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r3.u8);
	// stb r11,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r11.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r31,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r31.u8);
	// stb r8,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r8.u8);
	// stb r29,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r29.u8);
	// stb r30,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r30.u8);
	// stb r4,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r4.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r31,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r31.u8);
	// stb r10,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r10.u8);
	// stb r28,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r28.u8);
	// stb r31,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r31.u8);
	// stb r31,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r31.u8);
	// stb r10,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r10.u8);
	// stb r21,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r21.u8);
	// stb r31,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r31.u8);
	// stb r11,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r11.u8);
	// stb r6,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r6.u8);
	// stb r11,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r11.u8);
	// stb r4,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r4.u8);
	// li r28,40
	ctx.r28.s64 = 40;
	// stb r4,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r4.u8);
	// li r20,117
	ctx.r20.s64 = 117;
	// li r4,116
	ctx.r4.s64 = 116;
	// stb r26,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r26.u8);
	// stb r26,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r26.u8);
	// stb r26,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r26.u8);
	// li r26,6
	ctx.r26.s64 = 6;
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r9,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r9.u8);
	// stb r7,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r7.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r10,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r10.u8);
	// stb r3,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r3.u8);
	// stb r11,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r11.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r8,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r8.u8);
	// stb r28,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r28.u8);
	// stb r29,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r29.u8);
	// stb r30,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r30.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r10,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r10.u8);
	// stb r20,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r20.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r31.u8);
	// stb r10,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r10.u8);
	// stb r21,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r21.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r11,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r11.u8);
	// stb r6,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r6.u8);
	// stb r11,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r11.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r9,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r9.u8);
	// stb r7,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r7.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r10,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r10.u8);
	// stb r3,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r3.u8);
	// stb r11,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r11.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// stb r31,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r31.u8);
	// stb r8,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r8.u8);
	// stb r28,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r28.u8);
	// stb r29,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r29.u8);
	// stb r30,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r30.u8);
	// stb r31,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r31.u8);
	// stb r31,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r31.u8);
	// stb r10,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r10.u8);
	// stb r4,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r4.u8);
	// stb r31,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r31.u8);
	// stb r31,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r31.u8);
	// stb r10,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r10.u8);
	// stb r21,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r21.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r11,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r11.u8);
	// stb r6,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r6.u8);
	// stb r11,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r11.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r31,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r31.u8);
	// stb r9,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r9.u8);
	// stb r7,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r7.u8);
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r10,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r10.u8);
	// stb r3,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r3.u8);
	// stb r11,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r11.u8);
	// stb r31,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r31.u8);
	// stb r31,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r31.u8);
	// stb r8,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r8.u8);
	// stb r28,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r28.u8);
	// stb r29,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r29.u8);
	// stb r6,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r6.u8);
	// stb r11,410(r1)
	PPC_STORE_U8(ctx.r1.u32 + 410, ctx.r11.u8);
	// stb r31,411(r1)
	PPC_STORE_U8(ctx.r1.u32 + 411, ctx.r31.u8);
	// stb r31,412(r1)
	PPC_STORE_U8(ctx.r1.u32 + 412, ctx.r31.u8);
	// stb r9,413(r1)
	PPC_STORE_U8(ctx.r1.u32 + 413, ctx.r9.u8);
	// stb r7,414(r1)
	PPC_STORE_U8(ctx.r1.u32 + 414, ctx.r7.u8);
	// stb r31,415(r1)
	PPC_STORE_U8(ctx.r1.u32 + 415, ctx.r31.u8);
	// li r4,55
	ctx.r4.s64 = 55;
	// stb r26,416(r1)
	PPC_STORE_U8(ctx.r1.u32 + 416, ctx.r26.u8);
	// stb r3,417(r1)
	PPC_STORE_U8(ctx.r1.u32 + 417, ctx.r3.u8);
	// stb r30,418(r1)
	PPC_STORE_U8(ctx.r1.u32 + 418, ctx.r30.u8);
	// stb r11,419(r1)
	PPC_STORE_U8(ctx.r1.u32 + 419, ctx.r11.u8);
	// stb r31,420(r1)
	PPC_STORE_U8(ctx.r1.u32 + 420, ctx.r31.u8);
	// stb r4,423(r1)
	PPC_STORE_U8(ctx.r1.u32 + 423, ctx.r4.u8);
	// li r4,99
	ctx.r4.s64 = 99;
	// stb r31,421(r1)
	PPC_STORE_U8(ctx.r1.u32 + 421, ctx.r31.u8);
	// stb r8,422(r1)
	PPC_STORE_U8(ctx.r1.u32 + 422, ctx.r8.u8);
	// stb r28,424(r1)
	PPC_STORE_U8(ctx.r1.u32 + 424, ctx.r28.u8);
	// stb r5,425(r1)
	PPC_STORE_U8(ctx.r1.u32 + 425, ctx.r5.u8);
	// stb r4,439(r1)
	PPC_STORE_U8(ctx.r1.u32 + 439, ctx.r4.u8);
	// li r4,98
	ctx.r4.s64 = 98;
	// stb r6,426(r1)
	PPC_STORE_U8(ctx.r1.u32 + 426, ctx.r6.u8);
	// stb r11,427(r1)
	PPC_STORE_U8(ctx.r1.u32 + 427, ctx.r11.u8);
	// stb r31,428(r1)
	PPC_STORE_U8(ctx.r1.u32 + 428, ctx.r31.u8);
	// stb r31,429(r1)
	PPC_STORE_U8(ctx.r1.u32 + 429, ctx.r31.u8);
	// stb r4,456(r1)
	PPC_STORE_U8(ctx.r1.u32 + 456, ctx.r4.u8);
	// li r4,2
	ctx.r4.s64 = 2;
	// stb r9,430(r1)
	PPC_STORE_U8(ctx.r1.u32 + 430, ctx.r9.u8);
	// stb r7,431(r1)
	PPC_STORE_U8(ctx.r1.u32 + 431, ctx.r7.u8);
	// stb r31,432(r1)
	PPC_STORE_U8(ctx.r1.u32 + 432, ctx.r31.u8);
	// stb r10,433(r1)
	PPC_STORE_U8(ctx.r1.u32 + 433, ctx.r10.u8);
	// stb r4,458(r1)
	PPC_STORE_U8(ctx.r1.u32 + 458, ctx.r4.u8);
	// li r4,70
	ctx.r4.s64 = 70;
	// stb r11,434(r1)
	PPC_STORE_U8(ctx.r1.u32 + 434, ctx.r11.u8);
	// stb r11,435(r1)
	PPC_STORE_U8(ctx.r1.u32 + 435, ctx.r11.u8);
	// stb r31,436(r1)
	PPC_STORE_U8(ctx.r1.u32 + 436, ctx.r31.u8);
	// stb r31,437(r1)
	PPC_STORE_U8(ctx.r1.u32 + 437, ctx.r31.u8);
	// stb r4,474(r1)
	PPC_STORE_U8(ctx.r1.u32 + 474, ctx.r4.u8);
	// li r4,69
	ctx.r4.s64 = 69;
	// stb r8,438(r1)
	PPC_STORE_U8(ctx.r1.u32 + 438, ctx.r8.u8);
	// stb r22,440(r1)
	PPC_STORE_U8(ctx.r1.u32 + 440, ctx.r22.u8);
	// stb r11,441(r1)
	PPC_STORE_U8(ctx.r1.u32 + 441, ctx.r11.u8);
	// stb r5,442(r1)
	PPC_STORE_U8(ctx.r1.u32 + 442, ctx.r5.u8);
	// stb r6,443(r1)
	PPC_STORE_U8(ctx.r1.u32 + 443, ctx.r6.u8);
	// stb r11,444(r1)
	PPC_STORE_U8(ctx.r1.u32 + 444, ctx.r11.u8);
	// stb r31,445(r1)
	PPC_STORE_U8(ctx.r1.u32 + 445, ctx.r31.u8);
	// stb r31,446(r1)
	PPC_STORE_U8(ctx.r1.u32 + 446, ctx.r31.u8);
	// stb r9,447(r1)
	PPC_STORE_U8(ctx.r1.u32 + 447, ctx.r9.u8);
	// stb r7,448(r1)
	PPC_STORE_U8(ctx.r1.u32 + 448, ctx.r7.u8);
	// stb r31,449(r1)
	PPC_STORE_U8(ctx.r1.u32 + 449, ctx.r31.u8);
	// stb r10,450(r1)
	PPC_STORE_U8(ctx.r1.u32 + 450, ctx.r10.u8);
	// stb r11,451(r1)
	PPC_STORE_U8(ctx.r1.u32 + 451, ctx.r11.u8);
	// stb r11,452(r1)
	PPC_STORE_U8(ctx.r1.u32 + 452, ctx.r11.u8);
	// stb r31,453(r1)
	PPC_STORE_U8(ctx.r1.u32 + 453, ctx.r31.u8);
	// stb r31,454(r1)
	PPC_STORE_U8(ctx.r1.u32 + 454, ctx.r31.u8);
	// stb r8,455(r1)
	PPC_STORE_U8(ctx.r1.u32 + 455, ctx.r8.u8);
	// stb r22,457(r1)
	PPC_STORE_U8(ctx.r1.u32 + 457, ctx.r22.u8);
	// stb r29,459(r1)
	PPC_STORE_U8(ctx.r1.u32 + 459, ctx.r29.u8);
	// stb r6,460(r1)
	PPC_STORE_U8(ctx.r1.u32 + 460, ctx.r6.u8);
	// stb r11,461(r1)
	PPC_STORE_U8(ctx.r1.u32 + 461, ctx.r11.u8);
	// stb r31,462(r1)
	PPC_STORE_U8(ctx.r1.u32 + 462, ctx.r31.u8);
	// stb r31,463(r1)
	PPC_STORE_U8(ctx.r1.u32 + 463, ctx.r31.u8);
	// stb r9,464(r1)
	PPC_STORE_U8(ctx.r1.u32 + 464, ctx.r9.u8);
	// stb r7,465(r1)
	PPC_STORE_U8(ctx.r1.u32 + 465, ctx.r7.u8);
	// stb r31,466(r1)
	PPC_STORE_U8(ctx.r1.u32 + 466, ctx.r31.u8);
	// stb r26,467(r1)
	PPC_STORE_U8(ctx.r1.u32 + 467, ctx.r26.u8);
	// stb r3,468(r1)
	PPC_STORE_U8(ctx.r1.u32 + 468, ctx.r3.u8);
	// stb r30,469(r1)
	PPC_STORE_U8(ctx.r1.u32 + 469, ctx.r30.u8);
	// stb r11,470(r1)
	PPC_STORE_U8(ctx.r1.u32 + 470, ctx.r11.u8);
	// stb r31,471(r1)
	PPC_STORE_U8(ctx.r1.u32 + 471, ctx.r31.u8);
	// stb r31,472(r1)
	PPC_STORE_U8(ctx.r1.u32 + 472, ctx.r31.u8);
	// stb r8,473(r1)
	PPC_STORE_U8(ctx.r1.u32 + 473, ctx.r8.u8);
	// stb r28,475(r1)
	PPC_STORE_U8(ctx.r1.u32 + 475, ctx.r28.u8);
	// stb r29,476(r1)
	PPC_STORE_U8(ctx.r1.u32 + 476, ctx.r29.u8);
	// stb r6,477(r1)
	PPC_STORE_U8(ctx.r1.u32 + 477, ctx.r6.u8);
	// stb r11,478(r1)
	PPC_STORE_U8(ctx.r1.u32 + 478, ctx.r11.u8);
	// stb r31,479(r1)
	PPC_STORE_U8(ctx.r1.u32 + 479, ctx.r31.u8);
	// stb r31,480(r1)
	PPC_STORE_U8(ctx.r1.u32 + 480, ctx.r31.u8);
	// stb r9,481(r1)
	PPC_STORE_U8(ctx.r1.u32 + 481, ctx.r9.u8);
	// stb r7,482(r1)
	PPC_STORE_U8(ctx.r1.u32 + 482, ctx.r7.u8);
	// stb r31,483(r1)
	PPC_STORE_U8(ctx.r1.u32 + 483, ctx.r31.u8);
	// stb r26,484(r1)
	PPC_STORE_U8(ctx.r1.u32 + 484, ctx.r26.u8);
	// stb r3,485(r1)
	PPC_STORE_U8(ctx.r1.u32 + 485, ctx.r3.u8);
	// stb r30,486(r1)
	PPC_STORE_U8(ctx.r1.u32 + 486, ctx.r30.u8);
	// stb r11,487(r1)
	PPC_STORE_U8(ctx.r1.u32 + 487, ctx.r11.u8);
	// stb r31,488(r1)
	PPC_STORE_U8(ctx.r1.u32 + 488, ctx.r31.u8);
	// stb r31,489(r1)
	PPC_STORE_U8(ctx.r1.u32 + 489, ctx.r31.u8);
	// stb r8,490(r1)
	PPC_STORE_U8(ctx.r1.u32 + 490, ctx.r8.u8);
	// stb r4,491(r1)
	PPC_STORE_U8(ctx.r1.u32 + 491, ctx.r4.u8);
	// li r4,75
	ctx.r4.s64 = 75;
	// stb r28,492(r1)
	PPC_STORE_U8(ctx.r1.u32 + 492, ctx.r28.u8);
	// stb r29,493(r1)
	PPC_STORE_U8(ctx.r1.u32 + 493, ctx.r29.u8);
	// stb r6,494(r1)
	PPC_STORE_U8(ctx.r1.u32 + 494, ctx.r6.u8);
	// stb r11,495(r1)
	PPC_STORE_U8(ctx.r1.u32 + 495, ctx.r11.u8);
	// stb r31,496(r1)
	PPC_STORE_U8(ctx.r1.u32 + 496, ctx.r31.u8);
	// stb r31,497(r1)
	PPC_STORE_U8(ctx.r1.u32 + 497, ctx.r31.u8);
	// stb r9,498(r1)
	PPC_STORE_U8(ctx.r1.u32 + 498, ctx.r9.u8);
	// stb r7,499(r1)
	PPC_STORE_U8(ctx.r1.u32 + 499, ctx.r7.u8);
	// stb r31,500(r1)
	PPC_STORE_U8(ctx.r1.u32 + 500, ctx.r31.u8);
	// stb r26,501(r1)
	PPC_STORE_U8(ctx.r1.u32 + 501, ctx.r26.u8);
	// stb r3,502(r1)
	PPC_STORE_U8(ctx.r1.u32 + 502, ctx.r3.u8);
	// stb r30,503(r1)
	PPC_STORE_U8(ctx.r1.u32 + 503, ctx.r30.u8);
	// stb r11,504(r1)
	PPC_STORE_U8(ctx.r1.u32 + 504, ctx.r11.u8);
	// stb r31,505(r1)
	PPC_STORE_U8(ctx.r1.u32 + 505, ctx.r31.u8);
	// stb r31,506(r1)
	PPC_STORE_U8(ctx.r1.u32 + 506, ctx.r31.u8);
	// stb r8,507(r1)
	PPC_STORE_U8(ctx.r1.u32 + 507, ctx.r8.u8);
	// stb r16,508(r1)
	PPC_STORE_U8(ctx.r1.u32 + 508, ctx.r16.u8);
	// stb r28,509(r1)
	PPC_STORE_U8(ctx.r1.u32 + 509, ctx.r28.u8);
	// stb r29,510(r1)
	PPC_STORE_U8(ctx.r1.u32 + 510, ctx.r29.u8);
	// stb r6,511(r1)
	PPC_STORE_U8(ctx.r1.u32 + 511, ctx.r6.u8);
	// stb r11,512(r1)
	PPC_STORE_U8(ctx.r1.u32 + 512, ctx.r11.u8);
	// stb r31,513(r1)
	PPC_STORE_U8(ctx.r1.u32 + 513, ctx.r31.u8);
	// stb r31,514(r1)
	PPC_STORE_U8(ctx.r1.u32 + 514, ctx.r31.u8);
	// stb r9,515(r1)
	PPC_STORE_U8(ctx.r1.u32 + 515, ctx.r9.u8);
	// stb r7,516(r1)
	PPC_STORE_U8(ctx.r1.u32 + 516, ctx.r7.u8);
	// stb r31,517(r1)
	PPC_STORE_U8(ctx.r1.u32 + 517, ctx.r31.u8);
	// stb r26,518(r1)
	PPC_STORE_U8(ctx.r1.u32 + 518, ctx.r26.u8);
	// stb r3,519(r1)
	PPC_STORE_U8(ctx.r1.u32 + 519, ctx.r3.u8);
	// stb r30,520(r1)
	PPC_STORE_U8(ctx.r1.u32 + 520, ctx.r30.u8);
	// stb r11,521(r1)
	PPC_STORE_U8(ctx.r1.u32 + 521, ctx.r11.u8);
	// stb r31,522(r1)
	PPC_STORE_U8(ctx.r1.u32 + 522, ctx.r31.u8);
	// stb r31,523(r1)
	PPC_STORE_U8(ctx.r1.u32 + 523, ctx.r31.u8);
	// stb r8,524(r1)
	PPC_STORE_U8(ctx.r1.u32 + 524, ctx.r8.u8);
	// stb r18,525(r1)
	PPC_STORE_U8(ctx.r1.u32 + 525, ctx.r18.u8);
	// stb r28,526(r1)
	PPC_STORE_U8(ctx.r1.u32 + 526, ctx.r28.u8);
	// stb r29,527(r1)
	PPC_STORE_U8(ctx.r1.u32 + 527, ctx.r29.u8);
	// stb r6,528(r1)
	PPC_STORE_U8(ctx.r1.u32 + 528, ctx.r6.u8);
	// stb r11,529(r1)
	PPC_STORE_U8(ctx.r1.u32 + 529, ctx.r11.u8);
	// stb r31,530(r1)
	PPC_STORE_U8(ctx.r1.u32 + 530, ctx.r31.u8);
	// stb r31,531(r1)
	PPC_STORE_U8(ctx.r1.u32 + 531, ctx.r31.u8);
	// stb r9,532(r1)
	PPC_STORE_U8(ctx.r1.u32 + 532, ctx.r9.u8);
	// stb r7,533(r1)
	PPC_STORE_U8(ctx.r1.u32 + 533, ctx.r7.u8);
	// stb r31,534(r1)
	PPC_STORE_U8(ctx.r1.u32 + 534, ctx.r31.u8);
	// stb r26,535(r1)
	PPC_STORE_U8(ctx.r1.u32 + 535, ctx.r26.u8);
	// stb r3,536(r1)
	PPC_STORE_U8(ctx.r1.u32 + 536, ctx.r3.u8);
	// stb r30,537(r1)
	PPC_STORE_U8(ctx.r1.u32 + 537, ctx.r30.u8);
	// stb r11,538(r1)
	PPC_STORE_U8(ctx.r1.u32 + 538, ctx.r11.u8);
	// stb r31,539(r1)
	PPC_STORE_U8(ctx.r1.u32 + 539, ctx.r31.u8);
	// stb r31,540(r1)
	PPC_STORE_U8(ctx.r1.u32 + 540, ctx.r31.u8);
	// stb r8,541(r1)
	PPC_STORE_U8(ctx.r1.u32 + 541, ctx.r8.u8);
	// stb r4,542(r1)
	PPC_STORE_U8(ctx.r1.u32 + 542, ctx.r4.u8);
	// stb r28,543(r1)
	PPC_STORE_U8(ctx.r1.u32 + 543, ctx.r28.u8);
	// stb r29,544(r1)
	PPC_STORE_U8(ctx.r1.u32 + 544, ctx.r29.u8);
	// stb r6,545(r1)
	PPC_STORE_U8(ctx.r1.u32 + 545, ctx.r6.u8);
	// stb r11,546(r1)
	PPC_STORE_U8(ctx.r1.u32 + 546, ctx.r11.u8);
	// stb r31,547(r1)
	PPC_STORE_U8(ctx.r1.u32 + 547, ctx.r31.u8);
	// stb r31,548(r1)
	PPC_STORE_U8(ctx.r1.u32 + 548, ctx.r31.u8);
	// stb r9,549(r1)
	PPC_STORE_U8(ctx.r1.u32 + 549, ctx.r9.u8);
	// stb r7,550(r1)
	PPC_STORE_U8(ctx.r1.u32 + 550, ctx.r7.u8);
	// stb r31,551(r1)
	PPC_STORE_U8(ctx.r1.u32 + 551, ctx.r31.u8);
	// stb r26,552(r1)
	PPC_STORE_U8(ctx.r1.u32 + 552, ctx.r26.u8);
	// stb r3,553(r1)
	PPC_STORE_U8(ctx.r1.u32 + 553, ctx.r3.u8);
	// stb r30,554(r1)
	PPC_STORE_U8(ctx.r1.u32 + 554, ctx.r30.u8);
	// stb r11,555(r1)
	PPC_STORE_U8(ctx.r1.u32 + 555, ctx.r11.u8);
	// stb r31,556(r1)
	PPC_STORE_U8(ctx.r1.u32 + 556, ctx.r31.u8);
	// stb r31,557(r1)
	PPC_STORE_U8(ctx.r1.u32 + 557, ctx.r31.u8);
	// stb r8,558(r1)
	PPC_STORE_U8(ctx.r1.u32 + 558, ctx.r8.u8);
	// stb r15,559(r1)
	PPC_STORE_U8(ctx.r1.u32 + 559, ctx.r15.u8);
	// stb r28,560(r1)
	PPC_STORE_U8(ctx.r1.u32 + 560, ctx.r28.u8);
	// stb r5,561(r1)
	PPC_STORE_U8(ctx.r1.u32 + 561, ctx.r5.u8);
	// stb r6,562(r1)
	PPC_STORE_U8(ctx.r1.u32 + 562, ctx.r6.u8);
	// stb r11,563(r1)
	PPC_STORE_U8(ctx.r1.u32 + 563, ctx.r11.u8);
	// stb r31,564(r1)
	PPC_STORE_U8(ctx.r1.u32 + 564, ctx.r31.u8);
	// stb r31,565(r1)
	PPC_STORE_U8(ctx.r1.u32 + 565, ctx.r31.u8);
	// stb r9,566(r1)
	PPC_STORE_U8(ctx.r1.u32 + 566, ctx.r9.u8);
	// stb r7,567(r1)
	PPC_STORE_U8(ctx.r1.u32 + 567, ctx.r7.u8);
	// stb r31,568(r1)
	PPC_STORE_U8(ctx.r1.u32 + 568, ctx.r31.u8);
	// stb r10,569(r1)
	PPC_STORE_U8(ctx.r1.u32 + 569, ctx.r10.u8);
	// stb r3,570(r1)
	PPC_STORE_U8(ctx.r1.u32 + 570, ctx.r3.u8);
	// stb r10,589(r1)
	PPC_STORE_U8(ctx.r1.u32 + 589, ctx.r10.u8);
	// li r4,16
	ctx.r4.s64 = 16;
	// stb r10,609(r1)
	PPC_STORE_U8(ctx.r1.u32 + 609, ctx.r10.u8);
	// li r10,17
	ctx.r10.s64 = 17;
	// stb r5,575(r1)
	PPC_STORE_U8(ctx.r1.u32 + 575, ctx.r5.u8);
	// addi r21,r27,32
	ctx.r21.s64 = ctx.r27.s64 + 32;
	// stb r5,581(r1)
	PPC_STORE_U8(ctx.r1.u32 + 581, ctx.r5.u8);
	// stb r5,601(r1)
	PPC_STORE_U8(ctx.r1.u32 + 601, ctx.r5.u8);
	// li r5,583
	ctx.r5.s64 = 583;
	// stb r4,595(r1)
	PPC_STORE_U8(ctx.r1.u32 + 595, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r10,615(r1)
	PPC_STORE_U8(ctx.r1.u32 + 615, ctx.r10.u8);
	// li r10,44
	ctx.r10.s64 = 44;
	// stb r11,571(r1)
	PPC_STORE_U8(ctx.r1.u32 + 571, ctx.r11.u8);
	// stb r31,572(r1)
	PPC_STORE_U8(ctx.r1.u32 + 572, ctx.r31.u8);
	// stb r31,573(r1)
	PPC_STORE_U8(ctx.r1.u32 + 573, ctx.r31.u8);
	// stb r8,574(r1)
	PPC_STORE_U8(ctx.r1.u32 + 574, ctx.r8.u8);
	// stb r9,576(r1)
	PPC_STORE_U8(ctx.r1.u32 + 576, ctx.r9.u8);
	// stb r31,577(r1)
	PPC_STORE_U8(ctx.r1.u32 + 577, ctx.r31.u8);
	// stb r31,578(r1)
	PPC_STORE_U8(ctx.r1.u32 + 578, ctx.r31.u8);
	// stb r31,579(r1)
	PPC_STORE_U8(ctx.r1.u32 + 579, ctx.r31.u8);
	// stb r31,580(r1)
	PPC_STORE_U8(ctx.r1.u32 + 580, ctx.r31.u8);
	// stb r6,582(r1)
	PPC_STORE_U8(ctx.r1.u32 + 582, ctx.r6.u8);
	// stb r11,583(r1)
	PPC_STORE_U8(ctx.r1.u32 + 583, ctx.r11.u8);
	// stb r31,584(r1)
	PPC_STORE_U8(ctx.r1.u32 + 584, ctx.r31.u8);
	// stb r31,585(r1)
	PPC_STORE_U8(ctx.r1.u32 + 585, ctx.r31.u8);
	// stb r9,586(r1)
	PPC_STORE_U8(ctx.r1.u32 + 586, ctx.r9.u8);
	// stb r7,587(r1)
	PPC_STORE_U8(ctx.r1.u32 + 587, ctx.r7.u8);
	// stb r31,588(r1)
	PPC_STORE_U8(ctx.r1.u32 + 588, ctx.r31.u8);
	// stb r3,590(r1)
	PPC_STORE_U8(ctx.r1.u32 + 590, ctx.r3.u8);
	// stb r11,591(r1)
	PPC_STORE_U8(ctx.r1.u32 + 591, ctx.r11.u8);
	// stb r31,592(r1)
	PPC_STORE_U8(ctx.r1.u32 + 592, ctx.r31.u8);
	// stb r31,593(r1)
	PPC_STORE_U8(ctx.r1.u32 + 593, ctx.r31.u8);
	// stb r8,594(r1)
	PPC_STORE_U8(ctx.r1.u32 + 594, ctx.r8.u8);
	// stb r9,596(r1)
	PPC_STORE_U8(ctx.r1.u32 + 596, ctx.r9.u8);
	// stb r31,597(r1)
	PPC_STORE_U8(ctx.r1.u32 + 597, ctx.r31.u8);
	// stb r31,598(r1)
	PPC_STORE_U8(ctx.r1.u32 + 598, ctx.r31.u8);
	// stb r31,599(r1)
	PPC_STORE_U8(ctx.r1.u32 + 599, ctx.r31.u8);
	// stb r31,600(r1)
	PPC_STORE_U8(ctx.r1.u32 + 600, ctx.r31.u8);
	// stb r6,602(r1)
	PPC_STORE_U8(ctx.r1.u32 + 602, ctx.r6.u8);
	// stb r11,603(r1)
	PPC_STORE_U8(ctx.r1.u32 + 603, ctx.r11.u8);
	// stb r31,604(r1)
	PPC_STORE_U8(ctx.r1.u32 + 604, ctx.r31.u8);
	// stb r31,605(r1)
	PPC_STORE_U8(ctx.r1.u32 + 605, ctx.r31.u8);
	// stb r9,606(r1)
	PPC_STORE_U8(ctx.r1.u32 + 606, ctx.r9.u8);
	// stb r7,607(r1)
	PPC_STORE_U8(ctx.r1.u32 + 607, ctx.r7.u8);
	// stb r31,608(r1)
	PPC_STORE_U8(ctx.r1.u32 + 608, ctx.r31.u8);
	// stb r3,610(r1)
	PPC_STORE_U8(ctx.r1.u32 + 610, ctx.r3.u8);
	// stb r11,611(r1)
	PPC_STORE_U8(ctx.r1.u32 + 611, ctx.r11.u8);
	// stb r31,612(r1)
	PPC_STORE_U8(ctx.r1.u32 + 612, ctx.r31.u8);
	// stb r31,613(r1)
	PPC_STORE_U8(ctx.r1.u32 + 613, ctx.r31.u8);
	// stb r8,614(r1)
	PPC_STORE_U8(ctx.r1.u32 + 614, ctx.r8.u8);
	// stb r9,616(r1)
	PPC_STORE_U8(ctx.r1.u32 + 616, ctx.r9.u8);
	// stb r31,617(r1)
	PPC_STORE_U8(ctx.r1.u32 + 617, ctx.r31.u8);
	// stb r31,618(r1)
	PPC_STORE_U8(ctx.r1.u32 + 618, ctx.r31.u8);
	// stb r31,619(r1)
	PPC_STORE_U8(ctx.r1.u32 + 619, ctx.r31.u8);
	// stb r31,620(r1)
	PPC_STORE_U8(ctx.r1.u32 + 620, ctx.r31.u8);
	// stb r29,621(r1)
	PPC_STORE_U8(ctx.r1.u32 + 621, ctx.r29.u8);
	// stb r6,622(r1)
	PPC_STORE_U8(ctx.r1.u32 + 622, ctx.r6.u8);
	// stb r11,623(r1)
	PPC_STORE_U8(ctx.r1.u32 + 623, ctx.r11.u8);
	// stb r31,624(r1)
	PPC_STORE_U8(ctx.r1.u32 + 624, ctx.r31.u8);
	// stb r31,625(r1)
	PPC_STORE_U8(ctx.r1.u32 + 625, ctx.r31.u8);
	// stb r9,626(r1)
	PPC_STORE_U8(ctx.r1.u32 + 626, ctx.r9.u8);
	// stb r7,627(r1)
	PPC_STORE_U8(ctx.r1.u32 + 627, ctx.r7.u8);
	// stb r31,628(r1)
	PPC_STORE_U8(ctx.r1.u32 + 628, ctx.r31.u8);
	// stb r26,629(r1)
	PPC_STORE_U8(ctx.r1.u32 + 629, ctx.r26.u8);
	// stb r3,630(r1)
	PPC_STORE_U8(ctx.r1.u32 + 630, ctx.r3.u8);
	// stb r30,631(r1)
	PPC_STORE_U8(ctx.r1.u32 + 631, ctx.r30.u8);
	// stb r11,632(r1)
	PPC_STORE_U8(ctx.r1.u32 + 632, ctx.r11.u8);
	// stb r31,633(r1)
	PPC_STORE_U8(ctx.r1.u32 + 633, ctx.r31.u8);
	// stb r31,634(r1)
	PPC_STORE_U8(ctx.r1.u32 + 634, ctx.r31.u8);
	// stb r8,635(r1)
	PPC_STORE_U8(ctx.r1.u32 + 635, ctx.r8.u8);
	// stb r10,636(r1)
	PPC_STORE_U8(ctx.r1.u32 + 636, ctx.r10.u8);
	// stb r28,637(r1)
	PPC_STORE_U8(ctx.r1.u32 + 637, ctx.r28.u8);
	// stb r29,638(r1)
	PPC_STORE_U8(ctx.r1.u32 + 638, ctx.r29.u8);
	// stb r30,639(r1)
	PPC_STORE_U8(ctx.r1.u32 + 639, ctx.r30.u8);
	// stb r11,640(r1)
	PPC_STORE_U8(ctx.r1.u32 + 640, ctx.r11.u8);
	// stb r25,641(r1)
	PPC_STORE_U8(ctx.r1.u32 + 641, ctx.r25.u8);
	// stb r25,642(r1)
	PPC_STORE_U8(ctx.r1.u32 + 642, ctx.r25.u8);
	// stb r25,643(r1)
	PPC_STORE_U8(ctx.r1.u32 + 643, ctx.r25.u8);
	// stb r30,644(r1)
	PPC_STORE_U8(ctx.r1.u32 + 644, ctx.r30.u8);
	// stb r28,645(r1)
	PPC_STORE_U8(ctx.r1.u32 + 645, ctx.r28.u8);
	// stb r11,652(r1)
	PPC_STORE_U8(ctx.r1.u32 + 652, ctx.r11.u8);
	// li r11,179
	ctx.r11.s64 = 179;
	// li r10,18
	ctx.r10.s64 = 18;
	// stb r3,660(r1)
	PPC_STORE_U8(ctx.r1.u32 + 660, ctx.r3.u8);
	// mr r3,r21
	ctx.r3.u64 = ctx.r21.u64;
	// stb r24,646(r1)
	PPC_STORE_U8(ctx.r1.u32 + 646, ctx.r24.u8);
	// stb r31,647(r1)
	PPC_STORE_U8(ctx.r1.u32 + 647, ctx.r31.u8);
	// stb r31,648(r1)
	PPC_STORE_U8(ctx.r1.u32 + 648, ctx.r31.u8);
	// stb r11,656(r1)
	PPC_STORE_U8(ctx.r1.u32 + 656, ctx.r11.u8);
	// li r11,42
	ctx.r11.s64 = 42;
	// stb r10,650(r1)
	PPC_STORE_U8(ctx.r1.u32 + 650, ctx.r10.u8);
	// li r10,114
	ctx.r10.s64 = 114;
	// stb r22,649(r1)
	PPC_STORE_U8(ctx.r1.u32 + 649, ctx.r22.u8);
	// stb r31,653(r1)
	PPC_STORE_U8(ctx.r1.u32 + 653, ctx.r31.u8);
	// stb r31,654(r1)
	PPC_STORE_U8(ctx.r1.u32 + 654, ctx.r31.u8);
	// stb r11,657(r1)
	PPC_STORE_U8(ctx.r1.u32 + 657, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r10,651(r1)
	PPC_STORE_U8(ctx.r1.u32 + 651, ctx.r10.u8);
	// stb r9,655(r1)
	PPC_STORE_U8(ctx.r1.u32 + 655, ctx.r9.u8);
	// stb r23,658(r1)
	PPC_STORE_U8(ctx.r1.u32 + 658, ctx.r23.u8);
	// stb r23,659(r1)
	PPC_STORE_U8(ctx.r1.u32 + 659, ctx.r23.u8);
	// stb r17,661(r1)
	PPC_STORE_U8(ctx.r1.u32 + 661, ctx.r17.u8);
	// stb r11,662(r1)
	PPC_STORE_U8(ctx.r1.u32 + 662, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CE9B4;
	sub_82B06418(ctx, base);
	// mr r3,r27
	ctx.r3.u64 = ctx.r27.u64;
	// stw r21,20(r27)
	PPC_STORE_U32(ctx.r27.u32 + 20, ctx.r21.u32);
	// addi r1,r1,816
	ctx.r1.s64 = ctx.r1.s64 + 816;
	// b 0x82e28e84
	__restgprlr_15(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CE9C8"))) PPC_WEAK_FUNC(sub_824CE9C8);
PPC_FUNC_IMPL(__imp__sub_824CE9C8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e38
	ctx.lr = 0x824CE9D0;
	__savegprlr_16(ctx, base);
	// stwu r1,-528(r1)
	ea = -528 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,291
	ctx.r9.s64 = 291;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32696
	ctx.r4.s64 = ctx.r10.s64 + -32696;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CEA0C;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,376
	ctx.r3.s64 = ctx.r1.s64 + 376;
	// bl 0x8243b750
	ctx.lr = 0x824CEA24;
	sub_8243B750(ctx, base);
	// li r10,249
	ctx.r10.s64 = 249;
	// li r11,28
	ctx.r11.s64 = 28;
	// lwz r5,376(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 376);
	// li r7,80
	ctx.r7.s64 = 80;
	// lwz r3,380(r1)
	ctx.r3.u64 = PPC_LOAD_U32(ctx.r1.u32 + 380);
	// li r27,30
	ctx.r27.s64 = 30;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r6,31
	ctx.r6.s64 = 31;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r10,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r10.u8);
	// li r10,33
	ctx.r10.s64 = 33;
	// stb r11,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// li r22,7
	ctx.r22.s64 = 7;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r27,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r27.u8);
	// li r23,27
	ctx.r23.s64 = 27;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// stb r10,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r10.u8);
	// li r10,18
	ctx.r10.s64 = 18;
	// li r16,45
	ctx.r16.s64 = 45;
	// stb r11,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r11.u8);
	// li r9,25
	ctx.r9.s64 = 25;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r24,53
	ctx.r24.s64 = 53;
	// stb r22,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r22.u8);
	// li r4,146
	ctx.r4.s64 = 146;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// stb r10,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r10.u8);
	// li r10,189
	ctx.r10.s64 = 189;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// stb r7,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r7.u8);
	// stb r7,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r7.u8);
	// stb r27,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r27.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r31,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r31.u8);
	// stb r7,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r7.u8);
	// stb r7,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r7.u8);
	// stb r8,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r8.u8);
	// stb r23,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r23.u8);
	// stb r31,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r16,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r16.u8);
	// stb r10,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r10.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// stb r24,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r24.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r6,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r6.u8);
	// stb r4,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r4.u8);
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r31,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r31.u8);
	// stb r6,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r6.u8);
	// stw r5,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r5.u32);
	// li r5,232
	ctx.r5.s64 = 232;
	// stw r3,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r3.u32);
	// li r10,1
	ctx.r10.s64 = 1;
	// li r25,149
	ctx.r25.s64 = 149;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// li r26,127
	ctx.r26.s64 = 127;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// li r3,5
	ctx.r3.s64 = 5;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// stb r5,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r5.u8);
	// li r5,179
	ctx.r5.s64 = 179;
	// li r21,135
	ctx.r21.s64 = 135;
	// stb r10,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r10.u8);
	// li r28,4
	ctx.r28.s64 = 4;
	// stb r25,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r25.u8);
	// li r29,247
	ctx.r29.s64 = 247;
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// li r17,67
	ctx.r17.s64 = 67;
	// stb r27,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r27.u8);
	// stb r5,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r5.u8);
	// li r5,216
	ctx.r5.s64 = 216;
	// li r20,12
	ctx.r20.s64 = 12;
	// stb r26,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r26.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r3,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r3.u8);
	// stb r28,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r28.u8);
	// stb r5,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r5.u8);
	// li r5,246
	ctx.r5.s64 = 246;
	// stb r10,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r10.u8);
	// stb r11,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r11.u8);
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// stb r29,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r29.u8);
	// stb r7,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r7.u8);
	// stb r7,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r7.u8);
	// stb r7,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r7.u8);
	// stb r8,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r8.u8);
	// stb r23,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r23.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r17,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r17.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r9,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r9.u8);
	// stb r24,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r24.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r6,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r6.u8);
	// stb r4,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r4.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r6,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r6.u8);
	// stb r25,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r25.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r31,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r31.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r27,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r27.u8);
	// stb r26,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r26.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r3,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r3.u8);
	// stb r20,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r20.u8);
	// stb r10,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r10.u8);
	// stb r11,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r11.u8);
	// stb r11,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r11.u8);
	// stb r5,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r5.u8);
	// stb r21,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r21.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r11,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r11.u8);
	// stb r11,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r11.u8);
	// stb r5,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r5.u8);
	// stb r21,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r21.u8);
	// stb r8,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r8.u8);
	// stb r9,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r9.u8);
	// stb r24,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r24.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r5,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r5.u8);
	// li r5,133
	ctx.r5.s64 = 133;
	// stb r17,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r17.u8);
	// li r17,42
	ctx.r17.s64 = 42;
	// stb r4,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r4.u8);
	// li r4,6
	ctx.r4.s64 = 6;
	// stb r20,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r20.u8);
	// li r18,97
	ctx.r18.s64 = 97;
	// li r19,32
	ctx.r19.s64 = 32;
	// stb r6,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r6.u8);
	// stb r5,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r5.u8);
	// li r5,39
	ctx.r5.s64 = 39;
	// stb r17,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r17.u8);
	// li r20,226
	ctx.r20.s64 = 226;
	// li r21,150
	ctx.r21.s64 = 150;
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// li r17,113
	ctx.r17.s64 = 113;
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r6,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r6.u8);
	// stb r25,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r25.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r27,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r27.u8);
	// stb r26,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r26.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r3,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r3.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// stb r11,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r11.u8);
	// stb r7,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r7.u8);
	// stb r8,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r8.u8);
	// stb r18,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r18.u8);
	// stb r4,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r4.u8);
	// stb r5,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r5.u8);
	// stb r5,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r5.u8);
	// stb r7,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r7.u8);
	// stb r8,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r8.u8);
	// stb r22,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r22.u8);
	// stb r10,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r10.u8);
	// stb r19,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r19.u8);
	// stb r9,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r9.u8);
	// stb r9,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r9.u8);
	// stb r10,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r10.u8);
	// stb r11,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r11.u8);
	// stb r11,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r11.u8);
	// stb r29,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r29.u8);
	// stb r20,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r20.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r3,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r3.u8);
	// stb r28,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r28.u8);
	// stb r10,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r10.u8);
	// stb r11,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r11.u8);
	// stb r11,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r11.u8);
	// stb r29,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r29.u8);
	// stb r21,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r21.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r4,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r4.u8);
	// stb r28,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r28.u8);
	// stb r16,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r16.u8);
	// stb r10,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r10.u8);
	// stb r11,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r11.u8);
	// stb r11,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r11.u8);
	// stb r11,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r11.u8);
	// stb r9,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r9.u8);
	// stb r23,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r23.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r17,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r17.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r31,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r31.u8);
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// stb r31,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r31.u8);
	// stb r8,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r8.u8);
	// stb r31,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r31.u8);
	// stb r4,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r4.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r18,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r18.u8);
	// stb r7,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r7.u8);
	// li r7,130
	ctx.r7.s64 = 130;
	// stb r6,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r6.u8);
	// stb r6,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r6.u8);
	// li r6,2
	ctx.r6.s64 = 2;
	// stb r19,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r19.u8);
	// li r19,56
	ctx.r19.s64 = 56;
	// stb r24,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r24.u8);
	// li r24,147
	ctx.r24.s64 = 147;
	// stb r7,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r7.u8);
	// li r7,154
	ctx.r7.s64 = 154;
	// stb r4,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r6,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r6.u8);
	// li r6,46
	ctx.r6.s64 = 46;
	// stb r5,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r5.u8);
	// stb r5,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r5.u8);
	// li r5,291
	ctx.r5.s64 = 291;
	// stb r7,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r7.u8);
	// li r7,245
	ctx.r7.s64 = 245;
	// stb r22,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r22.u8);
	// addi r22,r30,32
	ctx.r22.s64 = ctx.r30.s64 + 32;
	// stb r8,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r8.u8);
	// stb r10,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r10.u8);
	// stb r9,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r9.u8);
	// stb r7,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r7.u8);
	// li r7,239
	ctx.r7.s64 = 239;
	// stb r9,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r9.u8);
	// stb r10,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r10.u8);
	// stb r11,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r11.u8);
	// stb r11,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r11.u8);
	// stb r7,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r7.u8);
	// li r7,38
	ctx.r7.s64 = 38;
	// stb r29,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r29.u8);
	// stb r20,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r20.u8);
	// stb r31,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r31.u8);
	// stb r3,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r3.u8);
	// stb r7,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r7.u8);
	// li r7,24
	ctx.r7.s64 = 24;
	// stb r28,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r28.u8);
	// stb r10,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r10.u8);
	// stb r11,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r11.u8);
	// stb r11,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r11.u8);
	// stb r7,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r7.u8);
	// li r7,155
	ctx.r7.s64 = 155;
	// stb r29,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r29.u8);
	// stb r21,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r21.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r3,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r3.u8);
	// stb r7,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r7.u8);
	// li r7,58
	ctx.r7.s64 = 58;
	// stb r28,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r28.u8);
	// stb r10,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r10.u8);
	// stb r11,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r11.u8);
	// stb r11,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r11.u8);
	// stb r7,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r7.u8);
	// stb r7,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r7.u8);
	// li r7,36
	ctx.r7.s64 = 36;
	// stb r8,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r8.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r9,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r9.u8);
	// stb r19,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r19.u8);
	// stb r31,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r31.u8);
	// stb r31,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r31.u8);
	// stb r24,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r24.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r25,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r25.u8);
	// stb r31,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r31.u8);
	// stb r31,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r31.u8);
	// stb r10,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r10.u8);
	// stb r31,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r31.u8);
	// stb r31,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r31.u8);
	// stb r27,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r27.u8);
	// stb r26,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r26.u8);
	// stb r19,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r19.u8);
	// stb r7,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r7.u8);
	// stb r8,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r8.u8);
	// stb r8,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r8.u8);
	// stb r9,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r9.u8);
	// stb r6,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r6.u8);
	// stb r11,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r11.u8);
	// li r6,86
	ctx.r6.s64 = 86;
	// stb r11,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r11.u8);
	// stb r11,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r11.u8);
	// stb r11,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r3,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r3.u8);
	// mr r3,r22
	ctx.r3.u64 = ctx.r22.u64;
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r6,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r6.u8);
	// stb r11,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r11.u8);
	// li r11,74
	ctx.r11.s64 = 74;
	// stb r26,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r26.u8);
	// stb r9,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r9.u8);
	// stb r10,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r10.u8);
	// stb r29,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r29.u8);
	// stb r11,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r11.u8);
	// li r11,250
	ctx.r11.s64 = 250;
	// stb r20,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r20.u8);
	// stb r31,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r31.u8);
	// stb r28,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r28.u8);
	// stb r10,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r10.u8);
	// stb r11,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r29,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r29.u8);
	// stb r21,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r21.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r11,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r11.u8);
	// li r11,75
	ctx.r11.s64 = 75;
	// stb r23,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r23.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r31,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r31.u8);
	// stb r11,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r11.u8);
	// stb r11,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r11,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r7,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r7.u8);
	// stb r27,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r27.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r31.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r7,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r7.u8);
	// stb r8,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r8.u8);
	// stb r28,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r28.u8);
	// stb r11,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CEFC0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r22,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r22.u32);
	// addi r1,r1,528
	ctx.r1.s64 = ctx.r1.s64 + 528;
	// b 0x82e28e88
	__restgprlr_16(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CEFD0"))) PPC_WEAK_FUNC(sub_824CEFD0);
PPC_FUNC_IMPL(__imp__sub_824CEFD0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e6c
	ctx.lr = 0x824CEFD8;
	__savegprlr_29(ctx, base);
	// stwu r1,-176(r1)
	ea = -176 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,33
	ctx.r9.s64 = 33;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32624
	ctx.r4.s64 = ctx.r10.s64 + -32624;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CF014;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,32112
	ctx.r4.s64 = ctx.r11.s64 + 32112;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,80
	ctx.r3.s64 = ctx.r1.s64 + 80;
	// bl 0x8243b750
	ctx.lr = 0x824CF02C;
	sub_8243B750(ctx, base);
	// li r11,53
	ctx.r11.s64 = 53;
	// li r10,147
	ctx.r10.s64 = 147;
	// lwz r8,80(r1)
	ctx.r8.u64 = PPC_LOAD_U32(ctx.r1.u32 + 80);
	// li r6,127
	ctx.r6.s64 = 127;
	// lwz r7,84(r1)
	ctx.r7.u64 = PPC_LOAD_U32(ctx.r1.u32 + 84);
	// li r9,15
	ctx.r9.s64 = 15;
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r11,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r11.u8);
	// li r11,31
	ctx.r11.s64 = 31;
	// stb r10,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r10.u8);
	// li r10,30
	ctx.r10.s64 = 30;
	// stb r6,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r6.u8);
	// li r6,36
	ctx.r6.s64 = 36;
	// li r5,33
	ctx.r5.s64 = 33;
	// stb r9,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r9.u8);
	// addi r4,r1,96
	ctx.r4.s64 = ctx.r1.s64 + 96;
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r11,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r11.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// li r11,149
	ctx.r11.s64 = 149;
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r31.u8);
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r6,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r6.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// stb r11,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r11.u8);
	// stb r11,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r11.u8);
	// stb r11,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stb r31,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r31.u8);
	// stb r10,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r10.u8);
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,119
	ctx.r11.s64 = 119;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stw r8,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r8.u32);
	// stb r11,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r11.u8);
	// li r11,4
	ctx.r11.s64 = 4;
	// stw r7,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r7.u32);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CF10C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,176
	ctx.r1.s64 = ctx.r1.s64 + 176;
	// b 0x82e28ebc
	__restgprlr_29(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CF120"))) PPC_WEAK_FUNC(sub_824CF120);
PPC_FUNC_IMPL(__imp__sub_824CF120) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e48
	ctx.lr = 0x824CF128;
	__savegprlr_20(ctx, base);
	// stwu r1,-352(r1)
	ea = -352 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,159
	ctx.r9.s64 = 159;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32552
	ctx.r4.s64 = ctx.r10.s64 + -32552;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CF164;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,240
	ctx.r3.s64 = ctx.r1.s64 + 240;
	// bl 0x8243b750
	ctx.lr = 0x824CF17C;
	sub_8243B750(ctx, base);
	// li r10,150
	ctx.r10.s64 = 150;
	// li r11,91
	ctx.r11.s64 = 91;
	// lwz r26,240(r1)
	ctx.r26.u64 = PPC_LOAD_U32(ctx.r1.u32 + 240);
	// li r25,20
	ctx.r25.s64 = 20;
	// lwz r21,244(r1)
	ctx.r21.u64 = PPC_LOAD_U32(ctx.r1.u32 + 244);
	// li r9,1
	ctx.r9.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r4,25
	ctx.r4.s64 = 25;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r10,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r10.u8);
	// li r10,67
	ctx.r10.s64 = 67;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// li r29,247
	ctx.r29.s64 = 247;
	// stb r25,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r25.u8);
	// li r6,4
	ctx.r6.s64 = 4;
	// stb r9,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r9.u8);
	// li r7,6
	ctx.r7.s64 = 6;
	// stb r4,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r4.u8);
	// stb r10,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r10.u8);
	// li r28,45
	ctx.r28.s64 = 45;
	// li r22,7
	ctx.r22.s64 = 7;
	// stb r4,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r4.u8);
	// li r23,226
	ctx.r23.s64 = 226;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r27,5
	ctx.r27.s64 = 5;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r3,97
	ctx.r3.s64 = 97;
	// stb r29,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r29.u8);
	// li r24,39
	ctx.r24.s64 = 39;
	// stb r6,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r6.u8);
	// li r5,40
	ctx.r5.s64 = 40;
	// stb r22,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r22.u8);
	// li r10,80
	ctx.r10.s64 = 80;
	// stb r23,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r23.u8);
	// li r8,22
	ctx.r8.s64 = 22;
	// stb r27,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r27.u8);
	// stb r9,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r9.u8);
	// li r25,116
	ctx.r25.s64 = 116;
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// stb r29,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r29.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r7,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r7.u8);
	// stb r6,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r6.u8);
	// stb r28,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r28.u8);
	// stb r9,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r9.u8);
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r3,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r3.u8);
	// stb r7,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r7.u8);
	// stb r24,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r24.u8);
	// stb r5,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r5.u8);
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// stb r8,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r8.u8);
	// stb r28,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r28.u8);
	// stb r9,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r9.u8);
	// stb r11,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r11.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// stb r23,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r23.u8);
	// li r23,251
	ctx.r23.s64 = 251;
	// stw r26,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r26.u32);
	// li r26,113
	ctx.r26.s64 = 113;
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// li r20,42
	ctx.r20.s64 = 42;
	// stb r7,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r7.u8);
	// stb r7,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r7.u8);
	// stb r23,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r23.u8);
	// li r23,86
	ctx.r23.s64 = 86;
	// stb r7,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r7.u8);
	// li r7,28
	ctx.r7.s64 = 28;
	// stb r26,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r26.u8);
	// li r26,15
	ctx.r26.s64 = 15;
	// stw r21,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r21.u32);
	// li r21,119
	ctx.r21.s64 = 119;
	// stb r25,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r25.u8);
	// li r25,27
	ctx.r25.s64 = 27;
	// stb r23,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r23.u8);
	// li r23,56
	ctx.r23.s64 = 56;
	// stb r7,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r7.u8);
	// li r7,249
	ctx.r7.s64 = 249;
	// stb r26,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r26.u8);
	// li r26,232
	ctx.r26.s64 = 232;
	// stb r21,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r21.u8);
	// li r21,174
	ctx.r21.s64 = 174;
	// stb r5,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r5.u8);
	// stb r23,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r23.u8);
	// li r23,63
	ctx.r23.s64 = 63;
	// stb r7,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r7.u8);
	// li r7,33
	ctx.r7.s64 = 33;
	// stb r4,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r4.u8);
	// stb r25,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r25.u8);
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r23,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r23.u8);
	// li r23,44
	ctx.r23.s64 = 44;
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r20,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r20.u8);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r8,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r8.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r3,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r3.u8);
	// stb r5,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r5.u8);
	// stb r5,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r5.u8);
	// stb r10,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r10.u8);
	// stb r8,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r8.u8);
	// stb r9,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r9.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r26,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r26.u8);
	// stb r21,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r21.u8);
	// stb r4,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r4.u8);
	// stb r9,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r9.u8);
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// stb r11,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r11.u8);
	// stb r29,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r29.u8);
	// stb r31,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r31.u8);
	// stb r27,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r27.u8);
	// stb r6,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r6.u8);
	// stb r9,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r9.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r11,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r11.u8);
	// stb r23,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r23.u8);
	// stb r6,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r6.u8);
	// stb r8,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r8.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r3,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r3.u8);
	// stb r3,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r3.u8);
	// stb r24,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r24.u8);
	// stb r5,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r5.u8);
	// stb r10,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r10.u8);
	// stb r8,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r8.u8);
	// stb r11,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r11.u8);
	// stb r11,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r11.u8);
	// stb r22,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r22.u8);
	// stb r7,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r7.u8);
	// li r7,18
	ctx.r7.s64 = 18;
	// stb r11,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r11.u8);
	// stb r11,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// li r5,146
	ctx.r5.s64 = 146;
	// stb r28,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r28.u8);
	// addi r28,r30,32
	ctx.r28.s64 = ctx.r30.s64 + 32;
	// stb r4,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r7,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r7.u8);
	// li r7,29
	ctx.r7.s64 = 29;
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r5,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r5.u8);
	// mr r3,r28
	ctx.r3.u64 = ctx.r28.u64;
	// li r5,159
	ctx.r5.s64 = 159;
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r7,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r7.u8);
	// li r7,189
	ctx.r7.s64 = 189;
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r10,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r10.u8);
	// stb r7,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r7.u8);
	// li r7,53
	ctx.r7.s64 = 53;
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r10,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r10.u8);
	// stb r10,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r10.u8);
	// stb r10,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r10.u8);
	// stb r7,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r7.u8);
	// li r7,31
	ctx.r7.s64 = 31;
	// stb r8,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r8.u8);
	// stb r25,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r25.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r7,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r7.u8);
	// stb r7,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r7.u8);
	// li r7,149
	ctx.r7.s64 = 149;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r31,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r31.u8);
	// stb r7,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r7.u8);
	// li r7,30
	ctx.r7.s64 = 30;
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r7,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r7.u8);
	// li r7,127
	ctx.r7.s64 = 127;
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r9,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r9.u8);
	// stb r31,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r31.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r7,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r7.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r27,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r27.u8);
	// stb r6,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r6.u8);
	// stb r9,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r9.u8);
	// stb r29,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r29.u8);
	// stb r26,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r26.u8);
	// stb r10,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r10.u8);
	// stb r10,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r10.u8);
	// stb r10,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r10.u8);
	// stb r8,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r8.u8);
	// stb r6,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r6.u8);
	// stb r11,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CF4D4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r28,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r28.u32);
	// addi r1,r1,352
	ctx.r1.s64 = ctx.r1.s64 + 352;
	// b 0x82e28e98
	__restgprlr_20(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CF4E8"))) PPC_WEAK_FUNC(sub_824CF4E8);
PPC_FUNC_IMPL(__imp__sub_824CF4E8) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824CF4F0;
	__savegprlr_14(ctx, base);
	// stwu r1,-544(r1)
	ea = -544 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,299
	ctx.r9.s64 = 299;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32480
	ctx.r4.s64 = ctx.r10.s64 + -32480;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CF52C;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31976
	ctx.r4.s64 = ctx.r11.s64 + 31976;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,384
	ctx.r3.s64 = ctx.r1.s64 + 384;
	// bl 0x8243b750
	ctx.lr = 0x824CF544;
	sub_8243B750(ctx, base);
	// li r9,56
	ctx.r9.s64 = 56;
	// li r11,63
	ctx.r11.s64 = 63;
	// lwz r5,384(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 384);
	// li r10,177
	ctx.r10.s64 = 177;
	// lwz r4,388(r1)
	ctx.r4.u64 = PPC_LOAD_U32(ctx.r1.u32 + 388);
	// li r3,251
	ctx.r3.s64 = 251;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r8,255
	ctx.r8.s64 = 255;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// stb r9,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r9.u8);
	// li r9,24
	ctx.r9.s64 = 24;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r6,232
	ctx.r6.s64 = 232;
	// stb r11,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r11.u8);
	// li r11,37
	ctx.r11.s64 = 37;
	// stb r10,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r10.u8);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r3,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r3.u8);
	// li r7,119
	ctx.r7.s64 = 119;
	// stb r9,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r9.u8);
	// li r9,179
	ctx.r9.s64 = 179;
	// li r26,7
	ctx.r26.s64 = 7;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// li r11,22
	ctx.r11.s64 = 22;
	// li r22,130
	ctx.r22.s64 = 130;
	// stb r10,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r10.u8);
	// li r27,25
	ctx.r27.s64 = 25;
	// stb r6,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r6.u8);
	// stb r9,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r9.u8);
	// li r17,247
	ctx.r17.s64 = 247;
	// li r14,226
	ctx.r14.s64 = 226;
	// stb r26,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r26.u8);
	// li r16,5
	ctx.r16.s64 = 5;
	// stb r7,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r7.u8);
	// li r9,4
	ctx.r9.s64 = 4;
	// stb r22,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r22.u8);
	// li r3,86
	ctx.r3.s64 = 86;
	// stb r11,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r11.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// stb r11,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r11.u8);
	// stb r27,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r27.u8);
	// stb r10,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r10.u8);
	// stb r8,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r8.u8);
	// stb r8,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r8.u8);
	// stb r17,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r17.u8);
	// stb r14,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r14.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r16,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r16.u8);
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// stb r10,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r10.u8);
	// stb r8,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r8.u8);
	// stb r8,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r8.u8);
	// stb r3,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r3.u8);
	// stb r10,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r10.u8);
	// stb r31,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r31.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r6,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r6.u8);
	// stb r7,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r7.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// stw r5,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r5.u32);
	// li r5,173
	ctx.r5.s64 = 173;
	// stw r4,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r4.u32);
	// li r7,6
	ctx.r7.s64 = 6;
	// li r25,149
	ctx.r25.s64 = 149;
	// stb r9,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r9.u8);
	// li r28,27
	ctx.r28.s64 = 27;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// li r29,3
	ctx.r29.s64 = 3;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r5,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r5.u8);
	// li r5,114
	ctx.r5.s64 = 114;
	// li r3,83
	ctx.r3.s64 = 83;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// li r23,248
	ctx.r23.s64 = 248;
	// stb r31,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r31.u8);
	// li r6,33
	ctx.r6.s64 = 33;
	// stb r28,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r28.u8);
	// li r4,39
	ctx.r4.s64 = 39;
	// stb r29,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r29.u8);
	// stb r5,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r5.u8);
	// li r5,31
	ctx.r5.s64 = 31;
	// li r24,34
	ctx.r24.s64 = 34;
	// stb r3,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r3.u8);
	// li r18,53
	ctx.r18.s64 = 53;
	// stb r23,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r23.u8);
	// li r19,146
	ctx.r19.s64 = 146;
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// li r20,30
	ctx.r20.s64 = 30;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// li r21,127
	ctx.r21.s64 = 127;
	// stb r6,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r6.u8);
	// li r15,42
	ctx.r15.s64 = 42;
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r31,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r31.u8);
	// stb r4,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r4.u8);
	// stb r7,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r7.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// stb r7,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r7.u8);
	// stb r10,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r10.u8);
	// stb r24,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r24.u8);
	// stb r26,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r26.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r18,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r18.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r5,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r5.u8);
	// stb r19,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r19.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r31,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r31.u8);
	// stb r5,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r5.u8);
	// stb r25,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r25.u8);
	// stb r31,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r31.u8);
	// stb r31,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r31.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r20,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r20.u8);
	// stb r21,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r21.u8);
	// stb r15,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r15.u8);
	// stb r11,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r11.u8);
	// stb r26,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r26.u8);
	// stb r31,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r31.u8);
	// stb r25,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r25.u8);
	// stb r22,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r22.u8);
	// stb r27,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r27.u8);
	// stb r27,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r27.u8);
	// stb r10,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r10.u8);
	// stb r8,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r8.u8);
	// stb r8,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r8.u8);
	// stb r17,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r17.u8);
	// stb r14,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r14.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r16,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r16.u8);
	// stb r9,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r9.u8);
	// stb r10,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r10.u8);
	// stb r8,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r8.u8);
	// stb r8,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r8.u8);
	// stb r8,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r8.u8);
	// stb r8,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r8.u8);
	// stb r8,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r8.u8);
	// li r8,67
	ctx.r8.s64 = 67;
	// stb r17,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r17.u8);
	// li r17,150
	ctx.r17.s64 = 150;
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r7,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r7.u8);
	// stb r9,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r9.u8);
	// stb r8,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r8.u8);
	// li r8,24
	ctx.r8.s64 = 24;
	// stb r17,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r17.u8);
	// li r17,45
	ctx.r17.s64 = 45;
	// stb r10,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r10.u8);
	// stb r31,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r8,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r8.u8);
	// li r8,9
	ctx.r8.s64 = 9;
	// stb r17,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r17.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r11,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r11.u8);
	// stb r11,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r11.u8);
	// stb r8,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r8.u8);
	// li r8,129
	ctx.r8.s64 = 129;
	// stb r11,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r11.u8);
	// stb r9,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r9.u8);
	// stb r28,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r28.u8);
	// stb r29,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r29.u8);
	// stb r8,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r8.u8);
	// li r8,28
	ctx.r8.s64 = 28;
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r31,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r31.u8);
	// stb r3,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r3.u8);
	// stb r23,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r23.u8);
	// stb r8,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r8.u8);
	// li r8,32
	ctx.r8.s64 = 32;
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r8,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r8.u8);
	// li r8,10
	ctx.r8.s64 = 10;
	// stb r6,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r6.u8);
	// stb r31,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r31.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r4,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r4.u8);
	// stb r8,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r8.u8);
	// li r8,170
	ctx.r8.s64 = 170;
	// stb r7,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r7.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r31,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r31.u8);
	// stb r31,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r31.u8);
	// stb r31,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r31.u8);
	// stb r11,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r11.u8);
	// stb r7,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r7.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r8,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r8.u8);
	// stb r9,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r9.u8);
	// stb r28,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r28.u8);
	// stb r29,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r29.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r3,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r3.u8);
	// stb r23,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r23.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r31,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r31.u8);
	// stb r31,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r31.u8);
	// stb r6,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r6.u8);
	// stb r31,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r31.u8);
	// stb r31,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r31.u8);
	// stb r4,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r4.u8);
	// stb r9,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r9.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r31,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r31.u8);
	// stb r31,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r31.u8);
	// stb r11,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r11.u8);
	// stb r7,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r7.u8);
	// stb r10,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r10.u8);
	// li r8,233
	ctx.r8.s64 = 233;
	// stb r24,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r24.u8);
	// li r16,13
	ctx.r16.s64 = 13;
	// stb r26,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r26.u8);
	// li r17,102
	ctx.r17.s64 = 102;
	// stb r31,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r31.u8);
	// li r14,244
	ctx.r14.s64 = 244;
	// stb r27,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r27.u8);
	// stb r18,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r18.u8);
	// stb r8,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r8.u8);
	// li r8,38
	ctx.r8.s64 = 38;
	// stb r31,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r31.u8);
	// stb r31,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r31.u8);
	// stb r5,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r5.u8);
	// stb r19,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r19.u8);
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r31.u8);
	// stb r5,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r5.u8);
	// stb r25,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r25.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r31.u8);
	// stb r10,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r10.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r20,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r20.u8);
	// stb r21,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r21.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r16,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r16.u8);
	// stb r9,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r9.u8);
	// stb r17,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r17.u8);
	// stb r22,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r22.u8);
	// stb r6,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r6.u8);
	// stb r31,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r31.u8);
	// stb r31,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r31.u8);
	// stb r8,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r8.u8);
	// stb r14,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r14.u8);
	// stb r31,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r31.u8);
	// stb r31,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r31.u8);
	// stb r31,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r31.u8);
	// stb r31,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r31.u8);
	// stb r4,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r4.u8);
	// stb r11,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r11.u8);
	// stb r9,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r9.u8);
	// stb r28,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r28.u8);
	// stb r29,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r29.u8);
	// stb r31,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r31.u8);
	// stb r31,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r31.u8);
	// stb r3,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r3.u8);
	// stb r23,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r23.u8);
	// stb r31,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r31.u8);
	// stb r31,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r31.u8);
	// stb r31,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r31.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r6,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r6.u8);
	// stb r31,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r31.u8);
	// stb r31,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r31.u8);
	// stb r4,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r4.u8);
	// stb r29,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r29.u8);
	// stb r31,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r31.u8);
	// stb r31,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r31.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r31,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r31.u8);
	// stb r11,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r11.u8);
	// stb r7,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r7.u8);
	// stb r10,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r10.u8);
	// stb r24,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r24.u8);
	// stb r26,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r26.u8);
	// stb r10,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r10.u8);
	// stb r24,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r24.u8);
	// stb r27,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r27.u8);
	// stb r18,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r18.u8);
	// stb r31,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r31.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r5,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r5.u8);
	// stb r19,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r19.u8);
	// stb r31,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r31.u8);
	// stb r31,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r31.u8);
	// stb r5,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r5.u8);
	// stb r25,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r25.u8);
	// stb r31,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r31.u8);
	// stb r31,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r31.u8);
	// stb r10,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r10.u8);
	// li r10,245
	ctx.r10.s64 = 245;
	// stb r11,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r11.u8);
	// li r5,299
	ctx.r5.s64 = 299;
	// stb r11,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r11.u8);
	// li r11,40
	ctx.r11.s64 = 40;
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r31,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r31.u8);
	// stb r10,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r10.u8);
	// li r10,250
	ctx.r10.s64 = 250;
	// stb r31,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r31.u8);
	// stb r11,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r11.u8);
	// li r11,58
	ctx.r11.s64 = 58;
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r31,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r31.u8);
	// stb r10,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r10.u8);
	// li r10,253
	ctx.r10.s64 = 253;
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r31,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r31.u8);
	// stb r31,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r31.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r31.u8);
	// stb r31,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r31,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r31.u8);
	// stb r31,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r31.u8);
	// stb r31,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r31.u8);
	// stb r31,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r31,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r31.u8);
	// stb r31,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r31.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r31,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r31.u8);
	// addi r31,r30,32
	ctx.r31.s64 = ctx.r30.s64 + 32;
	// stb r4,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r3,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r3.u8);
	// stb r3,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r3.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r20,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r20.u8);
	// stb r21,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r21.u8);
	// stb r16,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r16.u8);
	// stb r9,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r9.u8);
	// stb r17,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r17.u8);
	// stb r22,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r22.u8);
	// stb r6,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r6.u8);
	// stb r8,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r8.u8);
	// stb r9,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r9.u8);
	// stb r28,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r28.u8);
	// stb r29,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r29.u8);
	// stb r6,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r6.u8);
	// stb r8,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r8.u8);
	// stb r10,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r10.u8);
	// stb r9,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r9.u8);
	// stb r9,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r9.u8);
	// stb r11,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r11.u8);
	// stb r15,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r15.u8);
	// stb r10,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r10.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CFAF8;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,544
	ctx.r1.s64 = ctx.r1.s64 + 544;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CFB08"))) PPC_WEAK_FUNC(sub_824CFB08);
PPC_FUNC_IMPL(__imp__sub_824CFB08) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e58
	ctx.lr = 0x824CFB10;
	__savegprlr_24(ctx, base);
	// stwu r1,-304(r1)
	ea = -304 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r26,135
	ctx.r26.s64 = 135;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32404
	ctx.r4.s64 = ctx.r10.s64 + -32404;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r26,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r26.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CFB4C;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,216
	ctx.r3.s64 = ctx.r1.s64 + 216;
	// bl 0x8243b750
	ctx.lr = 0x824CFB64;
	sub_8243B750(ctx, base);
	// li r11,64
	ctx.r11.s64 = 64;
	// li r10,145
	ctx.r10.s64 = 145;
	// lwz r28,216(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 216);
	// li r4,6
	ctx.r4.s64 = 6;
	// lwz r25,220(r1)
	ctx.r25.u64 = PPC_LOAD_U32(ctx.r1.u32 + 220);
	// li r5,39
	ctx.r5.s64 = 39;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r6,7
	ctx.r6.s64 = 7;
	// stb r31,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,53
	ctx.r11.s64 = 53;
	// stb r10,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r10.u8);
	// li r27,45
	ctx.r27.s64 = 45;
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r31.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r31,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r31.u8);
	// li r3,27
	ctx.r3.s64 = 27;
	// stb r6,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r6.u8);
	// stb r11,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r11.u8);
	// li r11,31
	ctx.r11.s64 = 31;
	// li r29,42
	ctx.r29.s64 = 42;
	// stb r27,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r27.u8);
	// li r8,113
	ctx.r8.s64 = 113;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r31,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r31.u8);
	// li r24,80
	ctx.r24.s64 = 80;
	// stb r31,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r31.u8);
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// stb r11,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r11.u8);
	// li r11,149
	ctx.r11.s64 = 149;
	// stb r10,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r10.u8);
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// stb r7,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r7.u8);
	// stb r11,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r11.u8);
	// li r11,30
	ctx.r11.s64 = 30;
	// stb r3,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r3.u8);
	// stb r31,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r31.u8);
	// stb r31,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r31.u8);
	// stb r31,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r31.u8);
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,127
	ctx.r11.s64 = 127;
	// stb r29,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r29.u8);
	// stb r8,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r8.u8);
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r31,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r31.u8);
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,97
	ctx.r11.s64 = 97;
	// stb r31,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r31.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r9,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r9.u8);
	// stb r31,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r31.u8);
	// stb r4,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r4.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r11,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r11.u8);
	// stb r4,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r4.u8);
	// stb r5,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r5.u8);
	// stb r5,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r5.u8);
	// stb r24,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r24.u8);
	// stb r7,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r7.u8);
	// stb r7,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r7.u8);
	// stb r7,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r7.u8);
	// li r7,247
	ctx.r7.s64 = 247;
	// stb r26,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r26.u8);
	// li r26,132
	ctx.r26.s64 = 132;
	// stb r8,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r8.u8);
	// li r8,8
	ctx.r8.s64 = 8;
	// stb r29,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r29.u8);
	// li r29,246
	ctx.r29.s64 = 246;
	// stw r28,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r28.u32);
	// li r28,11
	ctx.r28.s64 = 11;
	// stb r7,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r7.u8);
	// stb r7,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r7.u8);
	// li r7,150
	ctx.r7.s64 = 150;
	// stb r26,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r26.u8);
	// li r26,226
	ctx.r26.s64 = 226;
	// stb r8,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r8.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r11,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r4,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r4.u8);
	// li r4,67
	ctx.r4.s64 = 67;
	// stb r7,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r7.u8);
	// li r7,15
	ctx.r7.s64 = 15;
	// stb r26,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r26.u8);
	// li r26,5
	ctx.r26.s64 = 5;
	// stb r27,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r27.u8);
	// li r27,35
	ctx.r27.s64 = 35;
	// stb r9,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r9.u8);
	// stb r3,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r3.u8);
	// stb r7,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r7.u8);
	// li r7,233
	ctx.r7.s64 = 233;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stw r25,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r25.u32);
	// stb r31,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r31.u8);
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r9,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r9.u8);
	// stb r31,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r31.u8);
	// stb r8,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r8.u8);
	// stb r28,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r28.u8);
	// stb r10,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r10.u8);
	// stb r11,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r11.u8);
	// stb r11,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r11.u8);
	// stb r29,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r29.u8);
	// stb r9,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r9.u8);
	// stb r6,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r6.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r10,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r10.u8);
	// stb r11,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r11.u8);
	// stb r11,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r11.u8);
	// stb r31,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r31.u8);
	// stb r26,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r26.u8);
	// stb r8,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r8.u8);
	// stb r10,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r10.u8);
	// stb r11,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r11.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r31.u8);
	// stb r8,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r8.u8);
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// stb r11,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r11.u8);
	// stb r11,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r11.u8);
	// stb r4,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r4.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r7,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r7.u8);
	// stb r6,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r6.u8);
	// stb r27,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r27.u8);
	// stb r31,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r31.u8);
	// stb r31,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r31.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// li r27,191
	ctx.r27.s64 = 191;
	// stb r11,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r11.u8);
	// li r11,133
	ctx.r11.s64 = 133;
	// stb r4,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r4.u8);
	// li r4,179
	ctx.r4.s64 = 179;
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r27,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r27.u8);
	// li r27,128
	ctx.r27.s64 = 128;
	// stb r11,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r31.u8);
	// stb r31,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// addi r31,r30,32
	ctx.r31.s64 = ctx.r30.s64 + 32;
	// stb r3,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r3.u8);
	// stb r4,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r4.u8);
	// mr r3,r31
	ctx.r3.u64 = ctx.r31.u64;
	// stb r5,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r5.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// li r5,135
	ctx.r5.s64 = 135;
	// stb r27,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r27.u8);
	// stb r7,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r7.u8);
	// stb r6,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r6.u8);
	// stb r10,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r10.u8);
	// stb r29,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r29.u8);
	// stb r9,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r9.u8);
	// stb r8,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r8.u8);
	// stb r28,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r28.u8);
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824CFE3C;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r31,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r31.u32);
	// addi r1,r1,304
	ctx.r1.s64 = ctx.r1.s64 + 304;
	// b 0x82e28ea8
	__restgprlr_24(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824CFE50"))) PPC_WEAK_FUNC(sub_824CFE50);
PPC_FUNC_IMPL(__imp__sub_824CFE50) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e30
	ctx.lr = 0x824CFE58;
	__savegprlr_14(ctx, base);
	// stwu r1,-576(r1)
	ea = -576 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,330
	ctx.r9.s64 = 330;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32344
	ctx.r4.s64 = ctx.r10.s64 + -32344;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824CFE94;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,31976
	ctx.r4.s64 = ctx.r11.s64 + 31976;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,416
	ctx.r3.s64 = ctx.r1.s64 + 416;
	// bl 0x8243b750
	ctx.lr = 0x824CFEAC;
	sub_8243B750(ctx, base);
	// li r11,48
	ctx.r11.s64 = 48;
	// li r10,56
	ctx.r10.s64 = 56;
	// lwz r7,416(r1)
	ctx.r7.u64 = PPC_LOAD_U32(ctx.r1.u32 + 416);
	// li r19,58
	ctx.r19.s64 = 58;
	// lwz r28,420(r1)
	ctx.r28.u64 = PPC_LOAD_U32(ctx.r1.u32 + 420);
	// li r9,31
	ctx.r9.s64 = 31;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r24,7
	ctx.r24.s64 = 7;
	// stb r31,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r31.u8);
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,155
	ctx.r11.s64 = 155;
	// stb r10,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r10.u8);
	// li r29,53
	ctx.r29.s64 = 53;
	// stb r10,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r10.u8);
	// li r10,2
	ctx.r10.s64 = 2;
	// li r3,149
	ctx.r3.s64 = 149;
	// stb r19,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r19.u8);
	// li r4,30
	ctx.r4.s64 = 30;
	// stb r24,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r24.u8);
	// stb r11,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r11.u8);
	// li r11,148
	ctx.r11.s64 = 148;
	// li r5,127
	ctx.r5.s64 = 127;
	// stb r29,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r29.u8);
	// stb r10,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r10.u8);
	// li r20,36
	ctx.r20.s64 = 36;
	// li r10,22
	ctx.r10.s64 = 22;
	// stb r31,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r31.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r9,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r9.u8);
	// stb r11,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r11.u8);
	// li r6,27
	ctx.r6.s64 = 27;
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r31,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r31.u8);
	// li r21,3
	ctx.r21.s64 = 3;
	// stb r31,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r31.u8);
	// li r25,83
	ctx.r25.s64 = 83;
	// stb r9,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r9.u8);
	// li r22,250
	ctx.r22.s64 = 250;
	// stb r3,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r3.u8);
	// stb r31,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r31.u8);
	// li r26,33
	ctx.r26.s64 = 33;
	// stb r31,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r31.u8);
	// stb r11,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r11.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r31,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r31.u8);
	// stb r4,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r4.u8);
	// stb r5,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r5.u8);
	// stb r19,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r19.u8);
	// stb r20,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r20.u8);
	// stb r10,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r10.u8);
	// stb r8,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r8.u8);
	// stb r6,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r6.u8);
	// stb r21,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r21.u8);
	// stb r31,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r31.u8);
	// stb r31,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r31.u8);
	// stb r25,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r25.u8);
	// stb r22,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r22.u8);
	// stb r31,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r31.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r31,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r31.u8);
	// stb r31,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r31.u8);
	// stw r7,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r7.u32);
	// li r7,119
	ctx.r7.s64 = 119;
	// li r27,38
	ctx.r27.s64 = 38;
	// stw r28,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r28.u32);
	// li r23,130
	ctx.r23.s64 = 130;
	// stb r26,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r26.u8);
	// li r18,13
	ctx.r18.s64 = 13;
	// stb r31,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r31.u8);
	// li r28,146
	ctx.r28.s64 = 146;
	// stb r31,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r31.u8);
	// stb r7,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r7.u8);
	// li r7,134
	ctx.r7.s64 = 134;
	// stb r27,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r27.u8);
	// li r27,240
	ctx.r27.s64 = 240;
	// stb r23,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r23.u8);
	// li r15,46
	ctx.r15.s64 = 46;
	// stb r18,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r18.u8);
	// li r16,42
	ctx.r16.s64 = 42;
	// stb r23,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r23.u8);
	// li r18,102
	ctx.r18.s64 = 102;
	// stb r7,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r7.u8);
	// li r7,132
	ctx.r7.s64 = 132;
	// stb r27,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r27.u8);
	// li r23,69
	ctx.r23.s64 = 69;
	// li r27,24
	ctx.r27.s64 = 24;
	// stb r31,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r31.u8);
	// stb r31,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r31.u8);
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r7,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r7.u8);
	// stb r7,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r7.u8);
	// stb r7,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r7.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r10,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r10.u8);
	// stb r24,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r24.u8);
	// stb r11,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r11.u8);
	// stb r15,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r15.u8);
	// stb r29,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r29.u8);
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r9,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r9.u8);
	// stb r28,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r28.u8);
	// stb r31,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r9,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r9.u8);
	// stb r3,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r3.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r11,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r11.u8);
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r4,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r4.u8);
	// stb r5,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r5.u8);
	// stb r16,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r16.u8);
	// stb r10,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r10.u8);
	// stb r27,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r27.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r7,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r7.u8);
	// stb r29,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r29.u8);
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r9,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r9.u8);
	// stb r28,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r28.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r9,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r9.u8);
	// stb r3,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r3.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r11,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r11.u8);
	// stb r31,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r31.u8);
	// stb r31,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r31.u8);
	// stb r4,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r4.u8);
	// stb r5,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r5.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r8,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r8.u8);
	// stb r18,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r18.u8);
	// stb r26,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r26.u8);
	// stb r31,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r31.u8);
	// stb r31,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r31.u8);
	// stb r23,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r23.u8);
	// li r18,45
	ctx.r18.s64 = 45;
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// li r23,95
	ctx.r23.s64 = 95;
	// stb r31,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r31.u8);
	// li r17,6
	ctx.r17.s64 = 6;
	// stb r31,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r31.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r10,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r10.u8);
	// stb r18,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r18.u8);
	// li r18,34
	ctx.r18.s64 = 34;
	// stb r23,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r23.u8);
	// li r23,39
	ctx.r23.s64 = 39;
	// stb r27,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r27.u8);
	// stb r31,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r31.u8);
	// stb r6,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r6.u8);
	// stb r18,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r18.u8);
	// li r18,32
	ctx.r18.s64 = 32;
	// stb r23,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r23.u8);
	// stb r7,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r7.u8);
	// stb r29,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r29.u8);
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r18,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r18.u8);
	// li r18,11
	ctx.r18.s64 = 11;
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r9,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r9.u8);
	// stb r28,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r28.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r18,241(r1)
	PPC_STORE_U8(ctx.r1.u32 + 241, ctx.r18.u8);
	// li r18,54
	ctx.r18.s64 = 54;
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r9,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r9.u8);
	// stb r3,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r3.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r31,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r31.u8);
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r4,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r4.u8);
	// stb r5,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r5.u8);
	// stb r31,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r31.u8);
	// stb r17,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r17.u8);
	// stb r8,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r8.u8);
	// stb r11,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r11.u8);
	// stb r31,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r31.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r9,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r9.u8);
	// stb r10,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r10.u8);
	// stb r27,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r27.u8);
	// stb r31,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r31.u8);
	// stb r7,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r7.u8);
	// stb r29,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r29.u8);
	// stb r31,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r31.u8);
	// stb r31,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r31.u8);
	// stb r9,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r9.u8);
	// stb r28,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r28.u8);
	// stb r31,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r31.u8);
	// stb r31,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r31.u8);
	// stb r9,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r9.u8);
	// stb r3,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r3.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r11,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r11.u8);
	// stb r31,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r31.u8);
	// stb r31,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r31.u8);
	// stb r4,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r4.u8);
	// stb r5,239(r1)
	PPC_STORE_U8(ctx.r1.u32 + 239, ctx.r5.u8);
	// stb r31,240(r1)
	PPC_STORE_U8(ctx.r1.u32 + 240, ctx.r31.u8);
	// stb r8,242(r1)
	PPC_STORE_U8(ctx.r1.u32 + 242, ctx.r8.u8);
	// stb r6,243(r1)
	PPC_STORE_U8(ctx.r1.u32 + 243, ctx.r6.u8);
	// stb r31,244(r1)
	PPC_STORE_U8(ctx.r1.u32 + 244, ctx.r31.u8);
	// stb r31,245(r1)
	PPC_STORE_U8(ctx.r1.u32 + 245, ctx.r31.u8);
	// stb r31,246(r1)
	PPC_STORE_U8(ctx.r1.u32 + 246, ctx.r31.u8);
	// stb r18,247(r1)
	PPC_STORE_U8(ctx.r1.u32 + 247, ctx.r18.u8);
	// stb r6,248(r1)
	PPC_STORE_U8(ctx.r1.u32 + 248, ctx.r6.u8);
	// stb r31,249(r1)
	PPC_STORE_U8(ctx.r1.u32 + 249, ctx.r31.u8);
	// stb r31,250(r1)
	PPC_STORE_U8(ctx.r1.u32 + 250, ctx.r31.u8);
	// stb r31,251(r1)
	PPC_STORE_U8(ctx.r1.u32 + 251, ctx.r31.u8);
	// stb r31,252(r1)
	PPC_STORE_U8(ctx.r1.u32 + 252, ctx.r31.u8);
	// stb r10,253(r1)
	PPC_STORE_U8(ctx.r1.u32 + 253, ctx.r10.u8);
	// stb r10,254(r1)
	PPC_STORE_U8(ctx.r1.u32 + 254, ctx.r10.u8);
	// stb r27,255(r1)
	PPC_STORE_U8(ctx.r1.u32 + 255, ctx.r27.u8);
	// stb r3,268(r1)
	PPC_STORE_U8(ctx.r1.u32 + 268, ctx.r3.u8);
	// li r3,248
	ctx.r3.s64 = 248;
	// li r27,29
	ctx.r27.s64 = 29;
	// stb r29,260(r1)
	PPC_STORE_U8(ctx.r1.u32 + 260, ctx.r29.u8);
	// li r14,245
	ctx.r14.s64 = 245;
	// stb r9,263(r1)
	PPC_STORE_U8(ctx.r1.u32 + 263, ctx.r9.u8);
	// stb r28,264(r1)
	PPC_STORE_U8(ctx.r1.u32 + 264, ctx.r28.u8);
	// li r29,5
	ctx.r29.s64 = 5;
	// stb r9,267(r1)
	PPC_STORE_U8(ctx.r1.u32 + 267, ctx.r9.u8);
	// li r9,255
	ctx.r9.s64 = 255;
	// stb r3,282(r1)
	PPC_STORE_U8(ctx.r1.u32 + 282, ctx.r3.u8);
	// li r3,72
	ctx.r3.s64 = 72;
	// stb r27,257(r1)
	PPC_STORE_U8(ctx.r1.u32 + 257, ctx.r27.u8);
	// li r27,152
	ctx.r27.s64 = 152;
	// stb r14,313(r1)
	PPC_STORE_U8(ctx.r1.u32 + 313, ctx.r14.u8);
	// li r14,239
	ctx.r14.s64 = 239;
	// stb r15,318(r1)
	PPC_STORE_U8(ctx.r1.u32 + 318, ctx.r15.u8);
	// li r18,37
	ctx.r18.s64 = 37;
	// li r28,150
	ctx.r28.s64 = 150;
	// stb r31,256(r1)
	PPC_STORE_U8(ctx.r1.u32 + 256, ctx.r31.u8);
	// stb r3,283(r1)
	PPC_STORE_U8(ctx.r1.u32 + 283, ctx.r3.u8);
	// li r3,154
	ctx.r3.s64 = 154;
	// stb r27,258(r1)
	PPC_STORE_U8(ctx.r1.u32 + 258, ctx.r27.u8);
	// li r15,86
	ctx.r15.s64 = 86;
	// stb r14,314(r1)
	PPC_STORE_U8(ctx.r1.u32 + 314, ctx.r14.u8);
	// li r27,226
	ctx.r27.s64 = 226;
	// li r14,38
	ctx.r14.s64 = 38;
	// stb r7,259(r1)
	PPC_STORE_U8(ctx.r1.u32 + 259, ctx.r7.u8);
	// stb r31,261(r1)
	PPC_STORE_U8(ctx.r1.u32 + 261, ctx.r31.u8);
	// stb r3,291(r1)
	PPC_STORE_U8(ctx.r1.u32 + 291, ctx.r3.u8);
	// li r3,247
	ctx.r3.s64 = 247;
	// stb r31,262(r1)
	PPC_STORE_U8(ctx.r1.u32 + 262, ctx.r31.u8);
	// stb r31,265(r1)
	PPC_STORE_U8(ctx.r1.u32 + 265, ctx.r31.u8);
	// stb r31,266(r1)
	PPC_STORE_U8(ctx.r1.u32 + 266, ctx.r31.u8);
	// stb r31,269(r1)
	PPC_STORE_U8(ctx.r1.u32 + 269, ctx.r31.u8);
	// stb r31,270(r1)
	PPC_STORE_U8(ctx.r1.u32 + 270, ctx.r31.u8);
	// stb r11,271(r1)
	PPC_STORE_U8(ctx.r1.u32 + 271, ctx.r11.u8);
	// stb r31,272(r1)
	PPC_STORE_U8(ctx.r1.u32 + 272, ctx.r31.u8);
	// stb r31,273(r1)
	PPC_STORE_U8(ctx.r1.u32 + 273, ctx.r31.u8);
	// stb r4,274(r1)
	PPC_STORE_U8(ctx.r1.u32 + 274, ctx.r4.u8);
	// stb r5,275(r1)
	PPC_STORE_U8(ctx.r1.u32 + 275, ctx.r5.u8);
	// stb r31,276(r1)
	PPC_STORE_U8(ctx.r1.u32 + 276, ctx.r31.u8);
	// stb r29,277(r1)
	PPC_STORE_U8(ctx.r1.u32 + 277, ctx.r29.u8);
	// stb r8,278(r1)
	PPC_STORE_U8(ctx.r1.u32 + 278, ctx.r8.u8);
	// stb r11,279(r1)
	PPC_STORE_U8(ctx.r1.u32 + 279, ctx.r11.u8);
	// stb r9,280(r1)
	PPC_STORE_U8(ctx.r1.u32 + 280, ctx.r9.u8);
	// stb r9,281(r1)
	PPC_STORE_U8(ctx.r1.u32 + 281, ctx.r9.u8);
	// stb r18,284(r1)
	PPC_STORE_U8(ctx.r1.u32 + 284, ctx.r18.u8);
	// stb r10,285(r1)
	PPC_STORE_U8(ctx.r1.u32 + 285, ctx.r10.u8);
	// stb r10,286(r1)
	PPC_STORE_U8(ctx.r1.u32 + 286, ctx.r10.u8);
	// stb r10,287(r1)
	PPC_STORE_U8(ctx.r1.u32 + 287, ctx.r10.u8);
	// stb r24,288(r1)
	PPC_STORE_U8(ctx.r1.u32 + 288, ctx.r24.u8);
	// stb r11,289(r1)
	PPC_STORE_U8(ctx.r1.u32 + 289, ctx.r11.u8);
	// stb r7,290(r1)
	PPC_STORE_U8(ctx.r1.u32 + 290, ctx.r7.u8);
	// stb r7,292(r1)
	PPC_STORE_U8(ctx.r1.u32 + 292, ctx.r7.u8);
	// stb r7,293(r1)
	PPC_STORE_U8(ctx.r1.u32 + 293, ctx.r7.u8);
	// stb r11,294(r1)
	PPC_STORE_U8(ctx.r1.u32 + 294, ctx.r11.u8);
	// stb r9,295(r1)
	PPC_STORE_U8(ctx.r1.u32 + 295, ctx.r9.u8);
	// stb r9,296(r1)
	PPC_STORE_U8(ctx.r1.u32 + 296, ctx.r9.u8);
	// stb r3,297(r1)
	PPC_STORE_U8(ctx.r1.u32 + 297, ctx.r3.u8);
	// stb r27,298(r1)
	PPC_STORE_U8(ctx.r1.u32 + 298, ctx.r27.u8);
	// stb r31,299(r1)
	PPC_STORE_U8(ctx.r1.u32 + 299, ctx.r31.u8);
	// stb r29,300(r1)
	PPC_STORE_U8(ctx.r1.u32 + 300, ctx.r29.u8);
	// stb r8,301(r1)
	PPC_STORE_U8(ctx.r1.u32 + 301, ctx.r8.u8);
	// stb r11,302(r1)
	PPC_STORE_U8(ctx.r1.u32 + 302, ctx.r11.u8);
	// stb r9,303(r1)
	PPC_STORE_U8(ctx.r1.u32 + 303, ctx.r9.u8);
	// stb r9,304(r1)
	PPC_STORE_U8(ctx.r1.u32 + 304, ctx.r9.u8);
	// stb r3,305(r1)
	PPC_STORE_U8(ctx.r1.u32 + 305, ctx.r3.u8);
	// stb r28,306(r1)
	PPC_STORE_U8(ctx.r1.u32 + 306, ctx.r28.u8);
	// stb r31,307(r1)
	PPC_STORE_U8(ctx.r1.u32 + 307, ctx.r31.u8);
	// stb r29,308(r1)
	PPC_STORE_U8(ctx.r1.u32 + 308, ctx.r29.u8);
	// stb r8,309(r1)
	PPC_STORE_U8(ctx.r1.u32 + 309, ctx.r8.u8);
	// stb r11,310(r1)
	PPC_STORE_U8(ctx.r1.u32 + 310, ctx.r11.u8);
	// stb r9,311(r1)
	PPC_STORE_U8(ctx.r1.u32 + 311, ctx.r9.u8);
	// stb r9,312(r1)
	PPC_STORE_U8(ctx.r1.u32 + 312, ctx.r9.u8);
	// stb r14,315(r1)
	PPC_STORE_U8(ctx.r1.u32 + 315, ctx.r14.u8);
	// stb r10,316(r1)
	PPC_STORE_U8(ctx.r1.u32 + 316, ctx.r10.u8);
	// stb r7,317(r1)
	PPC_STORE_U8(ctx.r1.u32 + 317, ctx.r7.u8);
	// stb r31,319(r1)
	PPC_STORE_U8(ctx.r1.u32 + 319, ctx.r31.u8);
	// stb r31,320(r1)
	PPC_STORE_U8(ctx.r1.u32 + 320, ctx.r31.u8);
	// stb r15,321(r1)
	PPC_STORE_U8(ctx.r1.u32 + 321, ctx.r15.u8);
	// stb r11,324(r1)
	PPC_STORE_U8(ctx.r1.u32 + 324, ctx.r11.u8);
	// stb r11,332(r1)
	PPC_STORE_U8(ctx.r1.u32 + 332, ctx.r11.u8);
	// li r11,21
	ctx.r11.s64 = 21;
	// stb r5,322(r1)
	PPC_STORE_U8(ctx.r1.u32 + 322, ctx.r5.u8);
	// li r5,330
	ctx.r5.s64 = 330;
	// stb r29,330(r1)
	PPC_STORE_U8(ctx.r1.u32 + 330, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r4,353(r1)
	PPC_STORE_U8(ctx.r1.u32 + 353, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r7,323(r1)
	PPC_STORE_U8(ctx.r1.u32 + 323, ctx.r7.u8);
	// stb r11,338(r1)
	PPC_STORE_U8(ctx.r1.u32 + 338, ctx.r11.u8);
	// li r11,74
	ctx.r11.s64 = 74;
	// stb r9,325(r1)
	PPC_STORE_U8(ctx.r1.u32 + 325, ctx.r9.u8);
	// stb r9,326(r1)
	PPC_STORE_U8(ctx.r1.u32 + 326, ctx.r9.u8);
	// stb r3,327(r1)
	PPC_STORE_U8(ctx.r1.u32 + 327, ctx.r3.u8);
	// stb r27,328(r1)
	PPC_STORE_U8(ctx.r1.u32 + 328, ctx.r27.u8);
	// stb r11,344(r1)
	PPC_STORE_U8(ctx.r1.u32 + 344, ctx.r11.u8);
	// li r11,76
	ctx.r11.s64 = 76;
	// stb r31,329(r1)
	PPC_STORE_U8(ctx.r1.u32 + 329, ctx.r31.u8);
	// stb r8,331(r1)
	PPC_STORE_U8(ctx.r1.u32 + 331, ctx.r8.u8);
	// stb r9,333(r1)
	PPC_STORE_U8(ctx.r1.u32 + 333, ctx.r9.u8);
	// stb r9,334(r1)
	PPC_STORE_U8(ctx.r1.u32 + 334, ctx.r9.u8);
	// stb r3,335(r1)
	PPC_STORE_U8(ctx.r1.u32 + 335, ctx.r3.u8);
	// stb r28,336(r1)
	PPC_STORE_U8(ctx.r1.u32 + 336, ctx.r28.u8);
	// stb r31,337(r1)
	PPC_STORE_U8(ctx.r1.u32 + 337, ctx.r31.u8);
	// stb r31,339(r1)
	PPC_STORE_U8(ctx.r1.u32 + 339, ctx.r31.u8);
	// stb r6,340(r1)
	PPC_STORE_U8(ctx.r1.u32 + 340, ctx.r6.u8);
	// stb r31,341(r1)
	PPC_STORE_U8(ctx.r1.u32 + 341, ctx.r31.u8);
	// stb r31,342(r1)
	PPC_STORE_U8(ctx.r1.u32 + 342, ctx.r31.u8);
	// stb r31,343(r1)
	PPC_STORE_U8(ctx.r1.u32 + 343, ctx.r31.u8);
	// stb r22,345(r1)
	PPC_STORE_U8(ctx.r1.u32 + 345, ctx.r22.u8);
	// stb r31,346(r1)
	PPC_STORE_U8(ctx.r1.u32 + 346, ctx.r31.u8);
	// stb r31,347(r1)
	PPC_STORE_U8(ctx.r1.u32 + 347, ctx.r31.u8);
	// stb r31,348(r1)
	PPC_STORE_U8(ctx.r1.u32 + 348, ctx.r31.u8);
	// stb r31,349(r1)
	PPC_STORE_U8(ctx.r1.u32 + 349, ctx.r31.u8);
	// stb r18,350(r1)
	PPC_STORE_U8(ctx.r1.u32 + 350, ctx.r18.u8);
	// stb r20,351(r1)
	PPC_STORE_U8(ctx.r1.u32 + 351, ctx.r20.u8);
	// stb r11,352(r1)
	PPC_STORE_U8(ctx.r1.u32 + 352, ctx.r11.u8);
	// stb r31,354(r1)
	PPC_STORE_U8(ctx.r1.u32 + 354, ctx.r31.u8);
	// stb r31,355(r1)
	PPC_STORE_U8(ctx.r1.u32 + 355, ctx.r31.u8);
	// stb r31,356(r1)
	PPC_STORE_U8(ctx.r1.u32 + 356, ctx.r31.u8);
	// stb r31,357(r1)
	PPC_STORE_U8(ctx.r1.u32 + 357, ctx.r31.u8);
	// stb r20,358(r1)
	PPC_STORE_U8(ctx.r1.u32 + 358, ctx.r20.u8);
	// stb r11,359(r1)
	PPC_STORE_U8(ctx.r1.u32 + 359, ctx.r11.u8);
	// stb r10,360(r1)
	PPC_STORE_U8(ctx.r1.u32 + 360, ctx.r10.u8);
	// stb r8,361(r1)
	PPC_STORE_U8(ctx.r1.u32 + 361, ctx.r8.u8);
	// stb r6,362(r1)
	PPC_STORE_U8(ctx.r1.u32 + 362, ctx.r6.u8);
	// stb r21,363(r1)
	PPC_STORE_U8(ctx.r1.u32 + 363, ctx.r21.u8);
	// stb r31,364(r1)
	PPC_STORE_U8(ctx.r1.u32 + 364, ctx.r31.u8);
	// stb r31,365(r1)
	PPC_STORE_U8(ctx.r1.u32 + 365, ctx.r31.u8);
	// stb r25,366(r1)
	PPC_STORE_U8(ctx.r1.u32 + 366, ctx.r25.u8);
	// stb r22,367(r1)
	PPC_STORE_U8(ctx.r1.u32 + 367, ctx.r22.u8);
	// stb r31,368(r1)
	PPC_STORE_U8(ctx.r1.u32 + 368, ctx.r31.u8);
	// stb r31,369(r1)
	PPC_STORE_U8(ctx.r1.u32 + 369, ctx.r31.u8);
	// stb r31,370(r1)
	PPC_STORE_U8(ctx.r1.u32 + 370, ctx.r31.u8);
	// stb r31,371(r1)
	PPC_STORE_U8(ctx.r1.u32 + 371, ctx.r31.u8);
	// stb r26,372(r1)
	PPC_STORE_U8(ctx.r1.u32 + 372, ctx.r26.u8);
	// stb r31,373(r1)
	PPC_STORE_U8(ctx.r1.u32 + 373, ctx.r31.u8);
	// stb r31,374(r1)
	PPC_STORE_U8(ctx.r1.u32 + 374, ctx.r31.u8);
	// stb r23,375(r1)
	PPC_STORE_U8(ctx.r1.u32 + 375, ctx.r23.u8);
	// stb r17,376(r1)
	PPC_STORE_U8(ctx.r1.u32 + 376, ctx.r17.u8);
	// stb r31,377(r1)
	PPC_STORE_U8(ctx.r1.u32 + 377, ctx.r31.u8);
	// stb r31,378(r1)
	PPC_STORE_U8(ctx.r1.u32 + 378, ctx.r31.u8);
	// stb r31,379(r1)
	PPC_STORE_U8(ctx.r1.u32 + 379, ctx.r31.u8);
	// stb r31,380(r1)
	PPC_STORE_U8(ctx.r1.u32 + 380, ctx.r31.u8);
	// stb r10,381(r1)
	PPC_STORE_U8(ctx.r1.u32 + 381, ctx.r10.u8);
	// stb r8,382(r1)
	PPC_STORE_U8(ctx.r1.u32 + 382, ctx.r8.u8);
	// stb r6,383(r1)
	PPC_STORE_U8(ctx.r1.u32 + 383, ctx.r6.u8);
	// stb r21,384(r1)
	PPC_STORE_U8(ctx.r1.u32 + 384, ctx.r21.u8);
	// stb r31,385(r1)
	PPC_STORE_U8(ctx.r1.u32 + 385, ctx.r31.u8);
	// stb r31,386(r1)
	PPC_STORE_U8(ctx.r1.u32 + 386, ctx.r31.u8);
	// stb r25,387(r1)
	PPC_STORE_U8(ctx.r1.u32 + 387, ctx.r25.u8);
	// stb r24,388(r1)
	PPC_STORE_U8(ctx.r1.u32 + 388, ctx.r24.u8);
	// stb r31,389(r1)
	PPC_STORE_U8(ctx.r1.u32 + 389, ctx.r31.u8);
	// stb r31,390(r1)
	PPC_STORE_U8(ctx.r1.u32 + 390, ctx.r31.u8);
	// stb r31,391(r1)
	PPC_STORE_U8(ctx.r1.u32 + 391, ctx.r31.u8);
	// stb r31,392(r1)
	PPC_STORE_U8(ctx.r1.u32 + 392, ctx.r31.u8);
	// stb r26,393(r1)
	PPC_STORE_U8(ctx.r1.u32 + 393, ctx.r26.u8);
	// stb r31,394(r1)
	PPC_STORE_U8(ctx.r1.u32 + 394, ctx.r31.u8);
	// stb r31,395(r1)
	PPC_STORE_U8(ctx.r1.u32 + 395, ctx.r31.u8);
	// stb r23,396(r1)
	PPC_STORE_U8(ctx.r1.u32 + 396, ctx.r23.u8);
	// li r11,2
	ctx.r11.s64 = 2;
	// stb r31,398(r1)
	PPC_STORE_U8(ctx.r1.u32 + 398, ctx.r31.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,399(r1)
	PPC_STORE_U8(ctx.r1.u32 + 399, ctx.r31.u8);
	// stb r31,400(r1)
	PPC_STORE_U8(ctx.r1.u32 + 400, ctx.r31.u8);
	// stb r31,401(r1)
	PPC_STORE_U8(ctx.r1.u32 + 401, ctx.r31.u8);
	// stb r10,402(r1)
	PPC_STORE_U8(ctx.r1.u32 + 402, ctx.r10.u8);
	// stb r11,397(r1)
	PPC_STORE_U8(ctx.r1.u32 + 397, ctx.r11.u8);
	// li r11,246
	ctx.r11.s64 = 246;
	// stb r8,403(r1)
	PPC_STORE_U8(ctx.r1.u32 + 403, ctx.r8.u8);
	// stb r19,404(r1)
	PPC_STORE_U8(ctx.r1.u32 + 404, ctx.r19.u8);
	// stb r31,405(r1)
	PPC_STORE_U8(ctx.r1.u32 + 405, ctx.r31.u8);
	// stb r31,406(r1)
	PPC_STORE_U8(ctx.r1.u32 + 406, ctx.r31.u8);
	// stb r16,407(r1)
	PPC_STORE_U8(ctx.r1.u32 + 407, ctx.r16.u8);
	// stb r11,408(r1)
	PPC_STORE_U8(ctx.r1.u32 + 408, ctx.r11.u8);
	// stb r25,409(r1)
	PPC_STORE_U8(ctx.r1.u32 + 409, ctx.r25.u8);
	// bl 0x82b06418
	ctx.lr = 0x824D04F4;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,576
	ctx.r1.s64 = ctx.r1.s64 + 576;
	// b 0x82e28e80
	__restgprlr_14(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824D0508"))) PPC_WEAK_FUNC(sub_824D0508);
PPC_FUNC_IMPL(__imp__sub_824D0508) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e58
	ctx.lr = 0x824D0510;
	__savegprlr_24(ctx, base);
	// stwu r1,-320(r1)
	ea = -320 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,159
	ctx.r9.s64 = 159;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32272
	ctx.r4.s64 = ctx.r10.s64 + -32272;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824D054C;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,32112
	ctx.r4.s64 = ctx.r11.s64 + 32112;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,240
	ctx.r3.s64 = ctx.r1.s64 + 240;
	// bl 0x8243b750
	ctx.lr = 0x824D0564;
	sub_8243B750(ctx, base);
	// li r9,247
	ctx.r9.s64 = 247;
	// li r11,44
	ctx.r11.s64 = 44;
	// lwz r3,240(r1)
	ctx.r3.u64 = PPC_LOAD_U32(ctx.r1.u32 + 240);
	// li r8,226
	ctx.r8.s64 = 226;
	// lwz r29,244(r1)
	ctx.r29.u64 = PPC_LOAD_U32(ctx.r1.u32 + 244);
	// li r10,1
	ctx.r10.s64 = 1;
	// stb r31,81(r1)
	PPC_STORE_U8(ctx.r1.u32 + 81, ctx.r31.u8);
	// li r6,25
	ctx.r6.s64 = 25;
	// stb r31,90(r1)
	PPC_STORE_U8(ctx.r1.u32 + 90, ctx.r31.u8);
	// stb r9,88(r1)
	PPC_STORE_U8(ctx.r1.u32 + 88, ctx.r9.u8);
	// li r25,4
	ctx.r25.s64 = 4;
	// stb r9,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r9.u8);
	// li r9,150
	ctx.r9.s64 = 150;
	// stb r11,82(r1)
	PPC_STORE_U8(ctx.r1.u32 + 82, ctx.r11.u8);
	// li r11,255
	ctx.r11.s64 = 255;
	// stb r8,89(r1)
	PPC_STORE_U8(ctx.r1.u32 + 89, ctx.r8.u8);
	// li r7,6
	ctx.r7.s64 = 6;
	// li r5,45
	ctx.r5.s64 = 45;
	// stb r6,83(r1)
	PPC_STORE_U8(ctx.r1.u32 + 83, ctx.r6.u8);
	// li r8,39
	ctx.r8.s64 = 39;
	// stb r6,84(r1)
	PPC_STORE_U8(ctx.r1.u32 + 84, ctx.r6.u8);
	// stb r9,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r9.u8);
	// li r9,67
	ctx.r9.s64 = 67;
	// stb r11,86(r1)
	PPC_STORE_U8(ctx.r1.u32 + 86, ctx.r11.u8);
	// li r4,7
	ctx.r4.s64 = 7;
	// stb r11,87(r1)
	PPC_STORE_U8(ctx.r1.u32 + 87, ctx.r11.u8);
	// li r24,5
	ctx.r24.s64 = 5;
	// stb r11,94(r1)
	PPC_STORE_U8(ctx.r1.u32 + 94, ctx.r11.u8);
	// li r26,97
	ctx.r26.s64 = 97;
	// stb r11,95(r1)
	PPC_STORE_U8(ctx.r1.u32 + 95, ctx.r11.u8);
	// li r27,80
	ctx.r27.s64 = 80;
	// stb r11,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r11.u8);
	// li r28,20
	ctx.r28.s64 = 20;
	// stb r11,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r11.u8);
	// stb r11,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r11.u8);
	// stb r9,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r9.u8);
	// li r9,22
	ctx.r9.s64 = 22;
	// stb r11,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r11.u8);
	// stb r11,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r11.u8);
	// stb r11,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r11.u8);
	// li r11,116
	ctx.r11.s64 = 116;
	// stb r4,80(r1)
	PPC_STORE_U8(ctx.r1.u32 + 80, ctx.r4.u8);
	// stb r10,85(r1)
	PPC_STORE_U8(ctx.r1.u32 + 85, ctx.r10.u8);
	// stb r24,91(r1)
	PPC_STORE_U8(ctx.r1.u32 + 91, ctx.r24.u8);
	// stb r25,92(r1)
	PPC_STORE_U8(ctx.r1.u32 + 92, ctx.r25.u8);
	// stb r10,93(r1)
	PPC_STORE_U8(ctx.r1.u32 + 93, ctx.r10.u8);
	// stb r31,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r31.u8);
	// stb r7,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r7.u8);
	// stb r25,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r25.u8);
	// stb r5,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r5.u8);
	// stb r10,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r10.u8);
	// stb r26,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r26.u8);
	// stb r7,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r7.u8);
	// stb r8,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r8.u8);
	// stb r8,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r8.u8);
	// stb r27,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r27.u8);
	// stb r9,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r9.u8);
	// stb r28,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r28.u8);
	// stb r5,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r5.u8);
	// stb r10,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r10.u8);
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// li r11,106
	ctx.r11.s64 = 106;
	// stb r4,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r4.u8);
	// li r4,114
	ctx.r4.s64 = 114;
	// stb r24,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r24.u8);
	// li r24,181
	ctx.r24.s64 = 181;
	// stw r3,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r3.u32);
	// stw r29,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r29.u32);
	// li r28,40
	ctx.r28.s64 = 40;
	// li r29,27
	ctx.r29.s64 = 27;
	// stb r8,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r8.u8);
	// stb r11,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r11.u8);
	// li r11,93
	ctx.r11.s64 = 93;
	// stb r4,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r4.u8);
	// li r5,42
	ctx.r5.s64 = 42;
	// stb r4,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r4.u8);
	// li r4,28
	ctx.r4.s64 = 28;
	// stb r24,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r24.u8);
	// li r3,15
	ctx.r3.s64 = 15;
	// li r24,36
	ctx.r24.s64 = 36;
	// stb r7,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r7.u8);
	// stb r11,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r11.u8);
	// li r11,46
	ctx.r11.s64 = 46;
	// stb r31,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r31.u8);
	// stb r4,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r4.u8);
	// stb r4,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r4.u8);
	// li r4,32
	ctx.r4.s64 = 32;
	// stb r31,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r31.u8);
	// stb r11,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r11.u8);
	// li r11,71
	ctx.r11.s64 = 71;
	// stb r31,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r31.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r4,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r4.u8);
	// li r4,17
	ctx.r4.s64 = 17;
	// stb r29,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r29.u8);
	// stb r11,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r11.u8);
	// li r11,69
	ctx.r11.s64 = 69;
	// stb r31,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r31.u8);
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// stb r31,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r31.u8);
	// stb r11,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r11.u8);
	// li r11,38
	ctx.r11.s64 = 38;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r31,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r31.u8);
	// stb r11,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r11.u8);
	// li r11,191
	ctx.r11.s64 = 191;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r31.u8);
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r11,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r11.u8);
	// li r11,33
	ctx.r11.s64 = 33;
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r28,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r28.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// stb r5,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r5.u8);
	// stb r11,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r11.u8);
	// li r11,48
	ctx.r11.s64 = 48;
	// stb r9,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r9.u8);
	// stb r3,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r3.u8);
	// stb r6,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r6.u8);
	// stb r10,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r10.u8);
	// stb r11,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r11.u8);
	// li r11,193
	ctx.r11.s64 = 193;
	// stb r31,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r31.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r31.u8);
	// stb r10,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r10.u8);
	// stb r11,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r11.u8);
	// li r11,30
	ctx.r11.s64 = 30;
	// stb r10,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r10.u8);
	// stb r31,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r31.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r24,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r24.u8);
	// stb r11,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r11.u8);
	// stb r31,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r31.u8);
	// stb r31,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r31.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r4,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r4.u8);
	// stb r8,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r8.u8);
	// li r4,146
	ctx.r4.s64 = 146;
	// stb r8,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r8.u8);
	// stb r8,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r8.u8);
	// li r8,53
	ctx.r8.s64 = 53;
	// stb r10,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r10.u8);
	// stb r10,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r10.u8);
	// stb r11,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r11.u8);
	// stb r10,226(r1)
	PPC_STORE_U8(ctx.r1.u32 + 226, ctx.r10.u8);
	// li r10,232
	ctx.r10.s64 = 232;
	// stb r8,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r8.u8);
	// li r8,31
	ctx.r8.s64 = 31;
	// stb r11,231(r1)
	PPC_STORE_U8(ctx.r1.u32 + 231, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r29,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r29.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r3,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r3.u8);
	// stb r10,229(r1)
	PPC_STORE_U8(ctx.r1.u32 + 229, ctx.r10.u8);
	// li r10,119
	ctx.r10.s64 = 119;
	// stb r8,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r8.u8);
	// stb r8,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r8.u8);
	// li r8,149
	ctx.r8.s64 = 149;
	// stb r11,237(r1)
	PPC_STORE_U8(ctx.r1.u32 + 237, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r4,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r4.u8);
	// addi r4,r1,80
	ctx.r4.s64 = ctx.r1.s64 + 80;
	// stb r5,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r5.u8);
	// stb r5,209(r1)
	PPC_STORE_U8(ctx.r1.u32 + 209, ctx.r5.u8);
	// li r5,159
	ctx.r5.s64 = 159;
	// stb r8,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r8.u8);
	// li r8,127
	ctx.r8.s64 = 127;
	// stb r3,225(r1)
	PPC_STORE_U8(ctx.r1.u32 + 225, ctx.r3.u8);
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r26,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r26.u8);
	// stb r7,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r7.u8);
	// stb r8,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r8.u8);
	// li r8,113
	ctx.r8.s64 = 113;
	// stb r27,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r27.u8);
	// stb r9,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r9.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r31.u8);
	// stb r31,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r31,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r31.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r6,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r6.u8);
	// stb r31,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r31.u8);
	// stb r31,207(r1)
	PPC_STORE_U8(ctx.r1.u32 + 207, ctx.r31.u8);
	// stb r31,208(r1)
	PPC_STORE_U8(ctx.r1.u32 + 208, ctx.r31.u8);
	// stb r8,210(r1)
	PPC_STORE_U8(ctx.r1.u32 + 210, ctx.r8.u8);
	// stb r31,211(r1)
	PPC_STORE_U8(ctx.r1.u32 + 211, ctx.r31.u8);
	// stb r31,212(r1)
	PPC_STORE_U8(ctx.r1.u32 + 212, ctx.r31.u8);
	// stb r31,213(r1)
	PPC_STORE_U8(ctx.r1.u32 + 213, ctx.r31.u8);
	// stb r31,214(r1)
	PPC_STORE_U8(ctx.r1.u32 + 214, ctx.r31.u8);
	// stb r9,215(r1)
	PPC_STORE_U8(ctx.r1.u32 + 215, ctx.r9.u8);
	// stb r31,216(r1)
	PPC_STORE_U8(ctx.r1.u32 + 216, ctx.r31.u8);
	// stb r7,217(r1)
	PPC_STORE_U8(ctx.r1.u32 + 217, ctx.r7.u8);
	// stb r31,218(r1)
	PPC_STORE_U8(ctx.r1.u32 + 218, ctx.r31.u8);
	// stb r26,219(r1)
	PPC_STORE_U8(ctx.r1.u32 + 219, ctx.r26.u8);
	// stb r7,220(r1)
	PPC_STORE_U8(ctx.r1.u32 + 220, ctx.r7.u8);
	// stb r28,221(r1)
	PPC_STORE_U8(ctx.r1.u32 + 221, ctx.r28.u8);
	// stb r28,222(r1)
	PPC_STORE_U8(ctx.r1.u32 + 222, ctx.r28.u8);
	// stb r27,223(r1)
	PPC_STORE_U8(ctx.r1.u32 + 223, ctx.r27.u8);
	// stb r9,224(r1)
	PPC_STORE_U8(ctx.r1.u32 + 224, ctx.r9.u8);
	// stb r31,227(r1)
	PPC_STORE_U8(ctx.r1.u32 + 227, ctx.r31.u8);
	// stb r31,228(r1)
	PPC_STORE_U8(ctx.r1.u32 + 228, ctx.r31.u8);
	// stb r10,230(r1)
	PPC_STORE_U8(ctx.r1.u32 + 230, ctx.r10.u8);
	// stb r31,232(r1)
	PPC_STORE_U8(ctx.r1.u32 + 232, ctx.r31.u8);
	// stb r31,233(r1)
	PPC_STORE_U8(ctx.r1.u32 + 233, ctx.r31.u8);
	// stb r31,234(r1)
	PPC_STORE_U8(ctx.r1.u32 + 234, ctx.r31.u8);
	// stb r31,235(r1)
	PPC_STORE_U8(ctx.r1.u32 + 235, ctx.r31.u8);
	// stb r25,236(r1)
	PPC_STORE_U8(ctx.r1.u32 + 236, ctx.r25.u8);
	// stb r11,238(r1)
	PPC_STORE_U8(ctx.r1.u32 + 238, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824D08CC;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,320
	ctx.r1.s64 = ctx.r1.s64 + 320;
	// b 0x82e28ea8
	__restgprlr_24(ctx, base);
	return;
}

__attribute__((alias("__imp__sub_824D08E0"))) PPC_WEAK_FUNC(sub_824D08E0);
PPC_FUNC_IMPL(__imp__sub_824D08E0) {
	PPC_FUNC_PROLOGUE();
	uint32_t ea{};
	// mflr r12
	ctx.r12.u64 = ctx.lr;
	// bl 0x82e28e60
	ctx.lr = 0x824D08E8;
	__savegprlr_26(ctx, base);
	// stwu r1,-272(r1)
	ea = -272 + ctx.r1.u32;
	PPC_STORE_U32(ea, ctx.r1.u32);
	ctx.r1.u32 = ea;
	// mr r30,r3
	ctx.r30.u64 = ctx.r3.u64;
	// lis r11,-32249
	ctx.r11.s64 = -2113470464;
	// addi r3,r30,4
	ctx.r3.s64 = ctx.r30.s64 + 4;
	// li r31,0
	ctx.r31.s64 = 0;
	// addi r11,r11,-29388
	ctx.r11.s64 = ctx.r11.s64 + -29388;
	// li r9,111
	ctx.r9.s64 = 111;
	// lis r10,-32249
	ctx.r10.s64 = -2113470464;
	// addi r4,r10,-32216
	ctx.r4.s64 = ctx.r10.s64 + -32216;
	// stw r31,0(r3)
	PPC_STORE_U32(ctx.r3.u32 + 0, ctx.r31.u32);
	// stw r31,4(r3)
	PPC_STORE_U32(ctx.r3.u32 + 4, ctx.r31.u32);
	// stw r31,8(r3)
	PPC_STORE_U32(ctx.r3.u32 + 8, ctx.r31.u32);
	// stw r11,0(r30)
	PPC_STORE_U32(ctx.r30.u32 + 0, ctx.r11.u32);
	// stw r9,16(r30)
	PPC_STORE_U32(ctx.r30.u32 + 16, ctx.r9.u32);
	// bl 0x822e0818
	ctx.lr = 0x824D0924;
	sub_822E0818(ctx, base);
	// lis r11,-32250
	ctx.r11.s64 = -2113536000;
	// li r6,1
	ctx.r6.s64 = 1;
	// addi r4,r11,27720
	ctx.r4.s64 = ctx.r11.s64 + 27720;
	// li r5,1
	ctx.r5.s64 = 1;
	// addi r3,r1,80
	ctx.r3.s64 = ctx.r1.s64 + 80;
	// bl 0x8243b750
	ctx.lr = 0x824D093C;
	sub_8243B750(ctx, base);
	// li r9,247
	ctx.r9.s64 = 247;
	// li r10,255
	ctx.r10.s64 = 255;
	// lwz r5,80(r1)
	ctx.r5.u64 = PPC_LOAD_U32(ctx.r1.u32 + 80);
	// li r11,97
	ctx.r11.s64 = 97;
	// lwz r4,84(r1)
	ctx.r4.u64 = PPC_LOAD_U32(ctx.r1.u32 + 84);
	// li r8,226
	ctx.r8.s64 = 226;
	// stb r31,97(r1)
	PPC_STORE_U8(ctx.r1.u32 + 97, ctx.r31.u8);
	// li r6,7
	ctx.r6.s64 = 7;
	// stb r31,107(r1)
	PPC_STORE_U8(ctx.r1.u32 + 107, ctx.r31.u8);
	// stb r9,105(r1)
	PPC_STORE_U8(ctx.r1.u32 + 105, ctx.r9.u8);
	// li r7,25
	ctx.r7.s64 = 25;
	// stb r9,113(r1)
	PPC_STORE_U8(ctx.r1.u32 + 113, ctx.r9.u8);
	// li r9,150
	ctx.r9.s64 = 150;
	// stb r11,98(r1)
	PPC_STORE_U8(ctx.r1.u32 + 98, ctx.r11.u8);
	// li r11,129
	ctx.r11.s64 = 129;
	// stb r10,103(r1)
	PPC_STORE_U8(ctx.r1.u32 + 103, ctx.r10.u8);
	// li r26,5
	ctx.r26.s64 = 5;
	// stb r10,104(r1)
	PPC_STORE_U8(ctx.r1.u32 + 104, ctx.r10.u8);
	// li r27,114
	ctx.r27.s64 = 114;
	// stb r10,111(r1)
	PPC_STORE_U8(ctx.r1.u32 + 111, ctx.r10.u8);
	// li r28,27
	ctx.r28.s64 = 27;
	// stb r9,114(r1)
	PPC_STORE_U8(ctx.r1.u32 + 114, ctx.r9.u8);
	// li r9,6
	ctx.r9.s64 = 6;
	// stb r10,112(r1)
	PPC_STORE_U8(ctx.r1.u32 + 112, ctx.r10.u8);
	// stb r10,120(r1)
	PPC_STORE_U8(ctx.r1.u32 + 120, ctx.r10.u8);
	// stb r10,121(r1)
	PPC_STORE_U8(ctx.r1.u32 + 121, ctx.r10.u8);
	// stb r10,122(r1)
	PPC_STORE_U8(ctx.r1.u32 + 122, ctx.r10.u8);
	// li r10,67
	ctx.r10.s64 = 67;
	// stb r9,116(r1)
	PPC_STORE_U8(ctx.r1.u32 + 116, ctx.r9.u8);
	// li r9,45
	ctx.r9.s64 = 45;
	// stb r11,99(r1)
	PPC_STORE_U8(ctx.r1.u32 + 99, ctx.r11.u8);
	// li r11,1
	ctx.r11.s64 = 1;
	// stb r8,106(r1)
	PPC_STORE_U8(ctx.r1.u32 + 106, ctx.r8.u8);
	// li r8,4
	ctx.r8.s64 = 4;
	// stb r6,96(r1)
	PPC_STORE_U8(ctx.r1.u32 + 96, ctx.r6.u8);
	// stb r10,123(r1)
	PPC_STORE_U8(ctx.r1.u32 + 123, ctx.r10.u8);
	// li r10,22
	ctx.r10.s64 = 22;
	// stb r9,118(r1)
	PPC_STORE_U8(ctx.r1.u32 + 118, ctx.r9.u8);
	// li r9,78
	ctx.r9.s64 = 78;
	// stb r7,100(r1)
	PPC_STORE_U8(ctx.r1.u32 + 100, ctx.r7.u8);
	// stb r7,101(r1)
	PPC_STORE_U8(ctx.r1.u32 + 101, ctx.r7.u8);
	// stb r11,102(r1)
	PPC_STORE_U8(ctx.r1.u32 + 102, ctx.r11.u8);
	// stb r26,108(r1)
	PPC_STORE_U8(ctx.r1.u32 + 108, ctx.r26.u8);
	// stb r9,127(r1)
	PPC_STORE_U8(ctx.r1.u32 + 127, ctx.r9.u8);
	// li r9,46
	ctx.r9.s64 = 46;
	// stb r8,109(r1)
	PPC_STORE_U8(ctx.r1.u32 + 109, ctx.r8.u8);
	// stb r11,110(r1)
	PPC_STORE_U8(ctx.r1.u32 + 110, ctx.r11.u8);
	// stb r31,115(r1)
	PPC_STORE_U8(ctx.r1.u32 + 115, ctx.r31.u8);
	// stb r8,117(r1)
	PPC_STORE_U8(ctx.r1.u32 + 117, ctx.r8.u8);
	// stb r9,129(r1)
	PPC_STORE_U8(ctx.r1.u32 + 129, ctx.r9.u8);
	// li r9,71
	ctx.r9.s64 = 71;
	// stb r11,119(r1)
	PPC_STORE_U8(ctx.r1.u32 + 119, ctx.r11.u8);
	// stb r10,124(r1)
	PPC_STORE_U8(ctx.r1.u32 + 124, ctx.r10.u8);
	// stb r6,125(r1)
	PPC_STORE_U8(ctx.r1.u32 + 125, ctx.r6.u8);
	// stb r31,126(r1)
	PPC_STORE_U8(ctx.r1.u32 + 126, ctx.r31.u8);
	// stb r9,132(r1)
	PPC_STORE_U8(ctx.r1.u32 + 132, ctx.r9.u8);
	// li r9,69
	ctx.r9.s64 = 69;
	// stb r27,128(r1)
	PPC_STORE_U8(ctx.r1.u32 + 128, ctx.r27.u8);
	// stb r31,130(r1)
	PPC_STORE_U8(ctx.r1.u32 + 130, ctx.r31.u8);
	// stb r31,131(r1)
	PPC_STORE_U8(ctx.r1.u32 + 131, ctx.r31.u8);
	// stb r9,133(r1)
	PPC_STORE_U8(ctx.r1.u32 + 133, ctx.r9.u8);
	// li r9,38
	ctx.r9.s64 = 38;
	// stb r7,158(r1)
	PPC_STORE_U8(ctx.r1.u32 + 158, ctx.r7.u8);
	// li r7,28
	ctx.r7.s64 = 28;
	// stb r27,163(r1)
	PPC_STORE_U8(ctx.r1.u32 + 163, ctx.r27.u8);
	// li r6,42
	ctx.r6.s64 = 42;
	// stw r5,24(r30)
	PPC_STORE_U32(ctx.r30.u32 + 24, ctx.r5.u32);
	// li r27,181
	ctx.r27.s64 = 181;
	// stw r4,28(r30)
	PPC_STORE_U32(ctx.r30.u32 + 28, ctx.r4.u32);
	// li r3,15
	ctx.r3.s64 = 15;
	// stb r28,134(r1)
	PPC_STORE_U8(ctx.r1.u32 + 134, ctx.r28.u8);
	// stb r9,138(r1)
	PPC_STORE_U8(ctx.r1.u32 + 138, ctx.r9.u8);
	// li r9,191
	ctx.r9.s64 = 191;
	// stb r7,170(r1)
	PPC_STORE_U8(ctx.r1.u32 + 170, ctx.r7.u8);
	// addi r29,r30,32
	ctx.r29.s64 = ctx.r30.s64 + 32;
	// stb r7,174(r1)
	PPC_STORE_U8(ctx.r1.u32 + 174, ctx.r7.u8);
	// li r7,32
	ctx.r7.s64 = 32;
	// stb r6,155(r1)
	PPC_STORE_U8(ctx.r1.u32 + 155, ctx.r6.u8);
	// li r6,30
	ctx.r6.s64 = 30;
	// stb r27,171(r1)
	PPC_STORE_U8(ctx.r1.u32 + 171, ctx.r27.u8);
	// li r27,36
	ctx.r27.s64 = 36;
	// stb r9,139(r1)
	PPC_STORE_U8(ctx.r1.u32 + 139, ctx.r9.u8);
	// li r9,33
	ctx.r9.s64 = 33;
	// stb r31,135(r1)
	PPC_STORE_U8(ctx.r1.u32 + 135, ctx.r31.u8);
	// li r5,111
	ctx.r5.s64 = 111;
	// stb r7,177(r1)
	PPC_STORE_U8(ctx.r1.u32 + 177, ctx.r7.u8);
	// li r7,17
	ctx.r7.s64 = 17;
	// stb r31,136(r1)
	PPC_STORE_U8(ctx.r1.u32 + 136, ctx.r31.u8);
	// addi r4,r1,96
	ctx.r4.s64 = ctx.r1.s64 + 96;
	// stb r31,137(r1)
	PPC_STORE_U8(ctx.r1.u32 + 137, ctx.r31.u8);
	// stb r9,144(r1)
	PPC_STORE_U8(ctx.r1.u32 + 144, ctx.r9.u8);
	// li r9,48
	ctx.r9.s64 = 48;
	// stb r31,140(r1)
	PPC_STORE_U8(ctx.r1.u32 + 140, ctx.r31.u8);
	// stb r7,178(r1)
	PPC_STORE_U8(ctx.r1.u32 + 178, ctx.r7.u8);
	// li r7,2
	ctx.r7.s64 = 2;
	// stb r31,141(r1)
	PPC_STORE_U8(ctx.r1.u32 + 141, ctx.r31.u8);
	// stb r31,142(r1)
	PPC_STORE_U8(ctx.r1.u32 + 142, ctx.r31.u8);
	// stb r9,147(r1)
	PPC_STORE_U8(ctx.r1.u32 + 147, ctx.r9.u8);
	// li r9,193
	ctx.r9.s64 = 193;
	// stb r31,143(r1)
	PPC_STORE_U8(ctx.r1.u32 + 143, ctx.r31.u8);
	// stb r7,185(r1)
	PPC_STORE_U8(ctx.r1.u32 + 185, ctx.r7.u8);
	// li r7,84
	ctx.r7.s64 = 84;
	// stb r31,145(r1)
	PPC_STORE_U8(ctx.r1.u32 + 145, ctx.r31.u8);
	// stb r31,146(r1)
	PPC_STORE_U8(ctx.r1.u32 + 146, ctx.r31.u8);
	// stb r9,148(r1)
	PPC_STORE_U8(ctx.r1.u32 + 148, ctx.r9.u8);
	// li r9,40
	ctx.r9.s64 = 40;
	// stb r31,149(r1)
	PPC_STORE_U8(ctx.r1.u32 + 149, ctx.r31.u8);
	// stb r31,150(r1)
	PPC_STORE_U8(ctx.r1.u32 + 150, ctx.r31.u8);
	// stb r31,151(r1)
	PPC_STORE_U8(ctx.r1.u32 + 151, ctx.r31.u8);
	// stb r31,152(r1)
	PPC_STORE_U8(ctx.r1.u32 + 152, ctx.r31.u8);
	// stb r9,153(r1)
	PPC_STORE_U8(ctx.r1.u32 + 153, ctx.r9.u8);
	// stb r10,154(r1)
	PPC_STORE_U8(ctx.r1.u32 + 154, ctx.r10.u8);
	// stb r10,156(r1)
	PPC_STORE_U8(ctx.r1.u32 + 156, ctx.r10.u8);
	// stb r3,157(r1)
	PPC_STORE_U8(ctx.r1.u32 + 157, ctx.r3.u8);
	// stb r11,159(r1)
	PPC_STORE_U8(ctx.r1.u32 + 159, ctx.r11.u8);
	// stb r31,160(r1)
	PPC_STORE_U8(ctx.r1.u32 + 160, ctx.r31.u8);
	// stb r31,161(r1)
	PPC_STORE_U8(ctx.r1.u32 + 161, ctx.r31.u8);
	// stb r6,162(r1)
	PPC_STORE_U8(ctx.r1.u32 + 162, ctx.r6.u8);
	// stb r31,164(r1)
	PPC_STORE_U8(ctx.r1.u32 + 164, ctx.r31.u8);
	// stb r26,165(r1)
	PPC_STORE_U8(ctx.r1.u32 + 165, ctx.r26.u8);
	// stb r11,166(r1)
	PPC_STORE_U8(ctx.r1.u32 + 166, ctx.r11.u8);
	// stb r11,167(r1)
	PPC_STORE_U8(ctx.r1.u32 + 167, ctx.r11.u8);
	// stb r31,168(r1)
	PPC_STORE_U8(ctx.r1.u32 + 168, ctx.r31.u8);
	// stb r31,169(r1)
	PPC_STORE_U8(ctx.r1.u32 + 169, ctx.r31.u8);
	// stb r27,172(r1)
	PPC_STORE_U8(ctx.r1.u32 + 172, ctx.r27.u8);
	// stb r11,173(r1)
	PPC_STORE_U8(ctx.r1.u32 + 173, ctx.r11.u8);
	// stb r31,175(r1)
	PPC_STORE_U8(ctx.r1.u32 + 175, ctx.r31.u8);
	// stb r31,176(r1)
	PPC_STORE_U8(ctx.r1.u32 + 176, ctx.r31.u8);
	// stb r9,179(r1)
	PPC_STORE_U8(ctx.r1.u32 + 179, ctx.r9.u8);
	// stb r10,180(r1)
	PPC_STORE_U8(ctx.r1.u32 + 180, ctx.r10.u8);
	// stb r28,181(r1)
	PPC_STORE_U8(ctx.r1.u32 + 181, ctx.r28.u8);
	// stb r31,182(r1)
	PPC_STORE_U8(ctx.r1.u32 + 182, ctx.r31.u8);
	// stb r31,183(r1)
	PPC_STORE_U8(ctx.r1.u32 + 183, ctx.r31.u8);
	// stb r31,184(r1)
	PPC_STORE_U8(ctx.r1.u32 + 184, ctx.r31.u8);
	// stb r7,186(r1)
	PPC_STORE_U8(ctx.r1.u32 + 186, ctx.r7.u8);
	// stb r31,187(r1)
	PPC_STORE_U8(ctx.r1.u32 + 187, ctx.r31.u8);
	// stb r31,188(r1)
	PPC_STORE_U8(ctx.r1.u32 + 188, ctx.r31.u8);
	// stb r31,189(r1)
	PPC_STORE_U8(ctx.r1.u32 + 189, ctx.r31.u8);
	// stb r31,190(r1)
	PPC_STORE_U8(ctx.r1.u32 + 190, ctx.r31.u8);
	// stb r9,191(r1)
	PPC_STORE_U8(ctx.r1.u32 + 191, ctx.r9.u8);
	// stb r10,192(r1)
	PPC_STORE_U8(ctx.r1.u32 + 192, ctx.r10.u8);
	// stb r3,193(r1)
	PPC_STORE_U8(ctx.r1.u32 + 193, ctx.r3.u8);
	// stb r11,194(r1)
	PPC_STORE_U8(ctx.r1.u32 + 194, ctx.r11.u8);
	// li r11,232
	ctx.r11.s64 = 232;
	// mr r3,r29
	ctx.r3.u64 = ctx.r29.u64;
	// stb r31,195(r1)
	PPC_STORE_U8(ctx.r1.u32 + 195, ctx.r31.u8);
	// stb r31,196(r1)
	PPC_STORE_U8(ctx.r1.u32 + 196, ctx.r31.u8);
	// stb r6,199(r1)
	PPC_STORE_U8(ctx.r1.u32 + 199, ctx.r6.u8);
	// stb r31,200(r1)
	PPC_STORE_U8(ctx.r1.u32 + 200, ctx.r31.u8);
	// stb r11,197(r1)
	PPC_STORE_U8(ctx.r1.u32 + 197, ctx.r11.u8);
	// li r11,119
	ctx.r11.s64 = 119;
	// stb r31,201(r1)
	PPC_STORE_U8(ctx.r1.u32 + 201, ctx.r31.u8);
	// stb r31,202(r1)
	PPC_STORE_U8(ctx.r1.u32 + 202, ctx.r31.u8);
	// stb r31,203(r1)
	PPC_STORE_U8(ctx.r1.u32 + 203, ctx.r31.u8);
	// stb r8,204(r1)
	PPC_STORE_U8(ctx.r1.u32 + 204, ctx.r8.u8);
	// stb r11,198(r1)
	PPC_STORE_U8(ctx.r1.u32 + 198, ctx.r11.u8);
	// li r11,11
	ctx.r11.s64 = 11;
	// stb r11,205(r1)
	PPC_STORE_U8(ctx.r1.u32 + 205, ctx.r11.u8);
	// li r11,83
	ctx.r11.s64 = 83;
	// stb r11,206(r1)
	PPC_STORE_U8(ctx.r1.u32 + 206, ctx.r11.u8);
	// bl 0x82b06418
	ctx.lr = 0x824D0BC0;
	sub_82B06418(ctx, base);
	// mr r3,r30
	ctx.r3.u64 = ctx.r30.u64;
	// stw r29,20(r30)
	PPC_STORE_U32(ctx.r30.u32 + 20, ctx.r29.u32);
	// addi r1,r1,272
	ctx.r1.s64 = ctx.r1.s64 + 272;
	// b 0x82e28eb0
	__restgprlr_26(ctx, base);
	return;
}

